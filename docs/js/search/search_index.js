var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractForm.html",[0,0.006,1,3.364]],["body/classes/AbstractForm.html",[0,0.006,1,5.09,2,2.073,3,0.158,4,0.188,5,0.101,6,6.603,7,4.336,8,0.911,9,2.153,10,2.347,11,0.829,12,2.828,13,1.605,14,1.495,15,5.969,16,1.948,17,3.115,18,3.908,19,0.203,20,0.719,21,2.675,22,6.183,23,0.829,24,5.969,25,5.301,26,2.657,27,7.512,28,4.7,29,0.888,30,3.39,31,4.949,32,0.698,33,6.405,34,1.076,35,0.012,36,0.521,37,0.32,38,0.642,39,1.298,40,4.948,41,6.405,42,1.702,43,5.613,44,2.602,45,1.873,46,6.405,47,4.948,48,4.7,49,5.09,50,3.713,51,0.663,52,0.663,53,1.11,54,4.948,55,3.244,56,4.389,57,6.405,58,1.585,59,4.13,60,1.805,61,4.355,62,4.948,63,5.613,64,1.753,65,1.007,66,5.613,67,2.202,68,5.09,69,6.405,70,6.405,71,4.7,72,1.383,73,1.151,74,4.948,75,5.09,76,3.713,77,6.405,78,6.405,79,0.477,80,5.709,81,5.147,82,4.948,83,6.405,84,3.115,85,3.713,86,5.09,87,4.333,88,2.406,89,2.735,90,0.27,91,2.148,92,0.402,93,0.939,94,2.506,95,0.158,96,3.018,97,4.948,98,0.967,99,2.506,100,0.597,101,2.868,102,4.948,103,4.948,104,4.948,105,1.756,106,4.948,107,4.948,108,4.948,109,4.948,110,0.006,111,0.008,112,0.006]],["title/classes/AbstractFormControl.html",[0,0.006,113,2.058]],["body/classes/AbstractFormControl.html",[0,0.008,2,1.834,3,0.14,4,0.166,5,0.089,6,6.701,8,0.806,12,2.84,13,1.552,19,0.18,20,0.663,21,2.299,23,0.765,26,2.567,32,0.723,34,1.255,35,0.012,36,0.607,37,0.337,38,0.789,39,1.217,42,1.339,51,1.072,52,1.055,53,1.023,58,1.461,65,1.019,73,1.224,79,0.449,90,0.272,92,0.356,93,0.83,95,0.14,110,0.006,111,0.008,112,0.006,113,2.872,114,3.835,115,1.262,116,1.694,117,0.739,118,1.387,119,2.652,120,3.533,121,2.161,122,2.228,123,0.903,124,2.031,125,1.529,126,2.706,127,2.706,128,3.875,129,3.533,130,3.783,131,2.372,132,3.24,133,2.273,134,4.377,135,4.377,136,4.377,137,1.331,138,1.459,139,1.604,140,1.459,141,1.331,142,1.415,143,1.553,144,1.055,145,4.377,146,1.459,147,4.377,148,2.65,149,1.459,150,4.377,151,2.537,152,3.08,153,3.347,154,4.377,155,3.365,156,2.924,157,4.131,158,2.564,159,2.244,160,1.971,161,4.377,162,2.801,163,4.377,164,1.713,165,4.377,166,4.377,167,4.377,168,4.377,169,4.694,170,0.648,171,2.217,172,1.035,173,3.835,174,1.415,175,4.377,176,2.762,177,2.047,178,0.246,179,2.999,180,2.419,181,2.999,182,4.377,183,2.164,184,5.175,185,2.475,186,3.478,187,1.415,188,2.822,189,1.415,190,2.999,191,2.096,192,2.67,193,2.822,194,2.419,195,2.999,196,2.999,197,3.835,198,1.023,199,5.906,200,2.999,201,4.377,202,1.9,203,3.478,204,3.478,205,2.564,206,6.685,207,3.478,208,2.67,209,3.478,210,4.377,211,2.762,212,0.627,213,2.999,214,2.419,215,2.537,216,4.377,217,2.999,218,3.835,219,3.835,220,4.377,221,5.906,222,4.377,223,4.377,224,4.377]],["title/classes/AbstractHttpService.html",[0,0.006,225,2.34]],["body/classes/AbstractHttpService.html",[0,0.009,2,1.886,3,0.144,4,0.171,5,0.092,8,1.108,10,2.205,12,2.925,19,0.185,20,0.676,23,0.937,26,2.893,29,0.563,32,0.693,34,1.353,35,0.012,36,0.613,37,0.338,38,0.756,39,0.98,51,0.603,52,0.603,53,1.043,65,1.005,76,3.489,80,5.537,81,3.084,88,3.855,89,2.488,90,0.275,95,0.144,96,2.746,100,0.911,110,0.006,111,0.008,112,0.006,137,1.369,158,1.954,159,1.411,170,1.207,174,1.945,198,1.175,211,2.105,217,4.124,225,3.327,226,6.55,227,4.008,228,3.944,229,4.509,230,3.26,231,4.137,232,5.389,233,5.312,234,4.646,235,5.111,236,4.783,237,2.613,238,5.996,239,3.577,240,4.197,241,6.019,242,4.667,243,4.502,244,5.32,245,4.417,246,4.783,247,4.502,248,4.783,249,5.537,250,4.502,251,5.389,252,4.977,253,5.312,254,2.278,255,3.672,256,4.783,257,4.417,258,4.512,259,3.672,260,4.667,261,4.502,262,4.417,263,5.389,264,4.864,265,4.124,266,3.672,267,4.783,268,4.124,269,2.613,270,4.783,271,4.783,272,4.783,273,5.17,274,4.502,275,4.783,276,4.502,277,3.944,278,4.502,279,3.672,280,4.783,281,2.61,282,2.488,283,2.105,284,3.944,285,3.944,286,2.488,287,3.748,288,2.379,289,3.944,290,2.746,291,4.502,292,6.019,293,6.019,294,4.502,295,2.027,296,4.502,297,6.019,298,6.019,299,2.488,300,4.502,301,3.084,302,4.502,303,4.502,304,1.822,305,3.577,306,4.783,307,4.502,308,2.136,309,5.274,310,2.746,311,3.303,312,3.577,313,4.502,314,3.944,315,3.944]],["title/injectables/AbstractPgCheckService.html",[316,1.656,317,2.729]],["body/injectables/AbstractPgCheckService.html",[0,0.01,3,0.179,4,0.212,5,0.114,8,1.029,12,3.093,19,0.229,23,1.017,32,0.667,34,0.938,35,0.012,36,0.454,37,0.229,38,0.56,39,1.339,65,1.017,79,0.542,84,3.818,88,3.364,90,0.212,92,0.454,95,0.179,110,0.007,111,0.009,112,0.007,117,0.865,123,1.319,226,6.414,230,3.703,316,2.707,317,5.301,318,3.239,319,5.53,320,4.896,321,4.79,322,4.552,323,3.824,324,2.389,325,6.881,326,6.918,327,6.918,328,6.918,329,3.656,330,5.498,331,6.062,332,2.898,333,4.79,334,2.104,335,6.062,336,2.306,337,2.169,338,6.062,339,6.24,340,6.24,341,5.971,342,6.24,343,5.587,344,5.587,345,4.896,346,5.587,347,5.587]],["title/classes/AbstractTestPage.html",[0,0.006,348,3.106]],["body/classes/AbstractTestPage.html",[0,0.008,2,1.189,3,0.168,4,0.108,5,0.107,8,1.343,9,1.904,10,1.584,12,2.079,13,0.796,16,1.315,19,0.117,20,0.486,23,0.56,25,4.283,28,3.172,32,0.701,34,1.25,35,0.012,36,0.686,37,0.325,38,0.746,51,0.785,52,1.028,61,3.396,64,1.737,65,1.077,67,1.486,68,5.914,72,1.37,73,1.149,79,0.583,86,4.655,87,2.637,88,2.848,90,0.108,95,0.091,100,0.86,110,0.004,111,0.006,112,0.004,123,1.015,133,2.373,144,0.772,172,0.987,178,0.255,194,3.672,198,0.491,202,1.877,211,3.732,253,3.172,255,2.637,269,1.877,308,2.079,329,2.285,334,1.782,348,4.298,349,7.261,350,4.838,351,2.486,352,3.788,353,1.02,354,3.436,355,5.132,356,4.344,357,1.63,358,2.506,359,2.506,360,6.643,361,5.857,362,3.172,363,4.323,364,1.638,365,4.589,366,5.238,367,5.857,368,5.857,369,4.323,370,4.323,371,5.857,372,4.323,373,5.857,374,4.323,375,5.857,376,5.857,377,4.875,378,6.643,379,5.857,380,5.857,381,4.323,382,4.323,383,4.323,384,4.323,385,6.305,386,4.323,387,1.327,388,2.837,389,4.323,390,2.637,391,2.39,392,3.238,393,3.172,394,3.396,395,4.323,396,3.776,397,2.837,398,3.172,399,3.788,400,3.788,401,4.323,402,4.323,403,3.788,404,2.837,405,2.962,406,3.436,407,4.323,408,3.436,409,3.788,410,5.857,411,2.837,412,4.323,413,1.258,414,4.013,415,2.787,416,3.436,417,4.323,418,4.013,419,2.837,420,4.323,421,6.24,422,5.279,423,4.879,424,4.323,425,2.837,426,2.022,427,3.573,428,4.681,429,6.875,430,7.121,431,2.837,432,4.323,433,2.837,434,3.172,435,3.844,436,2.837,437,2.837,438,4.323,439,2.837,440,4.323,441,1.276,442,4.655,443,2.837,444,2.837,445,4.323,446,2.837,447,4.323,448,2.637,449,4.323,450,2.967,451,2.638,452,2.967,453,4.655,454,4.32,455,5.857,456,4.323,457,5.132,458,4.323,459,2.837,460,3.172,461,5.132,462,2.837,463,3.436,464,3.436,465,3.788,466,3.172,467,2.506,468,4.323,469,1.584,470,4.323,471,4.323,472,3.788,473,4.323,474,5.857,475,1.692,476,3.436,477,2.506,478,4.323,479,2.506,480,3.788,481,3.788,482,3.172,483,2.837,484,2.837,485,2.787,486,4.323,487,2.837,488,1.877,489,4.323,490,5.857,491,2.837,492,5.238,493,2.967,494,2.102,495,0.951,496,3.788,497,2.102,498,2.022,499,2.637,500,3.396,501,3.436,502,3.172,503,3.788,504,3.172,505,3.436,506,4.323,507,3.788,508,4.323,509,2.787,510,3.096,511,3.172,512,5.857,513,5.132,514,3.096,515,3.851,516,4.013,517,4.323,518,2.837,519,1.877,520,4.323,521,4.323,522,2.285,523,2.787,524,3.788,525,4.323,526,4.323,527,2.837,528,5.069,529,4.323,530,2.837,531,3.436,532,4.323,533,1.731,534,0.662,535,4.323,536,2.837,537,2.837,538,2.837,539,2.837,540,2.837,541,2.837,542,2.837,543,2.837,544,2.837,545,2.837,546,2.837,547,2.837,548,2.837,549,2.837,550,2.255,551,4.323,552,4.323,553,3.788,554,2.837,555,2.837,556,2.837,557,2.837,558,2.255,559,1.277,560,4.323,561,2.837,562,2.837,563,4.323,564,2.837,565,2.837,566,2.837,567,2.837,568,2.837,569,2.837,570,2.837,571,2.837,572,2.837,573,2.837,574,2.837,575,2.837,576,2.837]],["title/components/AccordionCommonComponent.html",[178,0.135,577,0.988]],["body/components/AccordionCommonComponent.html",[0,0.006,3,0.155,4,0.185,5,0.129,8,0.895,13,1.166,14,1.134,19,0.2,20,0.711,23,0.82,29,0.881,32,0.657,35,0.012,36,0.572,37,0.289,39,1.031,42,1.435,51,0.848,52,0.848,53,1.097,60,1.168,64,1.478,65,0.629,72,1.166,73,0.719,79,0.501,90,0.241,91,2.111,92,0.395,95,0.203,110,0.006,111,0.008,112,0.006,117,0.792,118,1.461,123,1.076,125,1.594,144,1.131,170,0.719,172,0.976,178,0.225,212,0.696,334,1.926,353,1.273,364,1.07,387,1.102,413,1.168,495,1.07,534,1.478,577,1.741,578,1.203,579,1.275,580,4.26,581,7.043,582,0.979,583,1.277,584,6.332,585,1.166,586,6.332,587,1.166,588,6.332,589,7.737,590,7.043,591,4.72,592,4.862,593,4.862,594,4.862,595,4.862,596,4.339,597,6.332,598,4.862,599,2.364,600,2.273,601,1.168,602,1.567,603,1.957,604,1.275,605,1.275,606,1.039,607,1.275,608,1.102,609,1.275,610,1.102,611,1.275,612,1.134,613,1.275,614,1.134,615,1.275,616,1.134,617,1.275,618,1.134,619,1.203,620,1.275,621,1.134,622,1.661,623,1.134,624,1.203,625,1.275,626,1.134,627,1.275,628,1.134,629,1.275,630,1.102,631,1.275,632,1.275,633,1.102,634,1.275,635,1.134,636,1.275,637,1.102,638,1.275,639,1.134,640,1.847,641,1.134,642,1.07,643,1.07,644,1.661,645,1.134,646,1.168,647,1.275,648,1.102,649,1.275,650,1.134,651,1.275,652,1.134,653,1.275,654,1.07,655,1.275,656,1.102,657,1.275,658,1.134,659,1.238,660,1.275,661,1.102,662,1.039,663,1.275,664,1.102,665,1.275,666,1.07,667,1.275,668,1.102,669,1.203,670,1.134,671,1.275,672,1.168,673,1.275,674,1.134,675,1.275,676,1.102,677,1.275,678,1.134,679,1.203,680,1.134,681,1.102,682,1.238,683,0.95,684,1.102,685,1.275,686,1.102,687,1.275,688,1.102,689,1.275,690,1.102,691,1.275,692,1.102,693,1.275,694,1.102,695,1.275,696,1.102,697,1.275,698,1.102,699,1.203,700,1.275]],["title/interfaces/AddrLabelList.html",[11,0.548,701,2.9]],["body/interfaces/AddrLabelList.html",[0,0.004,3,0.098,4,0.116,5,0.062,9,1.31,10,1.119,11,0.709,16,1.667,19,0.125,20,0.514,21,1.051,29,0.382,35,0.012,36,0.248,37,0.291,38,0.798,39,1.306,44,2.007,51,0.613,52,1.056,53,1.379,55,1.547,67,1.051,73,0.811,79,0.582,84,1.486,90,0.269,92,0.248,93,0.58,95,0.195,98,1.189,100,0.916,101,1.771,110,0.004,111,0.006,112,0.004,115,0.653,116,1.036,117,0.382,118,0.949,119,1.622,121,0.987,122,1.018,125,0.653,131,1.084,141,0.929,146,1.018,148,1.478,149,1.018,159,0.958,160,1.376,162,1.28,172,1.112,178,0.195,179,3.133,180,2.527,185,1.916,187,0.987,189,0.987,190,3.133,192,3.342,194,1.689,196,2.093,198,1.184,202,1.326,205,2.827,211,2.138,254,1.156,295,1.376,299,1.689,304,2.217,308,1.944,323,1.689,324,1.391,336,1.018,337,1.433,353,0.438,357,0.85,377,2.242,391,1.689,418,1.429,427,2.789,441,1.35,451,1.376,452,1.547,469,1.119,479,1.771,488,1.326,493,1.547,497,4,498,3.687,509,3.532,510,1.615,515,1.771,519,1.326,583,0.438,585,0.562,587,0.562,606,0.977,643,0.672,646,1.099,662,0.977,701,4.167,702,1.051,703,1.524,704,1.524,705,2.242,706,4.778,707,5.175,708,5.175,709,4.008,710,4.802,711,1.067,712,1.355,713,2.527,714,2.144,715,1.789,716,2.138,717,1.051,718,2.527,719,2.242,720,4.121,721,2.242,722,3.532,723,3.166,724,2.093,725,3.133,726,1.97,727,3.71,728,3.342,729,2.948,730,2.242,731,3.921,732,4.462,733,2.093,734,2.242,735,2.428,736,2.428,737,2.428,738,1.486,739,1.771,740,1.864,741,1.615,742,1.326,743,2.416,744,3.633,745,2.789,746,2.093,747,2.428,748,2.428,749,2.242,750,2.093,751,1.642,752,2.428,753,2.465,754,5.63,755,2.242,756,0.482,757,2.093,758,2.242,759,2.242,760,2.65,761,2.428,762,2.242,763,2.428,764,3.962,765,2.242,766,2.428,767,2.242,768,2.093,769,3.633,770,2.428,771,2.428,772,3.633,773,2.948,774,2.428,775,2.428,776,2.428,777,2.428,778,2.428,779,2.217,780,2.562,781,1.97,782,2.827,783,2.428,784,2.428,785,2.428,786,4.167,787,1.771,788,0.85,789,2.242,790,2.428,791,2.428,792,3.633,793,6.027,794,3.633,795,2.948,796,2.144,797,3.633,798,5.919,799,4.354,800,1.615,801,2.242,802,1.97,803,2.428,804,2.428,805,2.428,806,2.428,807,2.428,808,2.428,809,4.833,810,1.28,811,2.428,812,2.428,813,3.633,814,2.789,815,1.615,816,3.633,817,5.175,818,5.431,819,5.175,820,2.428,821,2.428,822,3.633,823,2.428,824,3.633,825,2.789,826,2.428,827,2.242,828,2.428,829,2.428,830,1.689,831,2.428,832,2.428,833,3.532,834,2.428,835,2.428,836,2.428,837,2.436,838,3.355,839,2.948,840,3.633,841,3.633,842,3.633,843,3.633,844,2.428,845,1.119,846,2.428,847,2.428,848,3.754,849,2.093,850,2.428,851,1.237,852,2.428,853,2.428,854,2.428,855,2.093,856,1.689,857,2.428,858,2.428,859,2.428,860,2.093,861,2.216,862,2.428,863,4.833,864,2.428,865,2.428,866,2.428,867,2.428,868,2.428,869,4.02,870,2.093,871,2.428,872,4.167,873,3.633,874,3.133,875,3.633,876,4.354,877,2.093,878,2.428,879,2.428,880,2.093,881,1.864,882,1.864,883,2.093,884,1.689,885,2.428,886,2.428,887,2.428,888,3.355,889,2.428,890,2.428,891,2.242,892,2.428,893,2.242,894,2.059,895,2.428,896,2.428,897,2.242,898,2.428,899,1.864,900,2.428,901,2.242,902,2.242,903,2.428,904,2.428,905,2.428,906,2.428,907,2.428,908,2.428,909,2.428,910,2.428,911,2.428,912,2.428,913,2.428,914,2.428,915,2.428,916,2.093,917,2.428,918,3.633,919,2.428,920,2.428]],["title/classes/Address.html",[0,0.006,720,2.144]],["body/classes/Address.html",[0,0.009,2,1.889,3,0.144,4,0.171,5,0.092,8,0.83,9,1.727,16,2.203,19,0.185,20,0.814,23,0.78,32,0.725,34,1.012,35,0.012,36,0.49,37,0.344,38,0.778,39,1.291,48,4.421,51,0.604,52,0.604,53,0.781,65,0.938,73,0.891,79,0.579,95,0.144,100,0.875,105,1.6,110,0.006,111,0.008,112,0.006,123,1.337,158,2.616,159,1.414,174,2.605,177,2.108,180,3.331,183,2.208,198,0.781,237,2.616,279,4.838,308,1.6,352,5.28,357,1.254,390,3.676,393,4.421,497,3.3,498,3.173,523,3.885,662,1.45,709,3.587,720,4.307,743,4.192,751,1.083,753,2.569,756,0.711,760,4.731,801,4.98,845,2.208,851,2.932,894,2.713,899,4.14,921,3.951,922,3.308,923,2.75,924,6.949,925,6.786,926,5.946,927,6.806,928,4.98,929,6.786,930,5.757,931,7.767,932,6.786,933,4.509,934,4.509,935,7.244,936,6.347,937,4.509,938,4.509,939,4.509,940,4.509,941,4.509,942,4.509,943,6.025,944,6.404,945,6.347,946,3.676,947,4.788,948,4.788,949,4.509,950,4.509,951,5.28,952,4.509,953,4.509,954,6.025,955,6.025,956,4.509,957,5.28,958,4.788,959,4.421,960,6.025,961,6.025,962,4.421,963,6.025,964,6.025,965,5.28,966,6.025,967,6.025,968,6.025,969,3.676,970,4.509,971,4.509,972,4.509,973,4.509,974,4.509,975,4.509,976,3.493,977,4.509,978,4.509,979,4.509,980,7.549,981,5.946,982,2.907,983,5.28,984,4.788,985,6.786,986,4.509,987,4.509,988,4.509,989,4.509,990,4.509,991,4.509,992,4.509,993,4.509,994,4.509,995,4.509,996,4.509,997,4.509,998,4.509]],["title/classes/Base.html",[0,0.006,116,0.959]],["body/classes/Base.html",[0,0.011,2,2.642,3,0.202,4,0.24,5,0.128,8,1.161,19,0.259,20,0.836,29,0.99,32,0.632,35,0.012,37,0.259,51,0.845,52,0.845,79,0.499,90,0.24,95,0.202,110,0.008,111,0.01,112,0.008,116,1.854,123,1.21,124,2.723,137,2.264,140,2.481,141,2.264,142,2.405,143,2.641,144,1.461,279,4.54,287,4.114,288,3.332,923,4.54,999,5.525,1000,7.442,1001,4.114,1002,4.54,1003,3.619,1004,4.114,1005,7.442]],["title/components/ButtonComponent.html",[178,0.135,608,0.959]],["body/components/ButtonComponent.html",[0,0.008,3,0.136,4,0.162,5,0.118,8,0.783,13,1.066,14,0.992,17,2.817,19,0.175,20,0.651,21,2.265,23,0.75,29,0.824,32,0.675,34,0.714,35,0.012,36,0.575,37,0.304,38,0.426,39,0.943,42,1.313,44,2.414,45,1.61,51,1.08,52,0.882,53,1.003,60,1.022,64,1.993,65,0.75,72,1.066,73,0.857,79,0.389,85,3.358,90,0.22,91,1.846,92,0.346,93,0.807,95,0.185,110,0.006,111,0.008,112,0.006,117,0.724,118,1.367,125,1.511,133,2.185,144,1.034,170,0.857,172,0.98,174,1.872,178,0.25,212,0.609,269,1.846,324,1.762,334,1.762,337,1.816,353,1.264,364,0.936,387,0.964,413,1.022,475,2.767,482,3.12,495,0.936,519,2.515,522,3.061,534,1.352,550,3.379,577,0.992,578,1.052,579,1.115,582,0.857,583,1.27,585,1.066,587,1.066,600,2.708,601,1.022,602,1.433,603,1.855,604,1.115,605,1.115,606,0.909,607,1.115,608,1.603,609,1.115,610,0.964,611,1.115,612,0.992,613,1.115,614,0.992,615,1.115,616,0.992,617,1.115,618,0.992,619,1.052,620,1.115,621,0.992,622,1.519,623,0.992,624,1.052,625,1.115,626,0.992,627,1.115,628,0.992,629,1.115,630,0.964,631,1.115,632,1.115,633,0.964,634,1.115,635,0.992,636,1.115,637,0.964,638,1.115,639,0.992,640,1.728,641,0.992,642,0.936,643,0.936,644,1.519,645,0.992,646,1.022,647,1.115,648,0.964,649,1.115,650,0.992,651,1.115,652,0.992,653,1.115,654,0.936,655,1.115,656,0.964,657,1.115,658,0.992,659,1.083,660,1.115,661,0.964,662,0.909,663,1.115,664,0.964,665,1.115,666,0.936,667,1.115,668,0.964,669,1.052,670,0.992,671,1.115,672,1.022,673,1.115,674,0.992,675,1.115,676,0.964,677,1.115,678,0.992,679,1.052,680,0.992,681,0.964,682,1.083,683,0.831,684,0.964,685,1.115,686,0.964,687,1.115,688,0.964,689,1.115,690,0.964,691,1.115,692,0.964,693,1.115,694,0.964,695,1.115,696,0.964,697,1.115,698,0.964,699,1.052,700,1.115,711,1.352,712,1.75,714,2.577,715,2.577,716,1.989,733,3.969,742,2.515,756,0.671,1006,3.726,1007,4.513,1008,4.25,1009,5.792,1010,4.25,1011,3.734,1012,5.792,1013,5.792,1014,5.792,1015,5.792,1016,5.792,1017,5.075,1018,4.603,1019,3.909,1020,4.603,1021,3.358,1022,5.075,1023,4.603,1024,5.792,1025,5.075,1026,5.075,1027,5.075,1028,6.587,1029,1.992,1030,5.235,1031,5.792,1032,7.073,1033,4.603,1034,4.252,1035,4.252,1036,4.252,1037,4.252,1038,4.252,1039,5.075,1040,4.252,1041,1.417,1042,4.513,1043,5.792,1044,6.69,1045,3.726]],["title/components/ButtonGroupComponent.html",[178,0.135,610,0.959]],["body/components/ButtonGroupComponent.html",[0,0.005,3,0.123,4,0.146,5,0.11,8,0.706,13,0.993,14,0.895,16,1.641,19,0.158,20,0.606,21,2.145,23,0.698,29,0.78,32,0.711,34,1.137,35,0.012,36,0.617,37,0.335,38,0.678,39,1.262,42,1.222,44,2.285,45,1.452,51,1.056,52,1.056,53,1.172,58,1.764,60,0.922,64,1.81,65,0.923,72,0.993,73,1.147,79,0.454,90,0.205,91,1.665,92,0.312,93,0.728,95,0.172,98,1.323,110,0.005,111,0.007,112,0.005,117,0.675,118,0.796,119,2.213,121,2.016,122,2.079,123,1.13,126,2.183,127,2.183,131,1.914,133,2.105,144,0.963,146,1.798,148,2.187,149,1.798,164,2.11,170,0.568,172,1.052,178,0.199,185,1.607,187,1.24,189,2.016,202,2.342,212,0.549,308,2.213,324,2.059,332,2.26,334,1.641,336,1.798,337,2.122,353,1.257,357,1.501,364,0.844,387,0.869,405,3.696,413,0.922,495,0.844,534,1.259,577,0.895,578,0.949,579,1.006,582,0.773,583,1.264,585,0.993,587,0.993,601,0.922,602,1.334,603,1.775,604,1.006,605,1.006,606,0.82,607,1.006,608,0.869,609,1.006,610,1.757,611,1.006,612,0.895,613,1.006,614,0.895,615,1.006,616,0.895,617,1.006,618,0.895,619,0.949,620,1.006,621,0.895,622,1.415,623,0.895,624,0.949,625,1.006,626,0.895,627,1.006,628,0.895,629,1.006,630,0.869,631,1.006,632,1.006,633,0.869,634,1.006,635,0.895,636,1.006,637,0.869,638,1.006,639,0.895,640,1.636,641,0.895,642,0.844,643,0.844,644,1.415,645,0.895,646,0.922,647,1.006,648,0.869,649,1.006,650,0.895,651,1.006,652,0.895,653,1.006,654,0.844,655,1.006,656,0.869,657,1.006,658,0.895,659,0.977,660,1.006,661,0.869,662,0.82,663,1.006,664,0.869,665,1.006,666,1.373,667,1.006,668,0.869,669,0.949,670,0.895,671,1.006,672,0.922,673,1.006,674,0.895,675,1.006,676,0.869,677,1.006,678,0.895,679,0.949,680,0.895,681,0.869,682,0.977,683,0.75,684,0.869,685,1.006,686,0.869,687,1.006,688,0.869,689,1.006,690,0.869,691,1.006,692,0.869,693,1.006,694,0.869,695,1.006,696,0.869,697,1.006,698,0.869,699,0.949,700,1.006,711,1.259,712,1.674,714,2.79,715,2.441,716,2.917,742,2.342,753,1.452,756,0.605,969,4.128,1008,3.958,1029,1.855,1042,4.274,1046,7.364,1047,6.679,1048,3.361,1049,4.274,1050,4.726,1051,4.726,1052,4.286,1053,4.726,1054,4.286,1055,2.429,1056,4.286,1057,5.394,1058,5.394,1059,6.238,1060,5.394,1061,6.248,1062,4.021,1063,4.957,1064,5.394,1065,3.836,1066,3.836,1067,3.836,1068,3.836,1069,3.836,1070,3.836,1071,3.836,1072,3.836,1073,3.836,1074,3.836,1075,5.394,1076,3.836,1077,3.836,1078,3.836,1079,5.394,1080,3.836,1081,3.836,1082,3.049,1083,3.836,1084,3.361,1085,5.394]],["title/injectables/CaptchaDataService.html",[316,1.656,1086,2.729]],["body/injectables/CaptchaDataService.html",[0,0.009,3,0.164,4,0.194,5,0.104,19,0.21,23,0.848,29,0.64,32,0.646,34,1.278,35,0.012,36,0.618,37,0.312,38,0.762,50,4.917,65,0.934,79,0.598,89,2.829,90,0.289,92,0.416,95,0.209,100,0.971,110,0.007,111,0.009,112,0.007,123,1.277,198,0.886,229,3.989,235,4.653,240,4.662,258,4.375,266,3.122,282,2.829,283,2.393,316,2.824,318,2.966,861,1.557,1086,4.22,1087,6.248,1088,4.067,1089,6.545,1090,6.545,1091,6.545,1092,5.117,1093,5.117,1094,6.324,1095,6.889,1096,5.117,1097,6.391,1098,6.324,1099,6.901,1100,5.117,1101,6.324,1102,7.254,1103,7.046,1104,5.117,1105,4.484,1106,4.02,1107,3.755,1108,6.324,1109,3.299,1110,3.755,1111,4.945,1112,4.484,1113,3.506,1114,6.324,1115,6.324,1116,5.735,1117,4.484,1118,5.735,1119,6.324]],["title/modules/CaptchaModule.html",[1120,2.582,1121,2.729]],["body/modules/CaptchaModule.html",[0,0.007,3,0.179,4,0.213,5,0.114,23,0.725,32,0.475,35,0.012,65,0.725,90,0.323,92,0.455,93,1.062,95,0.179,100,0.676,110,0.007,111,0.009,112,0.007,155,2.521,178,0.179,230,3.119,282,3.094,287,3.094,323,4.464,334,1.703,336,2.742,353,0.992,357,1.927,358,4.015,464,5.504,475,2.19,533,3.415,600,2.618,601,1.345,612,2.014,703,1.866,704,1.866,734,5.082,751,1.345,851,2.266,928,5.082,1003,2.722,1086,5.376,1097,4.449,1099,4.449,1111,5.153,1120,4.588,1121,5.605,1122,3.415,1123,5.533,1124,5.977,1125,4.905,1126,4.905,1127,4.905,1128,4.905,1129,5.504,1130,4.108,1131,5.598,1132,7.521,1133,5.598,1134,7.521,1135,6.069,1136,5.153,1137,5.598,1138,4.905,1139,5.598,1140,4.905,1141,5.598,1142,3.836,1143,5.598,1144,4.905,1145,6.069,1146,5.598,1147,4.905,1148,6.069,1149,4.449]],["title/injectables/CheckCompleteBaseService.html",[316,1.656,1150,3.106]],["body/injectables/CheckCompleteBaseService.html",[0,0.009,3,0.127,4,0.151,5,0.081,8,0.732,9,1.139,11,0.716,12,1.41,16,1.682,17,2.688,19,0.297,20,0.621,23,0.716,26,2.557,29,0.692,30,2.723,31,4.562,32,0.71,34,1.213,35,0.012,36,0.587,37,0.321,38,0.724,39,1.362,51,0.852,52,0.921,53,1.19,65,1.062,72,1.463,73,1.106,79,0.561,84,3.513,88,3.913,90,0.242,92,0.323,94,2.013,95,0.177,98,1.344,100,0.945,105,2.256,110,0.005,111,0.007,112,0.005,117,0.497,123,1.317,174,1.285,193,3.565,198,1.19,205,2.4,230,2.49,237,2.4,316,2.163,317,3.565,318,2.304,319,2.723,321,4.193,322,3.205,332,2.664,333,3.878,334,1.209,339,5.462,340,5.462,341,5.052,342,5.462,345,3.483,357,1.538,390,5.17,391,3.056,426,3.214,441,1.632,475,2.163,477,3.686,522,2.922,559,1.79,751,1.328,825,4.193,851,2.238,861,2.275,883,3.788,884,3.799,923,3.373,930,5.943,1150,4.057,1151,6.679,1152,3.159,1153,4.845,1154,4.057,1155,3.565,1156,5.571,1157,5.571,1158,5.571,1159,5.571,1160,6.022,1161,5.462,1162,5.462,1163,5.571,1164,5.571,1165,5.529,1166,3.975,1167,3.975,1168,3.975,1169,3.975,1170,3.878,1171,2.488,1172,3.565,1173,3.975,1174,4.845,1175,5.043,1176,3.975,1177,4.845,1178,4.057,1179,5.488,1180,3.975,1181,3.975,1182,4.845,1183,3.975,1184,4.845,1185,4.845,1186,4.057,1187,3.975,1188,4.845,1189,4.845,1190,3.975,1191,4.665,1192,3.975,1193,3.975,1194,3.975,1195,3.975,1196,3.975,1197,5.571,1198,3.159,1199,3.483,1200,3.483,1201,2.917,1202,3.483,1203,3.483,1204,3.483,1205,2.425,1206,2.425,1207,4.845,1208,4.845,1209,5.571,1210,6.33,1211,5.571,1212,4.845,1213,4.394,1214,4.394,1215,3.788,1216,4.845,1217,3.483,1218,3.483,1219,3.483,1220,3.483,1221,2.917,1222,3.483,1223,3.483,1224,3.483,1225,3.483,1226,3.483,1227,3.483,1228,3.483,1229,3.483,1230,3.483,1231,3.483]],["title/components/CheckboxComponent.html",[178,0.135,614,0.988]],["body/components/CheckboxComponent.html",[0,0.005,3,0.119,4,0.141,5,0.107,8,0.685,9,1.512,10,1.363,13,1.129,14,0.868,19,0.153,20,0.593,21,2.109,23,0.683,29,0.66,32,0.719,34,1.184,35,0.012,36,0.625,37,0.342,38,0.754,39,1.307,42,1.196,44,2.247,45,1.997,51,1.063,52,1.063,53,1.268,58,1.651,60,0.894,64,1.231,65,0.948,72,0.971,73,1.158,79,0.505,90,0.233,91,1.614,92,0.302,93,0.706,95,0.169,110,0.005,111,0.007,112,0.005,115,1.128,116,1.513,117,0.66,118,1.272,119,2.176,121,1.982,122,2.044,123,1.227,124,1.814,125,1.426,126,2.136,127,2.136,131,1.872,133,2.081,137,1.131,138,1.24,139,1.363,140,1.24,141,1.131,142,1.202,143,1.32,144,1.095,146,1.759,148,2.157,149,1.759,152,2.758,156,2.065,164,2.065,170,0.55,172,1.084,178,0.225,183,1.933,185,1.558,187,1.202,189,1.705,191,1.166,200,2.548,212,0.533,308,2.501,324,1.605,334,1.605,337,1.654,353,1.255,357,1.857,362,3.872,364,0.818,387,0.843,405,5.5,413,0.894,495,0.818,522,1.965,534,1.231,577,0.868,578,0.92,579,0.976,582,0.749,583,1.262,585,0.971,587,0.971,601,0.894,602,1.305,603,1.751,604,0.976,605,0.976,606,0.795,607,0.976,608,0.843,609,0.976,610,0.843,611,0.976,612,0.868,613,0.976,614,1.557,615,0.976,616,0.868,617,0.976,618,0.868,619,0.92,620,0.976,621,0.868,622,1.384,623,0.868,624,0.92,625,0.976,626,0.868,627,0.976,628,0.868,629,0.976,630,0.843,631,0.976,632,0.976,633,0.843,634,0.976,635,0.868,636,0.976,637,0.843,638,0.976,639,0.868,640,1.609,641,0.868,642,0.818,643,0.818,644,1.384,645,0.868,646,0.894,647,0.976,648,0.843,649,0.976,650,0.868,651,0.976,652,0.868,653,0.976,654,0.818,655,0.976,656,0.843,657,0.976,658,0.868,659,0.947,660,0.976,661,0.843,662,0.795,663,0.976,664,0.843,665,0.976,666,0.818,667,0.976,668,0.843,669,0.92,670,0.868,671,0.976,672,0.894,673,0.976,674,0.868,675,0.976,676,0.843,677,0.976,678,0.868,679,0.92,680,0.868,681,0.843,682,0.947,683,0.727,684,0.843,685,0.976,686,0.843,687,0.976,688,0.843,689,0.976,690,0.843,691,0.976,692,0.843,693,0.976,694,0.843,695,0.976,696,0.843,697,0.976,698,0.843,699,0.92,700,0.976,711,1.231,712,1.651,714,2.4,715,2.4,716,1.739,717,1.279,742,2.291,756,0.587,788,1.035,845,1.933,969,4.072,976,3.059,1029,1.814,1041,1.759,1042,4.202,1061,5.374,1062,3.954,1063,4.874,1084,4.623,1232,3.259,1233,5.277,1234,5.277,1235,3.06,1236,7.529,1237,5.277,1238,1.808,1239,5.277,1240,3.719,1241,5.277,1242,3.872,1243,3.219,1244,3.719,1245,3.719,1246,3.719,1247,3.719,1248,3.719,1249,3.719,1250,3.719,1251,3.719,1252,3.719,1253,3.719,1254,5.277,1255,3.719,1256,3.719,1257,3.719,1258,5.277,1259,3.719,1260,1.808,1261,3.719,1262,3.719,1263,2.729,1264,1.614,1265,5.277,1266,5.277,1267,3.719,1268,3.719,1269,3.719]],["title/components/CityComponent.html",[178,0.135,616,0.988]],["body/components/CityComponent.html",[0,0.004,3,0.103,4,0.122,5,0.097,8,0.591,12,2.211,13,1.039,14,0.749,19,0.132,20,0.533,21,1.631,23,0.614,26,2.077,29,0.593,32,0.728,34,1.289,35,0.012,36,0.658,37,0.347,38,0.79,39,0.918,42,1.075,45,1.215,51,1.043,52,1.139,53,0.556,58,1.542,60,0.771,64,1.107,65,1.02,72,0.873,73,1.178,79,0.563,90,0.237,92,0.261,93,0.609,95,0.103,100,0.388,110,0.004,111,0.006,112,0.004,113,3.962,115,1.014,116,0.727,117,0.593,118,1.17,119,2.002,120,3.514,121,1.533,122,1.581,123,1.016,124,1.631,125,1.538,126,1.92,127,1.92,128,2.749,129,2.507,130,2.981,131,2.359,132,2.914,133,2.125,137,0.976,138,2.677,139,1.176,140,1.07,141,0.976,142,1.037,143,1.139,144,1.007,146,1.07,148,2.014,149,1.07,151,1.861,152,2.892,153,2.218,155,1.445,156,2.438,157,2.622,158,1.393,159,1.006,160,1.445,162,1.345,164,1.856,170,0.702,171,1.626,172,0.964,178,0.18,187,1.037,189,1.037,191,1.006,212,0.46,237,2.059,295,1.445,353,1.243,364,0.706,387,0.727,413,0.771,495,0.706,514,2.981,534,1.107,577,0.749,578,0.794,579,0.842,582,0.647,583,1.253,585,0.873,587,0.873,601,0.771,602,1.173,603,1.634,604,0.842,605,0.842,606,0.686,607,0.842,608,0.727,609,0.842,610,0.727,611,0.842,612,0.749,613,0.842,614,0.749,615,0.842,616,1.454,617,0.842,618,0.749,619,0.794,620,0.842,621,0.749,622,1.244,623,0.749,624,0.794,625,0.842,626,0.749,627,0.842,628,0.749,629,0.842,630,0.727,631,0.842,632,0.842,633,0.727,634,0.842,635,0.749,636,0.842,637,0.727,638,0.842,639,0.749,640,1.48,641,0.749,642,0.706,643,0.706,644,1.244,645,0.749,646,0.771,647,0.842,648,0.727,649,0.842,650,0.749,651,0.842,652,0.749,653,0.842,654,0.706,655,0.842,656,0.727,657,0.842,658,0.749,659,0.818,660,0.842,661,0.727,662,0.686,663,0.842,664,0.727,665,0.842,666,0.706,667,0.842,668,0.727,669,0.794,670,0.749,671,0.842,672,0.771,673,0.842,674,0.749,675,0.842,676,0.727,677,0.842,678,0.749,679,0.794,680,0.749,681,0.727,682,0.818,683,0.628,684,0.727,685,0.842,686,0.727,687,0.842,688,0.727,689,0.842,690,0.727,691,0.842,692,0.727,693,0.842,694,0.727,695,0.842,696,0.727,697,0.842,698,0.727,699,0.794,700,0.842,703,1.581,704,1.581,709,3.988,711,1.316,712,1.781,751,0.771,753,2.358,756,0.748,788,0.893,810,1.987,981,5.46,1021,2.749,1029,1.631,1041,2.077,1235,2.886,1238,1.561,1260,1.561,1264,1.393,1270,2.812,1271,4.743,1272,4.743,1273,2.981,1274,3.118,1275,3.27,1276,3.118,1277,3.441,1278,2.743,1279,3.21,1280,3.21,1281,4.743,1282,2.402,1283,3.21,1284,3.058,1285,3.21,1286,3.21,1287,4.743,1288,1.958,1289,1.958,1290,1.958,1291,3.21,1292,3.21,1293,3.21,1294,2.069,1295,3.21,1296,1.958,1297,3.21,1298,3.21,1299,1.958,1300,1.958,1301,1.958,1302,1.958,1303,1.958,1304,1.958,1305,1.958,1306,3.367,1307,2.507,1308,3.058,1309,2.893,1310,2.059,1311,3.769,1312,3.058,1313,2.705,1314,3.25,1315,3.25,1316,3.25,1317,3.21,1318,3.21,1319,3.21,1320,1.958,1321,1.958,1322,1.958,1323,1.774,1324,3.21,1325,1.774,1326,1.299,1327,1.92,1328,1.299,1329,1.92,1330,1.92,1331,1.92,1332,1.299,1333,1.299,1334,1.92,1335,1.92,1336,1.299,1337,1.299,1338,1.299,1339,1.299,1340,1.299,1341,1.92,1342,1.856,1343,1.299,1344,1.92,1345,1.92,1346,1.299,1347,1.92,1348,1.299,1349,1.299,1350,1.299,1351,1.299,1352,2.522,1353,1.299,1354,1.299,1355,1.299,1356,1.299,1357,1.299,1358,1.299,1359,1.299,1360,1.299,1361,1.299,1362,1.299,1363,1.299,1364,1.299,1365,1.299,1366,1.299,1367,1.299,1368,1.299,1369,1.92,1370,1.299,1371,1.299,1372,1.299,1373,1.299,1374,1.299,1375,1.299,1376,1.299,1377,1.299,1378,1.299,1379,1.299,1380,1.299,1381,1.299,1382,1.299,1383,1.92,1384,1.299,1385,1.299,1386,1.299,1387,1.299,1388,1.299,1389,1.07,1390,1.299,1391,1.299,1392,1.299,1393,1.299,1394,1.299,1395,1.299,1396,1.299,1397,1.299,1398,1.774,1399,1.696,1400,1.774,1401,1.774,1402,2.069,1403,2.893,1404,4.156]],["title/classes/CommonImage.html",[0,0.006,1405,2.34]],["body/classes/CommonImage.html",[0,0.01,2,2.198,3,0.168,4,0.199,5,0.156,8,0.966,11,0.679,19,0.215,20,0.747,26,1.749,29,0.913,32,0.73,35,0.012,36,0.593,37,0.351,38,0.666,51,0.703,52,0.703,67,2.286,79,0.581,90,0.199,95,0.253,100,0.633,105,2.36,110,0.007,111,0.009,112,0.007,117,0.656,123,0.802,137,1.596,170,1.172,176,2.453,183,1.922,215,3.041,287,4.379,288,2.773,356,3.2,426,2.453,441,2.576,469,1.922,745,3.2,756,0.828,1389,2.434,1405,4.244,1406,3.382,1407,4.454,1408,4.556,1409,5.358,1410,5.358,1411,5.358,1412,5.358,1413,5.358,1414,4.454,1415,5.358,1416,5.358,1417,6.65,1418,5.246,1419,5.246,1420,4.683,1421,5.246,1422,5.246,1423,5.246,1424,5.246,1425,5.246,1426,5.246,1427,5.246,1428,5.246,1429,5.246,1430,3.382,1431,3.676,1432,3.2,1433,3.382,1434,3.594,1435,3.594,1436,3.594,1437,3.594,1438,3.382,1439,3.594,1440,3.594,1441,3.594,1442,3.2,1443,3.85,1444,3.85,1445,3.85,1446,3.85,1447,3.85,1448,2.453,1449,3.382,1450,3.382,1451,3.85,1452,3.382,1453,3.85,1454,3.85,1455,3.594,1456,3.594,1457,3.85,1458,3.594,1459,3.85,1460,3.85,1461,4.683,1462,4.88,1463,4.88,1464,4.88,1465,3.855,1466,3.85,1467,4.88,1468,4.88,1469,3.85,1470,4.88,1471,4.556]],["title/classes/CommonImageProcessingError.html",[0,0.006,1442,2.582]],["body/classes/CommonImageProcessingError.html",[0,0.01,2,2.267,3,0.173,4,0.206,5,0.163,11,0.701,19,0.222,20,0.762,26,1.804,29,0.848,32,0.693,34,0.909,35,0.012,36,0.551,37,0.335,38,0.846,67,1.861,79,0.574,89,2.991,90,0.206,95,0.256,100,0.653,105,1.92,110,0.007,111,0.009,112,0.007,117,0.677,123,1.222,137,1.646,170,1.096,176,2.53,183,1.983,215,3.137,287,4.094,288,2.86,356,3.301,426,2.53,441,2.565,469,1.983,745,3.301,756,0.854,1389,1.804,1405,4.509,1406,3.489,1407,4.137,1408,3.708,1409,3.971,1410,3.971,1411,3.971,1412,3.971,1413,3.971,1414,3.301,1415,3.971,1416,3.971,1420,4.977,1430,3.489,1431,3.748,1432,3.301,1433,3.489,1434,3.708,1435,3.708,1436,3.708,1437,3.708,1438,3.489,1439,3.708,1440,3.708,1441,3.708,1442,4.137,1443,5.435,1444,5.435,1445,3.971,1446,3.971,1447,3.971,1448,2.53,1449,3.489,1450,3.489,1451,3.971,1452,3.489,1453,3.971,1454,3.971,1455,5.32,1456,5.478,1457,3.971,1458,3.708,1459,3.971,1460,3.971,1461,4.736,1462,4.976,1463,4.976,1464,4.976,1465,3.931,1466,3.971,1467,4.976,1468,4.976,1469,3.971,1470,4.976,1471,4.646,1472,5.411,1473,6.781,1474,5.411,1475,6.781,1476,5.411]],["title/interfaces/CommonImageScaleFactors.html",[11,0.548,1461,2.582]],["body/interfaces/CommonImageScaleFactors.html",[0,0.01,3,0.178,4,0.212,5,0.16,11,0.722,19,0.229,20,0.776,23,0.895,26,1.859,29,0.698,32,0.474,34,0.937,35,0.012,36,0.562,37,0.308,38,0.559,65,0.722,67,1.917,79,0.565,90,0.212,95,0.258,100,0.673,105,1.979,110,0.007,111,0.009,112,0.007,117,0.698,123,0.852,137,1.696,170,1.111,176,2.608,183,2.043,215,3.233,287,4.15,288,2.947,356,3.402,426,2.608,441,2.599,469,2.043,702,1.917,745,3.402,756,0.88,1389,1.859,1405,4.15,1406,3.595,1407,4.215,1408,3.821,1409,4.092,1410,4.092,1411,4.092,1412,4.092,1413,4.092,1414,3.402,1415,4.092,1416,4.092,1420,4.58,1430,3.595,1431,3.819,1432,3.402,1433,3.595,1434,3.821,1435,3.821,1436,3.821,1437,3.821,1438,3.595,1439,3.821,1440,3.821,1441,3.821,1442,3.402,1443,4.092,1444,4.092,1445,4.092,1446,4.092,1447,4.092,1448,2.608,1449,3.595,1450,3.595,1451,4.092,1452,3.595,1453,4.092,1454,4.092,1455,3.821,1456,3.821,1457,4.092,1458,3.821,1459,4.092,1460,4.092,1461,5.014,1462,5.919,1463,5.919,1464,5.509,1465,4.006,1466,4.092,1467,5.07,1468,5.07,1469,4.092,1470,5.07,1471,5.144,1477,6.054,1478,5.577]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.006,1465,2.454]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.01,2,2.297,3,0.175,4,0.208,5,0.159,11,0.71,19,0.225,20,0.768,23,0.885,26,1.827,29,0.855,32,0.663,34,1.148,35,0.012,36,0.605,37,0.32,38,0.685,65,0.71,67,1.885,79,0.563,90,0.208,95,0.257,100,0.662,105,1.945,110,0.007,111,0.009,112,0.007,117,0.855,123,0.838,137,1.668,170,1.102,176,2.564,183,2.009,215,3.178,287,4.118,288,2.897,356,3.344,426,2.564,441,2.603,469,2.009,745,3.344,756,0.865,1389,1.827,1405,4.118,1406,3.535,1407,4.171,1408,3.756,1409,4.023,1410,4.023,1411,4.023,1412,4.023,1413,4.023,1414,3.344,1415,4.023,1416,4.023,1420,4.545,1430,3.535,1431,3.779,1432,3.344,1433,3.535,1434,3.756,1435,3.756,1436,3.756,1437,3.756,1438,3.535,1439,3.756,1440,3.756,1441,3.756,1442,3.344,1443,4.023,1444,4.023,1445,4.023,1446,4.023,1447,4.023,1448,2.564,1449,3.535,1450,3.535,1451,4.023,1452,3.535,1453,4.023,1454,4.023,1455,3.756,1456,3.756,1457,4.023,1458,3.756,1459,4.023,1460,4.023,1461,4.993,1462,5.724,1463,5.724,1464,5.467,1465,4.319,1466,5.017,1467,5.724,1468,5.017,1469,5.017,1470,5.017,1471,5.105,1477,5.991,1479,6.837,1480,5.482,1481,5.482]],["title/interfaces/CommonLogMessage.html",[11,0.548,1482,3.106]],["body/interfaces/CommonLogMessage.html",[0,0.005,3,0.209,4,0.159,5,0.085,9,1.2,11,0.742,12,1.486,16,1.274,19,0.172,20,0.644,26,2.453,32,0.356,35,0.012,36,0.531,37,0.289,38,0.42,58,1.821,79,0.551,85,2.428,88,2.787,90,0.28,92,0.34,95,0.209,96,2.555,100,0.97,110,0.005,111,0.007,112,0.005,115,0.895,123,0.999,132,2.32,138,1.396,158,1.818,170,1.214,172,0.58,177,1.959,180,2.315,181,2.87,195,3.928,198,1.132,209,3.329,211,2.681,225,3.169,227,2.037,229,3.613,230,2.581,231,2.555,234,2.87,235,3.696,238,4.556,240,3.323,242,4.214,244,4.815,245,4.796,252,3.497,254,2.17,259,2.555,260,4.214,264,2.7,266,2.555,268,2.87,269,1.818,273,3.928,279,3.987,282,2.315,283,1.959,308,2.034,311,5.577,316,2.243,334,1.274,393,3.073,418,2.681,451,1.886,467,2.428,475,1.639,494,2.787,510,2.214,516,2.87,559,2.581,702,1.44,743,2.214,751,1.87,756,0.904,782,3.051,837,1.971,845,1.535,851,1.695,855,2.87,856,2.315,861,2.239,881,2.555,958,4.556,962,3.073,1004,3.613,1011,2.7,1020,3.329,1041,2.736,1106,3.714,1109,3.696,1205,2.555,1206,2.555,1243,2.555,1310,1.818,1389,1.911,1430,2.7,1431,3.169,1452,4.214,1482,5.71,1483,3.073,1484,3.329,1485,4.188,1486,5.023,1487,2.87,1488,4.207,1489,4.556,1490,3.073,1491,4.556,1492,5.194,1493,3.67,1494,2.7,1495,3.67,1496,3.67,1497,2.7,1498,3.329,1499,4.556,1500,3.67,1501,6.449,1502,3.67,1503,5.023,1504,5.023,1505,6.158,1506,5.023,1507,2.87,1508,5.023,1509,5.023,1510,5.023,1511,3.67,1512,5.023,1513,3.67,1514,4.478,1515,4.442,1516,3.67,1517,3.67,1518,5.023,1519,5.194,1520,4.556,1521,5.194,1522,2.555,1523,4.556,1524,3.073,1525,3.329,1526,3.67,1527,3.497,1528,3.67,1529,3.67,1530,3.67,1531,3.67,1532,3.67,1533,3.67,1534,3.67,1535,3.67,1536,2.214,1537,3.67,1538,3.696,1539,3.67,1540,3.67,1541,3.67,1542,3.67,1543,3.67,1544,3.67,1545,3.67,1546,3.67,1547,3.67,1548,3.329,1549,3.073,1550,3.073,1551,3.073,1552,5.023,1553,2.87,1554,3.67,1555,3.67,1556,3.67,1557,3.67,1558,3.329,1559,3.67,1560,3.67,1561,3.67,1562,3.67,1563,3.329,1564,3.323,1565,2.428,1566,3.329,1567,3.073,1568,2.87,1569,3.67,1570,3.329,1571,3.67,1572,3.67,1573,4.556,1574,2.7,1575,3.329,1576,3.073,1577,4.556,1578,3.67,1579,3.329,1580,3.329,1581,3.329,1582,3.67,1583,3.329,1584,3.67,1585,5.023,1586,3.329,1587,3.329,1588,3.329,1589,2.555,1590,3.67,1591,3.67,1592,3.329,1593,3.67,1594,3.67,1595,3.67,1596,3.67,1597,3.67,1598,3.67,1599,3.67,1600,3.67,1601,3.67]],["title/injectables/CommonLogger.html",[316,1.656,1497,2.729]],["body/injectables/CommonLogger.html",[0,0.004,3,0.173,4,0.114,5,0.061,8,0.999,9,0.861,10,1.101,11,0.585,12,2.294,16,1.374,19,0.123,20,0.507,23,0.702,26,2.816,29,0.376,32,0.716,34,1.385,35,0.012,36,0.673,37,0.346,38,0.822,39,0.489,51,0.727,52,0.727,53,0.52,58,1.869,65,1.063,73,1.072,79,0.545,80,3.313,85,2.618,88,3.524,89,1.661,90,0.246,92,0.244,95,0.173,96,1.833,100,0.895,110,0.004,111,0.006,112,0.004,115,0.965,123,1.133,132,2.441,138,2.471,158,1.96,170,1.208,172,0.626,177,2.111,180,2.496,181,2.059,195,2.059,198,0.94,209,3.588,211,2.111,217,2.059,225,4.175,227,1.461,229,3.894,230,2.443,231,3.944,232,3.588,233,3.98,234,4.43,235,4.542,236,3.588,237,1.96,238,5.138,239,2.388,240,3.496,242,4.378,244,4.966,245,4.984,246,2.388,248,2.388,249,3.313,251,4.311,252,3.944,253,3.313,254,2.447,255,1.833,256,2.388,257,2.205,258,3.589,259,3.309,260,4.78,262,2.205,263,2.388,264,3.497,265,2.059,266,3.309,267,2.388,268,3.094,269,2.355,270,2.388,271,2.388,272,2.388,273,4.133,275,2.388,277,2.633,279,4.143,282,1.661,283,1.405,308,2.14,311,4.984,316,1.767,318,1.742,334,1.374,393,3.313,418,2.536,451,1.353,467,2.618,475,1.767,494,2.933,510,1.588,516,2.059,559,1.353,743,2.386,751,1.843,756,0.951,782,2.948,837,1.865,845,1.101,851,1.828,855,3.094,856,2.496,861,2.434,881,2.755,958,4.793,962,3.313,1004,2.998,1011,2.911,1020,3.588,1041,2.556,1106,3.589,1109,2.911,1205,1.833,1206,1.833,1243,1.833,1310,1.96,1389,1.808,1430,2.911,1431,2.496,1452,4.378,1482,5.702,1483,2.205,1486,2.633,1487,2.059,1488,3.313,1489,4.793,1490,2.205,1491,3.588,1492,4.793,1493,2.633,1494,1.937,1495,2.633,1496,2.633,1497,2.911,1498,3.588,1499,4.311,1500,3.957,1501,6.351,1502,3.957,1503,5.285,1504,5.285,1505,6.351,1506,5.285,1507,2.059,1508,3.957,1509,3.957,1510,5.285,1511,3.957,1512,3.957,1513,3.957,1514,4.827,1515,4.386,1516,2.633,1517,4.753,1518,3.957,1519,5.138,1520,4.793,1521,4.793,1522,2.755,1523,4.793,1524,3.313,1525,3.588,1526,3.957,1527,3.679,1528,3.957,1529,3.957,1530,3.957,1531,2.633,1532,2.633,1533,3.957,1534,2.633,1535,2.633,1536,2.386,1537,3.957,1538,3.497,1539,3.957,1540,3.957,1541,3.957,1542,2.633,1543,2.633,1544,2.633,1545,2.633,1546,2.633,1547,2.633,1548,3.588,1549,3.313,1550,3.313,1551,3.313,1552,5.285,1553,3.094,1554,3.957,1555,3.957,1556,2.633,1557,2.633,1558,2.388,1559,2.633,1560,4.753,1561,2.633,1562,2.633,1563,2.388,1564,2.618,1565,1.742,1566,2.388,1567,2.205,1568,2.059,1569,2.633,1570,2.388,1571,2.633,1572,2.633,1573,3.588,1574,1.937,1575,2.388,1576,2.205,1577,3.588,1578,2.633,1579,2.388,1580,2.388,1581,2.388,1582,2.633,1583,2.388,1584,2.633,1585,4.753,1586,3.588,1587,3.588,1588,3.588,1589,2.755,1590,3.957,1591,3.957,1592,2.388,1593,5.285,1594,2.633,1595,2.633,1596,3.957,1597,2.633,1598,3.957,1599,3.957,1600,3.957,1601,2.633,1602,4.515,1603,4.515,1604,4.515,1605,4.515,1606,4.515,1607,4.515,1608,4.515,1609,3.005,1610,3.005,1611,3.005,1612,3.005,1613,3.005,1614,3.005,1615,3.005,1616,3.005,1617,3.005,1618,3.005,1619,3.005,1620,3.005,1621,3.005,1622,2.633,1623,2.633,1624,2.633,1625,2.633,1626,2.633,1627,3.005,1628,2.633,1629,2.633,1630,3.005,1631,3.005,1632,3.005,1633,3.005,1634,3.005,1635,3.005,1636,3.005,1637,3.005,1638,3.005]],["title/components/ConfirmTemplateComponent.html",[178,0.135,618,0.988]],["body/components/ConfirmTemplateComponent.html",[0,0.006,3,0.152,4,0.181,5,0.127,13,1.151,14,1.628,19,0.196,20,0.702,29,0.872,32,0.67,35,0.012,36,0.567,37,0.257,42,1.417,51,0.837,52,0.837,60,1.145,64,1.459,72,1.151,79,0.32,90,0.238,92,0.387,95,0.2,100,0.842,105,1.691,110,0.006,111,0.008,112,0.006,115,1.336,116,1.678,123,0.955,124,2.149,137,1.45,138,1.589,139,1.746,140,1.589,141,1.45,142,1.54,143,1.691,144,1.246,170,0.925,172,0.866,178,0.223,212,0.683,237,2.714,310,2.908,353,1.271,364,1.049,387,1.08,413,1.145,495,1.049,534,1.459,577,1.112,578,1.179,579,1.25,582,0.96,583,1.276,585,1.151,587,1.151,601,1.145,602,1.547,603,1.942,604,1.25,605,1.25,606,1.019,607,1.25,608,1.08,609,1.25,610,1.08,611,1.25,612,1.112,613,1.25,614,1.112,615,1.25,616,1.112,617,1.25,618,1.728,619,1.989,620,1.25,621,1.112,622,1.64,623,1.112,624,1.179,625,1.25,626,1.112,627,1.25,628,1.112,629,1.25,630,1.08,631,1.25,632,1.25,633,1.08,634,1.25,635,1.112,636,1.25,637,1.08,638,1.25,639,1.112,640,1.83,641,1.112,642,1.049,643,1.049,644,1.64,645,1.112,646,1.145,647,1.25,648,1.08,649,1.25,650,1.112,651,1.25,652,1.112,653,1.25,654,1.049,655,1.25,656,1.08,657,1.25,658,1.112,659,1.214,660,1.25,661,1.08,662,1.019,663,1.25,664,1.08,665,1.25,666,1.049,667,1.25,668,1.08,669,1.179,670,1.112,671,1.25,672,1.145,673,1.25,674,1.112,675,1.25,676,1.08,677,1.25,678,1.112,679,1.179,680,1.112,681,1.08,682,1.214,683,0.932,684,1.08,685,1.25,686,1.08,687,1.25,688,1.08,689,1.25,690,1.08,691,1.25,692,1.08,693,1.25,694,1.08,695,1.25,696,1.08,697,1.25,698,1.08,699,1.179,700,1.25,717,1.639,779,1.929,788,1.326,1171,1.865,1431,2.635,1455,4.779,1639,6.27,1640,5.79,1641,3.788,1642,6.251,1643,6.251,1644,6.975,1645,6.975,1646,6.975,1647,6.251,1648,6.112,1649,6.975,1650,4.766,1651,4.766,1652,4.766,1653,4.766,1654,4.766,1655,4.766,1656,3.788,1657,3.788,1658,4.766,1659,4.766,1660,4.766]],["title/classes/Container.html",[0,0.006,1661,2.582]],["body/classes/Container.html",[0,0.007,2,2.403,3,0.26,4,0.218,5,0.117,8,1.056,11,0.91,19,0.236,20,0.79,23,0.91,26,2.534,32,0.646,34,1.181,35,0.012,36,0.571,37,0.312,38,0.704,65,0.91,67,2.417,73,1.04,79,0.572,84,4.172,90,0.218,94,2.905,95,0.225,100,0.849,110,0.007,111,0.009,112,0.007,116,1.593,174,2.272,205,2.49,269,3.052,354,5.587,422,5.587,479,4.075,591,4.834,679,1.419,680,1.338,796,2.751,870,3.93,1170,4.638,1661,4.834,1662,4.558,1663,6.16,1664,6.16,1665,6.041,1666,7.03,1667,6.661,1668,4.901,1669,5.736,1670,6.16,1671,6.16,1672,5.736,1673,6.16,1674,6.16,1675,5.815,1676,5.736,1677,5.736,1678,5.736,1679,6.16,1680,5.026,1681,5.026,1682,5.026,1683,5.026,1684,5.026,1685,5.026,1686,6.16,1687,5.026]],["title/components/CoreBreadcrumbComponent.html",[178,0.135,623,0.988]],["body/components/CoreBreadcrumbComponent.html",[0,0.006,3,0.149,4,0.177,5,0.125,8,0.856,9,1.332,13,1.132,14,1.085,16,1.871,19,0.191,23,0.796,29,0.862,32,0.522,35,0.012,36,0.56,38,0.616,49,4.887,60,1.117,64,1.435,65,0.602,67,2.114,72,1.132,73,0.688,87,3.751,90,0.177,92,0.378,95,0.197,110,0.006,111,0.008,112,0.006,116,1.662,117,0.769,118,1.43,125,1.567,144,1.098,170,0.688,178,0.22,212,0.666,334,2.096,353,1.27,357,1.711,364,1.023,387,1.053,396,3.964,413,1.117,423,4.213,467,3.565,493,3.114,495,1.023,500,3.565,501,4.887,507,5.388,511,4.512,534,1.711,577,1.085,578,1.15,579,1.219,582,0.936,583,1.275,585,1.132,587,1.132,601,1.117,602,1.521,603,1.923,604,1.219,605,1.219,606,0.993,607,1.219,608,1.053,609,1.219,610,1.053,611,1.219,612,1.085,613,1.219,614,1.085,615,1.219,616,1.085,617,1.219,618,1.085,619,1.15,620,1.219,621,1.085,622,1.613,623,1.711,624,1.977,625,1.219,626,1.085,627,1.219,628,1.085,629,1.219,630,1.053,631,1.219,632,1.219,633,1.053,634,1.219,635,1.085,636,1.219,637,1.053,638,1.219,639,1.085,640,1.807,641,1.085,642,1.023,643,1.023,644,1.613,645,1.085,646,1.117,647,1.219,648,1.053,649,1.219,650,1.085,651,1.219,652,1.085,653,1.219,654,1.023,655,1.219,656,1.053,657,1.219,658,1.085,659,1.184,660,1.219,661,1.053,662,0.993,663,1.219,664,1.053,665,1.219,666,1.023,667,1.219,668,1.053,669,1.15,670,1.085,671,1.219,672,1.117,673,1.219,674,1.085,675,1.219,676,1.053,677,1.219,678,1.085,679,1.15,680,1.085,681,1.053,682,1.184,683,0.909,684,1.053,685,1.219,686,1.053,687,1.219,688,1.053,689,1.219,690,1.053,691,1.219,692,1.053,693,1.219,694,1.053,695,1.219,696,1.053,697,1.219,698,1.053,699,1.15,700,1.219,703,2.05,704,2.05,780,2.875,923,3.751,1553,4.213,1688,6.038,1689,5.476,1690,4.073,1691,5.381,1692,8.113,1693,7.332,1694,6.149,1695,6.149,1696,6.149,1697,6.149,1698,6.149,1699,6.149,1700,4.213,1701,6.149,1702,6.149,1703,6.149,1704,6.149,1705,6.149,1706,6.149,1707,6.149,1708,4.649,1709,4.649]],["title/interfaces/CountryList.html",[11,0.548,722,2.729]],["body/interfaces/CountryList.html",[0,0.003,3,0.064,4,0.076,5,0.041,8,1.649,11,0.539,19,0.082,20,0.368,21,0.687,29,0.25,35,0.012,37,0.134,38,0.328,39,0.783,51,0.267,52,0.898,53,0.567,58,1.029,73,0.712,79,0.479,90,0.183,92,0.162,93,0.379,95,0.182,98,0.39,100,0.395,110,0.003,111,0.004,112,0.003,115,0.427,116,0.742,117,0.25,118,0.679,119,1.162,121,0.645,122,0.666,123,0.305,125,0.427,126,0.808,127,0.808,130,1.055,131,0.709,132,1.948,133,0.589,148,1.555,152,1.281,155,1.474,156,1.281,159,1.304,160,0.899,162,0.837,170,0.295,171,1.011,172,0.951,178,0.105,183,0.732,185,1.372,186,1.587,187,1.058,188,1.287,189,1.058,192,1.218,198,0.834,203,1.587,204,1.587,205,0.867,207,1.587,295,0.899,315,1.75,332,0.837,353,0.286,493,1.011,497,2.34,498,0.934,505,1.587,514,1.055,578,0.494,583,0.286,585,0.368,587,0.368,626,0.466,702,0.687,703,1.091,704,1.091,709,1.055,711,0.971,712,1.314,717,0.687,722,3.424,723,1.592,724,1.368,725,2.243,751,0.48,753,1.821,756,0.838,781,2.11,787,1.157,788,0.555,810,0.837,861,0.607,884,1.104,888,2.402,891,1.465,983,4.654,1021,1.157,1041,1.387,1044,1.75,1235,1.421,1264,0.867,1274,1.104,1276,1.104,1278,0.971,1282,1.011,1307,1.055,1308,1.287,1309,1.218,1310,0.867,1312,1.287,1313,1.421,1314,1.368,1315,1.368,1316,1.368,1326,0.808,1327,1.325,1328,0.808,1329,1.325,1330,1.325,1331,1.325,1332,0.808,1333,0.808,1334,1.325,1335,1.325,1336,0.808,1337,0.808,1338,0.808,1339,0.808,1340,0.808,1341,1.325,1342,1.281,1343,0.808,1344,1.325,1345,1.325,1346,0.808,1347,1.325,1348,0.808,1349,0.808,1350,0.808,1351,0.808,1352,1.948,1353,0.808,1354,0.808,1355,0.808,1356,0.808,1357,0.808,1358,0.808,1359,0.808,1360,0.808,1361,0.808,1362,0.808,1363,0.808,1364,0.808,1365,0.808,1366,0.808,1367,0.808,1368,0.808,1369,1.325,1370,0.808,1371,0.808,1372,0.808,1373,0.808,1374,0.808,1375,0.808,1376,0.808,1377,0.808,1378,0.808,1379,0.808,1380,0.808,1381,0.808,1382,0.808,1383,1.325,1384,0.808,1385,0.808,1386,0.808,1387,0.808,1388,0.808,1389,0.666,1390,0.808,1391,0.808,1392,0.808,1393,0.808,1394,0.808,1395,0.808,1396,0.808,1397,0.808,1399,1.055,1401,1.104,1710,1.75,1711,4.16,1712,8.956,1713,3.274,1714,1.997,1715,1.997,1716,1.997,1717,1.997,1718,7.343,1719,1.997,1720,1.997,1721,1.997,1722,1.997,1723,1.997,1724,1.997,1725,3.274,1726,1.997,1727,1.997,1728,1.997,1729,1.997,1730,1.997,1731,1.997,1732,1.997,1733,1.997,1734,1.997,1735,1.997,1736,1.997,1737,1.997,1738,1.997,1739,1.997,1740,1.997,1741,1.997,1742,1.997,1743,1.997,1744,1.997,1745,1.997,1746,1.997,1747,1.997,1748,1.997,1749,1.997,1750,1.997,1751,1.997,1752,1.997,1753,1.997,1754,1.997,1755,1.997,1756,1.997,1757,1.997,1758,1.997,1759,1.997,1760,1.997,1761,1.997,1762,1.997,1763,1.997,1764,1.997,1765,1.997,1766,1.997,1767,1.997,1768,1.997,1769,1.997,1770,1.997,1771,1.997,1772,3.274,1773,1.997,1774,1.997,1775,1.997,1776,1.997,1777,1.997,1778,1.997,1779,1.997,1780,1.997,1781,1.997,1782,3.824,1783,1.997,1784,1.997,1785,1.997,1786,2.243,1787,1.997,1788,1.997,1789,3.274,1790,1.997,1791,1.997,1792,1.997,1793,1.997,1794,1.997,1795,1.997,1796,1.997,1797,1.997,1798,1.997,1799,1.997,1800,1.997,1801,1.997,1802,1.997,1803,1.997,1804,1.997,1805,1.997,1806,1.997,1807,1.997,1808,1.997,1809,1.75,1810,1.997,1811,1.997,1812,7.133,1813,1.997,1814,1.997,1815,1.997,1816,1.997,1817,1.997,1818,3.274,1819,1.997,1820,1.997,1821,1.997,1822,1.997,1823,1.997,1824,1.997,1825,1.997,1826,1.997,1827,1.997,1828,1.997,1829,3.274,1830,1.997,1831,4.16,1832,1.997,1833,1.997,1834,1.997,1835,1.997,1836,1.997,1837,1.997,1838,1.997,1839,1.997,1840,1.997,1841,1.997,1842,1.997,1843,1.997,1844,1.997,1845,1.997,1846,1.997,1847,1.997,1848,1.997,1849,1.997,1850,1.997,1851,1.997,1852,1.997,1853,1.997,1854,1.997,1855,1.997,1856,1.997,1857,1.997,1858,1.997,1859,1.997,1860,1.997,1861,1.997,1862,1.997,1863,1.997,1864,1.997,1865,1.997,1866,4.812,1867,1.997,1868,1.997,1869,1.997,1870,1.997,1871,1.997,1872,1.997,1873,1.997,1874,1.997,1875,1.997,1876,1.997,1877,1.997,1878,1.997,1879,1.997,1880,1.997,1881,1.997,1882,1.997,1883,1.997,1884,1.997,1885,4.812,1886,1.997,1887,1.997,1888,1.997,1889,1.997,1890,1.997,1891,1.587,1892,1.997,1893,1.997,1894,1.997,1895,1.997,1896,1.997,1897,3.274,1898,1.997,1899,1.997,1900,1.997,1901,1.997,1902,1.75,1903,1.997,1904,1.997,1905,1.997,1906,1.997,1907,1.997,1908,1.997,1909,1.997,1910,1.997,1911,1.997,1912,1.997,1913,1.997,1914,1.997,1915,1.997,1916,1.997,1917,1.997,1918,1.997,1919,1.997,1920,1.997,1921,1.997,1922,1.997,1923,1.997,1924,1.997,1925,1.997,1926,1.997,1927,1.997,1928,1.997,1929,1.997,1930,1.997,1931,1.997,1932,1.997,1933,1.997,1934,1.997,1935,1.997,1936,1.997,1937,1.997,1938,1.997,1939,1.997,1940,1.997,1941,1.997,1942,1.997,1943,1.997,1944,1.997,1945,1.997,1946,1.997,1947,1.997,1948,1.997,1949,1.997,1950,1.997,1951,1.997,1952,1.997,1953,1.997,1954,1.997,1955,1.997,1956,1.997,1957,1.997,1958,1.997,1959,1.997,1960,1.997,1961,1.997,1962,1.997,1963,1.997,1964,1.997,1965,1.997,1966,1.997,1967,1.997,1968,1.997,1969,1.997,1970,1.997,1971,1.997,1972,1.997,1973,3.274,1974,3.274,1975,1.997,1976,1.997,1977,1.997,1978,1.997,1979,1.997,1980,3.274,1981,1.997,1982,1.997,1983,1.997,1984,1.997,1985,1.997,1986,1.997,1987,1.997,1988,1.997,1989,1.997,1990,1.997,1991,1.997,1992,1.997,1993,1.997,1994,1.997,1995,1.997,1996,1.997,1997,1.997,1998,1.997,1999,1.997,2000,1.997,2001,1.997,2002,1.997,2003,1.997,2004,1.997,2005,1.997,2006,1.997,2007,1.997,2008,1.997,2009,1.997,2010,1.997,2011,1.997,2012,1.997,2013,1.997,2014,1.997,2015,1.997,2016,1.997,2017,1.997,2018,1.997,2019,1.997,2020,1.997,2021,1.997,2022,1.997,2023,1.997,2024,1.997,2025,1.997,2026,1.997,2027,1.997,2028,1.997,2029,1.997,2030,3.645,2031,1.997,2032,1.997,2033,1.997,2034,1.997,2035,1.997,2036,1.997,2037,1.997,2038,1.997,2039,1.997,2040,1.997,2041,1.997,2042,1.997,2043,1.997,2044,1.997,2045,1.997,2046,1.997,2047,3.274,2048,1.997,2049,1.997,2050,1.997,2051,1.997,2052,1.997,2053,1.997,2054,1.997,2055,1.997,2056,1.997,2057,1.997,2058,1.997,2059,1.997,2060,1.997,2061,1.997,2062,1.997,2063,1.997,2064,1.997,2065,1.997,2066,1.997,2067,1.997,2068,1.997,2069,1.997,2070,1.997,2071,1.997,2072,1.997,2073,1.997,2074,1.997,2075,1.997,2076,1.997,2077,1.997,2078,1.997,2079,1.997,2080,1.997,2081,1.997,2082,1.997,2083,1.997,2084,1.75,2085,1.997,2086,1.997,2087,1.997,2088,1.997,2089,1.997,2090,1.997,2091,1.997,2092,1.997,2093,1.997,2094,1.997,2095,1.997,2096,1.997,2097,1.997,2098,1.997,2099,1.997,2100,1.997,2101,1.997,2102,1.997,2103,1.997,2104,1.997,2105,1.997,2106,1.997,2107,1.997,2108,1.997,2109,1.997,2110,1.997,2111,1.997,2112,6.026,2113,1.997,2114,1.997,2115,1.997,2116,1.997,2117,1.997,2118,1.997,2119,1.997,2120,1.997,2121,1.997,2122,1.997,2123,1.997,2124,1.997,2125,1.997,2126,1.997,2127,3.274,2128,1.997,2129,1.997,2130,1.997,2131,1.997,2132,1.997,2133,1.997,2134,1.997,2135,1.997,2136,1.997,2137,1.997,2138,1.997,2139,1.997,2140,1.997,2141,1.997,2142,1.997,2143,1.997,2144,1.997,2145,1.997,2146,1.997,2147,1.997,2148,1.997,2149,1.997,2150,1.997,2151,1.997,2152,1.997,2153,1.997,2154,1.997,2155,1.997,2156,1.997,2157,1.997,2158,1.997,2159,1.997,2160,1.997,2161,1.997,2162,1.997,2163,1.997,2164,1.997,2165,1.997,2166,1.997,2167,1.997,2168,4.812,2169,1.997,2170,1.997,2171,1.997,2172,1.997,2173,3.274,2174,1.997,2175,1.997,2176,1.997,2177,1.997,2178,1.997,2179,1.997,2180,1.997,2181,1.997,2182,1.997,2183,1.997,2184,1.997,2185,1.997,2186,1.997,2187,1.997,2188,1.997,2189,1.997,2190,1.997,2191,1.997,2192,1.997,2193,1.997,2194,3.274,2195,1.997,2196,1.997,2197,1.997,2198,1.997,2199,1.997,2200,1.997,2201,5.311,2202,1.997,2203,1.997,2204,1.997,2205,1.997,2206,1.997,2207,1.997,2208,1.997,2209,1.997,2210,1.997,2211,1.997,2212,1.997,2213,1.997,2214,1.997,2215,1.997,2216,1.997,2217,1.997,2218,1.997,2219,1.997,2220,1.997,2221,1.997,2222,1.997,2223,1.997,2224,1.997,2225,1.997,2226,1.997,2227,1.997,2228,1.997,2229,1.997,2230,1.997,2231,1.997,2232,1.997,2233,1.997,2234,1.997,2235,1.997,2236,1.997,2237,1.997,2238,1.997,2239,1.997,2240,1.997,2241,1.997,2242,1.997,2243,1.997,2244,1.997,2245,1.997,2246,1.997,2247,1.997,2248,3.274,2249,1.997,2250,1.997,2251,1.997,2252,1.997,2253,1.997,2254,1.997,2255,1.997,2256,1.997,2257,1.997,2258,1.997,2259,1.997,2260,1.997,2261,1.997,2262,1.997,2263,1.75,2264,1.997,2265,1.997,2266,1.997,2267,1.997,2268,1.997,2269,1.587,2270,1.157,2271,1.287,2272,1.368,2273,1.75,2274,1.587,2275,1.368,2276,1.75]],["title/interfaces/DateErrorMsg.html",[11,0.548,2277,3.106]],["body/interfaces/DateErrorMsg.html",[0,0.004,3,0.106,4,0.126,5,0.068,8,0.61,9,0.95,10,2.105,11,0.819,15,2.633,16,1.008,19,0.136,20,0.545,21,1.139,29,0.414,35,0.012,37,0.299,38,0.809,39,0.935,44,2.105,50,1.921,51,0.902,53,0.995,55,1.678,58,1.998,59,2.136,64,1.133,65,0.429,67,1.139,73,0.936,79,0.567,85,1.921,90,0.256,91,1.439,92,0.269,93,0.629,95,0.184,98,0.949,99,2.459,100,0.85,101,1.921,105,2.245,110,0.004,111,0.006,112,0.004,115,0.708,116,1.1,117,0.414,118,1.007,119,1.723,121,1.071,122,1.104,123,0.742,125,0.708,133,1.433,141,1.008,146,1.104,148,1.569,149,1.104,170,0.49,172,1.119,174,1.569,176,2.959,178,0.254,183,1.779,185,1.388,187,1.071,189,1.857,191,1.039,195,2.27,198,0.841,202,2.108,205,2.495,254,2.175,255,2.962,280,2.633,290,2.021,295,2.588,301,2.27,304,1.341,308,1.176,324,1.477,332,1.388,336,1.104,337,1.522,353,0.475,357,1.599,392,2.684,406,3.858,415,2.136,451,1.492,452,1.678,454,2.27,469,1.214,475,1.297,476,2.633,485,2.136,488,2.495,515,2.815,516,2.27,519,2.495,534,1.133,558,2.633,583,0.475,585,0.61,587,0.61,599,3.7,602,0.82,630,1.1,702,1.139,703,1.618,704,1.618,711,1.133,712,1.201,713,2.684,714,2.248,715,1.9,716,2.27,717,1.139,738,1.611,739,3.331,740,2.021,741,1.751,742,1.439,751,1.167,756,0.906,779,1.341,788,0.922,796,1.297,800,2.566,802,4.342,814,2.962,830,1.832,837,2.564,845,1.214,860,2.27,882,2.962,916,2.27,976,1.921,982,2.136,1001,2.684,1002,2.962,1003,2.361,1004,3.497,1021,1.921,1055,1.492,1154,2.432,1171,1.9,1172,2.136,1243,2.021,1263,2.432,1310,1.439,1326,1.341,1327,1.965,1328,1.341,1329,1.965,1330,1.965,1331,1.965,1332,1.341,1333,1.341,1334,1.965,1335,1.965,1336,1.341,1337,1.341,1338,1.341,1339,1.341,1340,1.341,1341,1.965,1342,2.248,1343,1.341,1344,1.965,1345,1.965,1346,1.341,1347,1.965,1348,1.341,1349,1.341,1350,1.341,1351,1.341,1352,2.561,1353,1.341,1354,1.341,1355,1.341,1356,1.341,1357,1.341,1358,1.341,1359,1.341,1360,1.341,1361,1.341,1362,1.341,1363,1.341,1364,1.341,1365,1.341,1366,1.341,1367,1.341,1368,1.341,1369,1.965,1370,1.341,1371,1.341,1372,1.341,1373,1.341,1374,1.341,1375,1.341,1376,1.341,1377,1.341,1378,1.341,1379,1.341,1380,1.341,1381,1.341,1382,1.341,1383,1.965,1384,1.341,1385,1.341,1386,1.341,1387,1.341,1388,1.341,1389,1.104,1390,1.341,1391,1.341,1392,1.341,1393,1.341,1394,1.341,1395,1.341,1396,1.341,1397,1.341,1414,3.506,1431,2.684,1448,3.4,1488,3.563,1527,4.963,1536,2.566,1565,1.921,1589,2.021,2277,4.217,2278,2.432,2279,3.858,2280,3.327,2281,6.372,2282,6.372,2283,6.372,2284,6.372,2285,6.667,2286,3.327,2287,3.563,2288,3.705,2289,3.563,2290,5.544,2291,3.563,2292,4.254,2293,5.902,2294,4.254,2295,5.927,2296,2.432,2297,5.779,2298,2.903,2299,2.633,2300,2.903,2301,2.903,2302,2.021,2303,1.832,2304,2.903,2305,2.903,2306,2.903,2307,5.593,2308,2.903,2309,2.903,2310,2.903,2311,3.858,2312,1.921,2313,4.254,2314,4.254,2315,4.254,2316,2.962,2317,4.254,2318,2.903,2319,2.432,2320,2.903,2321,2.903,2322,2.903,2323,2.903,2324,4.567,2325,2.633,2326,3.858,2327,5.035,2328,1.751,2329,2.903,2330,2.903,2331,2.27,2332,4.254,2333,2.633,2334,2.903,2335,4.643,2336,2.633,2337,2.903,2338,2.903,2339,2.903,2340,2.903,2341,2.903,2342,3.327,2343,2.903,2344,3.563,2345,2.903,2346,3.563,2347,2.903,2348,2.903,2349,2.903,2350,2.903,2351,2.903,2352,2.903,2353,2.903,2354,2.903,2355,2.903,2356,3.563,2357,6.167,2358,2.903,2359,2.903,2360,2.903,2361,2.903,2362,2.903,2363,2.903,2364,2.903,2365,2.903,2366,2.903,2367,2.903,2368,2.903,2369,2.903,2370,2.903,2371,2.903,2372,4.254,2373,2.903,2374,4.254,2375,2.903,2376,2.633,2377,2.903,2378,5.544,2379,3.563,2380,5.035,2381,2.903,2382,2.903,2383,4.567,2384,2.903,2385,2.903,2386,2.903,2387,2.432,2388,2.136,2389,2.633,2390,2.903,2391,2.633,2392,2.903,2393,2.903,2394,2.633,2395,2.903,2396,4.254,2397,3.563,2398,2.903,2399,2.903,2400,2.903,2401,2.903,2402,2.633,2403,2.903,2404,2.903,2405,2.903,2406,2.903,2407,2.432]],["title/directives/DateFieldFormatDirective.html",[212,0.606,684,0.959]],["body/directives/DateFieldFormatDirective.html",[0,0.008,3,0.197,4,0.234,5,0.126,19,0.253,32,0.624,35,0.012,37,0.253,90,0.234,92,0.501,95,0.197,105,2.188,110,0.008,111,0.01,112,0.008,172,1.087,198,1.272,202,3.405,212,1.052,441,1.82,582,1.242,583,1.052,683,1.205,684,1.664,711,1.714,712,1.941,756,0.973,1029,2.525,1041,2.614,1275,3.574,2270,4.257,2408,6.873,2409,5.402,2410,7.344,2411,7.844,2412,6.435,2413,6.166,2414,5.402,2415,6.166,2416,5.836,2417,6.166,2418,4.9,2419,6.166,2420,6.166,2421,6.166,2422,6.166,2423,6.166,2424,6.166,2425,8.296,2426,6.166,2427,6.166,2428,7.344,2429,6.166,2430,6.166,2431,6.166]],["title/components/DatepickerComponent.html",[178,0.135,630,0.959]],["body/components/DatepickerComponent.html",[0,0.003,3,0.079,4,0.093,5,0.079,8,0.452,9,0.704,10,2.161,11,0.702,13,0.712,14,0.573,15,3.073,16,0.747,19,0.101,20,0.434,21,1.644,23,0.501,29,0.598,32,0.708,34,1.14,35,0.012,36,0.593,37,0.334,38,0.68,39,1.02,42,0.876,44,1.987,45,0.93,50,1.424,51,1.031,52,0.91,53,0.939,55,1.244,58,1.769,59,1.584,60,0.59,64,1.462,65,0.944,67,1.329,72,0.712,73,1.079,79,0.498,85,1.424,90,0.224,91,1.066,92,0.2,93,0.466,95,0.153,98,0.935,99,2.747,100,0.756,101,1.424,105,1.925,110,0.003,111,0.005,112,0.003,115,0.826,116,1.229,117,0.484,118,0.992,119,1.697,121,1.545,122,1.594,123,1.038,124,1.329,125,1.159,126,1.565,127,1.565,131,1.372,133,0.725,137,0.747,138,0.819,139,0.9,140,0.819,141,1.176,142,0.794,143,0.872,144,0.854,146,1.289,148,1.753,149,1.289,170,0.572,172,1.055,174,1.753,176,1.808,178,0.243,183,1.417,185,1.029,187,0.794,189,1.545,191,1.212,195,1.683,198,0.67,202,1.066,205,2.561,212,0.352,254,1.464,255,3.308,280,3.073,290,1.498,295,2.153,301,1.683,304,0.994,308,0.872,324,1.65,332,1.62,336,1.289,337,1.7,353,1.218,357,1.641,364,0.541,387,0.557,392,2.643,406,4.31,413,0.59,415,1.584,451,1.106,452,1.244,454,2.649,469,1.417,475,1.513,476,1.952,485,1.584,488,2.355,495,0.541,515,3.144,516,2.649,519,2.561,534,1.462,558,1.952,577,0.573,578,0.608,579,0.644,582,0.495,583,1.231,585,0.712,587,0.712,599,3.778,601,0.59,602,1.183,603,1.423,604,0.644,605,0.644,606,0.525,607,0.644,608,0.557,609,0.644,610,0.557,611,0.644,612,0.573,613,0.644,614,0.573,615,0.644,616,0.573,617,0.644,618,0.573,619,0.608,620,0.644,621,0.573,622,1.014,623,0.573,624,0.608,625,0.644,626,0.573,627,0.644,628,0.573,629,0.644,630,1.42,631,0.644,632,0.644,633,0.557,634,0.644,635,0.573,636,0.644,637,0.557,638,0.644,639,0.573,640,1.254,641,0.573,642,0.541,643,0.541,644,1.014,645,0.573,646,0.59,647,0.644,648,0.557,649,0.644,650,0.573,651,0.644,652,0.573,653,0.644,654,0.541,655,0.644,656,0.557,657,0.644,658,0.573,659,0.626,660,0.644,661,0.557,662,0.525,663,0.644,664,0.557,665,0.644,666,0.541,667,0.644,668,0.557,669,0.608,670,0.573,671,0.644,672,0.59,673,0.644,674,0.573,675,0.644,676,0.557,677,0.644,678,0.573,679,0.608,680,0.573,681,0.557,682,0.626,683,0.48,684,0.557,685,0.644,686,0.557,687,0.644,688,0.557,689,0.644,690,0.557,691,0.644,692,0.557,693,0.644,694,0.557,695,0.644,696,0.557,697,0.644,698,0.557,699,0.608,700,0.644,703,1.289,704,1.289,711,0.902,712,1.183,713,2.643,714,2.308,715,1.871,716,2.236,717,0.845,738,1.194,739,3.144,740,1.498,741,1.298,742,1.679,751,0.929,756,0.754,779,0.994,788,0.683,796,1.513,800,2.866,802,4.61,814,2.917,830,2.137,837,2.335,845,0.9,860,1.683,882,2.917,916,1.683,976,1.424,982,1.584,1001,1.358,1002,1.498,1003,1.194,1004,2.643,1019,1.358,1021,1.424,1029,1.329,1041,0.819,1055,1.741,1154,1.802,1171,1.513,1172,2.493,1243,1.498,1263,1.802,1310,1.679,1326,0.994,1327,1.565,1328,0.994,1329,1.565,1330,1.565,1331,1.565,1332,0.994,1333,0.994,1334,1.565,1335,1.565,1336,0.994,1337,0.994,1338,0.994,1339,0.994,1340,0.994,1341,1.565,1342,1.871,1343,0.994,1344,1.565,1345,1.565,1346,0.994,1347,1.565,1348,0.994,1349,0.994,1350,0.994,1351,0.994,1352,2.195,1353,0.994,1354,0.994,1355,0.994,1356,0.994,1357,0.994,1358,0.994,1359,0.994,1360,0.994,1361,0.994,1362,0.994,1363,0.994,1364,0.994,1365,0.994,1366,0.994,1367,0.994,1368,0.994,1369,1.565,1370,0.994,1371,0.994,1372,0.994,1373,0.994,1374,0.994,1375,0.994,1376,0.994,1377,0.994,1378,0.994,1379,0.994,1380,0.994,1381,0.994,1382,0.994,1383,1.565,1384,0.994,1385,0.994,1386,0.994,1387,0.994,1388,0.994,1389,0.819,1390,0.994,1391,0.994,1392,0.994,1393,0.994,1394,0.994,1395,0.994,1396,0.994,1397,0.994,1414,3.999,1431,2.137,1448,2.929,1488,2.837,1527,5.068,1536,1.298,1565,1.424,1589,2.359,2277,3.509,2278,1.802,2279,1.952,2280,1.683,2281,4.19,2282,4.19,2283,4.19,2284,4.19,2285,4.752,2286,1.683,2287,1.802,2288,3.497,2289,1.802,2290,2.152,2291,3.98,2292,4.19,2293,6.266,2294,4.19,2295,6.05,2296,1.802,2297,5.976,2298,3.388,2299,3.073,2300,3.388,2301,3.388,2302,2.359,2303,2.137,2304,3.388,2305,3.388,2306,3.388,2307,5.795,2308,3.388,2309,4.19,2310,5.168,2311,4.31,2312,2.241,2313,5.168,2314,4.752,2315,4.752,2316,3.308,2317,5.168,2318,3.388,2319,2.837,2320,3.388,2321,3.388,2322,4.19,2323,3.388,2324,4.31,2325,3.073,2326,4.31,2327,5.489,2328,2.043,2329,3.388,2330,4.19,2331,2.649,2332,4.752,2333,3.073,2334,3.388,2335,4.81,2336,1.952,2337,3.388,2338,4.19,2339,3.388,2340,4.19,2341,3.388,2342,2.649,2343,2.152,2344,2.837,2345,2.152,2346,2.837,2347,2.152,2348,3.388,2349,2.152,2350,2.152,2351,2.152,2352,2.152,2353,2.152,2354,3.388,2355,2.152,2356,2.837,2357,5.489,2358,2.152,2359,2.152,2360,2.152,2361,2.152,2362,2.152,2363,2.152,2364,2.152,2365,2.152,2366,2.152,2367,2.152,2368,2.152,2369,2.152,2370,2.152,2371,2.152,2372,3.388,2373,2.152,2374,3.388,2375,2.152,2376,1.952,2377,2.152,2378,4.752,2379,2.837,2380,4.19,2381,2.152,2382,2.152,2383,3.8,2384,2.152,2385,2.152,2386,2.152,2387,1.802,2388,1.584,2389,1.952,2390,2.152,2391,1.952,2392,2.152,2393,2.152,2394,1.952,2395,3.388,2396,3.388,2397,2.837,2398,2.152,2399,2.152,2400,4.752,2401,2.152,2402,1.952,2403,2.152,2404,4.19,2405,2.152,2406,3.388,2407,2.837,2432,3.866,2433,3.866,2434,3.866,2435,2.837,2436,3.866,2437,2.456,2438,2.456,2439,2.456,2440,2.456,2441,2.456,2442,2.456,2443,2.456,2444,2.456,2445,2.456,2446,2.456,2447,2.456,2448,2.456,2449,2.456,2450,2.456,2451,2.456,2452,2.456,2453,2.456,2454,2.456,2455,2.456,2456,2.456,2457,2.456,2458,2.456,2459,2.456,2460,2.456,2461,2.456,2462,2.456,2463,2.456,2464,3.866,2465,3.866,2466,3.866,2467,3.866,2468,3.866,2469,3.866,2470,3.866]],["title/components/DropdownComponent.html",[178,0.135,495,0.932]],["body/components/DropdownComponent.html",[0,0.005,3,0.132,4,0.157,5,0.116,13,1.046,14,0.964,19,0.17,20,0.638,23,0.735,29,0.71,32,0.72,34,1.174,35,0.012,36,0.63,37,0.344,38,0.758,39,1.232,42,1.287,45,1.564,51,1.086,52,1.086,53,0.984,58,1.812,60,0.993,64,1.325,65,0.84,72,1.046,73,1.12,79,0.538,90,0.247,92,0.336,93,0.784,95,0.132,98,1.11,110,0.005,111,0.007,112,0.005,115,1.214,116,1.584,117,0.71,118,0.857,119,2.303,121,2.097,122,2.163,123,1.278,124,1.953,126,2.299,127,2.299,131,2.015,133,2.366,137,1.257,138,1.377,139,1.514,140,1.377,141,1.257,142,1.336,143,1.466,144,1.159,146,1.893,148,2.259,149,1.893,152,2.866,156,2.222,164,2.222,170,0.611,172,1.11,178,0.208,185,1.731,187,1.336,189,1.336,212,0.592,304,2.299,353,1.262,364,0.909,387,0.936,413,0.993,442,4.513,495,1.538,534,1.325,577,0.964,578,1.022,579,1.084,582,0.832,583,1.269,585,1.046,587,1.046,601,0.993,602,1.405,603,1.833,604,1.084,605,1.084,606,0.883,607,1.084,608,0.936,609,1.084,610,0.936,611,1.084,612,0.964,613,1.084,614,0.964,615,1.084,616,0.964,617,1.084,618,0.964,619,1.022,620,1.084,621,0.964,622,1.49,623,0.964,624,1.022,625,1.084,626,0.964,627,1.084,628,0.964,629,1.084,630,0.936,631,1.084,632,1.084,633,0.936,634,1.084,635,0.964,636,1.084,637,0.936,638,1.084,639,0.964,640,1.702,641,0.964,642,0.909,643,0.909,644,1.49,645,0.964,646,0.993,647,1.084,648,0.936,649,1.084,650,0.964,651,1.084,652,0.964,653,1.084,654,0.909,655,1.084,656,0.936,657,1.084,658,0.964,659,1.053,660,1.084,661,0.936,662,0.883,663,1.084,664,0.936,665,1.084,666,0.909,667,1.084,668,0.936,669,1.022,670,0.964,671,1.084,672,0.993,673,1.084,674,0.964,675,1.084,676,0.936,677,1.084,678,0.964,679,1.022,680,0.964,681,0.936,682,1.053,683,0.808,684,0.936,685,1.084,686,0.936,687,1.084,688,0.936,689,1.084,690,0.936,691,1.084,692,0.936,693,1.084,694,0.936,695,1.084,696,0.936,697,1.084,698,0.936,699,1.022,700,1.084,714,1.617,716,1.932,717,1.421,788,1.15,1170,3.959,1235,3.18,1238,2.009,1260,2.009,1264,1.794,1276,3.587,2335,4.762,2383,3.284,2471,3.621,2472,5.679,2473,5.679,2474,6.49,2475,6.49,2476,6.49,2477,5.686,2478,5.679,2479,4.132,2480,4.132,2481,4.132,2482,4.132,2483,4.132,2484,4.132,2485,4.132,2486,4.132,2487,4.132,2488,4.132,2489,4.132,2490,4.132,2491,4.132,2492,4.132]],["title/directives/DuplicateCheckDirective.html",[212,0.606,686,0.959]],["body/directives/DuplicateCheckDirective.html",[0,0.007,3,0.18,4,0.214,5,0.115,9,1.613,16,1.713,18,3.435,19,0.231,23,0.9,32,0.59,34,0.946,35,0.012,36,0.458,37,0.31,38,0.564,39,1.132,42,1.575,65,0.729,79,0.56,90,0.264,92,0.458,93,1.068,95,0.222,98,1.474,100,0.977,110,0.007,111,0.009,112,0.007,117,0.869,159,2.364,172,0.963,191,2.583,198,0.975,205,3.018,212,0.995,214,4.168,281,3.264,324,2.114,336,2.317,337,2.179,426,2.633,448,4.803,500,3.264,559,3.395,582,1.134,583,0.995,619,1.393,683,1.101,686,1.784,837,2.833,1055,3.13,2493,6.607,2494,5.992,2495,4.934,2496,4.6,2497,6.607,2498,4.371,2499,8.349,2500,5.63,2501,3.435,2502,5.026,2503,5.63,2504,4.24,2505,3.63,2506,6.607,2507,5.63,2508,5.63,2509,3.435,2510,4.132,2511,5.63]],["title/components/EmailComponent.html",[178,0.135,633,0.959]],["body/components/EmailComponent.html",[0,0.004,3,0.106,4,0.126,5,0.099,8,0.894,9,1.391,12,2.245,13,1.058,14,0.773,16,1.477,18,2.962,19,0.136,20,0.545,21,1.669,23,0.629,26,2.109,29,0.607,32,0.731,34,1.299,35,0.012,36,0.651,37,0.349,38,0.795,39,0.935,42,1.1,45,1.254,51,1.05,52,1.143,53,0.574,58,1.741,60,0.796,64,1.133,65,1.037,72,0.894,73,1.185,79,0.542,90,0.24,92,0.269,93,0.629,95,0.106,98,0.648,100,0.694,110,0.008,111,0.006,112,0.004,113,3.982,115,1.038,116,0.751,117,0.607,118,1.192,120,3.56,121,1.569,122,1.618,123,1.029,124,1.669,125,1.554,126,1.965,127,1.965,128,2.815,129,2.566,130,3.037,131,2.39,132,2.943,133,2.147,137,1.008,138,2.692,139,1.214,140,1.104,141,1.008,142,1.071,143,1.176,144,1.026,146,1.104,148,2.045,149,1.104,151,1.921,152,2.918,153,3.15,155,1.492,156,2.476,157,2.684,158,1.439,159,1.039,160,1.492,162,1.388,164,1.9,170,0.49,171,1.678,172,0.933,178,0.184,187,1.071,189,1.071,191,1.039,198,0.574,212,0.475,213,4.335,237,2.108,269,2.108,332,2.034,350,2.815,353,1.246,357,1.351,364,0.729,387,0.751,413,0.796,477,2.815,495,0.729,514,3.037,534,1.133,577,0.773,578,0.82,579,0.869,582,0.667,583,1.255,585,0.894,587,0.894,601,0.796,602,1.201,603,1.66,604,0.869,605,0.869,606,0.708,607,0.869,608,0.751,609,0.869,610,0.751,611,0.869,612,0.773,613,0.869,614,0.773,615,0.869,616,0.773,617,0.869,618,0.773,619,0.82,620,0.869,621,0.773,622,1.274,623,0.773,624,0.82,625,0.869,626,0.773,627,0.869,628,0.773,629,0.869,630,0.751,631,0.869,632,0.869,633,1.434,634,0.869,635,0.773,636,0.869,637,0.751,638,0.869,639,0.773,640,1.507,641,0.773,642,0.729,643,0.729,644,1.274,645,0.773,646,0.796,647,0.869,648,0.751,649,0.869,650,0.773,651,0.869,652,0.773,653,0.869,654,0.729,655,0.869,656,0.751,657,0.869,658,0.773,659,0.844,660,0.869,661,0.751,662,0.708,663,0.869,664,0.751,665,0.869,666,0.729,667,0.869,668,0.751,669,0.82,670,0.773,671,0.869,672,0.796,673,0.869,674,0.773,675,0.869,676,0.751,677,0.869,678,0.773,679,0.82,680,0.773,681,0.751,682,0.844,683,0.648,684,0.751,685,0.869,686,0.751,687,0.869,688,0.751,689,0.869,690,0.751,691,0.869,692,0.751,693,0.869,694,0.751,695,0.869,696,0.751,697,0.869,698,0.751,699,0.82,700,0.869,711,1.341,712,1.799,751,0.796,753,2.395,756,0.766,788,0.922,837,2.176,861,2.141,1029,1.669,1041,1.915,1235,2.924,1238,1.611,1242,3.563,1260,1.611,1264,1.439,1273,3.037,1274,3.176,1275,3.331,1277,3.506,1278,2.794,1282,2.459,1288,2.021,1289,2.021,1290,2.021,1294,2.136,1296,2.021,1299,2.021,1300,2.021,1301,2.021,1302,2.021,1303,2.021,1304,2.021,1305,2.021,1306,3.411,1320,2.021,1321,2.021,1322,2.021,1323,1.832,1325,1.832,1398,1.832,1399,1.751,1400,1.832,1401,1.832,1402,2.136,1403,2.962,2510,3.563,2512,2.903,2513,3.563,2514,2.815,2515,4.254,2516,6.372,2517,4.855,2518,4.855,2519,3.176,2520,4.855,2521,3.314,2522,4.855,2523,3.314,2524,3.858,2525,3.314,2526,4.855,2527,3.314,2528,3.314,2529,3.314,2530,3.314,2531,3.314,2532,3.314,2533,3.314,2534,5.746,2535,3.13,2536,4.855,2537,4.855,2538,3.314,2539,3.314,2540,2.459,2541,4.855,2542,3.314,2543,3.314,2544,7.038,2545,2.633,2546,2.432,2547,2.633,2548,2.903,2549,3.314,2550,4.855]],["title/components/ErrorContainerComponent.html",[178,0.135,635,0.988]],["body/components/ErrorContainerComponent.html",[0,0.007,3,0.164,4,0.195,5,0.134,13,1.207,14,1.197,19,0.211,29,0.904,32,0.557,35,0.011,36,0.587,37,0.211,39,1.067,42,1.486,51,0.687,52,0.687,53,1.136,60,1.233,64,1.53,72,1.207,90,0.195,92,0.417,95,0.164,110,0.007,111,0.009,112,0.007,144,1.171,170,1.21,172,0.908,178,0.231,212,0.735,353,1.276,364,1.129,387,1.163,413,1.233,495,1.129,534,1.53,577,1.197,578,1.269,579,1.346,582,1.033,583,1.28,585,1.207,587,1.207,601,1.233,602,1.622,603,1.997,604,1.346,605,1.346,606,1.096,607,1.346,608,1.163,609,1.346,610,1.163,611,1.346,612,1.197,613,1.346,614,1.197,615,1.346,616,1.197,617,1.346,618,1.197,619,1.269,620,1.346,621,1.197,622,1.72,623,1.197,624,1.269,625,1.346,626,1.197,627,1.346,628,1.197,629,1.346,630,1.163,631,1.346,632,1.346,633,1.163,634,1.346,635,1.777,636,1.346,637,1.163,638,1.346,639,1.197,640,1.895,641,1.197,642,1.129,643,1.129,644,1.72,645,1.197,646,1.233,647,1.346,648,1.163,649,1.346,650,1.197,651,1.346,652,1.197,653,1.346,654,1.129,655,1.346,656,1.163,657,1.346,658,1.197,659,1.307,660,1.346,661,1.163,662,1.096,663,1.346,664,1.163,665,1.346,666,1.129,667,1.346,668,1.163,669,1.269,670,1.197,671,1.346,672,1.233,673,1.346,674,1.197,675,1.346,676,1.163,677,1.346,678,1.197,679,1.269,680,1.197,681,1.163,682,1.307,683,1.003,684,1.163,685,1.346,686,1.163,687,1.346,688,1.163,689,1.346,690,1.163,691,1.346,692,1.163,693,1.346,694,1.163,695,1.346,696,1.163,697,1.346,698,1.163,699,1.269,700,1.346,1661,4,2551,6.331,2552,5.742,2553,4.496,2554,6.556,2555,6.556,2556,7.226,2557,6.556]],["title/interfaces/ErrorMessage.html",[11,0.548,132,1.713]],["body/interfaces/ErrorMessage.html",[3,0.204,4,0.242,5,0.13,11,0.825,19,0.262,20,0.841,32,0.541,35,0.012,37,0.262,38,0.751,52,1.003,58,2.031,79,0.582,95,0.254,100,0.77,110,0.008,111,0.01,112,0.008,132,3.032,133,2.211,159,2.348,169,5.066,174,2.06,198,1.297,559,3.373,702,2.192,756,1.006,1306,3.794,1484,5.066,1515,3.523,2303,3.523,2540,3.228,2558,6.563,2559,5.585,2560,6.374,2561,5.585,2562,6.374,2563,5.585,2564,6.563,2565,5.066,2566,5.585,2567,6.374]],["title/interfaces/FileUploaderMsg.html",[11,0.548,2568,3.364]],["body/interfaces/FileUploaderMsg.html",[0,0.003,3,0.13,4,0.074,5,0.163,9,1.353,10,0.709,11,0.251,13,0.588,14,0.452,16,0.971,17,1.552,19,0.215,20,0.587,22,4.151,29,0.242,31,2.484,35,0.012,36,0.425,37,0.194,38,0.194,39,0.85,44,1.492,48,2.988,53,1.076,58,1.593,66,1.696,67,2.044,68,1.538,72,0.356,73,0.832,79,0.432,90,0.291,91,0.84,92,0.157,93,0.367,94,0.98,95,0.102,98,1.358,100,0.96,105,2.413,110,0.004,111,0.004,112,0.003,115,0.414,116,0.723,117,0.242,118,0.662,125,0.414,140,0.645,142,1.316,156,1.593,158,0.84,159,1.864,170,1.158,172,0.919,177,0.905,178,0.13,183,1.914,191,0.607,194,1.07,198,1.427,205,0.84,211,0.905,215,1.122,227,0.941,230,1.833,244,2.187,254,1.208,258,1.687,259,1.181,265,2.187,269,0.84,283,1.904,286,1.07,287,1.07,289,4.577,290,1.181,304,0.783,305,2.536,306,1.538,308,1.132,309,1.696,324,0.589,329,1.023,332,0.811,337,0.607,353,0.457,359,2.36,390,1.181,391,1.07,394,1.122,416,1.538,421,1.696,426,1.492,441,1.66,448,1.181,450,0.98,452,2.847,460,1.42,463,1.538,469,1.492,475,0.757,477,1.85,479,1.122,482,2.988,485,3.833,499,1.181,500,1.122,510,1.023,523,1.248,528,1.42,531,1.538,533,1.947,534,1.219,553,1.696,578,0.479,582,0.82,583,0.277,585,0.356,587,0.356,596,2.187,599,0.941,600,0.905,637,0.439,702,0.666,703,1.064,704,1.064,711,0.95,712,1.292,713,1.764,714,1.249,715,1.848,717,0.666,738,0.941,739,1.122,741,1.687,742,0.84,743,1.023,756,1.149,764,2.36,765,1.42,773,1.248,779,0.783,782,0.84,788,0.539,795,1.248,796,1.249,830,1.07,839,2.057,845,1.169,849,1.326,861,1.959,882,1.181,884,1.07,899,2.484,928,1.42,1004,1.764,1033,1.538,1041,2.211,1042,4.257,1049,2.187,1062,1.248,1106,1.687,1130,2.342,1142,1.326,1147,1.696,1171,2.326,1179,1.42,1243,1.947,1284,1.248,1308,2.057,1312,1.248,1326,0.783,1327,1.292,1328,0.783,1329,1.292,1330,1.292,1331,1.292,1332,0.783,1333,0.783,1334,1.292,1335,1.292,1336,0.783,1337,0.783,1338,0.783,1339,0.783,1340,0.783,1341,1.292,1342,1.249,1343,0.783,1344,1.292,1345,1.292,1346,0.783,1347,1.292,1348,0.783,1349,0.783,1350,0.783,1351,0.783,1352,1.911,1353,0.783,1354,0.783,1355,0.783,1356,0.783,1357,0.783,1358,0.783,1359,0.783,1360,0.783,1361,0.783,1362,0.783,1363,0.783,1364,0.783,1365,0.783,1366,0.783,1367,0.783,1368,0.783,1369,1.292,1370,0.783,1371,0.783,1372,0.783,1373,0.783,1374,0.783,1375,0.783,1376,0.783,1377,0.783,1378,0.783,1379,0.783,1380,0.783,1381,0.783,1382,0.783,1383,1.292,1384,0.783,1385,0.783,1386,0.783,1387,0.783,1388,0.783,1389,1.357,1390,0.783,1391,0.783,1392,0.783,1393,0.783,1394,0.783,1395,0.783,1396,0.783,1397,0.783,1405,3.909,1407,5.101,1408,2.79,1414,4.147,1420,1.947,1433,1.248,1438,1.248,1442,3.43,1448,0.905,1449,1.248,1456,2.187,1458,3.236,1461,1.947,1465,1.122,1471,1.326,1514,4.074,1520,2.536,1521,2.536,1522,2.881,1536,2.971,1564,1.85,1565,2.36,1567,1.42,1568,1.326,1574,1.248,1589,1.181,1902,1.696,2084,1.696,2271,1.248,2286,2.187,2288,1.248,2291,2.342,2303,1.07,2312,1.122,2316,1.947,2325,1.538,2379,1.42,2416,1.538,2514,1.85,2563,2.796,2568,3.235,2569,1.696,2570,1.538,2571,2.796,2572,2.187,2573,1.936,2574,3.191,2575,1.936,2576,1.42,2577,1.326,2578,4.071,2579,4.468,2580,2.988,2581,1.936,2582,3.567,2583,2.79,2584,2.79,2585,3.191,2586,3.191,2587,1.936,2588,3.191,2589,1.696,2590,3.191,2591,1.936,2592,3.191,2593,1.936,2594,1.936,2595,1.936,2596,1.936,2597,1.936,2598,1.936,2599,1.181,2600,1.936,2601,1.936,2602,1.936,2603,1.936,2604,3.567,2605,1.936,2606,4.151,2607,3.235,2608,1.936,2609,3.191,2610,2.796,2611,3.191,2612,1.936,2613,3.191,2614,3.191,2615,1.936,2616,3.191,2617,3.191,2618,1.936,2619,1.181,2620,1.538,2621,1.696,2622,1.181,2623,1.538,2624,1.936,2625,1.936,2626,1.42,2627,1.42,2628,1.936,2629,4.071,2630,1.936,2631,1.936,2632,1.936,2633,1.936,2634,1.936,2635,1.936,2636,1.936,2637,1.936,2638,1.936,2639,1.936,2640,1.936,2641,1.936,2642,3.465,2643,3.235,2644,1.936,2645,1.936,2646,1.538,2647,4.723,2648,1.936,2649,1.936,2650,7.072,2651,1.936,2652,1.936,2653,1.696,2654,1.936,2655,1.42,2656,1.936,2657,1.936,2658,1.696,2659,2.536,2660,1.936,2661,4.071,2662,1.936,2663,1.936,2664,1.538,2665,1.936,2666,1.936,2667,1.936,2668,1.936,2669,3.191,2670,1.936,2671,1.936,2672,1.936,2673,1.936,2674,1.696,2675,1.936,2676,3.191,2677,1.936,2678,1.936,2679,4.071,2680,4.071,2681,1.936,2682,3.191,2683,2.796,2684,1.936,2685,2.796,2686,1.936,2687,1.936,2688,1.696,2689,1.936,2690,1.936,2691,1.936,2692,1.936,2693,1.936,2694,1.936,2695,1.936,2696,4.071,2697,1.696,2698,1.936,2699,1.696,2700,2.796,2701,3.191,2702,3.191,2703,1.936,2704,1.936,2705,1.696,2706,3.191,2707,1.936,2708,1.936,2709,3.567,2710,1.936,2711,1.326,2712,3.191,2713,1.696,2714,2.79,2715,1.122,2716,4.151,2717,4.071,2718,1.696,2719,1.42,2720,1.936,2721,1.936,2722,1.42,2723,1.936,2724,4.723,2725,1.248,2726,3.191,2727,2.796,2728,1.936,2729,1.023,2730,1.936,2731,4.071,2732,4.125,2733,4.926,2734,0.98,2735,4.723,2736,1.936,2737,1.936,2738,1.326,2739,1.936,2740,1.936,2741,1.936,2742,3.191,2743,1.42,2744,1.936,2745,1.936,2746,3.191,2747,1.936,2748,1.936,2749,1.936,2750,1.936,2751,1.936,2752,1.936,2753,1.936,2754,1.42,2755,1.936,2756,4.071,2757,3.191,2758,3.236,2759,1.538,2760,1.696,2761,5.945,2762,1.936,2763,1.538,2764,1.936,2765,1.936,2766,3.567,2767,1.538,2768,1.936,2769,1.936,2770,1.538,2771,1.936,2772,3.191,2773,1.936,2774,1.936,2775,1.936,2776,3.567,2777,1.936,2778,1.538,2779,1.936,2780,1.696,2781,1.42,2782,1.936,2783,1.936,2784,1.936,2785,1.936,2786,1.538,2787,1.538,2788,1.936,2789,3.191,2790,4.071,2791,1.936,2792,1.936,2793,1.936,2794,1.936,2795,1.936,2796,1.936,2797,1.936,2798,1.936,2799,4.071,2800,1.936,2801,1.936,2802,1.936,2803,1.936,2804,1.936,2805,1.936,2806,1.936,2807,1.936,2808,1.936,2809,1.936,2810,2.342,2811,3.191,2812,3.191,2813,1.936,2814,1.936,2815,7.287,2816,5.622,2817,3.191,2818,4.071,2819,3.191,2820,5.224,2821,1.42,2822,1.936,2823,1.936,2824,1.936,2825,3.191,2826,4.071,2827,1.936,2828,1.936,2829,1.936,2830,4.138,2831,5.224,2832,1.936,2833,2.536,2834,5.945,2835,1.696,2836,1.42,2837,1.696,2838,1.538,2839,4.723,2840,1.936,2841,1.936,2842,5.224,2843,1.936,2844,1.936,2845,1.936,2846,1.936,2847,1.936,2848,1.936,2849,1.936,2850,1.936,2851,3.191,2852,1.936,2853,1.936,2854,1.936,2855,3.191,2856,3.191,2857,4.071,2858,1.936,2859,3.191,2860,1.936,2861,1.936,2862,1.936,2863,1.936,2864,3.191,2865,3.191,2866,1.936,2867,1.936,2868,1.936,2869,1.936,2870,1.936,2871,1.936,2872,1.936,2873,1.936,2874,4.723,2875,1.936,2876,3.191,2877,1.936,2878,1.696,2879,1.538,2880,1.936,2881,3.191,2882,1.936,2883,1.936,2884,4.723,2885,1.936,2886,1.936,2887,6.439,2888,1.696,2889,1.696,2890,2.796,2891,3.191,2892,1.936,2893,1.936,2894,4.071,2895,1.936,2896,5.224,2897,4.071,2898,4.071,2899,5.224,2900,1.936,2901,1.936,2902,1.936,2903,1.42,2904,1.696,2905,1.936,2906,1.936,2907,1.42,2908,1.936,2909,1.936,2910,1.936,2911,3.191,2912,4.723,2913,4.723,2914,1.936,2915,5.622,2916,1.696,2917,1.936,2918,1.42,2919,1.696,2920,1.936,2921,1.936,2922,3.191,2923,1.936,2924,3.191,2925,1.936,2926,1.936,2927,1.936,2928,3.191,2929,2.796,2930,1.936,2931,1.936,2932,1.936,2933,1.936,2934,1.936,2935,1.936,2936,1.936,2937,1.936,2938,1.936,2939,4.723,2940,1.936,2941,1.42,2942,1.936,2943,4.723,2944,3.191,2945,4.071,2946,4.723,2947,1.936,2948,1.936,2949,1.936,2950,1.936,2951,1.936,2952,1.936,2953,1.936,2954,1.936,2955,1.936,2956,1.936,2957,3.191,2958,4.071,2959,3.191,2960,1.936,2961,3.191,2962,1.936,2963,1.936,2964,1.936,2965,1.936,2966,1.936,2967,1.936,2968,4.071,2969,1.696,2970,1.936,2971,1.936,2972,1.936,2973,1.936,2974,1.248,2975,5.224,2976,4.723,2977,1.936,2978,1.936,2979,3.191,2980,1.696,2981,1.936,2982,1.936,2983,1.936,2984,1.936,2985,1.936,2986,1.936,2987,1.936,2988,1.936,2989,1.936,2990,1.936,2991,1.936,2992,1.936,2993,1.936,2994,1.936,2995,1.936,2996,1.936,2997,1.936,2998,3.191,2999,1.936,3000,1.936,3001,1.936,3002,3.191,3003,3.191,3004,4.723,3005,5.224,3006,1.696,3007,1.538,3008,1.936,3009,1.696,3010,1.696,3011,3.191,3012,1.936,3013,1.936,3014,1.936,3015,1.936,3016,1.936,3017,1.936,3018,1.936,3019,1.936,3020,1.936,3021,1.936,3022,4.071,3023,3.191,3024,1.936,3025,1.936,3026,1.936,3027,1.936,3028,3.191,3029,1.936,3030,1.936,3031,1.936,3032,4.723,3033,1.936,3034,1.936,3035,1.936,3036,3.191,3037,1.936,3038,1.936,3039,1.936,3040,1.936,3041,1.936,3042,1.936,3043,1.936,3044,1.936,3045,1.538,3046,1.936,3047,1.936,3048,1.936,3049,1.936,3050,3.191,3051,1.936,3052,1.936,3053,1.936,3054,1.936,3055,1.936,3056,1.936,3057,1.936,3058,1.936,3059,1.936,3060,1.936,3061,3.191,3062,3.191,3063,3.191,3064,1.936,3065,1.936,3066,3.191,3067,1.936,3068,1.936,3069,1.936,3070,1.936,3071,1.936,3072,1.936,3073,1.936,3074,1.936,3075,1.42,3076,1.936,3077,1.936,3078,1.936,3079,1.936,3080,1.936,3081,1.936,3082,1.936,3083,1.936,3084,1.936,3085,1.936,3086,1.936,3087,1.936,3088,1.696,3089,1.936,3090,1.936,3091,3.191,3092,3.191,3093,1.936,3094,1.936,3095,1.696,3096,1.936,3097,1.936]],["title/components/FormActionBarComponent.html",[178,0.135,639,0.988]],["body/components/FormActionBarComponent.html",[0,0.005,3,0.129,4,0.153,5,0.114,13,1.445,14,0.94,19,0.165,23,0.722,24,5.087,25,3.597,29,0.801,32,0.677,34,0.676,35,0.012,36,0.562,37,0.308,38,0.403,39,1.297,42,1.264,44,2.346,51,0.972,52,0.972,53,1.109,60,2.085,61,3.234,64,1.302,65,0.722,72,1.027,73,0.596,76,2.334,79,0.374,90,0.243,92,0.327,93,0.764,95,0.129,98,1.468,100,0.486,110,0.005,111,0.007,112,0.005,117,0.698,118,1.328,125,1.477,144,0.996,170,0.947,172,1.04,178,0.205,183,1.475,212,0.577,324,1.697,337,1.749,353,1.261,364,0.886,387,0.913,413,0.967,495,0.886,499,2.456,534,1.302,577,0.94,578,0.996,579,1.056,582,0.811,583,1.267,585,1.027,587,1.027,601,0.967,602,1.38,603,1.813,604,1.056,605,1.056,606,0.86,607,1.056,608,0.913,609,1.056,610,0.913,611,1.056,612,0.94,613,1.056,614,0.94,615,1.056,616,0.94,617,1.056,618,0.94,619,0.996,620,1.056,621,0.94,622,1.463,623,0.94,624,0.996,625,1.056,626,0.94,627,1.056,628,0.94,629,1.056,630,0.913,631,1.056,632,1.056,633,0.913,634,1.056,635,0.94,636,1.056,637,0.913,638,1.056,639,1.613,640,1.679,641,0.94,642,0.886,643,0.886,644,1.463,645,0.94,646,0.967,647,1.056,648,0.913,649,1.056,650,0.94,651,1.056,652,0.94,653,1.056,654,0.886,655,1.056,656,0.913,657,1.056,658,0.94,659,1.026,660,1.056,661,0.913,662,0.86,663,1.056,664,0.913,665,1.056,666,0.886,667,1.056,668,0.913,669,0.996,670,0.94,671,1.056,672,0.967,673,1.056,674,0.94,675,1.056,676,0.913,677,1.056,678,0.94,679,0.996,680,0.94,681,0.913,682,1.026,683,0.787,684,0.913,685,1.056,686,0.913,687,1.056,688,0.913,689,1.056,690,0.913,691,1.056,692,0.913,693,1.056,694,0.913,695,1.056,696,0.913,697,1.056,698,0.913,699,0.996,700,1.056,703,1.86,704,1.86,711,1.302,712,1.71,714,2.505,715,2.505,742,2.422,756,0.635,796,1.575,1027,4.889,1029,1.918,1030,5.087,1039,4.889,1041,1.342,1045,3.528,1326,1.63,1327,2.258,1328,1.63,1329,2.258,1330,2.258,1331,2.258,1332,1.63,1333,1.63,1334,2.258,1335,2.258,1336,1.63,1337,1.63,1338,1.63,1339,1.63,1340,1.63,1341,2.258,1342,2.183,1343,1.63,1344,2.258,1345,2.258,1346,1.63,1347,2.258,1348,1.63,1349,1.63,1350,1.63,1351,1.63,1352,2.797,1353,1.63,1354,1.63,1355,1.63,1356,1.63,1357,1.63,1358,1.63,1359,1.63,1360,1.63,1361,1.63,1362,1.63,1363,1.63,1364,1.63,1365,1.63,1366,1.63,1367,1.63,1368,1.63,1369,2.258,1370,1.63,1371,1.63,1372,1.63,1373,1.63,1374,1.63,1375,1.63,1376,1.63,1377,1.63,1378,1.63,1379,1.63,1380,1.63,1381,1.63,1382,1.63,1383,2.258,1384,1.63,1385,1.63,1386,1.63,1387,1.63,1388,1.63,1389,1.342,1390,1.63,1391,1.63,1392,1.63,1393,1.63,1394,1.63,1395,1.63,1396,1.63,1397,1.63,1536,2.128,2389,3.2,2758,2.759,2916,3.528,2941,2.955,3098,6.411,3099,5.92,3100,2.955,3101,4.434,3102,4.434,3103,5.609,3104,5.609,3105,6.402,3106,6.36,3107,4.889,3108,4.027,3109,4.027,3110,4.027,3111,4.027,3112,4.027,3113,3.528,3114,4.027,3115,3.528,3116,4.027,3117,4.027,3118,4.027,3119,4.027,3120,3.528,3121,4.027,3122,4.027,3123,3.528,3124,4.027,3125,4.027]],["title/components/FormSubmitBarComponent.html",[178,0.135,641,0.988]],["body/components/FormSubmitBarComponent.html",[0,0.005,2,2.287,3,0.125,4,0.148,5,0.111,8,0.719,10,2,13,1.527,14,0.911,16,1.661,19,0.16,23,0.707,24,5.003,25,3.52,29,0.787,32,0.662,35,0.012,36,0.512,37,0.32,39,1.268,42,1.237,44,2.307,51,0.961,52,0.961,53,1.181,60,0.938,61,3.165,64,1.274,65,0.505,72,1.369,73,0.577,79,0.366,90,0.207,92,0.317,93,0.741,95,0.125,98,1.333,110,0.005,111,0.007,112,0.005,117,0.683,118,1.306,125,1.457,144,0.975,170,0.808,172,1.03,174,1.764,178,0.23,212,0.559,304,2.209,324,1.661,329,2.885,337,1.712,353,1.259,364,0.859,387,1.954,413,0.938,415,3.52,423,4.672,495,0.859,500,3.165,534,1.274,577,0.911,578,0.966,579,1.024,582,0.786,583,1.265,585,1.005,587,1.005,601,0.938,602,1.351,603,1.789,604,1.024,605,1.024,606,0.834,607,1.024,608,0.884,609,1.024,610,0.884,611,1.024,612,0.911,613,1.024,614,0.911,615,1.024,616,0.911,617,1.024,618,0.911,619,0.966,620,1.024,621,0.911,622,1.432,623,0.911,624,0.966,625,1.024,626,0.911,627,1.024,628,0.911,629,1.024,630,0.884,631,1.024,632,1.024,633,0.884,634,1.024,635,0.911,636,1.024,637,0.884,638,1.024,639,0.911,640,1.652,641,1.591,642,0.859,643,1.386,644,1.432,645,0.911,646,0.938,647,1.024,648,0.884,649,1.024,650,0.911,651,1.024,652,0.911,653,1.024,654,0.859,655,1.024,656,0.884,657,1.024,658,0.911,659,0.994,660,1.024,661,0.884,662,0.834,663,1.024,664,0.884,665,1.024,666,0.859,667,1.024,668,0.884,669,0.966,670,0.911,671,1.024,672,0.938,673,1.024,674,0.911,675,1.024,676,0.884,677,1.024,678,0.911,679,0.966,680,0.911,681,0.884,682,0.994,683,0.763,684,0.884,685,1.024,686,0.884,687,1.024,688,0.884,689,1.024,690,0.884,691,1.024,692,0.884,693,1.024,694,0.884,695,1.024,696,0.884,697,1.024,698,0.884,699,0.966,700,1.024,703,1.82,704,1.82,711,1.274,712,1.687,714,2.463,715,2.463,742,2.37,756,0.616,800,2.885,810,2.287,851,2.209,923,3.33,1029,1.877,1030,5.003,1326,1.58,1327,2.209,1328,1.58,1329,2.209,1330,2.209,1331,2.209,1332,1.58,1333,1.58,1334,2.209,1335,2.209,1336,1.58,1337,1.58,1338,1.58,1339,1.58,1340,1.58,1341,2.209,1342,2.136,1343,1.58,1344,2.209,1345,2.209,1346,1.58,1347,2.209,1348,1.58,1349,1.58,1350,1.58,1351,1.58,1352,2.76,1353,1.58,1354,1.58,1355,1.58,1356,1.58,1357,1.58,1358,1.58,1359,1.58,1360,1.58,1361,1.58,1362,1.58,1363,1.58,1364,1.58,1365,1.58,1366,1.58,1367,1.58,1368,1.58,1369,2.209,1370,1.58,1371,1.58,1372,1.58,1373,1.58,1374,1.58,1375,1.58,1376,1.58,1377,1.58,1378,1.58,1379,1.58,1380,1.58,1381,1.58,1382,1.58,1383,2.209,1384,1.58,1385,1.58,1386,1.58,1387,1.58,1388,1.58,1389,1.301,1390,1.58,1391,1.58,1392,1.58,1393,1.58,1394,1.58,1395,1.58,1396,1.58,1397,1.58,1700,3.74,2328,2.885,2535,3.52,2732,4.006,3098,6.289,3099,5.807,3100,2.864,3101,4.338,3102,4.338,3103,5.517,3104,5.517,3106,6.288,3107,3.42,3126,6.819,3127,4.783,3128,4.338,3129,5.459,3130,5.459,3131,5.459,3132,4.783,3133,6.296,3134,5.459,3135,3.903,3136,4.783,3137,5.419,3138,6.819,3139,5.459,3140,5.459,3141,4.338,3142,5.459,3143,3.903,3144,3.903,3145,3.903,3146,3.903]],["title/components/FullNameComponent.html",[178,0.135,642,0.932]],["body/components/FullNameComponent.html",[0,0.004,3,0.106,4,0.126,5,0.099,8,0.609,9,1.39,11,0.429,13,0.893,14,0.772,16,1.476,19,0.136,20,0.545,21,1.975,23,0.628,29,0.718,32,0.715,34,0.964,35,0.012,36,0.665,37,0.34,38,0.575,39,1.029,42,1.099,44,1.213,51,1.05,52,1.09,53,0.84,58,1.844,60,0.795,64,1.132,65,0.819,72,0.893,73,1.103,79,0.563,90,0.256,91,1.437,92,0.269,93,0.628,95,0.184,98,0.948,110,0.004,111,0.006,112,0.004,115,1.037,116,1.433,117,0.607,118,1.191,119,2.038,121,1.856,122,1.914,123,1.234,124,1.668,125,1.351,126,1.963,127,1.963,131,1.721,137,1.007,138,1.103,139,1.213,140,1.103,141,1.007,142,1.07,143,1.175,144,1.026,146,1.617,148,2.044,149,1.617,164,1.898,170,0.49,172,1.007,176,1.548,178,0.215,185,1.387,187,1.07,189,2.176,202,2.745,212,0.474,286,1.83,324,1.476,332,2.033,334,1.476,336,1.617,337,1.521,353,1.246,364,1.264,387,0.75,413,0.795,450,3.203,469,1.777,494,2.359,495,0.728,534,1.132,577,0.772,578,0.819,579,0.868,582,0.667,583,1.255,585,0.893,587,0.893,601,0.795,602,1.2,603,1.659,604,0.868,605,0.868,606,0.707,607,0.868,608,0.75,609,0.868,610,0.75,611,0.868,612,0.772,613,0.868,614,0.772,615,0.868,616,0.772,617,0.868,618,0.772,619,0.819,620,0.868,621,0.772,622,1.273,623,0.772,624,0.819,625,0.868,626,0.772,627,0.868,628,0.772,629,0.868,630,0.75,631,0.868,632,0.868,633,0.75,634,0.868,635,0.772,636,0.868,637,0.75,638,0.868,639,0.772,640,1.506,641,0.772,642,1.641,643,1.6,644,1.273,645,0.772,646,0.795,647,0.868,648,0.75,649,0.868,650,0.772,651,0.868,652,0.772,653,0.868,654,0.728,655,0.868,656,0.75,657,0.868,658,0.772,659,0.843,660,0.868,661,0.75,662,0.707,663,0.868,664,0.75,665,0.868,666,0.728,667,0.868,668,0.75,669,0.819,670,0.772,671,0.868,672,0.795,673,0.868,674,0.772,675,0.868,676,0.75,677,0.868,678,0.772,679,0.819,680,0.772,681,0.75,682,0.843,683,0.647,684,0.75,685,0.868,686,0.75,687,0.868,688,0.75,689,0.868,690,0.75,691,0.868,692,0.75,693,0.868,694,0.75,695,0.868,696,0.75,697,0.868,698,0.75,699,0.819,700,0.868,711,1.132,712,1.421,714,2.247,715,1.295,716,2.685,717,1.138,756,0.522,788,0.921,810,2.033,861,2.14,946,2.959,1029,1.668,1055,2.185,1062,3.702,1142,3.324,1215,3.324,1309,2.959,2535,3.128,2572,2.268,2599,4.292,2714,3.324,3147,6.686,3148,6.174,3149,2.63,3150,4.64,3151,5.025,3152,4.251,3153,3.855,3154,3.855,3155,3.855,3156,3.935,3157,4.564,3158,4.564,3159,4.564,3160,5.032,3161,4.94,3162,4.214,3163,6.37,3164,6.37,3165,6.37,3166,5.032,3167,4.851,3168,3.31,3169,3.31,3170,3.31,3171,3.31,3172,3.31,3173,3.31,3174,3.31,3175,3.31,3176,3.31,3177,3.31,3178,3.31,3179,3.31,3180,4.214,3181,3.31,3182,3.31,3183,3.31,3184,3.31,3185,3.858,3186,3.855,3187,3.31,3188,3.855,3189,3.324,3190,4.251,3191,4.251,3192,4.251,3193,4.251,3194,3.56,3195,3.31,3196,3.31,3197,2.9,3198,2.63,3199,4.251,3200,2.63,3201,5.032,3202,2.63,3203,5.032,3204,2.63,3205,5.032,3206,2.429,3207,2.429,3208,2.9,3209,2.9,3210,2.9,3211,2.9,3212,2.9,3213,2.9,3214,2.9,3215,5.032,3216,5.032,3217,2.9,3218,2.9,3219,6.165,3220,7.036]],["title/interfaces/FullNameErrorMsg.html",[11,0.548,3180,3.106]],["body/interfaces/FullNameErrorMsg.html",[0,0.006,3,0.157,4,0.187,5,0.1,9,1.411,11,0.637,16,1.498,19,0.202,20,0.717,21,1.693,29,0.616,35,0.012,36,0.631,37,0.262,38,0.751,39,1.039,44,1.804,51,0.66,52,1.004,53,0.853,58,2.032,73,1.109,79,0.577,90,0.295,91,2.137,92,0.4,93,0.934,95,0.227,98,0.963,110,0.006,111,0.008,112,0.006,115,1.052,116,1.447,117,0.616,118,1.325,119,2.266,121,1.591,122,1.641,123,1.146,125,1.052,146,1.641,148,2.063,149,1.641,164,1.926,172,1.123,176,2.302,178,0.227,185,2.063,187,1.591,189,2.511,202,2.772,286,2.721,324,1.498,332,2.063,334,1.498,336,1.641,337,1.543,353,0.705,364,1.083,450,3.233,469,1.804,494,2.394,583,0.705,585,0.906,587,0.906,642,1.559,643,1.559,702,1.693,711,1.49,712,1.58,714,2.498,715,1.926,716,2.985,717,1.693,756,0.777,788,1.37,810,2.063,861,1.942,946,3.003,1055,2.217,1062,3.174,1142,3.373,1215,3.373,1309,3.003,2535,3.174,2572,3.373,2599,4.322,2714,3.373,3147,3.912,3148,3.613,3149,3.912,3150,4.685,3151,5.074,3152,4.314,3153,3.912,3154,3.912,3155,3.912,3156,3.373,3157,3.912,3158,3.912,3159,3.912,3160,4.314,3161,5.841,3162,3.613,3163,4.314,3164,4.314,3165,4.314,3166,4.314,3180,5.199,3185,3.895,3186,3.912,3188,3.912,3189,3.373,3190,4.314,3191,4.314,3192,4.314,3193,4.314,3194,3.613,3197,4.314,3198,3.912,3199,5.594,3200,3.912,3201,6.209,3202,3.912,3203,6.209,3204,3.912,3205,6.209,3206,3.613,3207,3.613,3208,4.314,3209,4.314,3210,4.314,3211,4.314,3212,4.314,3213,4.314,3214,4.314,3215,6.209,3216,6.209,3217,4.314,3218,4.314]],["title/interfaces/GeoAddressResult.html",[11,0.548,718,2.34]],["body/interfaces/GeoAddressResult.html",[0,0.007,3,0.165,4,0.196,5,0.105,11,0.668,12,1.832,19,0.212,20,0.739,26,2.628,35,0.012,36,0.42,37,0.324,53,1.14,79,0.586,81,3.537,90,0.306,92,0.42,95,0.211,96,3.149,98,1.009,100,0.952,110,0.007,111,0.009,112,0.007,115,1.103,170,1.129,198,1.419,211,2.414,225,3.638,227,3.833,229,2.854,230,2.325,231,3.149,240,3.816,242,4.672,249,4.83,258,3.479,259,3.149,260,4.244,264,3.328,282,2.854,283,2.414,286,2.854,290,3.149,316,2.575,329,2.728,488,2.241,494,3.201,497,4.033,498,3.878,499,3.149,500,2.993,519,2.241,702,1.775,709,4.489,718,4.006,720,3.334,723,3.524,743,2.728,751,1.582,756,1.038,760,4.892,833,3.328,851,2.089,1106,3.83,1170,3.149,1205,3.149,1206,3.149,1487,3.537,1507,3.537,1524,3.788,1538,3.328,2312,2.993,2407,3.788,2583,3.537,2734,2.615,2758,3.537,3221,4.103,3222,6.908,3223,4.103,3224,3.149,3225,4.523,3226,4.523,3227,6.35,3228,4.523,3229,4.523,3230,4.523,3231,4.523,3232,4.523,3233,4.523,3234,4.523,3235,4.523,3236,4.523,3237,4.523,3238,4.523,3239,4.523,3240,4.523,3241,4.523,3242,4.523,3243,4.523,3244,4.523,3245,5.768,3246,4.523,3247,4.523,3248,4.523,3249,4.523,3250,4.523,3251,4.523,3252,4.523,3253,4.523,3254,4.523,3255,4.523,3256,5.768,3257,4.523,3258,4.523,3259,4.523,3260,4.523,3261,4.523,3262,4.523]],["title/components/GeocoderInputComponent.html",[178,0.135,645,0.988]],["body/components/GeocoderInputComponent.html",[0,0.004,3,0.088,4,0.104,5,0.086,8,0.505,13,0.776,14,0.64,16,0.835,19,0.113,20,0.473,22,3.349,23,0.546,29,0.343,32,0.712,34,1.279,35,0.012,36,0.639,37,0.337,38,0.773,39,1.24,42,0.955,45,1.039,51,1.02,52,1.044,53,1.3,56,1.88,59,2.717,60,0.659,64,0.983,65,0.986,67,2.348,71,2.013,72,0.776,73,1.191,79,0.528,90,0.28,92,0.223,93,0.521,95,0.088,98,0.536,100,0.695,105,0.974,110,0.007,111,0.006,112,0.01,115,0.9,116,1.304,117,0.527,118,1.064,119,1.821,121,1.658,122,1.71,123,1.261,124,1.449,125,1.23,126,2.076,127,2.076,131,1.821,133,1.834,137,0.835,138,0.914,139,1.005,140,0.914,141,0.835,142,0.887,143,0.974,144,0.916,146,0.914,148,2.119,149,0.914,152,2.43,155,1.898,156,1.649,159,1.321,164,1.073,170,0.852,172,0.976,178,0.164,183,1.005,185,1.766,187,0.887,188,1.769,189,1.362,198,1.076,212,0.393,227,3.188,229,1.517,252,3.512,258,3.283,269,1.191,279,1.674,283,1.283,284,2.404,285,2.404,286,1.517,301,2.887,308,0.974,334,1.561,353,1.229,357,0.763,364,0.604,387,0.622,413,0.659,418,2.692,427,2.571,451,1.898,469,1.544,482,3.765,495,0.604,497,1.334,498,1.283,502,2.013,509,3.308,515,1.59,523,1.769,524,2.404,528,3.092,534,0.983,577,0.64,578,0.679,579,0.72,582,0.553,583,1.241,585,0.776,587,0.776,599,1.334,600,1.283,601,0.659,602,1.043,603,1.51,604,0.72,605,0.72,606,0.586,607,0.72,608,0.622,609,0.72,610,0.622,611,0.72,612,0.64,613,0.72,614,0.64,615,0.72,616,0.64,617,0.72,618,0.64,619,0.679,620,0.72,621,0.64,622,1.105,623,0.64,624,0.679,625,0.72,626,0.64,627,0.72,628,0.64,629,0.72,630,0.622,631,0.72,632,0.72,633,0.622,634,0.72,635,0.64,636,0.72,637,0.622,638,0.72,639,0.64,640,1.346,641,0.64,642,0.604,643,0.604,644,1.105,645,1.343,646,1.83,647,0.72,648,0.622,649,0.72,650,0.64,651,0.72,652,0.64,653,0.72,654,0.604,655,0.72,656,0.622,657,0.72,658,0.64,659,0.699,660,0.72,661,0.622,662,0.586,663,0.72,664,0.622,665,0.72,666,0.604,667,0.72,668,0.622,669,0.679,670,0.64,671,0.72,672,0.659,673,0.72,674,0.64,675,0.72,676,0.622,677,0.72,678,0.64,679,0.679,680,1.197,681,0.622,682,0.699,683,0.536,684,0.622,685,0.72,686,0.622,687,0.72,688,0.622,689,0.72,690,0.622,691,0.72,692,0.622,693,0.72,694,0.622,695,0.72,696,0.622,697,0.72,698,0.622,699,0.679,700,0.72,711,1.197,712,1.269,713,2.836,717,0.943,718,2.329,719,2.013,720,4.123,721,2.013,723,2.495,726,1.769,728,2.571,730,2.013,738,1.334,751,0.659,753,2.351,755,4.558,756,1.14,768,2.887,788,0.763,814,1.674,830,2.329,837,1.764,851,1.706,856,1.517,861,2.143,881,3.512,884,3.182,894,1.898,897,3.092,901,2.013,902,2.013,982,3.308,1019,2.329,1029,1.449,1041,1.71,1106,1.45,1109,2.717,1235,2.696,1238,1.334,1260,1.334,1264,1.191,1273,2.227,1275,3.601,1294,2.717,1536,1.45,1538,2.717,2291,4.224,2296,2.013,2394,2.18,2397,2.013,2416,4.077,2435,3.092,2514,2.443,2524,3.349,2566,2.404,2572,3.944,2584,2.887,2643,4.077,2655,3.765,2683,2.404,2685,2.404,2729,1.45,2734,1.39,2754,2.013,2837,2.404,3088,3.692,3127,4.495,3198,2.18,3224,4.298,3263,7.35,3264,6.666,3265,2.404,3266,4.214,3267,5.13,3268,4.214,3269,4.214,3270,5.13,3271,5.13,3272,5.13,3273,5.13,3274,5.13,3275,6.211,3276,5.13,3277,4.214,3278,4.214,3279,4.214,3280,4.214,3281,4.214,3282,4.214,3283,2.744,3284,2.744,3285,2.744,3286,2.744,3287,2.744,3288,2.744,3289,2.744,3290,4.214,3291,2.744,3292,2.744,3293,4.214,3294,2.744,3295,4.214,3296,2.744,3297,4.214,3298,2.744,3299,4.214,3300,5.756,3301,2.744,3302,2.744,3303,2.744,3304,4.214,3305,2.744,3306,2.744,3307,2.744,3308,2.744,3309,2.744,3310,2.744,3311,2.744,3312,2.744,3313,4.214,3314,6.211,3315,2.744,3316,4.214,3317,2.744,3318,4.214,3319,4.214,3320,2.744,3321,5.044,3322,4.214,3323,2.744,3324,2.744,3325,2.744,3326,2.404,3327,2.744,3328,2.744,3329,2.744,3330,2.744,3331,2.744,3332,2.744,3333,2.744,3334,2.744,3335,2.744,3336,4.495,3337,2.744,3338,4.214,3339,4.214,3340,5.13,3341,5.13,3342,2.744,3343,4.214,3344,2.744,3345,2.744,3346,2.744,3347,2.744,3348,2.404,3349,2.744,3350,2.744,3351,2.744,3352,2.744,3353,2.744,3354,2.744,3355,2.744,3356,2.744,3357,2.744,3358,2.18,3359,2.744,3360,2.744,3361,2.744,3362,2.744,3363,2.404,3364,2.744,3365,2.18,3366,2.744,3367,2.744,3368,4.214,3369,2.18,3370,2.744,3371,2.744,3372,2.744,3373,2.744,3374,2.744,3375,5.756,3376,4.214]],["title/injectables/GeocoderService.html",[316,1.656,3224,2.582]],["body/injectables/GeocoderService.html",[0,0.006,3,0.136,4,0.162,5,0.087,8,1.067,10,1.559,11,0.551,12,2.627,19,0.175,20,0.651,23,0.853,26,2.912,29,0.532,32,0.713,34,1.382,35,0.012,36,0.655,37,0.343,38,0.797,39,0.693,51,0.948,52,0.948,53,1.141,65,1.03,79,0.552,80,4.252,81,2.916,88,3.44,89,2.352,90,0.29,92,0.346,95,0.185,96,2.596,98,0.832,100,0.894,110,0.006,111,0.008,112,0.006,115,1.238,138,2.605,170,1.193,198,1.354,211,1.99,217,2.916,225,4.508,227,3.599,229,3.642,230,1.916,231,4.515,232,4.605,233,4.836,234,4.847,235,4.248,236,4.605,239,3.382,240,4.101,242,4.924,244,3.971,245,3.123,246,3.382,248,3.382,249,5.191,251,5.237,252,3.535,253,4.252,254,1.611,255,2.596,256,3.382,257,3.123,258,4.262,259,4.02,260,4.924,262,3.123,263,3.382,264,4.248,265,2.916,266,2.596,267,3.382,268,2.916,269,1.848,270,3.382,271,3.382,272,3.382,273,3.971,275,3.382,282,2.352,283,1.99,286,2.352,290,2.596,316,2.267,318,2.467,329,2.249,488,1.848,494,2.069,497,3.44,498,3.308,499,2.596,500,3.359,509,3.736,519,2.516,709,4.13,718,3.642,720,3.337,723,3.204,743,3.063,751,1.583,756,1.039,760,4.427,833,2.744,851,2.345,1106,3.912,1170,3.535,1205,2.596,1206,2.596,1487,2.916,1507,2.916,1524,3.123,1538,2.744,1622,3.729,1623,3.729,1624,3.729,1625,3.729,1626,3.729,1628,3.729,1629,3.729,2312,2.467,2407,4.252,2583,2.916,2734,2.155,2758,2.916,3221,3.382,3222,5.078,3223,3.382,3224,3.535,3225,5.774,3226,5.078,3227,6.847,3228,5.078,3229,3.729,3230,5.078,3231,3.729,3232,3.729,3233,3.729,3234,3.729,3235,3.729,3236,3.729,3237,3.729,3238,3.729,3239,3.729,3240,3.729,3241,3.729,3242,3.729,3243,3.729,3244,5.078,3245,5.774,3246,5.078,3247,5.078,3248,5.078,3249,3.729,3250,3.729,3251,3.729,3252,3.729,3253,3.729,3254,3.729,3255,3.729,3256,5.078,3257,3.729,3258,3.729,3259,3.729,3260,3.729,3261,3.729,3262,3.729,3377,5.795,3378,5.795,3379,4.256,3380,4.256,3381,4.256,3382,4.256,3383,4.256]],["title/components/HeaderComponent.html",[178,0.135,648,0.959]],["body/components/HeaderComponent.html",[0,0.005,3,0.134,4,0.159,5,0.117,8,0.772,13,1.056,14,0.978,17,2.789,19,0.172,20,0.644,23,0.743,29,0.524,30,2.872,31,4.637,32,0.691,34,0.963,35,0.012,36,0.598,37,0.312,38,0.575,39,0.934,42,1.3,51,0.942,52,0.942,60,1.007,64,1.338,65,0.91,72,1.056,73,0.849,79,0.555,87,3.499,88,2.038,90,0.248,92,0.341,94,2.123,95,0.134,100,0.789,110,0.005,111,0.007,112,0.005,117,0.717,118,1.357,123,0.999,125,1.502,144,1.024,170,0.62,172,0.974,178,0.209,212,0.6,286,2.317,304,1.696,353,1.263,364,0.922,387,0.95,396,5.109,398,5.159,399,5.025,400,5.025,413,1.007,448,2.557,475,2.244,477,3.325,495,0.922,534,1.774,577,0.978,578,1.037,579,1.099,582,0.844,583,1.269,585,1.056,587,1.056,601,1.007,602,1.419,603,1.844,604,1.099,605,1.099,606,0.896,607,1.099,608,0.95,609,1.099,610,0.95,611,1.099,612,0.978,613,1.099,614,0.978,615,1.099,616,0.978,617,1.099,618,0.978,619,1.037,620,1.099,621,0.978,622,1.504,623,0.978,624,1.037,625,1.099,626,0.978,627,1.099,628,0.978,629,1.099,630,0.95,631,1.099,632,1.099,633,0.95,634,1.099,635,0.978,636,1.099,637,0.95,638,1.099,639,0.978,640,1.715,641,0.978,642,0.922,643,0.922,644,1.504,645,0.978,646,1.007,647,1.099,648,1.723,649,1.099,650,0.978,651,1.099,652,0.978,653,1.099,654,0.922,655,1.099,656,0.95,657,1.099,658,0.978,659,1.068,660,1.099,661,0.95,662,0.896,663,1.099,664,0.95,665,1.099,666,0.922,667,1.099,668,0.95,669,1.037,670,0.978,671,1.099,672,1.007,673,1.099,674,0.978,675,1.099,676,0.95,677,1.099,678,0.978,679,1.037,680,0.978,681,0.95,682,1.068,683,0.819,684,0.95,685,1.099,686,0.95,687,1.099,688,0.95,689,1.099,690,0.95,691,1.099,692,0.95,693,1.099,694,0.95,695,1.099,696,0.95,697,1.099,698,0.95,699,1.037,700,1.099,782,1.82,861,2.312,1011,3.698,1019,2.317,1113,2.872,1171,1.64,1243,2.557,1310,1.82,1550,4.209,1574,2.702,2299,4.558,2336,4.558,2388,2.702,2584,2.872,3369,4.558,3384,3.673,3385,5.735,3386,5.735,3387,6.16,3388,4.209,3389,4.558,3390,3.93,3391,7.03,3392,7.03,3393,5.735,3394,5.735,3395,5.735,3396,5.735,3397,5.735,3398,6.538,3399,6.538,3400,7.03,3401,5.735,3402,7.03,3403,6.538,3404,7.362,3405,6.538,3406,5.735,3407,5.735,3408,4.191,3409,4.191,3410,4.191,3411,4.191,3412,4.191,3413,5.735,3414,4.191,3415,4.191,3416,4.191,3417,5.025,3418,3.673,3419,3.673,3420,3.673,3421,4.191,3422,4.191,3423,4.191,3424,4.191,3425,4.191,3426,4.191,3427,4.191,3428,5.735,3429,4.191,3430,4.191,3431,4.191,3432,4.191,3433,4.191,3434,4.191,3435,4.191]],["title/interfaces/IRadioItems.html",[11,0.548,3436,3.106]],["body/interfaces/IRadioItems.html",[0,0.007,3,0.164,4,0.195,5,0.104,8,0.943,11,0.663,13,1.329,14,1.195,18,3.124,19,0.21,20,0.736,29,0.641,35,0.012,37,0.313,38,0.656,51,0.877,52,1.148,53,0.887,58,1.62,73,1.068,79,0.54,89,2.831,90,0.289,92,0.416,93,0.972,95,0.231,98,1.001,100,0.618,110,0.007,111,0.009,112,0.007,113,3.185,115,1.094,117,0.641,118,1.359,120,2.707,123,0.783,125,1.094,132,2.651,133,2.505,146,1.707,148,2.117,149,1.707,152,2.562,156,2.562,164,2.004,171,2.594,172,1.114,174,2.117,178,0.209,187,1.655,189,2.117,191,1.606,194,4.206,334,1.558,353,0.733,357,1.822,441,1.933,583,0.733,585,0.943,587,0.943,666,1.589,702,1.761,711,1.528,712,1.786,751,1.231,753,2.733,756,0.808,780,3.062,788,1.425,796,3.077,856,3.62,1007,4.487,1010,4.806,1056,5.738,1082,4.07,1235,2.843,1264,2.224,1278,2.49,1306,3.317,1398,2.831,1399,2.707,1400,2.831,1494,4.222,2646,4.07,3388,4.806,3436,5.771,3437,4.07,3438,6.742,3439,5.739,3440,5.205,3441,5.739,3442,6.326,3443,5.205,3444,5.739,3445,6.668,3446,5.739,3447,6.668,3448,5.739,3449,5.739,3450,6.326,3451,4.488,3452,4.488,3453,4.488,3454,6.668,3455,4.07,3456,4.488,3457,4.488]],["title/interfaces/ISpaEnvResponse.html",[11,0.548,3458,3.364]],["body/interfaces/ISpaEnvResponse.html",[0,0.006,3,0.187,4,0.13,5,0.07,8,0.63,9,0.98,10,1.253,11,0.443,13,1.077,19,0.14,20,0.558,25,3.773,26,1.656,35,0.012,37,0.302,39,1.046,44,1.821,51,0.458,53,1.233,59,2.205,63,2.997,67,1.709,73,0.95,79,0.578,85,1.983,88,1.663,90,0.286,91,1.485,92,0.278,93,0.649,95,0.187,96,2.087,98,1.391,100,0.707,110,0.004,111,0.006,112,0.004,115,0.731,117,0.622,118,1.031,119,1.763,121,1.105,122,1.14,123,1.087,125,1.062,142,1.606,146,1.14,148,1.606,149,1.14,158,1.485,164,1.338,170,1.153,172,1.079,174,2.205,178,0.205,185,1.433,187,1.105,189,1.606,198,0.592,217,3.405,225,2.747,227,3.123,229,1.891,230,1.54,231,2.087,240,2.881,242,4.141,252,2.087,254,2.431,258,3.093,259,2.087,260,3.203,266,3.918,268,2.344,273,4.401,282,1.891,283,1.599,304,1.384,308,1.763,310,2.087,311,2.51,324,1.512,330,6.341,332,2.082,334,1.78,336,1.14,337,1.558,353,0.49,365,2.997,387,1.456,390,3.031,391,1.891,394,1.983,396,2.205,405,2.344,408,5.104,409,5.128,413,1.808,414,5.155,415,2.205,423,2.344,452,1.732,466,2.51,467,1.983,475,2.944,510,1.808,522,1.808,528,3.646,533,3.031,534,0.798,559,1.54,583,0.49,585,0.63,587,0.63,591,2.087,599,1.663,600,1.599,621,1.499,702,1.176,711,1.499,712,1.688,714,2.29,715,1.944,716,2.324,733,2.344,742,1.485,751,1.194,756,1.123,764,2.881,773,3.203,782,2.788,796,1.338,837,1.176,845,1.253,861,1.512,894,2.892,959,4.294,1041,1.14,1055,1.54,1106,3.606,1107,2.51,1109,3.203,1155,2.205,1186,3.646,1215,2.344,1432,2.087,1487,2.344,1497,3.203,1507,2.344,1514,2.344,1515,2.747,1525,2.718,1538,2.205,1564,3.392,1565,1.983,1566,3.949,1570,2.718,1573,3.949,1574,2.205,1575,2.718,1576,2.51,1577,2.718,1579,2.718,1580,3.949,1581,2.718,1583,2.718,1675,4.713,1809,4.354,2271,3.203,2303,2.747,2312,1.983,2326,2.718,2388,3.203,2571,2.997,2577,3.405,2583,2.344,2620,2.718,2621,2.997,2622,3.031,2653,2.997,2697,2.997,2705,2.997,2716,2.718,2718,4.354,2727,4.354,2780,4.354,2781,3.646,2830,2.997,2890,2.997,2904,2.997,2974,4.141,3075,3.646,3156,2.344,3390,3.405,3458,4.651,3459,2.997,3460,2.718,3461,2.51,3462,7.117,3463,7.117,3464,4.969,3465,6.822,3466,6.423,3467,6.423,3468,6.423,3469,6.423,3470,6.423,3471,6.423,3472,6.423,3473,3.42,3474,3.42,3475,3.42,3476,2.997,3477,3.42,3478,3.42,3479,3.42,3480,3.42,3481,3.42,3482,2.997,3483,3.42,3484,4.969,3485,4.969,3486,4.354,3487,6.423,3488,6.423,3489,4.969,3490,3.949,3491,4.969,3492,4.969,3493,5.978,3494,5.104,3495,4.969,3496,4.969,3497,4.354,3498,4.354,3499,3.949,3500,4.354,3501,4.969,3502,4.969,3503,4.969,3504,6.236,3505,4.969,3506,4.969,3507,4.969,3508,4.969,3509,4.969,3510,4.969,3511,4.969,3512,4.969,3513,4.969,3514,4.969,3515,4.969,3516,4.969,3517,4.969,3518,4.969,3519,4.969,3520,4.354,3521,3.42,3522,3.42,3523,3.42,3524,2.997,3525,3.42,3526,2.997,3527,2.718,3528,3.42,3529,2.718,3530,3.42,3531,4.969,3532,2.718,3533,3.42,3534,3.42,3535,3.42,3536,3.42,3537,3.42,3538,4.969,3539,3.42,3540,2.997,3541,2.997,3542,3.42,3543,2.997,3544,3.42,3545,2.997,3546,3.42,3547,3.949,3548,2.997,3549,3.42,3550,3.42,3551,3.42,3552,3.42,3553,3.42,3554,3.42,3555,3.42,3556,3.42,3557,3.42,3558,3.42,3559,3.42,3560,3.42,3561,3.42,3562,2.718,3563,3.42,3564,3.42,3565,2.997,3566,3.42,3567,3.42,3568,3.42,3569,3.42,3570,3.42,3571,3.42,3572,3.42,3573,4.969,3574,3.42,3575,3.42,3576,3.42,3577,3.42,3578,3.42,3579,3.42,3580,3.42,3581,2.51,3582,3.42,3583,3.42,3584,3.42,3585,3.42,3586,3.42,3587,3.42,3588,3.42,3589,3.42,3590,3.42,3591,3.42,3592,3.42,3593,3.42,3594,4.969,3595,4.969,3596,3.42,3597,3.42,3598,3.42,3599,3.42,3600,3.42,3601,4.969,3602,3.42,3603,3.42,3604,3.42,3605,3.42]],["title/interfaces/Maxlengths.html",[11,0.548,731,2.729]],["body/interfaces/Maxlengths.html",[0,0.004,3,0.099,4,0.117,5,0.063,9,1.319,10,1.13,11,0.713,16,1.676,19,0.127,20,0.517,21,1.06,29,0.386,35,0.012,36,0.251,37,0.269,38,0.762,39,1.309,44,2.019,51,0.617,52,1.058,53,1.381,55,1.562,67,1.06,73,0.815,79,0.58,84,1.5,90,0.27,92,0.251,93,0.585,95,0.195,98,1.195,100,0.918,101,1.788,110,0.004,111,0.006,112,0.004,115,0.659,116,1.043,117,0.386,118,0.955,119,1.634,121,0.997,122,1.028,125,0.659,131,1.094,141,0.938,146,1.028,148,1.488,149,1.028,159,0.967,160,1.389,162,1.292,172,1.114,178,0.195,179,3.155,180,2.545,185,1.929,187,0.997,189,0.997,190,3.155,192,3.361,194,1.705,196,2.113,198,1.188,202,1.339,205,2.838,211,2.153,254,1.167,295,1.389,299,1.705,304,2.23,308,1.955,323,1.705,324,1.401,336,1.028,337,1.444,353,0.442,357,0.858,377,2.263,391,1.705,418,1.442,427,2.809,441,1.359,451,1.389,452,1.562,469,1.13,479,1.788,488,1.339,493,1.562,497,4.005,498,3.694,509,3.552,510,1.63,515,1.788,519,1.339,583,0.442,585,0.568,587,0.568,606,0.984,643,0.679,646,1.106,662,0.984,701,3.775,702,1.06,703,1.535,704,1.535,705,2.263,706,3.379,707,3.659,708,3.659,709,4.018,710,4.814,711,1.074,712,1.363,713,2.545,714,2.156,715,1.802,716,2.153,717,1.06,718,2.545,719,2.263,720,4.191,721,2.263,722,3.552,723,3.179,724,2.113,725,3.155,726,1.988,727,3.727,728,3.361,729,2.969,730,2.263,731,4.215,732,4.48,733,2.113,734,2.263,735,2.451,736,2.451,737,2.451,738,1.5,739,1.788,740,1.881,741,1.63,742,1.339,743,2.433,744,3.659,745,2.809,746,2.113,747,2.451,748,2.451,749,2.263,750,2.113,751,1.648,752,2.451,753,2.475,754,5.647,755,2.263,756,0.487,757,2.113,758,2.263,759,2.263,760,2.669,761,2.451,762,2.263,763,2.451,764,3.976,765,2.263,766,2.451,767,2.263,768,2.113,769,3.659,770,2.451,771,2.451,772,3.659,773,2.969,774,2.451,775,2.451,776,2.451,777,2.451,778,2.451,779,2.23,780,2.576,781,1.988,782,2.838,783,2.451,784,2.451,785,2.451,786,4.187,787,1.788,788,0.858,789,2.263,790,2.451,791,2.451,792,3.659,793,6.041,794,3.659,795,2.969,796,2.156,797,3.659,798,5.934,799,4.379,800,1.63,801,2.263,802,1.988,803,2.451,804,2.451,805,2.451,806,2.451,807,2.451,808,2.451,809,4.856,810,1.292,811,2.451,812,2.451,813,3.659,814,2.809,815,1.63,816,3.659,817,5.196,818,5.45,819,5.196,820,2.451,821,2.451,822,3.659,823,2.451,824,3.659,825,2.809,826,2.451,827,2.263,828,2.451,829,2.451,830,1.705,831,2.451,832,2.451,833,3.552,834,2.451,835,2.451,836,2.451,837,2.443,838,3.379,839,2.969,840,3.659,841,3.659,842,3.659,843,3.659,844,2.451,845,1.13,846,2.451,847,2.451,848,3.775,849,2.113,850,2.451,851,1.248,852,2.451,853,2.451,854,2.451,855,2.113,856,1.705,857,2.451,858,2.451,859,2.451,860,2.113,861,2.222,862,2.451,863,4.856,864,2.451,865,2.451,866,2.451,867,2.451,868,2.451,869,4.043,870,2.113,871,2.451,872,4.187,873,3.659,874,3.155,875,3.659,876,4.379,877,2.113,878,2.451,879,2.451,880,2.113,881,1.881,882,1.881,883,2.113,884,1.705,885,2.451,886,2.451,887,2.451,888,3.379,889,2.451,890,2.451,891,2.263,892,2.451,893,2.263,894,2.073,895,2.451,896,2.451,897,2.263,898,2.451,899,1.881,900,2.451,901,2.263,902,2.263,903,2.451,904,2.451,905,2.451,906,2.451,907,2.451,908,2.451,909,2.451,910,2.451,911,2.451,912,2.451,913,2.451,914,2.451,915,2.451,916,2.113,917,2.451,918,3.659,919,2.451,920,2.451]],["title/classes/MoHCommonLibraryError.html",[0,0.006,3606,3.106]],["body/classes/MoHCommonLibraryError.html",[0,0.009,2,2.752,3,0.21,4,0.25,5,0.134,29,0.822,32,0.558,34,1.103,35,0.011,36,0.534,37,0.27,38,0.658,79,0.54,89,3.63,95,0.21,110,0.009,111,0.01,112,0.009,115,1.629,170,1.191,1515,3.63,1565,3.807,3606,5.593,3607,6.679,3608,5.755,3609,7.622,3610,6.568,3611,6.568,3612,6.568,3613,7.622,3614,7.622,3615,6.568,3616,6.568,3617,6.568]],["title/components/NameComponent.html",[178,0.135,364,0.932]],["body/components/NameComponent.html",[0,0.005,3,0.115,4,0.137,5,0.105,8,0.664,9,1.479,13,0.95,14,0.841,16,1.57,18,3.148,19,0.148,20,0.58,21,2.072,23,0.668,29,0.645,32,0.721,34,1.282,35,0.012,36,0.67,37,0.344,38,0.79,39,1.134,42,1.169,45,1.364,51,1.022,52,1.138,53,0.894,58,1.628,60,0.866,64,1.204,65,0.966,72,0.95,73,1.18,79,0.546,90,0.229,92,0.293,93,0.684,95,0.115,100,0.623,110,0.005,111,0.007,112,0.005,115,1.103,116,1.491,117,0.645,119,2.139,121,1.948,122,2.009,123,1.166,124,1.774,126,2.439,127,2.439,129,2.727,131,2.139,133,2.355,137,1.096,138,1.201,139,1.321,140,1.201,141,1.096,142,1.165,143,1.279,144,1.076,146,1.201,148,2.342,149,1.201,152,2.725,155,2.324,156,2.019,159,1.618,160,2.324,162,2.162,164,1.41,170,0.533,172,1.004,178,0.193,183,1.321,185,2.162,187,1.668,188,2.324,189,1.668,192,2.199,212,0.516,237,2.24,332,2.162,350,2.991,353,1.253,357,1.436,364,1.448,387,0.817,413,0.866,441,1.064,477,2.991,495,0.793,514,3.185,534,1.204,577,0.841,578,0.892,579,0.945,582,0.726,583,1.26,585,0.95,587,0.95,601,0.866,602,1.277,603,1.726,604,0.945,605,0.945,606,0.77,607,0.945,608,0.817,609,0.945,610,0.817,611,0.945,612,0.841,613,0.945,614,0.841,615,0.945,616,0.841,617,0.945,618,0.841,619,0.892,620,0.945,621,0.841,622,1.354,623,0.841,624,0.892,625,0.945,626,0.841,627,0.945,628,0.841,629,0.945,630,0.817,631,0.945,632,0.945,633,0.817,634,0.945,635,0.841,636,0.945,637,0.817,638,0.945,639,0.841,640,1.581,641,0.841,642,0.793,643,0.793,644,1.354,645,0.841,646,0.866,647,0.945,648,0.817,649,0.945,650,0.841,651,0.945,652,0.841,653,0.945,654,0.793,655,0.945,656,0.817,657,0.945,658,0.841,659,0.918,660,0.945,661,0.817,662,0.77,663,0.945,664,0.817,665,0.945,666,0.793,667,0.945,668,0.817,669,0.892,670,0.841,671,0.945,672,0.866,673,0.945,674,0.841,675,0.945,676,0.817,677,0.945,678,0.841,679,0.892,680,0.841,681,0.817,682,0.918,683,0.705,684,0.817,685,0.945,686,0.817,687,0.945,688,0.817,689,0.945,690,0.817,691,0.945,692,0.817,693,0.945,694,0.817,695,0.945,696,0.817,697,0.945,698,0.817,699,0.892,700,0.945,711,1.406,712,1.846,717,1.239,751,0.866,753,2.491,756,0.814,788,1.003,810,2.162,1029,1.774,1041,2.009,1171,2.019,1235,3.023,1238,1.753,1242,3.786,1260,1.753,1264,1.565,1274,3.332,1278,2.931,1282,2.613,1296,2.199,1310,2.24,1312,3.327,1313,2.857,1314,3.536,1315,3.536,1316,3.536,1323,1.992,1325,1.992,1401,1.992,1549,3.786,2270,3.494,2272,4.13,2274,4.79,2275,2.469,2510,3.786,2513,3.786,2514,2.991,2515,4.521,2524,4.101,2548,3.158,2734,1.825,3154,4.101,3155,4.101,3188,4.101,3189,4.509,3618,3.158,3619,6.027,3620,6.027,3621,5.16,3622,3.604,3623,3.604,3624,5.16,3625,3.604,3626,3.604,3627,5.16,3628,3.604,3629,3.604,3630,3.158,3631,3.604,3632,3.604,3633,3.604,3634,3.604,3635,3.604,3636,3.604,3637,3.604,3638,3.604,3639,3.604,3640,3.604,3641,3.604,3642,3.604,3643,6.027,3644,3.604,3645,3.604,3646,5.16]],["title/components/PageFrameworkComponent.html",[178,0.135,650,0.988]],["body/components/PageFrameworkComponent.html",[0,0.006,3,0.139,4,0.165,5,0.12,8,0.802,13,1.084,14,1.556,19,0.179,23,0.762,32,0.5,35,0.012,36,0.542,37,0.179,42,1.334,51,0.999,52,0.583,60,1.046,64,1.373,65,0.564,72,1.533,73,0.644,90,0.165,92,0.354,95,0.188,110,0.006,111,0.008,112,0.006,117,0.736,118,1.383,125,1.526,144,1.051,170,0.871,172,0.815,174,2.308,178,0.213,212,0.623,334,1.79,353,1.266,364,0.958,387,0.987,413,1.046,423,4.033,467,4.14,469,2.156,495,0.958,534,1.667,577,1.016,578,1.077,579,1.142,582,0.877,583,1.271,585,1.084,587,1.084,601,1.046,602,1.456,603,1.873,604,1.142,605,1.142,606,0.93,607,1.142,608,0.987,609,1.142,610,0.987,611,1.142,612,1.016,613,1.142,614,1.016,615,1.142,616,1.016,617,1.142,618,1.016,619,1.077,620,1.142,621,1.016,622,1.544,623,1.016,624,1.077,625,1.142,626,1.016,627,1.142,628,1.016,629,1.142,630,0.987,631,1.142,632,1.142,633,0.987,634,1.142,635,1.016,636,1.142,637,0.987,638,1.142,639,1.016,640,1.749,641,1.016,642,0.958,643,0.958,644,1.544,645,1.016,646,1.046,647,1.142,648,0.987,649,1.142,650,1.667,651,1.142,652,1.016,653,1.142,654,0.958,655,1.142,656,0.987,657,1.142,658,1.016,659,1.109,660,1.142,661,0.987,662,0.93,663,1.142,664,0.987,665,1.142,666,0.958,667,1.142,668,0.987,669,1.077,670,1.016,671,1.142,672,1.046,673,1.142,674,1.016,675,1.142,676,0.987,677,1.142,678,1.016,679,1.077,680,1.016,681,0.987,682,1.109,683,0.851,684,0.987,685,1.142,686,0.987,687,1.142,688,0.987,689,1.142,690,0.987,691,1.142,692,0.987,693,1.142,694,0.987,695,1.142,696,0.987,697,1.142,698,0.987,699,1.077,700,1.142,703,1.962,704,1.962,810,2.466,1050,5.157,1175,4.319,1326,1.762,1327,2.382,1328,1.762,1329,2.382,1330,2.382,1331,2.382,1332,1.762,1333,1.762,1334,2.382,1335,2.382,1336,1.762,1337,1.762,1338,1.762,1339,1.762,1340,1.762,1341,2.382,1342,2.303,1343,1.762,1344,2.382,1345,2.382,1346,1.762,1347,2.382,1348,1.762,1349,1.762,1350,1.762,1351,1.762,1352,2.891,1353,1.762,1354,1.762,1355,1.762,1356,1.762,1357,1.762,1358,1.762,1359,1.762,1360,1.762,1361,1.762,1362,1.762,1363,1.762,1364,1.762,1365,1.762,1366,1.762,1367,1.762,1368,1.762,1369,2.382,1370,1.762,1371,1.762,1372,1.762,1373,1.762,1374,1.762,1375,1.762,1376,1.762,1377,1.762,1378,1.762,1379,1.762,1380,1.762,1381,1.762,1382,1.762,1383,2.382,1384,1.762,1385,1.762,1386,1.762,1387,1.762,1388,1.762,1389,1.451,1390,1.762,1391,1.762,1392,1.762,1393,1.762,1394,1.762,1395,1.762,1396,1.762,1397,1.762,1551,4.319,1567,4.319,1576,4.319,2302,3.59,2576,3.195,2626,4.319,2627,4.319,3137,5.929,3141,5.676,3150,4.319,3388,4.319,3498,5.157,3647,5.299,3648,5.299,3649,3.815,3650,5.157,3651,5.157,3652,5.886,3653,5.886,3654,5.886,3655,5.157,3656,4.319,3657,7.142,3658,5.157,3659,5.886,3660,5.886,3661,4.677,3662,4.354,3663,4.354]],["title/interfaces/PageListInterface.html",[11,0.548,1191,3.106]],["body/interfaces/PageListInterface.html",[0,0.009,3,0.153,4,0.182,5,0.098,8,0.882,9,1.373,11,0.905,12,1.7,16,1.457,17,2.329,19,0.305,20,0.704,26,2.331,29,0.599,31,4.265,32,0.407,35,0.012,37,0.258,39,1.344,52,0.642,53,1.211,65,0.62,72,1.418,73,0.928,79,0.559,84,3.842,88,3.842,90,0.266,92,0.389,94,2.426,95,0.201,98,1.45,100,0.986,105,2.481,110,0.006,111,0.008,112,0.006,117,0.599,123,1.248,174,2.027,193,3.088,198,1.285,205,2.723,230,2.157,316,2.454,317,4.043,319,3.282,321,3.826,322,2.777,332,2.628,333,3.826,339,3.806,340,3.806,341,3.806,342,3.806,357,1.333,390,4.265,391,2.648,426,3.27,441,1.414,475,1.874,477,3.635,522,2.531,559,2.824,702,1.647,751,1.507,825,3.826,851,1.939,861,1.908,883,4.791,884,3.466,923,2.922,930,6.278,1150,3.515,1151,4.984,1152,3.806,1153,4.197,1154,3.515,1155,3.088,1156,4.197,1157,4.197,1158,4.197,1159,4.197,1160,4.197,1161,3.806,1162,3.806,1163,4.197,1164,4.197,1170,3.826,1171,2.454,1172,3.088,1174,4.197,1175,4.602,1177,4.197,1178,3.515,1179,5.131,1182,4.197,1184,4.197,1185,4.197,1186,3.515,1188,4.197,1189,4.197,1191,5.131,1197,5.495,1198,3.806,1199,4.197,1200,4.197,1201,3.515,1202,4.197,1203,5.495,1204,5.495,1205,2.922,1206,2.922,1207,5.495,1208,5.495,1209,6.127,1210,6.747,1211,6.127,1212,5.495,1213,4.984,1214,4.984,1215,4.297,1216,5.495,1217,4.197,1218,4.197,1219,4.197,1220,4.197,1221,3.515,1222,4.197,1223,4.197,1224,4.197,1225,4.197,1226,4.197,1227,4.197,1228,4.197,1229,4.197,1230,4.197,1231,4.197,1484,3.806,3664,4.79]],["title/components/PageSectionComponent.html",[178,0.135,652,0.988]],["body/components/PageSectionComponent.html",[0,0.006,3,0.143,4,0.17,5,0.122,13,1.104,14,1.045,16,1.362,19,0.184,23,0.777,29,0.846,32,0.574,35,0.011,36,0.55,37,0.184,42,1.359,49,3.558,51,0.6,52,0.6,60,1.076,64,1.4,65,0.58,72,1.5,73,0.662,90,0.17,92,0.364,95,0.143,110,0.006,111,0.008,112,0.006,117,0.75,118,1.403,125,1.544,144,1.071,170,0.887,172,0.937,178,0.216,212,0.641,304,1.812,353,1.268,364,0.985,387,1.015,396,2.887,413,1.076,428,2.731,450,2.268,495,0.985,534,1.4,577,1.045,578,1.108,579,1.175,582,0.902,583,1.273,585,1.104,587,1.104,601,1.076,602,1.673,603,1.895,604,1.175,605,1.175,606,0.957,607,1.175,608,1.015,609,1.175,610,1.015,611,1.175,612,1.045,613,1.175,614,1.045,615,1.175,616,1.045,617,1.175,618,1.045,619,1.108,620,1.175,621,1.045,622,1.573,623,1.045,624,1.108,625,1.175,626,1.045,627,1.175,628,1.045,629,1.175,630,1.015,631,1.175,632,1.175,633,1.015,634,1.175,635,1.045,636,1.175,637,1.015,638,1.175,639,1.045,640,1.774,641,1.045,642,0.985,643,0.985,644,1.573,645,1.045,646,1.076,647,1.175,648,1.015,649,1.175,650,1.045,651,1.175,652,1.686,653,1.175,654,0.985,655,1.175,656,1.015,657,1.175,658,1.045,659,1.141,660,1.175,661,1.015,662,0.957,663,1.175,664,1.015,665,1.175,666,0.985,667,1.175,668,1.015,669,1.108,670,1.045,671,1.175,672,1.076,673,1.175,674,1.045,675,1.175,676,1.015,677,1.175,678,1.045,679,1.108,680,1.045,681,1.015,682,1.141,683,0.875,684,1.015,685,1.175,686,1.015,687,1.175,688,1.015,689,1.175,690,1.015,691,1.175,692,1.015,693,1.175,694,1.015,695,1.175,696,1.015,697,1.175,698,1.015,699,1.108,700,1.175,703,1.999,704,1.999,751,1.076,757,3.068,796,1.752,1007,3.068,1155,2.887,1326,1.812,1327,2.427,1328,1.812,1329,2.427,1330,2.427,1331,2.427,1332,1.812,1333,1.812,1334,2.427,1335,2.427,1336,1.812,1337,1.812,1338,1.812,1339,1.812,1340,1.812,1341,2.427,1342,2.347,1343,1.812,1344,2.427,1345,2.427,1346,1.812,1347,2.427,1348,1.812,1349,1.812,1350,1.812,1351,1.812,1352,2.924,1353,1.812,1354,1.812,1355,1.812,1356,1.812,1357,1.812,1358,1.812,1359,1.812,1360,1.812,1361,1.812,1362,1.812,1363,1.812,1364,1.812,1365,1.812,1366,1.812,1367,1.812,1368,1.812,1369,2.427,1370,1.812,1371,1.812,1372,1.812,1373,1.812,1374,1.812,1375,1.812,1376,1.812,1377,1.812,1378,1.812,1379,1.812,1380,1.812,1381,1.812,1382,1.812,1383,2.427,1384,1.812,1385,1.812,1386,1.812,1387,1.812,1388,1.812,1389,1.492,1390,1.812,1391,1.812,1392,1.812,1393,1.812,1394,1.812,1395,1.812,1396,1.812,1397,1.812,2514,2.596,2576,3.286,2626,4.401,2627,4.401,3009,3.923,3137,5.741,3390,4.634,3482,3.923,3647,5.741,3658,6.329,3661,4.766,3665,5.741,3666,3.923,3667,5.997,3668,5.997,3669,5.997,3670,5.997,3671,4.477,3672,4.477,3673,7.531,3674,4.477,3675,4.477,3676,4.477,3677,4.477,3678,3.923,3679,4.477,3680,4.477,3681,4.477,3682,4.477]],["title/components/PasswordComponent.html",[178,0.135,654,0.932]],["body/components/PasswordComponent.html",[0,0.004,3,0.088,4,0.104,5,0.086,8,0.775,9,0.785,11,0.545,13,0.944,14,0.639,19,0.113,20,0.473,23,0.545,29,0.641,32,0.712,34,0.966,35,0.012,36,0.555,37,0.337,38,0.576,39,1.067,42,1.162,44,2.274,51,1.071,52,1.078,53,1.075,55,2.132,56,1.877,58,1.621,60,0.658,61,2.44,64,0.982,65,0.804,67,0.942,72,0.775,73,0.851,79,0.566,90,0.219,92,0.223,93,0.52,95,0.164,98,1.125,100,0.508,101,1.588,105,2.041,110,0.004,111,0.005,112,0.004,115,0.9,116,1.304,117,0.527,118,1.064,123,1.191,124,2.134,125,1.229,133,1.832,137,0.833,138,0.913,139,1.004,140,0.913,141,1.28,142,0.886,143,0.972,144,0.915,162,2.148,170,0.758,172,1.068,176,2.397,178,0.225,191,0.859,198,0.729,200,3.512,208,1.671,211,1.281,212,0.603,254,1.037,288,1.448,299,1.514,308,0.972,310,3.509,324,1.28,334,1.559,337,1.32,353,1.229,357,0.762,364,0.603,387,0.621,394,1.588,413,0.658,418,3.377,426,2.397,427,1.671,435,2.01,441,1.832,451,1.234,452,1.388,466,3.089,469,1.542,475,1.647,488,1.189,494,2.047,495,0.603,519,1.189,522,1.448,534,0.982,550,4.571,577,0.639,578,0.678,579,0.719,582,0.552,583,1.24,585,0.775,587,0.775,601,0.658,602,1.041,603,1.509,604,0.719,605,0.719,606,0.585,607,0.719,608,0.621,609,0.719,610,0.621,611,0.719,612,0.639,613,0.719,614,0.639,615,0.719,616,0.639,617,0.719,618,0.639,619,0.678,620,0.719,621,0.639,622,1.104,623,0.639,624,0.678,625,0.719,626,0.639,627,0.719,628,0.639,629,0.719,630,0.621,631,0.719,632,0.719,633,0.621,634,0.719,635,0.639,636,0.719,637,0.621,638,0.719,639,0.639,640,1.345,641,0.639,642,0.603,643,0.603,644,1.104,645,0.639,646,0.658,647,0.719,648,0.621,649,0.719,650,0.639,651,0.719,652,0.639,653,0.719,654,1.442,655,0.719,656,0.621,657,0.719,658,0.639,659,0.698,660,0.719,661,0.621,662,0.585,663,0.719,664,0.621,665,0.719,666,0.603,667,0.719,668,0.621,669,0.678,670,0.639,671,0.719,672,0.658,673,0.719,674,0.639,675,0.719,676,0.621,677,0.719,678,0.639,679,0.678,680,0.639,681,0.621,682,0.698,683,0.536,684,0.621,685,0.719,686,0.621,687,0.719,688,0.621,689,0.719,690,0.621,691,0.719,692,0.621,693,0.719,694,0.621,695,0.719,696,0.621,697,0.719,698,0.621,699,0.678,700,0.719,703,1.403,704,1.403,711,1.342,712,1.621,713,2.833,714,2.006,715,2.006,717,0.942,738,1.332,739,1.588,740,1.671,741,1.448,742,1.827,746,3.512,751,0.658,756,0.664,780,2.69,788,0.762,830,2.327,845,1.004,861,2.393,1019,1.514,1029,1.447,1041,2.184,1052,3.345,1171,1.072,1273,1.448,1282,2.132,1284,1.766,1313,2.695,1326,1.109,1327,1.704,1328,1.109,1329,1.704,1330,1.704,1331,1.704,1332,1.109,1333,1.109,1334,1.704,1335,1.704,1336,1.109,1337,1.109,1338,1.109,1339,1.109,1340,1.109,1341,1.704,1342,1.647,1343,1.109,1344,1.704,1345,1.704,1346,1.109,1347,1.704,1348,1.109,1349,1.109,1350,1.109,1351,1.109,1352,2.328,1353,1.109,1354,1.109,1355,1.109,1356,1.109,1357,1.109,1358,1.109,1359,1.109,1360,1.109,1361,1.109,1362,1.109,1363,1.109,1364,1.109,1365,1.109,1366,1.109,1367,1.109,1368,1.109,1369,1.704,1370,1.109,1371,1.109,1372,1.109,1373,1.109,1374,1.109,1375,1.109,1376,1.109,1377,1.109,1378,1.109,1379,1.109,1380,1.109,1381,1.109,1382,1.109,1383,1.704,1384,1.109,1385,1.109,1386,1.109,1387,1.109,1388,1.109,1389,0.913,1390,1.109,1391,1.109,1392,1.109,1393,1.109,1394,1.109,1395,1.109,1396,1.109,1397,1.109,1448,1.968,1450,5.407,1515,1.514,1589,1.671,1656,4.571,2270,2.972,2272,3.512,2275,1.877,2288,3.708,2316,1.671,2356,2.01,2412,3.688,2414,2.401,2418,3.345,2435,3.089,2519,3.179,2540,2.132,2622,3.509,2659,2.177,2711,3.941,2715,1.588,2725,2.714,2781,3.089,2903,2.01,3045,3.345,3156,3.512,3162,3.761,3206,2.01,3207,2.01,3219,3.688,3490,4.571,3499,3.345,3581,2.01,3683,2.177,3684,5.742,3685,3.688,3686,3.345,3687,3.345,3688,3.688,3689,3.688,3690,3.688,3691,3.688,3692,5.439,3693,3.688,3694,3.688,3695,4.491,3696,4.491,3697,4.491,3698,4.491,3699,5.979,3700,4.491,3701,4.491,3702,4.209,3703,4.491,3704,4.491,3705,4.491,3706,4.491,3707,4.491,3708,4.209,3709,4.555,3710,2.74,3711,2.74,3712,2.74,3713,2.74,3714,3.089,3715,2.74,3716,2.74,3717,3.688,3718,2.74,3719,2.74,3720,2.74,3721,2.74,3722,2.74,3723,2.74,3724,2.74,3725,2.74,3726,2.74,3727,2.74,3728,3.688,3729,3.688,3730,3.688,3731,3.688,3732,3.688,3733,2.74,3734,2.74,3735,3.688,3736,2.74,3737,2.74,3738,2.74,3739,3.345,3740,3.688,3741,2.74,3742,2.74,3743,2.74,3744,2.74,3745,2.74,3746,2.74,3747,2.74,3748,3.688,3749,4.074,3750,2.401,3751,1.877,3752,2.401,3753,2.401,3754,2.401,3755,2.401,3756,2.177,3757,4.491,3758,4.491,3759,3.688,3760,2.401,3761,2.401,3762,2.401,3763,2.401,3764,2.401,3765,2.401,3766,3.688,3767,2.401,3768,3.688,3769,2.401,3770,3.688,3771,2.401,3772,2.401,3773,3.688,3774,3.688,3775,2.401,3776,2.401,3777,2.401,3778,2.401,3779,2.401,3780,2.401,3781,2.177,3782,2.401,3783,2.401,3784,6.553,3785,4.209,3786,2.74,3787,4.209,3788,4.209,3789,5.04,3790,4.209,3791,4.209,3792,4.209,3793,4.209,3794,2.74]],["title/interfaces/PasswordErrorMsg.html",[11,0.548,3709,3.106]],["body/interfaces/PasswordErrorMsg.html",[0,0.005,3,0.127,4,0.151,5,0.081,8,0.731,9,1.583,11,0.715,13,1.017,19,0.163,20,0.62,29,0.496,35,0.012,37,0.261,38,0.749,39,1.034,42,0.899,44,2.646,51,0.851,52,0.74,53,1.1,55,2.798,56,2.72,58,1.935,61,2.301,67,1.365,79,0.574,90,0.261,92,0.323,93,0.753,95,0.203,98,1.08,100,0.667,101,2.301,105,1.96,110,0.005,111,0.007,112,0.005,115,0.848,116,1.252,117,0.496,118,1.146,123,1.05,124,1.365,125,0.848,133,1.172,141,1.207,162,1.663,170,0.817,172,1.136,176,2.971,178,0.239,191,1.732,198,0.957,200,4.353,208,2.421,211,1.856,212,0.568,254,1.502,288,2.098,299,2.194,308,1.408,324,1.207,334,1.68,337,1.244,353,0.568,357,1.104,394,2.301,418,2.583,426,2.583,427,2.421,435,2.913,441,1.631,451,1.787,452,2.01,466,2.913,469,1.454,475,1.553,488,1.723,494,1.93,519,1.723,522,2.919,583,0.568,585,0.731,587,0.731,654,1.216,702,1.365,703,1.841,704,1.841,711,1.603,712,1.699,713,3.053,714,2.161,715,2.161,717,1.365,738,1.93,739,2.301,740,2.421,741,2.098,742,1.723,746,2.72,751,0.954,756,0.871,788,1.104,830,2.194,845,2.024,861,2.196,1041,2.289,1052,3.154,1171,1.553,1273,2.098,1282,2.01,1284,2.559,1313,2.758,1326,1.606,1327,2.236,1328,1.606,1329,2.236,1330,2.236,1331,2.236,1332,1.606,1333,1.606,1334,2.236,1335,2.236,1336,1.606,1337,1.606,1338,1.606,1339,1.606,1340,1.606,1341,2.236,1342,2.161,1343,1.606,1344,2.236,1345,2.236,1346,1.606,1347,2.236,1348,1.606,1349,1.606,1350,1.606,1351,1.606,1352,2.78,1353,1.606,1354,1.606,1355,1.606,1356,1.606,1357,1.606,1358,1.606,1359,1.606,1360,1.606,1361,1.606,1362,1.606,1363,1.606,1364,1.606,1365,1.606,1366,1.606,1367,1.606,1368,1.606,1369,2.236,1370,1.606,1371,1.606,1372,1.606,1373,1.606,1374,1.606,1375,1.606,1376,1.606,1377,1.606,1378,1.606,1379,1.606,1380,1.606,1381,1.606,1382,1.606,1383,2.236,1384,1.606,1385,1.606,1386,1.606,1387,1.606,1388,1.606,1389,1.323,1390,1.606,1391,1.606,1392,1.606,1393,1.606,1394,1.606,1395,1.606,1396,1.606,1397,1.606,1448,1.856,1450,5.442,1515,2.194,1589,2.421,2270,2.301,2272,2.72,2275,2.72,2288,3.561,2316,3.37,2356,2.913,2418,4.39,2519,4.239,2540,2.01,2622,3.37,2659,3.154,2715,2.301,2725,2.559,2781,2.913,2903,2.913,3045,3.154,3156,2.72,3162,2.913,3206,2.913,3207,2.913,3490,4.39,3499,3.154,3581,2.913,3683,3.154,3684,6.019,3685,3.478,3686,3.154,3687,3.154,3688,3.478,3689,3.478,3690,3.478,3691,3.478,3692,4.84,3693,3.478,3694,3.478,3695,3.478,3696,3.478,3697,3.478,3698,3.478,3699,3.478,3700,3.478,3701,3.478,3703,3.478,3704,3.478,3705,3.478,3706,3.478,3707,3.478,3709,5.04,3714,2.913,3717,3.478,3728,3.478,3729,3.478,3730,3.478,3731,3.478,3732,3.478,3735,3.478,3739,3.154,3740,3.478,3748,4.84,3749,5.049,3750,3.478,3751,2.72,3752,3.478,3753,3.478,3754,3.478,3755,3.478,3756,3.154,3757,5.567,3758,6.55,3759,4.84,3760,3.478,3761,3.478,3762,3.478,3763,3.478,3764,3.478,3765,3.478,3766,4.84,3767,3.478,3768,4.84,3769,3.478,3770,4.84,3771,3.478,3772,3.478,3773,4.84,3774,4.84,3775,3.478,3776,3.478,3777,3.478,3778,3.478,3779,3.478,3780,3.478,3781,3.154,3782,3.478,3783,3.478]],["title/classes/Person.html",[0,0.006,2599,2.582]],["body/classes/Person.html",[0,0.009,2,1.778,3,0.136,4,0.161,5,0.086,8,0.781,19,0.174,20,0.65,23,0.749,32,0.713,34,0.971,35,0.012,36,0.686,37,0.331,38,0.58,51,0.991,52,0.881,65,1.074,73,0.856,79,0.573,90,0.22,95,0.136,100,0.893,110,0.006,111,0.008,112,0.006,115,1.236,116,1.676,123,1.313,124,1.989,137,1.291,138,1.414,139,1.555,140,1.414,141,1.291,142,1.371,143,1.506,144,0.758,159,1.33,174,1.869,177,2.704,198,0.735,227,2.812,237,2.511,279,3.528,308,2.052,356,3.528,441,1.707,450,3.864,469,2.119,643,1.555,751,1.02,779,1.717,780,1.984,796,2.765,825,3.528,837,2.43,899,4.311,922,4.244,923,3.528,951,3.718,1001,3.197,1002,3.528,1003,2.812,1004,3.197,1527,4.511,2331,5.35,2333,5.615,2599,5.019,2821,3.114,2918,4.828,3150,5.185,3151,6.064,3157,5.229,3158,5.229,3159,5.229,3200,6.064,3202,6.405,3204,5.876,3795,3.718,3796,6.58,3797,6.58,3798,7.394,3799,7.066,3800,6.58,3801,6.58,3802,6.479,3803,7.066,3804,4.243,3805,4.243,3806,4.243,3807,5.784,3808,4.243,3809,4.243,3810,4.243,3811,4.243,3812,4.243,3813,5.784,3814,5.784,3815,5.784,3816,4.243,3817,4.243,3818,7.394,3819,4.243,3820,4.243,3821,5.784,3822,4.243,3823,4.243,3824,5.784,3825,7.066,3826,4.243,3827,4.243,3828,3.729,3829,5.784,3830,5.068,3831,4.243,3832,4.243,3833,6.58,3834,5.784,3835,5.784,3836,5.784,3837,3.372,3838,3.718,3839,4.243,3840,4.243,3841,7.63,3842,4.243,3843,4.243,3844,8.292,3845,6.58,3846,4.243,3847,4.243,3848,5.784,3849,5.784,3850,4.243,3851,4.243,3852,4.243,3853,4.243,3854,4.243]],["title/components/PhnComponent.html",[178,0.135,656,0.959]],["body/components/PhnComponent.html",[0,0.004,3,0.093,4,0.111,5,0.09,8,0.537,12,2.108,13,0.98,14,0.68,19,0.12,20,0.496,21,1.517,23,0.571,26,1.98,29,0.552,32,0.726,34,1.259,35,0.012,36,0.635,37,0.345,38,0.774,39,1.039,42,1.207,45,1.103,50,1.69,51,1.02,52,1.139,53,0.505,58,1.579,60,0.7,64,1.03,65,1.021,71,3.238,72,0.812,73,1.155,79,0.534,90,0.242,92,0.237,93,0.553,95,0.093,98,1.363,100,0.888,105,2.264,110,0.009,111,0.006,112,0.004,113,3.9,115,0.943,116,0.661,117,0.552,118,1.105,119,1.89,120,3.372,121,1.426,122,1.471,123,0.975,124,1.517,125,1.49,126,1.786,127,1.786,128,2.558,129,2.332,130,2.814,131,2.264,132,2.822,133,2.059,137,0.887,138,2.629,139,1.068,140,0.972,141,0.887,142,0.942,143,1.034,144,0.951,146,0.972,148,1.92,149,0.972,151,1.69,152,2.81,153,3.261,155,1.313,156,2.497,157,2.439,158,1.265,159,0.914,160,1.313,162,1.221,164,1.727,170,0.653,171,1.476,172,0.93,174,1.426,177,1.363,178,0.17,187,0.942,189,0.942,191,0.914,198,1.105,208,1.778,212,0.417,213,4.07,237,1.916,295,1.313,304,1.18,350,1.69,353,1.235,364,0.641,387,0.661,413,0.7,441,2.368,448,2.692,488,1.265,495,0.641,514,2.814,534,1.03,577,0.68,578,0.721,579,0.765,582,0.587,583,1.245,585,0.812,587,0.812,601,0.7,602,1.092,603,1.558,604,0.765,605,0.765,606,0.623,607,0.765,608,0.661,609,0.765,610,0.661,611,0.765,612,0.68,613,0.765,614,0.68,615,0.765,616,0.68,617,0.765,618,0.68,619,0.721,620,0.765,621,0.68,622,1.158,623,0.68,624,0.721,625,0.765,626,0.68,627,0.765,628,0.68,629,0.765,630,0.661,631,0.765,632,0.765,633,0.661,634,0.765,635,0.68,636,0.765,637,0.661,638,0.765,639,0.68,640,1.397,641,0.68,642,0.641,643,0.641,644,1.158,645,0.68,646,0.7,647,0.765,648,0.661,649,0.765,650,0.68,651,0.765,652,0.68,653,0.765,654,0.641,655,0.765,656,1.346,657,0.765,658,0.68,659,0.743,660,0.765,661,0.661,662,0.623,663,0.765,664,0.661,665,0.765,666,0.641,667,0.765,668,0.661,669,0.721,670,0.68,671,0.765,672,0.7,673,0.765,674,0.68,675,0.765,676,0.661,677,0.765,678,0.68,679,0.721,680,0.68,681,0.661,682,0.743,683,0.57,684,0.661,685,0.765,686,0.661,687,0.765,688,0.661,689,0.765,690,0.661,691,0.765,692,0.661,693,0.765,694,0.661,695,0.765,696,0.661,697,0.765,698,0.661,699,0.721,700,0.765,711,1.243,712,1.725,751,0.7,753,2.248,756,0.696,779,1.18,780,1.363,788,0.811,796,1.14,815,2.814,837,2.308,845,1.617,861,2.042,894,1.313,969,1.778,1029,1.517,1041,1.98,1171,1.727,1235,2.77,1238,1.417,1260,1.417,1264,1.265,1273,2.814,1274,2.944,1276,2.944,1277,3.249,1278,2.59,1282,2.235,1288,1.778,1289,1.778,1290,1.778,1294,1.879,1296,1.778,1299,1.778,1300,1.778,1301,1.778,1302,1.778,1303,1.778,1304,1.778,1305,1.778,1306,3.532,1320,1.778,1321,1.778,1322,1.778,1323,1.611,1325,1.611,1398,1.611,1399,1.541,1400,1.611,1401,1.611,1402,1.879,1403,2.692,1448,3.505,1522,2.692,1675,3.238,2328,2.814,2545,2.316,2546,2.139,2547,2.316,2619,1.778,2622,1.778,2711,1.997,2715,1.69,2722,2.139,2725,1.879,2729,3.372,2734,3.232,2738,4.778,2888,2.554,3194,2.139,3358,2.316,3504,3.867,3547,2.316,3855,2.554,3856,6.292,3857,4.413,3858,4.413,3859,5.939,3860,4.666,3861,4.413,3862,2.915,3863,2.915,3864,4.413,3865,2.915,3866,4.413,3867,5.204,3868,2.915,3869,4.413,3870,2.915,3871,2.915,3872,2.915,3873,2.915,3874,2.915,3875,2.915,3876,2.915,3877,2.915,3878,3.867,3879,3.867,3880,2.915,3881,2.915,3882,2.915,3883,2.915,3884,2.139,3885,6.973,3886,2.139,3887,1.997,3888,5.325,3889,2.915,3890,2.915,3891,2.316,3892,3.867,3893,2.554,3894,5.325,3895,2.316,3896,2.915,3897,2.915,3898,2.316,3899,2.316,3900,2.316,3901,2.316,3902,2.316,3903,2.915,3904,2.554,3905,4.413,3906,4.413,3907,2.554,3908,2.915,3909,4.413,3910,2.915,3911,2.915,3912,2.915,3913,2.915,3914,2.915,3915,2.554,3916,2.915,3917,5.939,3918,2.915,3919,2.915,3920,2.915,3921,4.413,3922,2.915,3923,3.867,3924,3.867]],["title/components/PhoneNumberComponent.html",[178,0.135,658,0.988]],["body/components/PhoneNumberComponent.html",[0,0.004,3,0.096,4,0.114,5,0.092,8,0.832,12,2.142,13,1.111,14,0.702,19,0.124,20,0.508,21,1.554,23,0.585,26,2.012,29,0.376,32,0.729,34,1.269,35,0.012,36,0.639,37,0.345,38,0.769,39,1.23,42,1.024,44,1.103,45,1.139,50,1.745,51,1.041,52,1.135,53,0.94,55,2.29,58,1.744,60,0.723,64,1.055,65,1.018,67,1.035,72,0.832,73,1.163,79,0.528,90,0.246,92,0.245,93,0.571,95,0.145,98,1.265,99,3.057,100,0.656,110,0.004,111,0.006,112,0.004,113,3.921,115,0.966,116,0.682,117,0.565,118,1.126,120,3.419,121,1.461,122,1.507,123,1.213,124,1.554,125,1.506,126,1.83,127,1.83,128,2.621,129,2.389,130,2.869,131,2.142,132,2.853,133,2.081,137,0.915,138,2.645,139,1.103,140,1.003,141,0.915,142,0.973,143,1.068,144,0.97,146,1.003,148,1.951,149,1.003,151,1.745,152,2.837,153,2.114,155,2.036,156,2.531,157,2.499,158,1.307,159,0.944,160,1.355,162,1.261,164,2.124,170,0.445,171,1.524,172,0.941,174,1.755,178,0.193,191,0.944,198,1.221,208,3.312,212,0.431,213,4.136,218,2.637,219,2.637,237,1.963,295,2.036,299,1.664,308,1.604,334,1.375,353,1.238,364,0.662,387,0.682,413,0.723,416,2.392,441,2.343,495,0.662,534,1.055,577,0.702,578,0.745,579,0.789,582,0.606,583,1.248,585,0.832,587,0.832,601,0.723,602,1.118,603,1.583,604,0.789,605,0.789,606,0.643,607,0.789,608,0.682,609,0.789,610,0.682,611,0.789,612,0.702,613,0.789,614,0.702,615,0.789,616,0.702,617,0.789,618,0.702,619,0.745,620,0.789,621,0.702,622,1.186,623,0.702,624,0.745,625,0.789,626,0.702,627,0.789,628,0.702,629,0.789,630,0.682,631,0.789,632,0.789,633,0.682,634,0.789,635,0.702,636,0.789,637,0.682,638,0.789,639,0.702,640,1.424,641,0.702,642,0.662,643,0.662,644,1.186,645,0.702,646,0.723,647,0.789,648,0.682,649,0.789,650,0.702,651,0.789,652,0.702,653,0.789,654,0.662,655,0.789,656,0.682,657,0.789,658,1.586,659,1.89,660,0.789,661,0.682,662,0.643,663,0.789,664,0.682,665,0.789,666,0.662,667,0.789,668,0.682,669,0.745,670,0.702,671,0.789,672,0.723,673,0.789,674,0.702,675,0.789,676,0.682,677,0.789,678,0.702,679,0.745,680,0.702,681,0.682,682,0.767,683,0.588,684,0.682,685,0.789,686,0.682,687,0.789,688,0.682,689,0.789,690,0.682,691,0.789,692,0.682,693,0.789,694,0.682,695,0.789,696,0.682,697,0.789,698,0.682,699,0.745,700,0.789,711,1.055,712,1.493,714,1.178,715,1.178,751,0.723,753,2.285,756,0.475,779,2.197,788,0.837,815,2.869,837,1.554,845,1.103,848,2.062,861,1.652,928,3.984,1029,1.554,1041,1.507,1171,1.769,1235,2.809,1238,1.463,1260,1.463,1264,1.307,1273,2.869,1276,3.001,1278,2.64,1288,1.836,1289,1.836,1290,1.836,1299,1.836,1300,1.836,1301,1.836,1302,1.836,1303,1.836,1304,1.836,1305,1.836,1306,3.277,1320,1.836,1321,1.836,1322,1.836,1323,1.664,1325,1.664,1398,1.664,1399,1.591,1400,1.664,1403,2.758,2289,2.208,2328,2.869,2387,2.208,2546,2.208,2565,2.392,2729,1.591,2734,1.524,2738,2.062,3326,2.637,3336,2.637,3884,2.208,3886,3.984,3899,2.392,3900,2.392,3901,2.392,3902,2.392,3925,7.259,3926,6.583,3927,2.637,3928,4.521,3929,4.521,3930,5.289,3931,5.429,3932,5.429,3933,4.757,3934,4.757,3935,3.01,3936,3.01,3937,3.01,3938,3.593,3939,3.01,3940,3.01,3941,4.521,3942,3.01,3943,3.01,3944,3.01,3945,3.01,3946,4.521,3947,3.01,3948,3.01,3949,5.289,3950,3.01,3951,3.961,3952,3.01,3953,3.01,3954,3.01,3955,3.01,3956,4.521,3957,4.521,3958,4.521,3959,3.01,3960,3.01,3961,3.01,3962,3.01,3963,3.01,3964,3.01,3965,6.47,3966,3.01,3967,4.521,3968,5.429,3969,4.521,3970,3.01,3971,4.521,3972,4.521,3973,3.01,3974,3.01,3975,3.01,3976,3.01,3977,3.01,3978,3.01,3979,3.01,3980,3.01,3981,3.01,3982,4.521,3983,3.01,3984,3.01,3985,4.521]],["title/components/PostalCodeComponent.html",[178,0.135,661,0.959]],["body/components/PostalCodeComponent.html",[0,0.004,3,0.097,4,0.115,5,0.093,13,0.836,14,0.707,19,0.124,20,0.51,21,1.874,23,0.588,29,0.568,32,0.72,34,1.248,35,0.012,36,0.633,37,0.343,38,0.77,39,1.15,42,1.03,45,1.147,51,1.014,52,1.138,53,0.787,58,1.605,60,0.728,64,1.06,65,0.98,72,0.836,73,1.165,79,0.549,90,0.247,92,0.246,93,0.575,95,0.097,98,0.888,100,0.549,110,0.004,111,0.006,112,0.004,115,0.971,116,1.372,117,0.568,118,1.131,119,1.934,121,1.762,122,1.817,123,0.991,124,1.562,125,1.294,126,2.206,127,2.206,129,2.401,130,3.201,131,1.934,132,2.941,133,2.194,137,0.922,138,1.01,139,1.11,140,1.01,141,0.922,142,0.979,143,1.075,144,0.974,146,1.01,148,2.202,149,1.01,152,2.539,155,2.046,156,1.778,159,0.95,160,2.046,162,1.904,164,1.185,170,0.807,172,1.007,178,0.174,183,1.11,185,1.904,186,2.408,187,1.469,188,1.953,189,1.469,192,1.848,203,2.408,204,2.408,205,1.315,207,2.408,212,0.434,237,1.973,295,1.364,299,3.013,353,1.238,364,0.667,387,0.687,413,0.728,418,1.417,441,1.788,495,0.667,514,2.881,534,1.06,577,0.707,578,0.75,579,0.795,582,0.61,583,1.248,585,0.836,587,0.836,601,0.728,602,1.124,603,1.589,604,0.795,605,0.795,606,0.647,607,0.795,608,0.687,609,0.795,610,0.687,611,0.795,612,0.707,613,0.795,614,0.707,615,0.795,616,0.707,617,0.795,618,0.707,619,0.75,620,0.795,621,0.707,622,1.192,623,0.707,624,0.75,625,0.795,626,0.707,627,0.795,628,0.707,629,0.795,630,0.687,631,0.795,632,0.795,633,0.687,634,0.795,635,0.707,636,0.795,637,0.687,638,0.795,639,0.707,640,1.43,641,0.707,642,0.667,643,0.667,644,1.192,645,0.707,646,0.728,647,0.795,648,0.687,649,0.795,650,0.707,651,0.795,652,0.707,653,0.795,654,0.667,655,0.795,656,0.687,657,0.795,658,0.707,659,0.772,660,0.795,661,1.372,662,1.642,663,0.795,664,0.687,665,0.795,666,0.667,667,0.795,668,0.687,669,0.75,670,0.707,671,0.795,672,0.728,673,0.795,674,0.707,675,0.795,676,0.687,677,0.795,678,0.707,679,0.75,680,0.707,681,0.687,682,0.772,683,0.592,684,0.687,685,0.795,686,0.687,687,0.795,688,0.687,689,0.795,690,0.687,691,0.795,692,0.687,693,0.795,694,0.687,695,0.795,696,0.687,697,0.795,698,0.687,699,0.75,700,0.795,703,1.514,704,1.514,710,3.515,711,1.272,712,1.748,717,1.042,751,1.092,753,2.456,756,0.717,782,2.958,787,2.634,788,0.843,796,1.185,810,1.904,815,2.881,827,3.334,861,1.658,969,1.848,1029,1.562,1041,2.019,1155,2.929,1235,2.817,1238,1.473,1260,1.473,1264,1.315,1274,3.348,1278,2.651,1282,2.301,1296,1.848,1307,2.401,1308,2.929,1309,3.695,1310,1.973,1311,3.611,1313,1.973,1323,1.675,1325,1.675,1326,1.226,1327,1.839,1328,1.226,1329,1.839,1330,1.839,1331,1.839,1332,1.226,1333,1.226,1334,1.839,1335,1.839,1336,1.226,1337,1.226,1338,1.226,1339,1.226,1340,1.226,1341,1.839,1342,1.778,1343,1.226,1344,1.839,1345,1.839,1346,1.226,1347,1.839,1348,1.226,1349,1.226,1350,1.226,1351,1.226,1352,2.451,1353,1.226,1354,1.226,1355,1.226,1356,1.226,1357,1.226,1358,1.226,1359,1.226,1360,1.226,1361,1.226,1362,1.226,1363,1.226,1364,1.226,1365,1.226,1366,1.226,1367,1.226,1368,1.226,1369,1.839,1370,1.226,1371,1.226,1372,1.226,1373,1.226,1374,1.226,1375,1.226,1376,1.226,1377,1.226,1378,1.226,1379,1.226,1380,1.226,1381,1.226,1382,1.226,1383,1.839,1384,1.226,1385,1.226,1386,1.226,1387,1.226,1388,1.226,1389,1.01,1390,1.226,1391,1.226,1392,1.226,1393,1.226,1394,1.226,1395,1.226,1396,1.226,1397,1.226,1401,1.675,1448,2.125,1786,3.113,2270,3.16,2272,3.735,2273,4.777,2274,4.332,2275,2.076,2276,2.655,2328,2.401,2331,3.113,2619,1.848,3161,3.334,3189,4.15,3630,2.655,3884,2.223,3886,2.223,3887,2.076,3934,4.777,3986,6.219,3987,6.735,3988,2.655,3989,4.544,3990,4.544,3991,4.544,3992,4.544,3993,3.03,3994,3.03,3995,3.03,3996,3.03,3997,4.544,3998,3.03,3999,3.03,4000,4.544,4001,3.03,4002,3.03,4003,3.03,4004,3.03,4005,3.03,4006,3.03,4007,3.03,4008,3.03,4009,3.03,4010,4.544,4011,3.03,4012,3.03,4013,3.03,4014,3.03,4015,4.544,4016,4.544,4017,4.544,4018,3.611,4019,3.334,4020,3.03,4021,3.03,4022,3.03,4023,3.03,4024,3.03,4025,7.065,4026,3.03,4027,3.03,4028,4.544,4029,4.544,4030,4.544,4031,4.544]],["title/components/ProvinceComponent.html",[178,0.135,664,0.959]],["body/components/ProvinceComponent.html",[0,0.004,3,0.092,4,0.109,5,0.089,8,1.461,11,0.372,12,2.093,13,0.972,14,0.671,19,0.118,20,0.49,21,1.501,23,0.565,26,1.966,29,0.546,32,0.725,34,1.254,35,0.012,36,0.633,37,0.346,38,0.771,39,1.13,42,0.99,45,1.088,51,1.043,52,1.135,53,0.915,58,1.717,60,0.691,64,1.019,65,0.996,72,0.804,73,1.152,79,0.55,90,0.254,92,0.234,93,0.545,95,0.203,98,0.854,100,0.527,110,0.004,111,0.006,112,0.004,113,3.89,115,0.933,116,0.99,117,0.546,118,1.096,119,1.02,120,3.352,121,1.411,122,1.455,123,0.969,124,1.501,125,1.483,126,1.767,127,1.767,128,2.531,129,2.308,130,2.791,131,2.25,132,2.809,133,2.049,137,0.874,138,2.622,139,1.053,140,0.958,141,0.874,142,0.929,143,1.02,144,0.943,146,0.958,148,1.906,149,0.958,151,1.666,152,2.798,153,2.042,155,1.294,156,2.307,157,2.414,158,1.248,159,1.369,160,1.294,162,1.204,164,1.709,170,0.646,171,1.456,172,1.015,178,0.169,187,0.929,189,0.929,191,0.901,198,0.915,212,0.412,237,1.896,295,1.294,353,1.234,364,0.633,387,0.651,413,0.691,493,2.212,495,0.633,497,3.825,498,3.424,514,2.791,534,1.019,577,0.671,578,0.711,579,0.754,582,0.579,583,1.244,585,0.804,587,0.804,601,0.691,602,1.08,603,1.547,604,0.754,605,0.754,606,0.614,607,0.754,608,0.651,609,0.754,610,0.651,611,0.754,612,0.671,613,0.754,614,0.671,615,0.754,616,0.671,617,0.754,618,0.671,619,0.711,620,0.754,621,0.671,622,1.145,623,0.671,624,0.711,625,0.754,626,0.671,627,0.754,628,0.671,629,0.754,630,0.651,631,0.754,632,0.754,633,0.651,634,0.754,635,0.671,636,0.754,637,0.651,638,0.754,639,0.671,640,1.385,641,0.671,642,0.633,643,0.633,644,1.145,645,0.671,646,0.691,647,0.754,648,0.651,649,0.754,650,0.671,651,0.754,652,0.671,653,0.754,654,0.633,655,0.754,656,0.651,657,0.754,658,0.671,659,0.732,660,0.754,661,0.651,662,0.614,663,0.754,664,1.336,665,0.754,666,0.633,667,0.754,668,0.651,669,0.711,670,0.671,671,0.754,672,0.691,673,0.754,674,0.671,675,0.754,676,0.651,677,0.754,678,0.671,679,0.711,680,0.671,681,0.651,682,0.732,683,0.562,684,0.651,685,0.754,686,0.651,687,0.754,688,0.651,689,0.754,690,0.651,691,0.754,692,0.651,693,0.754,694,0.651,695,0.754,696,0.651,697,0.754,698,0.651,699,0.711,700,0.754,703,1.455,704,1.455,711,1.232,712,1.717,717,0.988,723,3.86,726,1.853,727,4.233,728,1.754,729,3.404,751,0.691,753,2.4,756,0.833,787,2.531,788,0.8,810,1.83,872,2.992,874,1.97,877,1.97,880,1.97,894,1.966,984,5.04,1021,2.531,1029,1.501,1041,1.966,1235,2.753,1238,1.398,1260,1.398,1264,1.248,1273,2.791,1274,2.919,1275,3.061,1276,2.919,1277,3.221,1278,2.568,1282,2.212,1288,1.754,1289,1.754,1290,1.754,1294,1.853,1296,1.754,1299,1.754,1300,1.754,1301,1.754,1302,1.754,1303,1.754,1304,1.754,1305,1.754,1306,3.212,1307,2.308,1308,2.815,1309,2.664,1310,1.896,1312,2.815,1313,2.56,1314,2.992,1315,2.992,1316,2.992,1320,1.754,1321,1.754,1322,1.754,1323,1.589,1325,1.589,1326,1.163,1327,1.767,1328,1.163,1329,1.767,1330,1.767,1331,1.767,1332,1.163,1333,1.163,1334,1.767,1335,1.767,1336,1.163,1337,1.163,1338,1.163,1339,1.163,1340,1.163,1341,1.767,1342,1.709,1343,1.163,1344,1.767,1345,1.767,1346,1.163,1347,1.767,1348,1.163,1349,1.163,1350,1.163,1351,1.163,1352,2.387,1353,1.163,1354,1.163,1355,1.163,1356,1.163,1357,1.163,1358,1.163,1359,1.163,1360,1.163,1361,1.163,1362,1.163,1363,1.163,1364,1.767,1365,1.163,1366,1.163,1367,1.163,1368,1.163,1369,1.767,1370,1.163,1371,1.163,1372,1.163,1373,1.163,1374,1.163,1375,1.163,1376,1.163,1377,1.163,1378,1.163,1379,1.163,1380,1.163,1381,1.163,1382,1.163,1383,1.767,1384,1.163,1385,1.163,1386,1.163,1387,1.163,1388,1.163,1389,0.958,1390,1.163,1391,1.163,1392,1.163,1393,1.163,1394,1.163,1395,1.163,1396,1.163,1397,1.163,1398,1.589,1399,1.519,1400,1.589,1401,1.589,1402,1.853,1403,2.664,1404,3.826,1782,2.284,1786,1.97,1891,2.284,2269,4.196,2271,2.815,2838,2.284,4019,2.109,4032,2.284,4033,3.826,4034,3.826,4035,2.875,4036,2.875,4037,3.826,4038,2.875,4039,2.875,4040,2.875,4041,2.875,4042,2.875,4043,2.875,4044,4.367,4045,2.875,4046,2.875,4047,2.875,4048,2.875,4049,2.875,4050,2.875,4051,2.875,4052,2.875,4053,2.875,4054,2.875,4055,7.06,4056,2.519,4057,2.519,4058,2.519,4059,2.519,4060,2.519,4061,2.519,4062,2.519,4063,2.519,4064,2.519,4065,2.519,4066,2.519,4067,2.519,4068,2.519,4069,2.519,4070,2.519,4071,2.519,4072,2.519,4073,2.519,4074,2.519,4075,2.519,4076,2.519,4077,2.519,4078,2.519,4079,2.519,4080,2.284,4081,2.519]],["title/interfaces/ProvinceList.html",[11,0.548,727,2.582]],["body/interfaces/ProvinceList.html",[0,0.006,3,0.138,4,0.164,5,0.088,8,1.569,11,0.558,13,0.793,19,0.177,20,0.656,29,0.539,35,0.012,37,0.272,38,0.586,39,0.951,52,1.095,53,0.746,58,1.641,73,0.638,79,0.57,90,0.291,92,0.35,93,0.818,95,0.238,98,0.842,100,0.706,110,0.006,111,0.008,112,0.006,113,2.842,115,0.921,116,0.976,117,0.539,118,1.213,119,1.529,120,2.277,123,0.658,125,0.921,131,1.529,132,2.365,133,1.272,152,2.287,156,2.287,159,1.351,170,0.638,171,2.182,172,1.12,178,0.187,187,1.393,189,1.393,191,1.351,198,1.149,295,1.94,353,0.617,493,2.182,497,4.145,498,3.325,514,2.277,583,0.617,585,0.793,587,0.793,664,0.976,702,1.482,703,1.948,704,1.948,711,1.548,712,1.839,717,1.482,723,4.112,726,2.778,727,4.535,728,2.629,729,3.768,751,1.035,753,2.692,756,1.046,787,2.498,788,1.199,810,1.805,872,4.004,874,2.952,877,2.952,880,2.952,894,2.632,984,5.908,1021,2.498,1041,2.211,1235,2.537,1264,1.871,1273,2.277,1274,2.382,1275,2.498,1276,2.382,1277,2.629,1278,2.095,1282,2.182,1306,3.359,1307,2.277,1308,2.778,1309,2.629,1310,1.871,1312,2.778,1313,2.537,1314,2.952,1315,2.952,1316,2.952,1326,1.744,1327,2.365,1328,1.744,1329,2.365,1330,2.365,1331,2.365,1332,1.744,1333,1.744,1334,2.365,1335,2.365,1336,1.744,1337,1.744,1338,1.744,1339,1.744,1340,1.744,1341,2.365,1342,2.287,1343,1.744,1344,2.365,1345,2.365,1346,1.744,1347,2.365,1348,1.744,1349,1.744,1350,1.744,1351,1.744,1352,2.878,1353,1.744,1354,1.744,1355,1.744,1356,1.744,1357,1.744,1358,1.744,1359,1.744,1360,1.744,1361,1.744,1362,1.744,1363,1.744,1364,2.365,1365,1.744,1366,1.744,1367,1.744,1368,1.744,1369,2.365,1370,1.744,1371,1.744,1372,1.744,1373,1.744,1374,1.744,1375,1.744,1376,1.744,1377,1.744,1378,1.744,1379,1.744,1380,1.744,1381,1.744,1382,1.744,1383,2.365,1384,1.744,1385,1.744,1386,1.744,1387,1.744,1388,1.744,1389,1.436,1390,1.744,1391,1.744,1392,1.744,1393,1.744,1394,1.744,1395,1.744,1396,1.744,1397,1.744,1398,2.382,1399,2.277,1400,2.382,1401,2.382,1402,2.778,1782,3.424,1786,2.952,1891,3.424,2269,3.424,2271,2.778,2838,3.424,4019,3.162,4032,3.424,4033,3.776,4034,3.776,4037,3.776,4055,7.539,4056,3.776,4057,3.776,4058,3.776,4059,3.776,4060,3.776,4061,3.776,4062,3.776,4063,3.776,4064,3.776,4065,3.776,4066,3.776,4067,3.776,4068,3.776,4069,3.776,4070,3.776,4071,3.776,4072,3.776,4073,3.776,4074,3.776,4075,3.776,4076,3.776,4077,3.776,4078,3.776,4079,3.776,4080,3.424,4081,3.776]],["title/components/RadioComponent.html",[178,0.135,666,0.932]],["body/components/RadioComponent.html",[0,0.004,3,0.107,4,0.127,5,0.099,8,0.615,11,0.432,12,2.254,13,1.244,14,1.14,18,2.038,19,0.137,20,0.549,21,1.679,23,0.632,26,2.117,29,0.611,32,0.731,34,1.319,35,0.012,36,0.657,37,0.35,38,0.804,39,0.94,42,1.107,45,1.264,51,1.038,52,1.138,53,1,58,1.571,60,0.803,64,1.14,65,1.038,72,0.899,73,1.213,79,0.527,89,2.699,90,0.241,92,0.271,93,0.634,95,0.185,98,0.955,100,0.403,110,0.004,111,0.006,112,0.004,113,3.987,115,1.044,116,0.757,117,0.611,118,1.198,120,3.571,121,1.578,122,1.628,123,1.033,124,1.679,125,1.558,126,2.571,127,2.571,128,2.831,129,2.581,130,3.051,131,2.254,132,2.951,133,2.387,137,1.016,138,2.695,139,1.224,140,1.113,141,1.016,142,1.08,143,1.185,144,1.031,146,1.924,148,2.416,149,1.924,151,1.936,152,2.924,153,2.284,155,1.504,156,2.485,157,2.699,158,1.45,159,1.047,160,1.504,162,1.399,164,2.259,170,0.494,171,1.692,172,0.978,174,1.08,178,0.185,187,1.08,189,1.578,191,1.047,194,2.699,212,0.478,237,2.12,334,1.016,353,1.247,357,0.929,364,0.735,387,0.757,413,0.803,441,0.986,495,0.735,534,1.14,577,0.779,578,0.826,579,0.876,582,0.673,583,1.255,585,0.899,587,0.899,601,0.803,602,1.208,603,1.666,604,0.876,605,0.876,606,0.714,607,0.876,608,0.757,609,0.876,610,0.757,611,0.876,612,0.779,613,0.876,614,0.779,615,0.876,616,0.779,617,0.876,618,0.779,619,0.826,620,0.876,621,0.779,622,1.281,623,0.779,624,0.826,625,0.876,626,0.779,627,0.876,628,0.779,629,0.876,630,0.757,631,0.876,632,0.876,633,0.757,634,0.876,635,0.779,636,0.876,637,0.757,638,0.876,639,0.779,640,1.514,641,0.779,642,0.735,643,0.735,644,1.281,645,0.779,646,0.803,647,0.876,648,0.757,649,0.876,650,0.779,651,0.876,652,0.779,653,0.876,654,0.735,655,0.876,656,0.757,657,0.876,658,0.779,659,0.851,660,0.876,661,0.757,662,0.714,663,0.876,664,0.757,665,0.876,666,1.487,667,0.876,668,0.757,669,0.826,670,0.779,671,0.876,672,0.803,673,0.876,674,0.779,675,0.876,676,0.757,677,0.876,678,0.779,679,0.826,680,0.779,681,0.757,682,0.851,683,0.653,684,0.757,685,0.876,686,0.757,687,0.876,688,0.757,689,0.876,690,0.757,691,0.876,692,0.757,693,0.876,694,0.757,695,0.876,696,0.757,697,0.876,698,0.757,699,0.826,700,0.876,711,1.14,712,1.571,751,0.803,753,2.558,756,0.527,780,1.562,788,0.929,796,2.644,856,1.846,1007,2.289,1010,2.451,1029,1.679,1056,4.588,1082,2.654,1235,2.934,1238,1.624,1260,1.624,1264,1.45,1278,2.807,1288,2.038,1289,2.038,1290,2.038,1299,2.038,1300,2.038,1301,2.038,1302,2.038,1303,2.038,1304,2.038,1305,2.038,1306,2.924,1320,2.038,1321,2.038,1322,2.038,1323,1.846,1325,1.846,1398,1.846,1399,1.765,1400,1.846,1403,2.979,1494,2.153,2646,5.37,3388,2.451,3436,4.661,3437,2.654,3438,5.793,3439,2.927,3440,2.654,3441,2.927,3442,5.058,3443,2.654,3444,2.927,3445,5.921,3446,2.927,3447,5.921,3448,2.927,3449,2.927,3450,5.565,3451,4.279,3452,4.279,3453,5.058,3454,5.565,3455,3.881,3456,4.279,3457,2.927,4082,4.884,4083,4.884,4084,3.34,4085,3.34,4086,3.34,4087,3.34,4088,4.884,4089,3.34,4090,3.34,4091,3.34,4092,3.34,4093,3.34,4094,3.34,4095,3.34,4096,3.34,4097,3.34,4098,4.884]],["title/interfaces/ReadOnlyFields.html",[11,0.548,732,2.9]],["body/interfaces/ReadOnlyFields.html",[0,0.004,3,0.099,4,0.117,5,0.063,9,1.319,10,1.13,11,0.713,16,1.676,19,0.127,20,0.517,21,1.06,29,0.386,35,0.012,36,0.251,37,0.269,38,0.762,39,1.371,44,2.019,51,0.617,52,1.058,53,1.381,55,1.562,67,1.06,73,0.815,79,0.57,84,1.5,90,0.27,92,0.251,93,0.585,95,0.195,98,1.195,100,0.918,101,1.788,110,0.004,111,0.006,112,0.004,115,0.659,116,1.043,117,0.386,118,0.955,119,1.634,121,0.997,122,1.028,125,0.659,131,1.094,141,0.938,146,1.028,148,1.488,149,1.028,159,0.967,160,1.389,162,1.292,172,1.114,178,0.195,179,3.155,180,2.545,185,1.929,187,0.997,189,0.997,190,3.155,192,3.361,194,1.705,196,2.113,198,1.188,202,1.339,205,2.838,211,2.153,254,1.167,295,1.389,299,1.705,304,2.23,308,1.955,323,1.705,324,1.401,336,1.028,337,1.444,353,0.442,357,0.858,377,2.263,391,1.705,418,1.442,427,2.809,441,1.359,451,1.389,452,1.562,469,1.13,479,1.788,488,1.339,493,1.562,497,4.005,498,3.694,509,3.552,510,1.63,515,1.788,519,1.339,583,0.442,585,0.568,587,0.568,606,0.984,643,0.679,646,1.106,662,0.984,701,3.775,702,1.06,703,1.535,704,1.535,705,2.263,706,3.379,707,3.659,708,3.659,709,4.018,710,4.814,711,1.074,712,1.363,713,2.545,714,2.156,715,1.802,716,2.153,717,1.06,718,2.545,719,2.263,720,4.191,721,2.263,722,3.552,723,3.179,724,2.113,725,3.155,726,1.988,727,3.727,728,3.361,729,2.969,730,2.263,731,3.939,732,4.699,733,2.113,734,2.263,735,2.451,736,2.451,737,2.451,738,1.5,739,1.788,740,1.881,741,1.63,742,1.339,743,2.433,744,3.659,745,2.809,746,2.113,747,2.451,748,2.451,749,2.263,750,2.113,751,1.648,752,2.451,753,2.475,754,5.647,755,2.263,756,0.487,757,2.113,758,2.263,759,2.263,760,2.669,761,2.451,762,2.263,763,2.451,764,3.976,765,2.263,766,2.451,767,2.263,768,2.113,769,3.659,770,2.451,771,2.451,772,3.659,773,2.969,774,2.451,775,2.451,776,2.451,777,2.451,778,2.451,779,2.23,780,2.576,781,1.988,782,2.838,783,2.451,784,2.451,785,2.451,786,4.187,787,1.788,788,0.858,789,2.263,790,2.451,791,2.451,792,3.659,793,6.041,794,3.659,795,2.969,796,2.156,797,3.659,798,5.934,799,4.379,800,1.63,801,2.263,802,1.988,803,2.451,804,2.451,805,2.451,806,2.451,807,2.451,808,2.451,809,4.856,810,1.292,811,2.451,812,2.451,813,3.659,814,2.809,815,1.63,816,3.659,817,5.196,818,5.45,819,5.196,820,2.451,821,2.451,822,3.659,823,2.451,824,3.659,825,2.809,826,2.451,827,2.263,828,2.451,829,2.451,830,1.705,831,2.451,832,2.451,833,3.552,834,2.451,835,2.451,836,2.451,837,2.443,838,3.379,839,2.969,840,3.659,841,3.659,842,3.659,843,3.659,844,2.451,845,1.13,846,2.451,847,2.451,848,3.775,849,2.113,850,2.451,851,1.248,852,2.451,853,2.451,854,2.451,855,2.113,856,1.705,857,2.451,858,2.451,859,2.451,860,2.113,861,2.222,862,2.451,863,4.856,864,2.451,865,2.451,866,2.451,867,2.451,868,2.451,869,4.043,870,2.113,871,2.451,872,4.187,873,3.659,874,3.155,875,3.659,876,4.379,877,2.113,878,2.451,879,2.451,880,2.113,881,1.881,882,1.881,883,2.113,884,1.705,885,2.451,886,2.451,887,2.451,888,3.379,889,2.451,890,2.451,891,2.263,892,2.451,893,2.263,894,2.073,895,2.451,896,2.451,897,2.263,898,2.451,899,1.881,900,2.451,901,2.263,902,2.263,903,2.451,904,2.451,905,2.451,906,2.451,907,2.451,908,2.451,909,2.451,910,2.451,911,2.451,912,2.451,913,2.451,914,2.451,915,2.451,916,2.113,917,2.451,918,3.659,919,2.451,920,2.451]],["title/guards/RouteGuardService.html",[321,2.582,333,2.582]],["body/guards/RouteGuardService.html",[0,0.006,3,0.141,4,0.168,5,0.09,8,0.813,10,2.176,12,2.382,13,1.322,17,2.888,19,0.181,23,0.93,25,4.63,29,0.552,30,3.024,31,4.709,32,0.61,34,1.206,35,0.012,36,0.584,37,0.295,38,0.72,39,1.257,53,1.244,65,0.869,67,2.042,72,1.421,79,0.451,84,3.492,90,0.273,92,0.359,94,2.235,95,0.141,98,1.161,100,0.932,110,0.006,111,0.008,112,0.006,117,0.552,125,1.269,177,2.777,181,4.07,184,5.204,193,3.829,198,1.029,230,3.659,258,3.961,283,2.064,304,2.404,316,2.324,317,5.294,319,3.024,322,4.475,323,3.283,324,1.807,333,5.009,334,1.807,335,5.204,336,2.573,337,2.251,338,6.764,357,1.998,391,4.267,392,3.283,457,6.292,475,2.324,519,2.579,779,2.717,780,3.139,781,4.977,800,3.139,861,2.185,959,4.358,1113,3.024,1161,4.72,1162,4.72,1171,1.727,1178,4.358,1179,3.238,1186,4.358,1198,3.507,1205,2.692,1206,2.692,1213,5.335,1221,5.27,1563,4.72,1564,3.443,2711,4.6,2715,3.892,2836,6.123,3007,4.72,4099,6.567,4100,3.867,4101,5.939,4102,5.939,4103,5.939,4104,5.939,4105,7.719,4106,8.125,4107,8.125,4108,5.939,4109,5.204,4110,5.939,4111,5.939,4112,4.07,4113,5.939,4114,5.939,4115,5.939,4116,5.939,4117,4.413,4118,5.939,4119,4.413,4120,4.413,4121,4.413,4122,7.888,4123,7.888,4124,4.413,4125,6.713,4126,4.413,4127,4.413,4128,4.413,4129,4.413,4130,5.939,4131,4.413,4132,4.413,4133,4.413,4134,4.413,4135,4.413,4136,4.413]],["title/interfaces/SampleImageInterface.html",[11,0.548,4137,3.106]],["body/interfaces/SampleImageInterface.html",[0,0.008,3,0.197,4,0.234,5,0.125,11,0.798,19,0.253,20,0.824,29,0.77,35,0.012,37,0.322,38,0.735,73,1.086,79,0.582,90,0.298,91,2.674,92,0.501,95,0.235,110,0.008,111,0.01,112,0.008,115,1.316,116,1.663,123,1.198,172,1.086,178,0.235,353,0.882,414,4.22,583,0.882,585,1.134,587,1.134,591,5.059,599,2.995,600,2.88,668,1.396,669,1.94,702,2.118,717,2.118,788,1.714,1432,3.757,2577,5.029,2642,4.52,3461,4.52,3527,4.895,3529,4.895,4112,5.562,4137,5.753,4138,4.895,4139,4.52,4140,7.113,4141,5.397,4142,5.397,4143,5.397,4144,5.397,4145,5.397]],["title/components/SampleModalComponent.html",[178,0.135,668,0.959]],["body/components/SampleModalComponent.html",[0,0.006,3,0.148,4,0.176,5,0.125,11,0.601,13,1.131,14,1.083,19,0.191,20,0.69,23,0.795,29,0.861,32,0.679,35,0.012,36,0.56,37,0.301,42,1.392,45,1.757,51,0.823,52,0.823,60,1.115,64,1.433,65,0.795,72,1.131,73,1.084,79,0.526,90,0.262,91,2.015,92,0.377,95,0.196,110,0.006,111,0.008,112,0.006,115,1.313,116,1.661,123,1.276,124,2.112,137,1.412,138,1.547,139,1.701,140,1.547,141,1.412,142,1.5,143,1.647,144,1.23,170,0.687,172,0.954,178,0.22,212,0.665,353,1.27,364,1.021,387,1.052,413,1.115,414,4.209,495,1.021,534,1.433,577,1.083,578,1.148,579,1.217,582,0.935,583,1.275,585,1.131,587,1.131,591,4.777,599,2.257,600,2.17,601,1.115,602,1.52,603,1.922,604,1.217,605,1.217,606,0.992,607,1.217,608,1.052,609,1.217,610,1.052,611,1.217,612,1.083,613,1.217,614,1.083,615,1.217,616,1.083,617,1.217,618,1.083,619,1.148,620,1.217,621,1.083,622,1.611,623,1.083,624,1.148,625,1.217,626,1.083,627,1.217,628,1.083,629,1.217,630,1.052,631,1.217,632,1.217,633,1.052,634,1.217,635,1.083,636,1.217,637,1.052,638,1.217,639,1.083,640,1.806,641,1.083,642,1.021,643,1.021,644,1.611,645,1.083,646,1.115,647,1.217,648,1.052,649,1.217,650,1.083,651,1.217,652,1.083,653,1.217,654,1.021,655,1.217,656,1.052,657,1.217,658,1.083,659,1.182,660,1.217,661,1.052,662,0.992,663,1.217,664,1.052,665,1.217,666,1.021,667,1.217,668,1.661,669,1.976,670,1.083,671,1.217,672,1.115,673,1.217,674,1.083,675,1.217,676,1.052,677,1.217,678,1.083,679,1.148,680,1.083,681,1.052,682,1.182,683,0.907,684,1.052,685,1.217,686,1.052,687,1.217,688,1.052,689,1.217,690,1.052,691,1.217,692,1.052,693,1.217,694,1.052,695,1.217,696,1.052,697,1.217,698,1.052,699,1.148,700,1.217,717,1.596,788,1.291,1432,3.747,2577,4.717,2642,5.052,3461,3.406,3493,5.382,3527,5.823,3529,4.882,4112,3.18,4137,5.052,4138,6.348,4139,5.862,4140,4.067,4141,5.382,4142,6.033,4143,4.067,4144,6.421,4145,4.067,4146,6.143,4147,4.641,4148,4.641,4149,4.641,4150,4.641,4151,6.143]],["title/injectables/ServerPayload.html",[316,1.656,1110,3.106]],["body/injectables/ServerPayload.html",[0,0.009,3,0.173,4,0.206,5,0.11,19,0.222,20,0.762,32,0.659,35,0.012,37,0.319,50,4.958,79,0.593,90,0.295,92,0.44,95,0.217,100,0.985,110,0.007,111,0.009,112,0.007,123,1.132,198,0.937,229,4.094,235,4.775,240,4.293,258,4.312,266,3.301,282,2.991,283,2.53,316,2.898,318,3.137,861,1.646,1086,3.489,1087,6.354,1088,4.3,1094,5.942,1095,6.489,1097,5.886,1098,5.942,1099,6.904,1101,5.942,1102,7.148,1103,6.803,1105,4.741,1106,4.103,1107,3.971,1108,6.489,1109,3.489,1110,4.976,1111,5.478,1112,6.489,1113,3.708,1114,6.489,1115,6.489,1116,5.942,1117,4.741,1118,5.942,1119,6.489,4152,5.411,4153,5.411,4154,5.411,4155,5.411]],["title/modules/SharedCoreModule.html",[1120,2.582,4156,2.729]],["body/modules/SharedCoreModule.html",[0,0.004,3,0.098,4,0.116,5,0.062,35,0.012,44,1.673,60,1.097,90,0.333,92,0.248,93,0.578,94,1.544,95,0.098,110,0.004,111,0.006,112,0.004,198,0.528,202,1.324,288,1.611,323,2.523,336,1.521,364,1.694,387,1.034,418,1.426,428,1.86,493,1.544,495,1.694,577,1.796,599,2.661,600,2.135,601,0.733,606,1.645,608,1.744,610,1.744,614,1.796,616,1.796,618,1.796,621,1.796,623,1.796,626,1.796,628,1.796,630,1.744,633,1.744,635,1.796,637,1.744,639,1.796,641,1.796,642,1.694,645,1.796,648,1.744,650,1.796,652,1.796,654,1.694,656,1.744,658,1.796,661,1.744,664,1.744,666,1.694,668,1.744,670,1.796,672,1.849,674,1.796,676,1.744,678,1.796,680,1.065,681,1.744,683,0.596,684,1.744,686,1.744,688,1.744,690,1.744,692,1.744,694,1.744,696,1.744,698,1.744,815,1.611,851,1.234,894,1.373,1003,1.483,1047,2.423,1120,1.86,1122,1.86,1123,3.749,1124,4.348,1129,3.628,1130,2.237,1136,2.089,1145,4,1148,4,1149,2.423,1640,2.237,1689,2.423,2295,2.423,2494,2.423,2552,2.423,2570,2.423,3099,3.35,3148,2.237,3223,2.423,3264,2.423,3460,2.423,3648,2.423,3665,2.423,3926,2.423,3987,2.423,4139,2.237,4156,5.772,4157,2.671,4158,2.671,4159,2.671,4160,2.671,4161,2.671,4162,3.049,4163,3.049,4164,4.565,4165,5.472,4166,4.565,4167,3.049,4168,3.049,4169,3.049,4170,2.423,4171,3.049,4172,3.049,4173,3.049,4174,4.565,4175,3.049,4176,3.049,4177,3.049,4178,3.049,4179,3.049,4180,3.049,4181,4.565,4182,5.472,4183,3.049,4184,3.049,4185,3.049,4186,4.565,4187,2.671,4188,3.049,4189,3.049,4190,3.049,4191,3.049,4192,3.049,4193,3.049,4194,3.049,4195,3.049,4196,3.049,4197,3.049,4198,4.565,4199,3.049,4200,3.049,4201,3.049,4202,3.049,4203,3.049,4204,3.049,4205,3.049,4206,3.049,4207,3.049,4208,3.049,4209,3.049,4210,3.049,4211,3.049,4212,3.049,4213,3.35,4214,3.049,4215,3.049,4216,2.423,4217,3.049,4218,3.049,4219,3.049,4220,3.049,4221,3.049,4222,3.049,4223,3.049,4224,3.049,4225,3.049,4226,3.049,4227,2.423,4228,3.049,4229,3.049,4230,3.049,4231,3.049,4232,3.049,4233,3.049,4234,3.049,4235,3.049,4236,3.049,4237,3.049,4238,4.795,4239,3.049,4240,3.049,4241,3.049,4242,3.049,4243,3.049]],["title/interfaces/SimpleDate.html",[11,0.548,4244,3.106]],["body/interfaces/SimpleDate.html",[3,0.209,4,0.249,5,0.133,8,1.205,11,0.985,19,0.269,20,0.854,35,0.011,37,0.33,95,0.209,110,0.009,111,0.01,112,0.009,174,2.116,441,2.57,702,2.251,2280,4.485,2342,5.672,2344,6.075,2346,6.075,4244,5.582,4245,5.736,4246,5.736,4247,6.546,4248,6.546,4249,5.736,4250,5.736]],["title/components/SinComponent.html",[178,0.135,670,0.988]],["body/components/SinComponent.html",[0,0.004,3,0.094,4,0.112,5,0.091,8,0.82,11,0.577,12,2.121,13,0.988,14,0.689,19,0.121,20,0.5,21,1.532,23,0.577,26,1.992,29,0.557,32,0.727,34,1.263,35,0.012,36,0.636,37,0.345,38,0.776,39,0.874,42,1.01,45,1.117,51,1.023,52,1.14,53,0.511,58,1.89,60,0.709,64,1.04,65,1.024,71,3.269,72,0.82,73,1.158,79,0.546,90,0.244,92,0.24,93,0.56,95,0.094,98,1.049,100,0.846,105,2.121,110,0.008,111,0.006,112,0.004,113,3.908,115,0.952,116,0.669,117,0.557,118,1.113,120,3.391,121,1.44,122,1.485,123,0.98,124,1.532,125,1.496,126,1.803,127,1.803,128,2.583,129,2.355,130,2.836,131,2.277,132,2.834,133,2.178,137,0.898,138,2.635,139,1.081,140,0.984,141,0.898,142,0.954,143,1.047,144,0.958,146,0.984,148,1.932,149,0.984,151,1.711,152,2.821,153,3.275,155,1.329,156,2.339,157,2.463,158,1.281,159,0.925,160,1.329,162,1.237,164,1.743,170,0.659,171,1.495,172,0.935,174,1.44,176,2.795,177,1.38,178,0.205,187,0.954,189,0.954,191,0.925,198,0.93,202,1.934,212,0.423,213,4.096,237,1.934,254,1.686,299,1.632,304,1.195,350,2.583,353,1.236,364,0.65,387,0.669,413,0.709,441,2.311,448,3.646,488,1.281,495,0.65,514,2.836,534,1.04,577,0.689,578,0.73,579,0.774,582,0.595,583,1.246,585,0.82,587,0.82,601,0.709,602,1.102,603,1.568,604,0.774,605,0.774,606,0.631,607,0.774,608,0.669,609,0.774,610,0.669,611,0.774,612,0.689,613,0.774,614,0.689,615,0.774,616,0.689,617,0.774,618,0.689,619,0.73,620,0.774,621,0.689,622,1.169,623,0.689,624,0.73,625,0.774,626,0.689,627,0.774,628,0.689,629,0.774,630,0.669,631,0.774,632,0.774,633,0.669,634,0.774,635,0.689,636,0.774,637,0.669,638,0.774,639,0.689,640,1.408,641,0.689,642,0.65,643,0.65,644,1.169,645,0.689,646,0.709,647,0.774,648,0.669,649,0.774,650,0.689,651,0.774,652,0.689,653,0.774,654,0.65,655,0.774,656,0.669,657,0.774,658,0.689,659,0.752,660,0.774,661,0.669,662,0.631,663,0.774,664,0.669,665,0.774,666,0.65,667,0.774,668,0.669,669,0.73,670,1.395,671,0.774,672,0.709,673,0.774,674,0.689,675,0.774,676,0.669,677,0.774,678,0.689,679,0.73,680,0.689,681,0.669,682,0.752,683,0.577,684,0.669,685,0.774,686,0.669,687,0.774,688,0.669,689,0.774,690,0.669,691,0.774,692,0.669,693,0.774,694,0.669,695,0.774,696,0.669,697,0.774,698,0.669,699,0.73,700,0.774,711,1.252,712,1.732,751,1.07,753,2.428,756,0.703,779,2.419,788,0.821,796,1.155,815,2.836,837,2.319,845,1.081,861,2.052,969,1.801,1029,1.532,1041,1.992,1171,2.51,1235,2.785,1238,1.435,1260,1.435,1264,1.281,1273,2.836,1274,2.966,1275,3.111,1276,2.966,1277,3.274,1278,2.609,1282,2.256,1288,1.801,1289,1.801,1290,1.801,1294,1.903,1296,1.801,1299,1.801,1300,1.801,1301,1.801,1302,1.801,1303,1.801,1304,1.801,1305,1.801,1306,3.547,1320,1.801,1321,1.801,1322,1.801,1323,1.632,1325,1.632,1398,1.632,1399,1.56,1400,1.632,1401,1.632,1402,1.903,1403,2.718,1448,3.661,1522,2.718,1536,2.355,2279,3.54,2280,3.053,2286,3.053,2287,3.269,2288,2.872,2289,3.269,2328,2.836,2545,2.346,2546,2.166,2547,2.346,2619,1.801,2622,1.801,2729,2.836,2734,2.256,2763,3.54,3194,2.166,3520,3.904,3547,2.346,3867,5.911,3878,3.904,3879,3.904,3884,2.166,3886,2.166,3887,2.022,3891,2.346,3892,3.904,3893,2.586,3895,2.346,3898,2.346,3899,2.346,3900,2.346,3901,2.346,3902,2.346,3907,2.586,3915,5.622,3923,3.904,3924,3.904,4251,2.586,4252,6.136,4253,4.455,4254,4.455,4255,5.977,4256,4.455,4257,4.455,4258,2.952,4259,4.455,4260,2.952,4261,2.952,4262,2.952,4263,4.455,4264,2.952,4265,2.952,4266,2.952,4267,2.952,4268,2.952,4269,2.952,4270,2.952,4271,2.952,4272,2.952,4273,2.952,4274,2.952,4275,2.952,4276,7.209,4277,5.366,4278,2.952,4279,2.952,4280,2.952,4281,2.952,4282,2.952,4283,2.952]],["title/components/ThumbnailComponent.html",[178,0.135,674,0.988]],["body/components/ThumbnailComponent.html",[0,0.005,3,0.132,4,0.157,5,0.116,13,1.046,14,0.964,19,0.17,20,0.638,23,0.735,29,0.517,32,0.696,34,0.954,35,0.012,36,0.595,37,0.324,38,0.569,39,0.925,42,1.287,45,1.564,51,0.761,52,0.761,53,0.984,60,0.993,64,1.325,65,0.905,72,1.046,73,1.034,79,0.277,90,0.247,91,1.794,92,0.336,95,0.132,110,0.005,111,0.007,112,0.005,117,0.71,118,1.346,123,0.992,125,1.493,144,1.014,170,0.84,172,0.899,178,0.208,198,0.716,212,0.592,353,1.262,364,0.909,387,0.936,413,0.993,441,1.677,485,2.664,495,0.909,534,1.325,577,0.964,578,1.022,579,1.084,582,0.832,583,1.269,585,1.046,587,1.046,599,2.009,600,1.932,601,0.993,602,1.405,603,1.833,604,1.084,605,1.084,606,0.883,607,1.084,608,0.936,609,1.084,610,0.936,611,1.084,612,0.964,613,1.084,614,0.964,615,1.084,616,0.964,617,1.084,618,0.964,619,1.022,620,1.084,621,0.964,622,1.49,623,0.964,624,1.022,625,1.084,626,0.964,627,1.084,628,0.964,629,1.084,630,0.936,631,1.084,632,1.084,633,0.936,634,1.084,635,0.964,636,1.084,637,0.936,638,1.084,639,0.964,640,1.702,641,0.964,642,0.909,643,0.909,644,1.49,645,0.964,646,0.993,647,1.084,648,0.936,649,1.084,650,0.964,651,1.084,652,0.964,653,1.084,654,0.909,655,1.084,656,0.936,657,1.084,658,0.964,659,1.053,660,1.084,661,0.936,662,0.883,663,1.084,664,0.936,665,1.084,666,0.909,667,1.084,668,0.936,669,1.022,670,0.964,671,1.084,672,0.993,673,1.084,674,1.631,675,1.084,676,0.936,677,1.084,678,0.964,679,1.022,680,0.964,681,0.936,682,1.053,683,0.808,684,0.936,685,1.084,686,0.936,687,1.084,688,0.936,689,1.084,690,0.936,691,1.084,692,0.936,693,1.084,694,0.936,695,1.084,696,0.936,697,1.084,698,0.936,699,1.022,700,1.084,703,1.893,704,1.893,711,1.325,712,1.729,756,0.652,787,4.051,845,2.081,861,1.974,1029,1.953,1326,1.672,1327,2.299,1328,1.672,1329,2.299,1330,2.299,1331,2.299,1332,1.672,1333,1.672,1334,2.299,1335,2.299,1336,1.672,1337,1.672,1338,1.672,1339,1.672,1340,1.672,1341,2.299,1342,2.222,1343,1.672,1344,2.299,1345,2.299,1346,1.672,1347,2.299,1348,1.672,1349,1.672,1350,1.672,1351,1.672,1352,2.828,1353,1.672,1354,1.672,1355,1.672,1356,1.672,1357,1.672,1358,1.672,1359,1.672,1360,1.672,1361,1.672,1362,1.672,1363,1.672,1364,1.672,1365,1.672,1366,1.672,1367,1.672,1368,1.672,1369,2.299,1370,1.672,1371,1.672,1372,1.672,1373,1.672,1374,1.672,1375,1.672,1376,1.672,1377,1.672,1378,1.672,1379,1.672,1380,1.672,1381,1.672,1382,1.672,1383,2.299,1384,1.672,1385,1.672,1386,1.672,1387,1.672,1388,1.672,1389,1.377,1390,1.672,1391,1.672,1392,1.672,1393,1.672,1394,1.672,1395,1.672,1396,1.672,1397,1.672,1405,3.587,2576,3.032,2577,4.447,2589,3.621,2626,4.168,2627,4.168,2709,3.621,2732,4.168,2734,2.093,2787,4.513,2833,3.284,2969,3.621,3075,4.168,3540,4.976,3541,5.686,3565,5.686,4284,3.621,4285,5.679,4286,5.679,4287,6.49,4288,8.188,4289,6.49,4290,6.49,4291,6.49,4292,6.49,4293,5.679,4294,5.679,4295,4.132,4296,4.132,4297,4.132,4298,4.132,4299,4.132,4300,4.132,4301,4.132,4302,4.132,4303,4.132,4304,6.988,4305,4.132,4306,4.132,4307,5.679,4308,4.132,4309,4.132,4310,4.132,4311,5.679,4312,6.988,4313,4.132,4314,5.679,4315,5.679]],["title/components/ToggleComponent.html",[178,0.135,676,0.959]],["body/components/ToggleComponent.html",[0,0.006,3,0.145,4,0.172,5,0.123,13,1.112,14,1.056,19,0.186,20,0.679,23,0.782,29,0.85,32,0.66,35,0.011,36,0.553,37,0.298,39,0.983,42,1.369,51,0.606,52,0.606,60,1.087,64,1.41,65,0.586,72,1.112,73,0.67,79,0.456,90,0.23,92,0.368,95,0.145,110,0.006,111,0.008,112,0.006,115,1.291,116,1.644,117,0.756,118,1.411,123,0.923,124,2.077,125,1.55,133,2.007,137,1.377,138,1.509,139,1.658,140,1.509,141,1.377,142,1.463,143,1.606,144,1.214,170,0.894,172,0.942,178,0.217,212,0.648,308,2.413,353,1.268,364,0.996,387,1.026,413,1.087,495,0.996,534,1.41,577,1.056,578,1.12,579,1.187,582,0.912,583,1.274,585,1.112,587,1.112,601,1.087,602,1.495,603,1.903,604,1.187,605,1.187,606,0.967,607,1.187,608,1.026,609,1.187,610,1.026,611,1.187,612,1.056,613,1.187,614,1.056,615,1.187,616,1.056,617,1.187,618,1.056,619,1.12,620,1.187,621,1.056,622,1.585,623,1.056,624,1.12,625,1.187,626,1.056,627,1.187,628,1.056,629,1.187,630,1.026,631,1.187,632,1.187,633,1.026,634,1.187,635,1.056,636,1.187,637,1.026,638,1.187,639,1.056,640,1.784,641,1.056,642,0.996,643,0.996,644,1.585,645,1.056,646,1.087,647,1.187,648,1.026,649,1.187,650,1.056,651,1.187,652,1.056,653,1.187,654,0.996,655,1.187,656,1.026,657,1.187,658,1.056,659,1.153,660,1.187,661,1.026,662,0.967,663,1.187,664,1.026,665,1.187,666,0.996,667,1.187,668,1.026,669,1.12,670,1.056,671,1.187,672,1.087,673,1.187,674,1.056,675,1.187,676,1.644,677,1.187,678,1.056,679,1.12,680,1.056,681,1.026,682,1.153,683,0.885,684,1.026,685,1.187,686,1.026,687,1.187,688,1.026,689,1.187,690,1.026,691,1.187,692,1.026,693,1.187,694,1.026,695,1.187,696,1.026,697,1.187,698,1.026,699,1.12,700,1.187,703,2.013,704,2.013,711,1.41,712,1.795,717,1.556,756,0.714,788,1.259,1029,2.077,1054,4.801,1063,5.404,1326,1.832,1327,2.445,1328,1.832,1329,2.445,1330,2.445,1331,2.445,1332,1.832,1333,1.832,1334,2.445,1335,2.445,1336,1.832,1337,1.832,1338,1.832,1339,1.832,1340,1.832,1341,2.445,1342,2.364,1343,1.832,1344,2.445,1345,2.445,1346,1.832,1347,2.445,1348,1.832,1349,1.832,1350,1.832,1351,1.832,1352,2.936,1353,1.832,1354,1.832,1355,1.832,1356,1.832,1357,1.832,1358,1.832,1359,1.832,1360,1.832,1361,1.832,1362,1.832,1363,1.832,1364,1.832,1365,1.832,1366,1.832,1367,1.832,1368,1.832,1369,2.445,1370,1.832,1371,1.832,1372,1.832,1373,1.832,1374,1.832,1375,1.832,1376,1.832,1377,1.832,1378,1.832,1379,1.832,1380,1.832,1381,1.832,1382,1.832,1383,2.445,1384,1.832,1385,1.832,1386,1.832,1387,1.832,1388,1.832,1389,1.509,1390,1.832,1391,1.832,1392,1.832,1393,1.832,1394,1.832,1395,1.832,1396,1.832,1397,1.832,4316,3.966,4317,6.041,4318,6.041,4319,6.041,4320,4.526,4321,4.526,4322,4.526]],["title/directives/ValidateBcPostalDirective.html",[212,0.606,688,0.959]],["body/directives/ValidateBcPostalDirective.html",[0,0.008,3,0.186,4,0.221,5,0.118,9,1.663,19,0.238,23,0.917,32,0.493,34,0.975,35,0.012,36,0.472,37,0.291,38,0.582,65,0.752,79,0.39,90,0.269,92,0.472,93,1.101,95,0.226,98,1.494,99,2.94,100,0.923,110,0.008,111,0.009,112,0.008,117,0.886,153,3.311,174,1.876,191,2.495,193,3.742,198,1.227,212,1.094,214,4.224,215,3.365,281,3.365,324,2.154,336,2.36,337,2.22,357,1.615,559,2.614,582,1.169,583,1.014,662,1.24,683,1.135,688,1.803,710,3.742,782,2.52,837,2.805,894,3.441,944,6.323,945,6.205,946,3.541,947,4.612,948,4.612,959,4.259,1049,3.977,1055,3.189,1178,4.259,1313,2.52,2496,4.662,2498,4.613,2501,3.541,2502,4.977,2504,4.32,2509,4.32,2519,3.208,2540,2.94,2821,4.259,3986,5.196,4018,4.612,4213,5.196,4323,5.086,4324,6.972,4325,5.804,4326,5.804,4327,5.086,4328,3.742]],["title/directives/ValidateCityDirective.html",[212,0.606,690,0.959]],["body/directives/ValidateCityDirective.html",[0,0.008,3,0.189,4,0.224,5,0.12,19,0.242,23,0.926,32,0.501,34,0.992,35,0.012,36,0.48,37,0.294,38,0.592,65,0.764,79,0.396,90,0.272,92,0.48,93,1.12,95,0.229,98,1.505,99,2.99,100,0.93,110,0.01,111,0.009,112,0.008,117,0.895,153,3.346,191,2.509,198,1.334,212,1.025,214,4.256,281,3.422,324,2.177,336,2.385,337,2.243,559,2.658,582,1.189,583,1.025,683,1.154,690,1.814,709,3.12,837,2.819,1055,3.222,1307,3.12,1313,2.563,2496,4.697,2498,4.463,2501,3.601,2502,5.001,2504,4.365,2509,4.365,2519,3.263,2540,3.624,2729,3.12,2918,4.332,3185,4.365,4328,3.806,4329,6.27,4330,5.173,4331,7.013,4332,5.904,4333,5.173,4334,4.692]],["title/directives/ValidateNameDirective.html",[212,0.606,692,0.959]],["body/directives/ValidateNameDirective.html",[0,0.008,3,0.19,4,0.226,5,0.121,19,0.244,23,0.93,32,0.505,34,0.998,35,0.012,36,0.584,37,0.295,38,0.595,65,0.769,79,0.399,90,0.273,92,0.483,93,1.127,95,0.23,98,1.509,99,3.008,100,0.932,110,0.008,111,0.009,112,0.008,117,0.898,153,3.358,191,2.514,198,1.244,212,1.028,214,4.267,281,3.443,324,2.185,336,2.394,337,2.252,559,2.675,582,1.196,583,1.028,683,1.161,692,1.817,837,2.823,946,3.623,1055,3.234,1307,3.139,1313,2.579,2496,4.709,2498,4.475,2501,3.623,2502,5.009,2504,4.381,2509,4.381,2519,3.283,2540,3.637,3185,4.381,3186,4.72,4328,3.829,4335,6.293,4336,5.205,4337,7.027,4338,5.94]],["title/directives/ValidatePostalcodeDirective.html",[212,0.606,694,0.959]],["body/directives/ValidatePostalcodeDirective.html",[0,0.007,3,0.166,4,0.197,5,0.106,19,0.213,23,0.855,32,0.617,34,0.872,35,0.012,36,0.422,37,0.314,38,0.52,39,1.375,42,1.497,51,0.885,52,0.885,53,1.144,65,0.672,79,0.488,90,0.251,92,0.422,93,0.985,95,0.211,98,1.604,99,2.629,100,0.99,110,0.007,111,0.009,112,0.007,117,0.826,159,2.278,172,1.006,191,2.476,198,1.258,212,0.946,214,4.016,281,3.009,324,2.009,336,2.201,337,2.071,559,3.271,582,1.045,583,0.946,662,1.109,683,1.015,694,1.733,750,5.62,782,2.253,789,3.808,837,2.715,894,2.337,944,5.249,946,3.166,947,4.124,948,4.124,1055,2.974,1307,2.743,1313,2.253,2496,4.432,2498,4.211,2501,3.166,2502,4.924,2504,4.029,2505,3.346,2509,4.665,2519,2.869,2540,3.873,2729,3.491,3161,3.808,3185,4.817,3986,5.611,4018,4.124,4213,5.611,4327,4.548,4328,3.346,4334,5.249,4339,4.548,4340,6.366,4341,8.202,4342,5.19,4343,5.19,4344,5.19,4345,5.19,4346,5.19,4347,6.605,4348,6.605,4349,5.19,4350,5.19,4351,4.548,4352,5.19,4353,5.19,4354,5.787,4355,5.19]],["title/directives/ValidateRegionDirective.html",[212,0.606,696,0.959]],["body/directives/ValidateRegionDirective.html",[0,0.008,3,0.189,4,0.224,5,0.12,19,0.242,23,0.926,32,0.501,34,0.991,35,0.012,36,0.479,37,0.294,38,0.591,65,0.764,79,0.396,90,0.272,92,0.479,93,1.119,95,0.229,98,1.505,99,2.987,100,0.929,110,0.01,111,0.009,112,0.008,117,0.894,153,3.344,191,2.508,198,1.333,212,1.024,214,4.254,281,3.419,324,2.175,336,2.383,337,2.242,559,2.656,582,1.188,583,1.024,683,1.153,696,1.813,837,2.818,946,3.598,1055,3.22,1307,3.117,1313,2.56,2496,4.695,2498,4.461,2501,3.598,2502,4.999,2504,4.362,2509,4.362,2519,3.26,2540,3.622,2918,4.328,3185,4.362,4227,5.683,4328,3.802,4333,5.168,4356,6.266,4357,5.168,4358,7.01,4359,5.898,4360,5.898]],["title/directives/ValidateStreetDirective.html",[212,0.606,698,0.959]],["body/directives/ValidateStreetDirective.html",[0,0.008,3,0.189,4,0.224,5,0.12,19,0.242,23,0.926,32,0.501,34,0.992,35,0.012,36,0.48,37,0.294,38,0.592,65,0.764,79,0.396,90,0.272,92,0.48,93,1.12,95,0.229,98,1.505,99,2.99,100,0.93,110,0.01,111,0.009,112,0.008,117,0.895,153,3.346,191,2.509,198,1.334,212,1.025,214,4.256,281,3.422,324,2.177,336,2.385,337,2.243,559,2.658,582,1.189,583,1.025,683,1.154,698,1.814,699,1.98,760,3.422,837,2.819,1055,3.222,1307,3.12,1313,2.563,2496,4.697,2498,4.463,2501,3.601,2502,5.001,2504,4.365,2509,4.365,2519,3.263,2540,3.624,2729,3.12,3185,4.365,4328,3.806,4334,5.686,4351,5.173,4361,6.27,4362,5.173,4363,5.904]],["title/components/WizardProgressBarComponent.html",[178,0.135,678,0.988]],["body/components/WizardProgressBarComponent.html",[0,0.005,3,0.112,4,0.133,5,0.103,8,0.644,13,0.93,14,0.817,19,0.144,20,0.568,23,0.654,29,0.438,30,2.398,31,4.376,32,0.674,34,0.849,35,0.012,36,0.56,37,0.295,38,0.506,42,1.145,45,1.913,51,0.469,52,0.469,60,0.841,61,3.764,64,1.179,65,0.891,72,0.93,73,0.877,76,3.437,84,2.457,86,4.015,88,1.702,90,0.262,91,1.52,92,0.284,94,1.773,95,0.112,100,0.716,105,1.242,110,0.005,111,0.007,112,0.005,117,0.632,118,1.23,123,0.906,125,1.387,144,0.902,159,1.584,170,0.961,172,0.7,178,0.19,183,1.283,198,1.193,212,0.501,254,1.325,257,2.569,283,2.773,286,1.935,353,1.25,364,0.77,387,0.793,398,2.569,413,0.841,441,2.118,450,1.773,451,1.576,469,1.851,495,0.77,533,3.082,534,1.179,577,0.817,578,0.866,579,0.918,582,0.705,583,1.258,585,0.93,587,0.93,599,2.457,600,2.363,601,0.841,602,1.25,603,1.703,604,0.918,605,0.918,606,0.748,607,0.918,608,0.793,609,0.918,610,0.793,611,0.918,612,0.817,613,0.918,614,0.817,615,0.918,616,0.817,617,0.918,618,0.817,619,0.866,620,0.918,621,0.817,622,1.325,623,0.817,624,0.866,625,0.918,626,0.817,627,0.918,628,0.817,629,0.918,630,0.793,631,0.918,632,0.918,633,0.793,634,0.918,635,0.817,636,0.918,637,0.793,638,0.918,639,0.817,640,1.555,641,0.817,642,0.77,643,0.77,644,1.325,645,0.817,646,0.841,647,0.918,648,0.793,649,0.918,650,0.817,651,0.918,652,0.817,653,0.918,654,0.77,655,0.918,656,0.793,657,0.918,658,0.817,659,0.892,660,0.918,661,0.793,662,0.748,663,0.918,664,0.793,665,0.918,666,0.77,667,0.918,668,0.793,669,0.866,670,0.817,671,0.918,672,0.841,673,0.918,674,0.817,675,0.918,676,0.793,677,0.918,678,1.515,679,1.83,680,2.018,681,0.793,682,0.892,683,0.684,684,0.793,685,0.918,686,0.793,687,0.918,688,0.793,689,0.918,690,0.793,691,0.918,692,0.793,693,0.918,694,0.793,695,0.918,696,0.793,697,0.918,698,0.793,699,0.866,700,0.918,703,1.684,704,1.684,751,0.841,757,2.398,779,2.045,851,1.417,861,2.25,957,4.427,976,2.029,1001,2.793,1003,2.457,1019,2.793,1042,4.063,1113,2.398,1171,2.32,1284,3.258,1326,1.417,1327,2.045,1328,1.417,1329,2.045,1330,2.045,1331,2.045,1332,1.417,1333,1.417,1334,2.045,1335,2.045,1336,1.417,1337,1.417,1338,1.417,1339,1.417,1340,1.417,1341,2.045,1342,1.977,1343,1.417,1344,2.045,1345,2.045,1346,1.417,1347,2.045,1348,1.417,1349,1.417,1350,1.417,1351,1.417,1352,2.628,1353,1.417,1354,1.417,1355,1.417,1356,1.417,1357,1.417,1358,1.417,1359,1.417,1360,1.417,1361,1.417,1362,1.417,1363,1.417,1364,1.417,1365,1.417,1366,1.417,1367,1.417,1368,1.417,1369,2.045,1370,1.417,1371,1.417,1372,1.417,1373,1.417,1374,1.417,1375,1.417,1376,1.417,1377,1.417,1378,1.417,1379,1.417,1380,1.417,1381,1.417,1382,1.417,1383,2.045,1384,1.417,1385,1.417,1386,1.417,1387,1.417,1388,1.417,1389,1.167,1390,1.417,1391,1.417,1392,1.417,1393,1.417,1394,1.417,1395,1.417,1396,1.417,1397,1.417,1522,2.135,1564,2.929,1565,2.029,1574,2.257,1586,2.782,1588,2.782,1661,3.082,1665,4.712,1668,3.823,2328,3.431,2388,3.258,2561,3.067,2572,4.449,2583,2.398,2584,2.398,2655,4.351,2674,3.067,2699,6.033,2714,2.398,2836,3.708,3100,2.569,3101,4.015,3102,4.015,3113,3.067,3120,3.067,3123,4.427,3153,4.015,3417,5.195,3418,3.067,3419,3.067,3420,3.067,3532,4.015,3887,2.398,3938,4.015,4170,6.37,4249,4.427,4364,7.023,4365,5.929,4366,5.929,4367,5.053,4368,5.929,4369,5.929,4370,5.929,4371,6.492,4372,5.053,4373,6.492,4374,6.492,4375,5.053,4376,3.5,4377,5.053,4378,3.5,4379,3.5,4380,3.5,4381,3.5,4382,5.053,4383,5.053,4384,5.195,4385,4.427,4386,5.053,4387,4.427,4388,3.5,4389,5.929,4390,5.053,4391,3.5,4392,5.929,4393,5.053,4394,3.5,4395,3.5,4396,3.5,4397,3.5,4398,3.5,4399,3.5,4400,3.5,4401,3.5,4402,3.5,4403,3.5,4404,3.5,4405,3.5,4406,5.929,4407,3.5,4408,3.5,4409,3.5,4410,3.5,4411,2.569,4412,3.5,4413,3.5,4414,3.5,4415,6.885,4416,3.5,4417,5.053,4418,3.5,4419,3.5,4420,3.5,4421,3.5,4422,3.5,4423,5.053,4424,3.5,4425,3.5,4426,3.5,4427,3.5,4428,3.5,4429,3.5,4430,3.5,4431,3.5,4432,3.5,4433,3.5,4434,3.5,4435,3.5,4436,3.5,4437,3.5,4438,5.053]],["title/interfaces/WizardProgressItem.html",[11,0.548,1668,2.729]],["body/interfaces/WizardProgressItem.html",[0,0.008,3,0.249,4,0.23,5,0.123,11,0.941,19,0.249,20,0.816,26,2.019,35,0.012,37,0.298,67,2.083,73,0.896,79,0.577,84,4.183,90,0.23,94,3.068,95,0.232,100,0.877,110,0.008,111,0.009,112,0.008,116,1.373,174,1.958,205,2.63,269,2.63,354,4.813,422,4.813,479,3.511,591,5.114,679,1.498,680,1.413,702,2.083,796,2.37,870,4.15,1170,4.433,1661,4.433,1662,4.813,1663,5.307,1664,5.307,1665,4.813,1667,5.307,1668,5.019,1670,5.307,1671,5.307,1673,5.307,1674,5.307,1675,5.332,1679,5.307,1680,5.307,1681,5.307,1682,5.307,1683,5.307,1684,5.307,1685,5.307,1686,6.367,1687,5.307]],["title/components/XiconButtonComponent.html",[178,0.135,681,0.959]],["body/components/XiconButtonComponent.html",[0,0.006,3,0.146,4,0.174,5,0.124,9,1.311,13,1.12,14,1.068,17,2.225,19,0.188,23,0.788,29,0.855,32,0.663,35,0.012,36,0.556,37,0.281,42,1.379,58,1.132,60,1.099,64,1.82,65,0.788,72,1.12,73,0.9,79,0.408,90,0.231,92,0.372,95,0.146,110,0.006,111,0.008,112,0.006,117,0.761,118,1.418,125,1.557,133,2.416,144,1.087,170,0.9,172,0.843,178,0.219,183,2.23,198,0.793,200,3.135,212,0.655,265,4.169,269,1.987,350,2.653,353,1.27,357,1.693,364,1.007,387,1.037,413,1.099,467,2.653,495,1.007,511,4.465,534,1.42,577,1.068,578,1.132,579,1.2,582,0.922,583,1.274,585,1.12,587,1.12,596,4.993,601,1.099,602,1.505,603,1.911,604,1.2,605,1.2,606,0.978,607,1.2,608,1.037,609,1.2,610,1.037,611,1.2,612,1.068,613,1.2,614,1.068,615,1.2,616,1.068,617,1.2,618,1.068,619,1.132,620,1.2,621,1.068,622,1.596,623,1.068,624,1.132,625,1.2,626,1.068,627,1.2,628,1.068,629,1.2,630,1.037,631,1.2,632,1.2,633,1.037,634,1.2,635,1.068,636,1.2,637,1.037,638,1.2,639,1.068,640,1.793,641,1.068,642,1.007,643,1.007,644,1.596,645,1.068,646,1.099,647,1.2,648,1.037,649,1.2,650,1.068,651,1.2,652,1.068,653,1.2,654,1.007,655,1.2,656,1.037,657,1.2,658,1.068,659,1.166,660,1.2,661,1.037,662,0.978,663,1.2,664,1.037,665,1.2,666,1.007,667,1.2,668,1.037,669,1.132,670,1.068,671,1.2,672,1.099,673,1.2,674,1.068,675,1.2,676,1.037,677,1.2,678,1.068,679,1.132,680,1.068,681,1.651,682,2.085,683,0.895,684,1.037,685,1.2,686,1.037,687,1.2,688,1.037,689,1.2,690,1.037,691,1.2,692,1.037,693,1.2,694,1.037,695,1.2,696,1.037,697,1.2,698,1.037,699,1.132,700,1.2,711,1.595,712,1.969,756,1.078,764,2.653,810,1.917,845,1.677,976,2.653,1025,5.332,1026,5.332,1029,2.092,1049,3.135,1558,3.636,3365,4.836,3562,4.836,3606,3.358,4216,6.326,4439,6.975,4440,3.636,4441,7.287,4442,5.433,4443,6.085,4444,4.576,4445,6.385,4446,4.576,4447,4.576,4448,4.576,4449,4.576,4450,4.576,4451,4.576,4452,4.576,4453,4.576,4454,6.085,4455,4.576,4456,4.576,4457,4.576,4458,4.576,4459,4.576,4460,4.576,4461,4.576]],["title/changelog.html",[4462,2.05,4463,2.05,4464,3.099]],["body/changelog.html",[0,0.006,2,0.726,3,0.055,5,0.121,9,1.263,10,0.635,12,2.007,13,1.174,14,0.679,17,3.442,18,2.295,23,0.377,28,1.272,32,0.147,34,0.291,35,0.006,36,0.482,37,0.071,38,0.174,42,0.393,43,1.518,50,2.848,51,0.854,52,0.504,55,1.474,56,1.187,58,1.316,59,1.117,61,1.687,64,0.679,67,0.596,72,0.693,79,0.33,84,0.843,87,1.057,90,0.111,95,0.141,99,0.878,100,0.209,110,0.002,111,0.005,112,0.004,119,1.033,121,0.56,123,0.445,133,2.021,142,1.216,144,1.01,152,0.678,156,1.725,157,1.609,158,1.633,170,0.943,172,0.908,173,1.518,174,1.588,176,1.361,177,0.81,178,0.255,179,3.02,181,1.187,183,2.174,188,2.842,190,1.994,191,1.935,193,1.876,194,0.958,196,1.187,197,1.518,202,1.633,205,0.752,208,1.775,212,0.417,214,0.958,215,4.413,227,1.83,230,0.78,233,1.272,254,1.424,255,1.057,262,1.272,287,0.958,290,1.057,295,1.694,301,1.994,304,3.257,305,2.99,306,1.377,308,1.033,310,1.057,312,1.377,314,1.518,321,1.057,329,1.538,332,0.726,333,1.057,334,0.885,348,1.272,350,1.005,353,1.247,355,2.55,356,3.246,357,1.48,358,5.043,359,5.036,362,1.272,392,0.958,394,1.005,396,1.117,398,1.272,403,1.518,405,4.066,413,0.904,414,3.645,418,1.759,426,3.137,428,1.775,434,2.761,435,2.136,441,0.859,442,3.503,448,1.057,450,1.906,451,3.021,453,1.377,454,1.187,460,1.272,463,1.377,465,1.518,475,0.678,477,1.005,481,1.518,485,1.117,488,0.752,493,1.474,494,1.415,495,0.381,497,2.143,498,2.298,500,1.687,502,5.267,503,1.518,504,2.136,505,1.377,510,1.538,511,1.272,515,1.687,519,1.264,522,2.33,523,1.117,531,1.377,596,1.994,602,0.429,606,1.268,608,0.66,610,0.999,612,0.404,619,0.429,628,0.679,633,0.393,637,0.393,642,0.381,643,0.64,648,0.393,654,0.64,656,0.393,659,1.572,661,0.393,662,1.268,666,1.171,669,0.72,676,0.853,681,0.393,702,0.596,703,0.97,704,0.97,706,1.272,709,1.989,710,1.117,716,1.759,720,3.76,723,0.843,731,1.117,738,1.415,741,1.989,743,1.989,749,1.272,750,1.187,751,1.181,753,0.656,756,0.936,758,1.272,759,1.272,760,2.848,762,1.272,764,2.555,767,1.272,773,1.117,779,1.523,780,0.81,782,2.973,786,3.367,796,1.472,802,1.117,810,0.726,814,2.689,815,0.916,825,1.057,833,2.842,837,1.294,838,2.136,839,2.426,845,2.262,851,0.701,856,0.958,869,1.272,882,2.997,884,0.958,894,1.311,924,2.55,936,3.297,969,1.057,976,3.084,982,1.876,1001,3.126,1002,1.057,1007,1.187,1010,1.272,1011,1.876,1018,1.377,1019,3.412,1022,1.518,1023,1.377,1041,1.254,1049,1.187,1053,2.55,1054,2.99,1055,0.78,1106,1.538,1111,3.645,1120,1.775,1121,1.876,1136,1.187,1138,2.55,1142,2.578,1171,1.139,1172,1.117,1175,2.761,1201,1.272,1214,1.377,1221,1.272,1242,1.272,1276,2.941,1277,2.295,1310,1.264,1311,1.377,1313,0.752,1407,1.775,1448,1.361,1449,1.117,1490,1.272,1494,1.117,1497,2.842,1498,1.377,1514,1.187,1515,2.941,1519,2.99,1523,1.377,1527,4.318,1536,1.989,1548,1.377,1564,2.555,1587,1.377,1657,1.377,1661,1.057,1668,1.117,1691,4.15,1700,1.994,2270,1.005,2286,3.02,2287,3.606,2297,3.905,2302,2.295,2311,2.313,2312,1.005,2316,1.057,2319,2.136,2328,0.916,2331,2.578,2342,2.578,2344,1.272,2346,1.272,2376,1.377,2391,2.313,2397,1.272,2402,1.377,2435,1.272,2477,2.55,2498,1.005,2505,1.117,2510,2.136,2513,2.136,2516,3.297,2535,3.168,2540,0.878,2580,1.272,2582,1.518,2584,1.187,2619,3.998,2620,1.377,2622,1.775,2623,2.99,2642,2.761,2643,2.99,2664,1.377,2688,1.518,2713,2.55,2714,1.994,2715,1.005,2729,0.916,2732,3.235,2733,1.518,2734,3.974,2738,4.369,2743,2.136,2754,2.761,2759,1.377,2763,3.503,2767,4.494,2770,4.494,2778,2.313,2786,3.905,2787,1.377,2810,1.272,2821,4.15,2833,2.313,2835,3.297,2878,1.518,2879,1.377,2889,1.518,2903,6.236,2907,1.272,2919,1.518,2929,1.518,2941,2.136,2974,1.117,2980,1.518,3007,2.99,3010,1.518,3095,1.518,3128,3.905,3132,1.518,3141,1.377,3224,1.775,3321,1.518,3363,1.518,3369,2.313,3387,3.862,3389,2.313,3390,1.187,3438,5.775,3440,1.377,3443,2.313,3494,1.377,3497,1.518,3524,5.743,3526,5.2,3532,1.377,3543,1.518,3548,2.55,3562,1.377,3581,2.136,3650,1.518,3655,1.518,3678,1.518,3686,2.313,3714,2.136,3739,2.313,3751,4.775,3756,1.377,3789,2.55,3802,2.55,3828,1.117,3830,1.518,3837,1.377,3856,3.862,3860,1.518,3887,2.578,3891,1.377,3895,1.377,3898,2.313,3930,4.662,3933,1.518,3938,2.313,3949,1.518,4109,1.518,4112,1.187,4244,2.136,4252,5.408,4387,2.55,4411,1.272,4442,1.377,4445,4.305,4462,1.005,4463,2.181,4464,4.955,4465,1.733,4466,7.609,4467,4.305,4468,6.368,4469,1.733,4470,8.471,4471,3.763,4472,1.733,4473,1.733,4474,1.733,4475,1.733,4476,5.655,4477,1.733,4478,1.733,4479,1.733,4480,1.733,4481,1.733,4482,2.91,4483,1.733,4484,1.733,4485,1.733,4486,1.733,4487,1.733,4488,1.733,4489,3.763,4490,1.733,4491,1.733,4492,1.733,4493,1.733,4494,1.733,4495,8.314,4496,1.733,4497,1.733,4498,2.91,4499,1.733,4500,1.733,4501,6.564,4502,1.733,4503,1.733,4504,1.733,4505,5.655,4506,3.763,4507,2.91,4508,1.733,4509,1.733,4510,3.862,4511,3.763,4512,1.733,4513,1.733,4514,1.733,4515,1.733,4516,1.733,4517,1.733,4518,1.733,4519,1.733,4520,1.733,4521,1.733,4522,3.763,4523,1.733,4524,1.733,4525,1.733,4526,1.733,4527,1.733,4528,1.733,4529,1.733,4530,1.733,4531,3.763,4532,1.733,4533,1.733,4534,1.733,4535,1.733,4536,2.91,4537,1.733,4538,1.733,4539,2.91,4540,3.763,4541,1.733,4542,1.733,4543,1.733,4544,4.914,4545,1.733,4546,1.733,4547,1.733,4548,1.733,4549,1.733,4550,1.733,4551,1.733,4552,5.935,4553,2.91,4554,1.733,4555,1.733,4556,4.305,4557,1.733,4558,1.733,4559,3.763,4560,1.733,4561,1.733,4562,2.313,4563,2.91,4564,1.733,4565,1.733,4566,1.733,4567,1.733,4568,1.733,4569,1.733,4570,1.733,4571,1.733,4572,1.733,4573,1.733,4574,1.733,4575,1.733,4576,1.733,4577,1.733,4578,1.733,4579,1.733,4580,1.733,4581,1.733,4582,1.733,4583,1.733,4584,1.733,4585,1.733,4586,1.733,4587,1.733,4588,4.918,4589,2.99,4590,1.733,4591,1.518,4592,1.733,4593,1.733,4594,1.733,4595,1.733,4596,1.518,4597,1.733,4598,2.91,4599,1.733,4600,1.733,4601,1.733,4602,1.733,4603,1.733,4604,1.733,4605,1.733,4606,7.267,4607,1.733,4608,1.733,4609,1.733,4610,1.733,4611,1.733,4612,1.733,4613,1.733,4614,1.733,4615,1.518,4616,1.733,4617,1.733,4618,1.733,4619,6.172,4620,2.91,4621,1.733,4622,1.733,4623,1.733,4624,1.733,4625,1.733,4626,1.733,4627,1.518,4628,1.733,4629,1.733,4630,1.518,4631,1.733,4632,1.733,4633,1.733,4634,1.733,4635,1.733,4636,2.91,4637,1.733,4638,2.91,4639,1.733,4640,1.733,4641,1.733,4642,1.733,4643,2.91,4644,3.763,4645,1.518,4646,1.733,4647,1.733,4648,2.91,4649,1.733,4650,2.91,4651,1.733,4652,1.733,4653,1.733,4654,1.733,4655,1.733,4656,1.733,4657,1.733,4658,1.733,4659,1.733,4660,1.733,4661,1.733,4662,1.733,4663,1.733,4664,1.733,4665,1.733,4666,2.91,4667,1.733,4668,1.733,4669,1.733,4670,1.733,4671,1.733,4672,1.733,4673,1.733,4674,1.733,4675,1.733,4676,1.377,4677,1.733,4678,1.733,4679,1.733,4680,1.733,4681,1.733,4682,1.733,4683,1.733,4684,1.733,4685,1.733,4686,1.733,4687,1.733,4688,1.733,4689,1.733,4690,1.733,4691,1.733,4692,1.733,4693,1.733,4694,1.733,4695,1.733,4696,1.733,4697,1.733,4698,1.733,4699,1.733,4700,1.733,4701,2.91,4702,1.733,4703,1.733,4704,1.733,4705,1.733,4706,1.733,4707,2.91,4708,1.733,4709,1.733,4710,1.733,4711,2.91,4712,1.518,4713,7.079,4714,4.408,4715,1.733,4716,1.733,4717,1.733,4718,4.914,4719,1.733,4720,1.733,4721,1.733,4722,1.733,4723,1.733,4724,1.733,4725,1.733,4726,1.187,4727,1.733,4728,1.733,4729,4.408,4730,1.733,4731,1.733,4732,1.733,4733,1.733,4734,2.91,4735,1.733,4736,1.733,4737,1.733,4738,1.733,4739,1.733,4740,1.733,4741,1.733,4742,1.733,4743,1.733,4744,1.733,4745,1.733,4746,1.733,4747,1.733,4748,1.733,4749,1.733,4750,1.733,4751,1.733,4752,1.733,4753,1.733,4754,2.91,4755,1.733,4756,1.733,4757,1.733,4758,2.91,4759,1.733,4760,1.733,4761,1.733,4762,1.733,4763,1.733,4764,1.733,4765,1.733,4766,4.408,4767,1.733,4768,1.733,4769,1.733,4770,1.733,4771,1.733,4772,1.733,4773,1.733,4774,1.733,4775,6.847,4776,1.733,4777,1.733,4778,1.733,4779,1.733,4780,1.733,4781,1.733,4782,3.763,4783,1.733,4784,1.733,4785,1.733,4786,1.518,4787,1.733,4788,4.408,4789,1.733,4790,1.733,4791,1.733,4792,1.733,4793,1.733,4794,1.733,4795,1.733,4796,1.733,4797,1.733,4798,1.733,4799,1.733,4800,1.733,4801,1.733,4802,1.733,4803,1.733,4804,1.733,4805,1.377,4806,1.733,4807,4.914,4808,1.518,4809,1.733,4810,1.733,4811,1.733,4812,1.733,4813,1.733,4814,1.733,4815,1.733,4816,1.733,4817,1.733,4818,1.733,4819,1.733,4820,1.733,4821,3.763,4822,1.733,4823,1.733,4824,1.733,4825,1.733,4826,1.733,4827,1.733,4828,1.733,4829,1.733,4830,1.733,4831,1.733,4832,1.733,4833,1.733,4834,1.733,4835,1.733,4836,1.733,4837,1.733,4838,1.733,4839,1.377,4840,1.733,4841,1.733,4842,2.91,4843,1.733,4844,1.733,4845,1.733,4846,2.91,4847,1.733,4848,1.518,4849,1.733,4850,1.733,4851,1.733,4852,1.733,4853,1.733,4854,3.503,4855,1.733,4856,1.733,4857,1.733,4858,3.862,4859,1.733,4860,1.733,4861,1.733,4862,1.733,4863,1.733,4864,1.733,4865,1.733,4866,2.55,4867,1.733,4868,1.733,4869,1.733,4870,1.733,4871,1.733,4872,1.518,4873,1.518,4874,1.518,4875,1.518,4876,1.733,4877,1.733,4878,1.733,4879,1.733,4880,3.297,4881,1.733,4882,1.733,4883,1.733,4884,1.733,4885,1.733,4886,3.297,4887,2.313,4888,1.733,4889,1.733,4890,1.733,4891,1.733,4892,1.733,4893,1.733,4894,1.733,4895,1.733,4896,1.733,4897,1.733,4898,1.733,4899,1.733,4900,1.733,4901,1.733,4902,1.733,4903,1.733,4904,1.733,4905,1.733,4906,1.733,4907,1.733,4908,1.733,4909,1.733,4910,1.733,4911,1.733,4912,1.733,4913,1.733,4914,1.733,4915,1.733,4916,1.733,4917,1.733,4918,1.733,4919,1.733,4920,1.733,4921,1.733,4922,1.733,4923,1.733,4924,1.733,4925,1.733,4926,1.518,4927,1.733,4928,1.733,4929,1.733,4930,1.733,4931,1.733,4932,1.733,4933,1.733,4934,1.733,4935,1.733,4936,1.733,4937,1.733,4938,1.733,4939,1.733,4940,1.733,4941,1.518,4942,1.733,4943,1.733,4944,1.518,4945,1.733,4946,1.733,4947,1.518,4948,1.733,4949,1.733,4950,1.518,4951,1.733,4952,1.733,4953,4.408,4954,1.733,4955,2.55,4956,1.733,4957,1.733,4958,1.377,4959,1.733,4960,1.733,4961,1.733,4962,1.733,4963,1.733,4964,1.733,4965,1.733,4966,1.518,4967,1.518,4968,1.733,4969,2.91,4970,1.733,4971,1.733,4972,1.733,4973,1.518,4974,1.733,4975,1.733,4976,1.518,4977,1.272,4978,1.733,4979,1.733,4980,3.297,4981,1.733,4982,1.733,4983,1.733,4984,1.733,4985,1.733,4986,1.733,4987,1.733,4988,1.733,4989,1.733,4990,1.733,4991,1.733,4992,1.733,4993,1.733,4994,1.733,4995,1.187,4996,1.518,4997,1.518,4998,1.733,4999,1.518,5000,1.733,5001,1.733,5002,1.733,5003,2.91,5004,1.733,5005,1.733,5006,1.733,5007,1.733,5008,1.733,5009,2.55,5010,1.733,5011,1.733,5012,1.733,5013,1.733,5014,1.733,5015,1.733,5016,1.733,5017,1.733,5018,1.733,5019,1.733,5020,1.733,5021,1.733,5022,1.733,5023,1.733,5024,1.733,5025,1.733,5026,1.733,5027,1.733,5028,1.733,5029,1.733]],["title/coverage.html",[5030,5.06]],["body/coverage.html",[0,0.01,1,2.402,5,0.062,6,3.604,7,2.648,11,1.063,13,0.556,35,0.012,37,0.124,60,1.09,105,3.146,110,0.004,111,0.006,112,0.004,113,1.469,114,2.648,116,0.685,132,1.223,140,1.007,159,2.668,169,2.402,178,0.276,202,1.312,212,1.04,225,1.67,226,3.604,227,1.469,228,2.648,310,1.844,316,2.663,317,1.948,319,2.071,320,2.648,321,1.844,333,1.844,348,2.218,349,2.648,350,1.752,351,2.648,364,0.665,387,1.028,390,2.766,441,0.892,495,0.665,577,0.705,580,2.648,606,0.646,608,0.685,610,0.685,612,0.705,614,0.705,616,0.705,618,0.705,621,0.705,623,0.705,626,0.705,628,0.705,630,0.685,633,0.685,635,0.705,637,0.685,639,0.705,641,0.705,642,0.665,645,0.705,648,0.685,650,0.705,652,0.705,654,0.665,656,0.685,658,0.705,661,0.685,664,0.685,666,0.665,668,0.685,670,0.705,672,0.726,674,0.705,676,0.685,678,0.705,680,1.058,681,0.685,684,0.685,686,0.685,688,0.685,690,0.685,692,0.685,694,0.685,696,0.685,698,0.685,699,0.748,701,2.071,705,4.438,718,1.67,720,1.531,722,1.948,723,1.469,724,2.071,725,2.071,727,1.844,728,1.844,729,1.948,731,1.948,732,2.071,756,0.477,780,1.413,786,3.729,848,5.938,894,2.042,921,2.648,999,2.648,1004,2.507,1006,2.648,1046,2.648,1047,2.402,1048,2.648,1086,1.948,1087,3.604,1088,3.604,1110,2.218,1150,2.218,1151,3.604,1152,3.604,1191,2.218,1232,2.648,1270,2.648,1284,5.236,1306,1.531,1405,1.67,1406,3.9,1433,4.179,1442,1.844,1461,1.844,1465,1.752,1482,2.218,1483,3.994,1497,1.948,1515,1.67,1639,2.402,1640,2.218,1641,2.402,1661,1.844,1662,3.604,1668,1.948,1688,2.648,1689,2.402,1690,2.648,1710,5.964,2263,2.648,2277,2.218,2278,3.994,2328,1.597,2342,2.071,2408,2.648,2409,2.648,2471,2.648,2493,4.769,2494,4.325,2495,4.769,2497,2.648,2506,2.648,2512,2.648,2551,2.648,2552,2.402,2553,2.648,2558,5.3,2559,5.3,2564,2.648,2568,2.402,2569,5.679,2570,5.151,2579,2.402,2599,1.844,2604,2.648,2607,2.402,2715,2.629,2719,4.438,2722,3.328,2725,1.948,2729,3.197,2734,2.297,2738,2.071,2743,3.994,2754,3.328,2758,3.107,2759,4.325,2767,4.807,2770,2.402,2778,3.604,3098,3.604,3099,3.328,3100,3.994,3115,2.648,3147,3.604,3148,3.328,3149,3.604,3180,2.218,3189,2.071,3221,3.604,3224,1.844,3263,2.648,3264,2.402,3265,2.648,3384,2.648,3436,2.218,3437,3.604,3455,2.402,3458,2.402,3459,3.973,3460,3.604,3461,4.438,3606,2.218,3607,2.648,3608,2.648,3618,2.648,3647,3.604,3648,2.402,3649,2.648,3665,2.402,3666,2.648,3683,4.325,3709,2.218,3714,2.218,3749,2.402,3795,2.648,3855,2.648,3925,2.648,3926,2.402,3927,2.648,3986,4.994,3987,2.402,3988,2.648,4032,5.151,4080,2.402,4099,2.648,4100,2.648,4137,2.218,4138,3.604,4139,3.328,4160,2.648,4161,2.648,4170,2.402,4213,4.756,4216,2.402,4227,3.604,4238,2.648,4244,2.218,4245,2.648,4246,2.648,4251,2.648,4284,2.648,4316,2.648,4323,3.973,4324,2.648,4329,3.973,4330,3.973,4331,2.648,4335,3.973,4336,3.973,4337,2.648,4339,4.769,4340,2.648,4354,2.648,4356,3.973,4357,3.973,4358,2.648,4361,3.973,4362,3.973,4364,2.648,4439,2.648,4440,2.402,4467,2.648,4556,2.648,4588,2.071,4627,2.648,4630,3.973,5030,2.648,5031,3.022,5032,5.443,5033,2.648,5034,3.022,5035,3.022,5036,3.022,5037,7.26,5038,3.022,5039,8.069,5040,6.481,5041,6.481,5042,3.022,5043,8.766,5044,3.022,5045,3.022,5046,3.022,5047,3.022,5048,4.535,5049,3.022,5050,3.022,5051,4.535,5052,3.022,5053,3.022,5054,3.022,5055,4.535,5056,5.443,5057,3.022,5058,5.443,5059,6.481,5060,6.481,5061,3.022,5062,6.481,5063,6.049,5064,3.022,5065,3.022,5066,3.022,5067,3.022,5068,3.022,5069,3.022,5070,3.022,5071,3.022,5072,3.022,5073,3.022,5074,3.022,5075,3.022,5076,3.022,5077,3.022,5078,6.481,5079,3.022,5080,4.535,5081,4.535,5082,3.022,5083,3.022,5084,3.022,5085,3.022,5086,4.535,5087,4.535,5088,3.022,5089,3.022,5090,3.022,5091,3.022,5092,3.022,5093,3.022,5094,3.022,5095,3.022,5096,3.022,5097,5.443,5098,4.535,5099,3.022,5100,3.022,5101,3.022,5102,3.022,5103,3.022,5104,3.022,5105,3.022,5106,3.022,5107,3.022,5108,3.022,5109,5.443,5110,5.443,5111,3.022,5112,2.402,5113,4.535,5114,3.022,5115,4.535,5116,8.122,5117,3.022,5118,3.022,5119,4.535,5120,3.022,5121,3.022,5122,3.022,5123,3.022,5124,3.022,5125,3.022,5126,3.022,5127,3.022,5128,3.022,5129,3.022,5130,3.022,5131,3.022,5132,6.806,5133,3.022,5134,3.022,5135,3.022,5136,3.022,5137,3.022,5138,3.022,5139,5.443,5140,5.443,5141,3.022,5142,3.022,5143,7.564,5144,6.481,5145,3.022,5146,3.022,5147,3.022,5148,6.481,5149,3.022,5150,3.022,5151,3.022,5152,3.022,5153,3.022,5154,4.535,5155,3.022,5156,3.022,5157,3.022]],["title/dependencies.html",[1002,2.157,1003,2.475]],["body/dependencies.html",[35,0.012,92,0.514,93,1.2,94,3.204,110,0.008,111,0.01,112,0.008,283,2.958,288,3.343,418,2.958,428,3.859,493,3.204,533,4.549,599,3.076,600,3.487,624,1.565,815,3.343,1003,3.076,1004,3.497,1107,4.642,1144,6.534,1149,5.027,1407,3.859,1527,3.859,2579,5.027,2580,5.472,2606,5.027,2607,5.027,2610,5.543,3837,5.027,4187,5.543,4596,5.543,4615,5.543,4712,5.543,4848,5.543,5158,6.326,5159,8.661,5160,6.326,5161,6.326,5162,6.326,5163,6.326,5164,6.326,5165,6.326,5166,6.326,5167,5.543,5168,6.326,5169,6.326,5170,6.326,5171,6.326,5172,6.326,5173,6.326]],["title/miscellaneous/enumerations.html",[5174,3.099,5175,4.46]],["body/miscellaneous/enumerations.html",[3,0.234,19,0.252,35,0.012,51,0.981,52,1.181,105,2.176,110,0.008,111,0.01,112,0.008,170,1.226,310,3.741,392,3.39,461,5.374,464,4.874,779,2.963,780,2.868,781,3.954,1171,2.865,1406,3.954,1420,4.466,1434,4.202,1435,4.202,1436,4.202,1437,4.202,1438,3.954,1439,4.202,1440,4.202,1441,4.202,1483,4.501,1489,5.818,1490,5.372,1491,5.818,1492,5.818,1499,4.874,1639,4.874,1640,4.501,1641,5.818,1648,6.415,1656,4.874,2030,5.374,2278,4.501,2307,5.818,2324,5.818,2711,4.202,2715,3.555,2719,4.501,2722,4.501,5033,5.374,5174,5.374,5175,5.374,5176,6.133,5177,7.321,5178,6.133,5179,6.133,5180,7.321,5181,6.133,5182,6.133,5183,6.133,5184,6.133,5185,6.133,5186,6.133,5187,6.133,5188,6.133,5189,6.133]],["title/index.html",[19,0.145,4462,2.05,4463,2.05]],["body/index.html",[35,0.011,90,0.239,110,0.008,111,0.01,112,0.008,144,1.328,254,2.384,264,4.061,322,3.651,323,3.482,329,3.329,336,2.099,353,1.171,358,4.588,359,3.651,387,1.427,504,4.622,795,4.061,1001,4.111,1008,4.622,1123,4.316,1136,4.316,1691,5.458,2271,4.061,2303,4.111,2514,3.651,2599,3.842,2716,5.006,2907,4.622,3358,5.006,3486,6.517,3687,5.006,3781,5.006,4156,4.795,4385,5.519,4462,3.651,4463,3.651,4588,5.603,4591,6.517,4786,6.517,4926,5.519,4977,4.622,5190,6.299,5191,6.299,5192,6.299,5193,7.438,5194,6.299,5195,6.299,5196,6.299,5197,6.299,5198,7.438,5199,6.299,5200,6.299,5201,6.299,5202,6.299,5203,6.299,5204,6.299,5205,6.299,5206,6.299,5207,6.299]],["title/license.html",[4462,2.05,4463,2.05,5112,2.811]],["body/license.html",[5,0.133,35,0.011,58,1.619,110,0.009,111,0.01,112,0.009,180,3.618,332,2.743,357,1.821,498,3.061,723,3.183,893,4.803,899,3.993,1549,4.803,1786,4.485,2302,3.993,2974,5.185,3365,5.202,4019,4.803,5112,6.838,5208,6.546,5209,6.546,5210,6.546,5211,6.546,5212,6.546,5213,6.546,5214,6.546,5215,6.546,5216,6.546,5217,6.546,5218,6.546,5219,5.736,5220,6.546,5221,7.607,5222,6.546,5223,6.546,5224,6.546,5225,6.546,5226,6.546,5227,6.546,5228,6.546,5229,6.546,5230,6.546,5231,6.546]],["title/modules.html",[1122,3.522]],["body/modules.html",[35,0.01,110,0.009,111,0.01,112,0.009,533,4.762,1121,4.413,1122,4.176,2700,6.84,4156,4.413,4645,6.84,5232,7.806]],["title/overview.html",[5233,5.06]],["body/overview.html",[2,1.702,35,0.012,110,0.005,111,0.007,112,0.005,144,0.726,318,2.355,321,2.479,336,1.354,364,1.699,495,1.699,577,1.801,600,1.9,601,0.976,606,1.649,608,1.749,610,1.749,612,1.801,614,1.801,616,1.801,618,1.801,621,1.801,623,1.801,626,1.801,628,1.801,630,1.749,633,1.749,635,1.801,637,1.749,639,1.801,641,1.801,642,1.699,645,1.801,648,1.749,650,1.801,652,1.801,654,1.699,656,1.749,658,1.801,661,1.749,664,1.749,666,1.699,668,1.749,670,1.801,672,1.854,674,1.801,676,1.749,678,1.801,681,1.749,683,0.794,684,1.749,686,1.749,688,1.749,690,1.749,692,1.749,694,1.749,696,1.749,698,1.749,702,1.397,779,1.644,851,1.644,1003,1.976,1086,4.147,1120,2.479,1121,4.976,1122,2.479,1123,2.784,1124,3.229,1125,3.56,1126,3.56,1127,3.56,1128,3.56,1129,4.461,1130,2.981,1171,1.59,2719,2.981,2725,2.619,2743,2.981,2786,3.229,4156,5.801,4157,3.56,4158,3.56,4159,3.56,5233,3.56,5234,4.063]],["title/todo.html",[9,1.013,4462,2.05,4463,2.05]],["body/todo.html",[9,2.369,10,2.671,13,1.121,16,2.217,35,0.011,39,1.316,51,0.816,53,1.055,58,1.506,76,3.53,110,0.008,111,0.01,112,0.008,123,1.114,144,1.087,152,2.382,172,1.081,183,3.109,191,1.909,208,3.714,329,3.218,353,0.872,357,2.028,358,3.53,359,3.53,450,3.084,504,4.468,522,3.218,596,4.172,682,1.551,711,1.421,845,3.134,881,3.714,926,5.335,927,5.335,976,4.918,1019,3.365,1023,5.793,1062,5.03,1263,4.468,1275,4.226,1551,4.468,1568,4.172,1657,4.839,2270,3.53,2296,4.468,2302,3.714,2606,4.839,2619,3.714,3075,4.468,3128,4.839,4250,5.335,4440,4.839,4442,4.839,4468,5.335,4866,5.335,5235,6.088,5236,6.088,5237,6.088,5238,6.088,5239,6.088,5240,6.088,5241,6.088,5242,6.088,5243,6.088,5244,6.088,5245,6.088,5246,6.088,5247,6.088,5248,6.088,5249,6.088,5250,6.088,5251,6.088,5252,6.088,5253,6.088]],["title/additional-documentation/getting-started.html",[72,0.559,4462,1.761,4463,1.761,4726,2.081]],["body/additional-documentation/getting-started.html",[0,0.007,2,3.474,5,0.105,10,1.888,12,2.333,16,1.568,17,3.197,23,0.667,35,0.012,48,4.825,76,2.987,85,2.987,90,0.324,95,0.232,110,0.007,111,0.009,112,0.007,115,1.101,144,1.407,155,2.321,172,0.714,177,3.075,180,3.634,198,0.893,225,4.002,227,3.197,230,3.434,231,3.144,234,3.531,252,3.144,254,1.951,269,2.237,316,2.016,318,3.812,322,3.812,323,3.634,324,2,331,5.761,334,1.568,336,2.191,353,1.244,357,1.434,358,5.024,359,4.421,392,2.849,415,3.322,426,2.41,467,2.987,469,1.888,475,2.016,480,4.515,488,2.237,494,2.506,496,4.515,499,3.144,510,2.724,624,1.275,702,2.261,718,2.849,720,3.667,741,2.724,756,0.813,768,3.531,782,2.237,795,3.322,800,2.724,962,3.782,1021,2.987,1033,4.095,1051,4.515,1111,4.961,1120,4.011,1121,4.239,1123,4.505,1135,4.515,1136,5.226,1155,3.322,1310,2.237,1342,2.016,1405,2.849,1420,3.144,1465,2.987,1522,3.144,1553,3.531,1568,3.531,1700,3.531,2303,2.849,2335,4.825,2387,3.782,2514,2.987,2535,3.322,2623,4.095,2664,4.095,2974,4.239,3224,4.011,3390,4.505,3476,4.515,3651,4.515,3656,3.782,3661,4.095,3828,3.322,4156,4.917,4384,4.515,4462,2.987,4463,2.987,4510,6.345,4588,3.531,4808,4.515,4839,4.095,4872,5.761,4873,6.683,4874,4.515,4875,4.515,4887,4.095,4947,6.683,4967,5.761,5254,5.153,5255,4.515,5256,4.515,5257,7.879,5258,5.153,5259,5.153,5260,5.153,5261,5.153,5262,5.153,5263,5.153,5264,5.153,5265,5.153,5266,5.153,5267,5.153,5268,5.153,5269,5.153,5270,5.153,5271,5.153,5272,5.153,5273,5.153,5274,5.153,5275,5.153,5276,4.095,5277,5.153,5278,5.153,5279,4.515,5280,5.153,5281,6.575,5282,5.153,5283,5.153]],["title/additional-documentation/local-development.html",[72,0.559,2505,1.958,3828,1.958,4726,2.081]],["body/additional-documentation/local-development.html",[35,0.01,110,0.009,111,0.01,112,0.009,144,1.231,2505,4.444,3828,4.444,4995,5.37]],["title/additional-documentation/local-development/schematics.html",[72,0.651,4726,2.423,4995,2.423]],["body/additional-documentation/local-development/schematics.html",[5,0.102,10,2.767,16,1.967,17,2.441,35,0.011,36,0.581,44,1.839,58,1.242,72,0.924,75,3.99,76,3.748,81,3.44,87,3.063,98,0.982,110,0.007,111,0.008,112,0.007,144,1.155,177,2.348,178,0.161,183,1.839,269,3.105,304,2.895,312,3.99,322,3.748,334,1.527,353,1.166,357,1.99,358,4.903,359,2.91,362,3.684,392,2.775,394,2.91,428,3.944,434,5.542,450,3.275,451,3.401,452,3.275,499,3.063,501,3.99,519,2.18,523,3.237,591,3.063,715,1.964,738,3.144,742,2.18,756,1.233,782,2.807,800,3.78,810,2.104,849,3.44,922,5.248,1001,4.643,1003,2.441,1017,4.399,1018,3.99,1019,4.175,1122,3.944,1140,4.399,1201,3.684,1310,2.18,1494,3.237,1536,2.653,1564,2.91,1592,3.99,1691,3.684,1700,3.44,2302,3.944,2303,2.775,2312,3.748,2316,3.063,2379,3.684,2388,3.237,2513,3.684,2514,2.91,2565,5.138,2619,3.063,2655,4.745,2760,4.399,2766,4.399,2776,4.399,2810,5.248,2879,3.99,2907,3.684,2941,3.684,3006,4.399,3136,4.399,3500,4.399,3545,4.399,3656,4.745,3751,5.175,4112,3.44,4411,6.051,4466,4.399,4501,4.399,4562,5.684,4589,5.138,4676,3.99,4805,3.99,4854,3.99,4880,4.399,4886,5.665,4955,4.399,4958,6.002,4966,4.399,4976,6.267,4977,4.745,4980,4.399,4995,5.939,4996,6.848,4997,6.618,4999,4.399,5167,5.665,5219,4.399,5256,4.399,5276,6.676,5279,4.399,5284,4.399,5285,4.399,5286,5.02,5287,6.466,5288,4.399,5289,5.02,5290,5.02,5291,5.02,5292,7.553,5293,6.466,5294,5.02,5295,5.02,5296,5.02,5297,5.02,5298,5.02,5299,5.02,5300,5.02,5301,5.02,5302,5.02,5303,4.399,5304,5.665,5305,5.02,5306,5.02,5307,5.02,5308,6.466,5309,5.02,5310,5.02,5311,5.02,5312,5.02,5313,5.02,5314,5.02,5315,5.02,5316,5.02,5317,5.02,5318,5.02,5319,5.02,5320,5.02,5321,5.02,5322,5.02,5323,5.02,5324,5.02,5325,5.02,5326,5.02,5327,5.02,5328,5.02,5329,5.02,5330,5.02,5331,5.02,5332,5.02,5333,5.02,5334,5.02,5335,5.02,5336,5.02,5337,5.02,5338,5.02,5339,5.02,5340,5.02,5341,5.02,5342,5.02,5343,5.02,5344,5.02,5345,5.02,5346,5.02,5347,4.399,5348,4.399]],["title/additional-documentation/local-development/components.html",[72,0.651,144,0.632,4726,2.423]],["body/additional-documentation/local-development/components.html",[5,0.103,10,2.871,17,2.46,28,4.768,32,0.43,35,0.011,36,0.528,55,2.562,58,1.252,75,4.021,76,4.542,87,3.086,90,0.247,98,0.989,110,0.007,111,0.008,112,0.007,144,1.161,174,2.1,177,3.039,178,0.162,254,1.915,269,2.821,322,4.161,325,4.433,329,2.674,330,4.021,332,2.723,334,1.539,353,1.239,357,1.408,358,4.937,359,4.837,392,2.797,394,2.933,408,4.021,428,3.964,429,4.433,434,5.559,450,2.562,453,5.164,454,4.452,460,3.713,472,4.433,475,3.065,479,2.933,488,2.821,494,2.46,502,4.768,513,4.433,519,2.197,711,1.516,738,2.46,751,1.216,756,0.798,764,2.933,779,2.63,782,2.197,800,4.141,839,3.262,922,6.061,965,4.433,982,3.262,1001,4.612,1002,3.086,1003,2.46,1008,3.713,1011,3.262,1122,3.086,1172,3.262,1310,2.197,1550,3.713,1553,3.467,2280,4.452,2303,4.766,2319,4.768,2505,4.884,2580,3.713,2658,4.433,2810,3.713,2836,3.713,2974,3.262,3348,5.694,3389,5.164,3494,4.021,3656,3.713,3751,5.587,3828,4.628,3838,4.433,3904,4.433,3951,5.694,4411,5.268,4562,5.164,4588,3.467,4589,4.021,4676,5.164,4805,4.021,4839,4.021,4854,4.021,4858,4.433,4887,4.021,4941,4.433,4944,5.694,4950,4.433,4958,6.02,4973,4.433,4977,4.768,4995,5.763,5009,4.433,5255,4.433,5276,6.685,5284,4.433,5285,5.694,5288,4.433,5303,5.694,5304,5.694,5347,4.433,5348,4.433,5349,5.06,5350,5.06,5351,5.06,5352,5.06,5353,6.498,5354,6.498,5355,5.06,5356,5.06,5357,5.06,5358,5.06,5359,6.498,5360,5.06,5361,5.06,5362,5.06,5363,5.06,5364,6.498,5365,7.178,5366,6.498,5367,5.06,5368,7.178,5369,5.06,5370,5.06,5371,5.06,5372,5.06,5373,5.06,5374,5.06,5375,5.06,5376,5.06,5377,5.06,5378,5.06,5379,5.06,5380,5.06,5381,5.06,5382,5.06,5383,5.06,5384,5.06]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":105,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.17",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["0.0.31",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["0.0.32",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["0.0.33",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["0.0.34",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":5164,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":2990,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.8.26",{"_index":5173,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":2870,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":5043,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5072,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5085,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5037,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5062,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5078,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5032,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5051,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5096,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5050,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["000000000",{"_index":4282,"title":{},"body":{"components/SinComponent.html":{}}}],["009d779",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["015602c",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":5024,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["02cb2c5",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":4980,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["03c1243",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4501,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["0699178",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["09ae712",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["09ce95a",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["0ba1d1e",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["0ed3875",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["0s",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1171,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":4848,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":5039,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5076,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5095,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":5052,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5069,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":5107,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":5061,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5060,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5056,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5102,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5048,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5086,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5058,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5053,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2734,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["10.256s",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["10/31",{"_index":5068,"title":{},"body":{"coverage.html":{}}}],["10/38",{"_index":5071,"title":{},"body":{"coverage.html":{}}}],["10/54",{"_index":5064,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1284,"title":{},"body":{"components/CityComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["1024",{"_index":2959,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":2977,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["108e46b",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["10^10",{"_index":3731,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["10th",{"_index":3919,"title":{},"body":{"components/PhnComponent.html":{}}}],["11",{"_index":2738,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["111",{"_index":3867,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["1111",{"_index":3866,"title":{},"body":{"components/PhnComponent.html":{}}}],["12",{"_index":2743,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1251212",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["126d876",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2754,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["1303722",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2759,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["14bce6e",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":2763,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["151f173",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2767,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["1650a23",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["16be24b",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["16da113",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2770,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["18",{"_index":2778,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["180",{"_index":4308,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185148b",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["185px",{"_index":2367,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["18d69c6",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2786,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"overview.html":{}}}],["19/23",{"_index":5036,"title":{},"body":{"coverage.html":{}}}],["1].iscomplete",{"_index":1223,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["1a1",{"_index":4017,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["1c51f01",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["1c8242e",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["1f1a0f9",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":779,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":5212,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":3655,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["2.0.1",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["2.0.550",{"_index":5170,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":5216,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["2.1.3",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["2.1.4",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["2.10.0",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["2.11.0",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["2.12.0",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["2.13.0",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["2.14.0",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["2.15.0",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["2.16.0",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["2.16.2",{"_index":5162,"title":{},"body":{"dependencies.html":{}}}],["2.17.0",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["2.17.1",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["2.18.0",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["2.18.1",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["2.19.0",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["2.20.0",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["2.20.1",{"_index":4615,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.21.0",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["2.22.0",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["2.23.0",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["2.24.0",{"_index":4596,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.26.0",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["2.27.0",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["2.27.1",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["2.27.2",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["2.28.0",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["2.5.1",{"_index":4712,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5.2",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":5168,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["2.7.0",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["2.7.1",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["2.8.0",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["2.9.0",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["2/12",{"_index":5087,"title":{},"body":{"coverage.html":{}}}],["2/20",{"_index":5077,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":5074,"title":{},"body":{"coverage.html":{}}}],["2/27",{"_index":5082,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5092,"title":{},"body":{"coverage.html":{}}}],["2/30",{"_index":5055,"title":{},"body":{"coverage.html":{}}}],["2/33",{"_index":5080,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5108,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":5073,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4467,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2017",{"_index":5209,"title":{},"body":{"license.html":{}}}],["2019",{"_index":4466,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":2369,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["21afb82",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":4556,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2235059",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["224e362",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["22710b7",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["238c01d",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":786,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["250",{"_index":787,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{}}}],["255",{"_index":2524,"title":{},"body":{"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{}}}],["26",{"_index":4630,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26(a",{"_index":3505,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["2600",{"_index":2992,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":4627,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["27b488b",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["28d9585",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["29c5160",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["29e521c",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["2a511e7",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["2c0b127",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["2c2f322",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["2ddfc23",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["2ebd235",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":780,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":4468,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["3.2.0",{"_index":5169,"title":{},"body":{"dependencies.html":{}}}],["3/21",{"_index":5054,"title":{},"body":{"coverage.html":{}}}],["3/31",{"_index":5070,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":5081,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5094,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2835,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["300",{"_index":4304,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":3714,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["33",{"_index":5059,"title":{},"body":{"coverage.html":{}}}],["3300",{"_index":2995,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["34f0a40",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":5089,"title":{},"body":{"coverage.html":{}}}],["355945207",{"_index":3755,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":5105,"title":{},"body":{"coverage.html":{}}}],["36476f8",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["36eeddb",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":5234,"title":{},"body":{"overview.html":{}}}],["3868c50",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["38c822b",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["3a06f99",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["3a5677b",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["3a98fb0",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["3ac6d4d",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["3f1149e",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["3f42b31",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["3f6a466",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2711,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["4.3.1",{"_index":5166,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":5099,"title":{},"body":{"coverage.html":{}}}],["4/15",{"_index":5104,"title":{},"body":{"coverage.html":{}}}],["4/29",{"_index":5079,"title":{},"body":{"coverage.html":{}}}],["4/40",{"_index":5034,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2365,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["4/9",{"_index":5101,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":5098,"title":{},"body":{"coverage.html":{}}}],["400/500",{"_index":267,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["41f5609",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["4295b03",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":5100,"title":{},"body":{"coverage.html":{}}}],["4766a2b",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["47d614a",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["483b735",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["48e2120",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["492934b",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["496c252",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["4bb54c0",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["4d39002",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["4d5992a",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["4f3e59f",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["4f8f2e7",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2715,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5/14",{"_index":5090,"title":{},"body":{"coverage.html":{}}}],["5/38",{"_index":5084,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2758,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["5069fe8",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["50ms",{"_index":3121,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["510ad9e",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["51bfe3b",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["51f2ea4",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["532a3ec",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["5362c67",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["53a109b",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["5441be2",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":3969,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5555",{"_index":3970,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5910979",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["5965aec",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["5a7c37b",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["5b18c5f",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["5b88093",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["5bb54fc",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["5d8f61d",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":2719,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.4.0",{"_index":5171,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":5194,"title":{},"body":{"index.html":{}}}],["60befc2",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["61b54fd",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["61c0cdc",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["6242bea",{"_index":4993,"title":{},"body":{"changelog.html":{}}}],["6254d29",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["6427f10",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["655a0fd",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["65b8144",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":5091,"title":{},"body":{"coverage.html":{}}}],["6650ef8",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["66e58e7",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["66f9608",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["6775a4d",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["679ac15",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["67b6f78",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["67c4797",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["6b8cedd",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["6c09982",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["6caf36c",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":5026,"title":{},"body":{"changelog.html":{}}}],["6f093d2",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2722,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":5159,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":5103,"title":{},"body":{"coverage.html":{}}}],["7/39",{"_index":5057,"title":{},"body":{"coverage.html":{}}}],["71eb531",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["7226b37",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["730f9c7",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["7355610",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["7398e93",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["7400a64",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":5093,"title":{},"body":{"coverage.html":{}}}],["788c3d1",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["7c99c1e",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["7d274e8",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["7d2e7cd",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["7e270d8",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["7febf6d",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["7ff8510",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2725,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"coverage.html":{},"overview.html":{}}}],["8.9.4",{"_index":5192,"title":{},"body":{"index.html":{}}}],["8/22",{"_index":5106,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":5075,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["82",{"_index":5035,"title":{},"body":{"coverage.html":{}}}],["8248e61",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["8361a0e",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["8380850",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["83d31d",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["85eab15",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["867f969",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["88bc3f3",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["8a22405",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["8aa41ec",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["8e823c5",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["8f24e2e",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["8f6886f",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["8fc79af",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2729,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["9.0.0",{"_index":5165,"title":{},"body":{"dependencies.html":{}}}],["9/49",{"_index":5049,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":5088,"title":{},"body":{"coverage.html":{}}}],["901885e",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["96a58b1",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["978250b",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["9855d9c",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["996cad7",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["9])[a",{"_index":4351,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["9][a",{"_index":4348,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["9]{1}\\\\d{2",{"_index":3956,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["9a38474",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["9dc5375",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["9f5a04e",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":185,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["_applicationheadermap",{"_index":3553,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["_bypassguards",{"_index":1156,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_continue",{"_index":4116,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_continue(pageurl",{"_index":4118,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_defaulterrmsg",{"_index":120,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.duplicate",{"_index":3924,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.incompletevalue",{"_index":3985,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["_defaulterrmsg.invalid",{"_index":3923,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.invalidchar",{"_index":1404,"title":{},"body":{"components/CityComponent.html":{},"components/ProvinceComponent.html":{}}}],["_defaulterrmsg.invalidemail",{"_index":2550,"title":{},"body":{"components/EmailComponent.html":{}}}],["_defaulterrmsg.required",{"_index":1403,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_headers",{"_index":231,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["_label",{"_index":199,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["_log",{"_index":1602,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_log(message",{"_index":1530,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_logerror",{"_index":1603,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_logerror(errormessage",{"_index":1533,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_name",{"_index":3844,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":3845,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":536,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":121,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["_only_",{"_index":4398,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":122,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["_sendlog",{"_index":1604,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_sendlog(message",{"_index":1555,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_starturl",{"_index":1157,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_value",{"_index":3453,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["a11y",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["a1a",{"_index":4016,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a1b8211",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["a1bd381",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["a27faa9",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["a512eb0",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["a702d6d",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["a73785f",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["a7efeee",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["a9aaf59",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["a9cafca",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["aa",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["aa2b7f9",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["aad93b5",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":1364,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ability",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["abiltiy",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["abilty",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["abort",{"_index":2741,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":3656,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["abstact",{"_index":3966,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["abstract",{"_index":12,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["abstractapi",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["abstractcontrol",{"_index":2502,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["abstractform",{"_index":1,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstractformcontrol",{"_index":113,"title":{"classes/AbstractFormControl.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["abstractformcontrol:10",{"_index":1320,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:13",{"_index":1290,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:15",{"_index":1288,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:18",{"_index":1289,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:22",{"_index":1321,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:23",{"_index":1322,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:26",{"_index":1299,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:31",{"_index":1305,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:34",{"_index":1300,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:39",{"_index":1301,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:44",{"_index":1303,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:48",{"_index":1304,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:65",{"_index":1302,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstracthttpservice",{"_index":225,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:12",{"_index":1629,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:17",{"_index":1628,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:23",{"_index":1623,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:31",{"_index":1625,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:39",{"_index":1626,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:60",{"_index":1624,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:63",{"_index":1622,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstractpgcheckservice",{"_index":317,"title":{"injectables/AbstractPgCheckService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["abstractpgservice",{"_index":4104,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["abstracttestpage",{"_index":348,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["abw",{"_index":1740,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ac7406b",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["ac9d61c",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["acbbdc1",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":3005,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":2705,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["access",{"_index":48,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessed",{"_index":858,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["accessibility",{"_index":4445,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["accessible",{"_index":2336,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["accessors",{"_index":237,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["accidentally",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["accordion",{"_index":584,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion'},{'name",{"_index":605,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["accordion.component.html",{"_index":588,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion.component.scss",{"_index":586,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordioncommoncomponent",{"_index":577,"title":{"components/AccordionCommonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordioncomponent",{"_index":581,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordionmodule",{"_index":4203,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accordionmodule.forroot",{"_index":4243,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accusamus",{"_index":1365,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aceb028",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["acl",{"_index":3601,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["act",{"_index":3511,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["action",{"_index":60,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":4122,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["activeindex",{"_index":4368,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":2387,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":700,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["adam",{"_index":5206,"title":{},"body":{"index.html":{}}}],["add",{"_index":304,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"components/PhnComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":215,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["adding",{"_index":1700,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["addition",{"_index":3325,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["additional",{"_index":4726,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"changelog.html":{}}}],["additionaldocumentation",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["addline(line",{"_index":836,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addpackagejsonscript",{"_index":5149,"title":{},"body":{"coverage.html":{}}}],["addpackagetopackagejson",{"_index":5141,"title":{},"body":{"coverage.html":{}}}],["addr",{"_index":768,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/getting-started.html":{}}}],["addr.city",{"_index":3353,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.country",{"_index":3354,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.province",{"_index":3356,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.street",{"_index":3357,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["address",{"_index":720,"title":{"classes/Address.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":607,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["address();the",{"_index":5277,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address(val",{"_index":752,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.addressline2",{"_index":766,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.html",{"_index":736,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.scss",{"_index":737,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.model.ts",{"_index":5244,"title":{},"body":{"todo.html":{}}}],["address1",{"_index":706,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["address2",{"_index":707,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address3",{"_index":708,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address_url",{"_index":3227,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresschange",{"_index":755,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addresscomponent",{"_index":606,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addresses",{"_index":897,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline${line",{"_index":853,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline1",{"_index":924,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["addressline2",{"_index":801,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline3",{"_index":925,"title":{},"body":{"classes/Address.html":{}}}],["addressmodel",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["addresss",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["addrlabellist",{"_index":701,"title":{"interfaces/AddrLabelList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["addrlabels",{"_index":774,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addrlookup",{"_index":852,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["adds",{"_index":757,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{}}}],["addtag",{"_index":2474,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":2475,"title":{},"body":{"components/DropdownComponent.html":{}}}],["adipisicing",{"_index":1332,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["administer",{"_index":3515,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["advantages",{"_index":1012,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ae493e7",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["aee4761",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["af516d0",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["af91989",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["afg",{"_index":1714,"title":{},"body":{"interfaces/CountryList.html":{}}}],["afghanistan",{"_index":1715,"title":{},"body":{"interfaces/CountryList.html":{}}}],["africa",{"_index":2169,"title":{},"body":{"interfaces/CountryList.html":{}}}],["african",{"_index":1811,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aftercontentinit",{"_index":2571,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["afterviewinit",{"_index":2575,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["again",{"_index":2766,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["against",{"_index":3909,"title":{},"body":{"components/PhnComponent.html":{}}}],["age",{"_index":3814,"title":{},"body":{"classes/Person.html":{}}}],["ago",{"_index":1727,"title":{},"body":{"interfaces/CountryList.html":{}}}],["agreecheck",{"_index":3559,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agreeconsentmodal",{"_index":367,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["agreed",{"_index":5218,"title":{},"body":{"license.html":{}}}],["agreelabel",{"_index":3536,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agrees",{"_index":407,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["aia",{"_index":1729,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aka",{"_index":3477,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ala",{"_index":1716,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alb",{"_index":1719,"title":{},"body":{"interfaces/CountryList.html":{}}}],["albania",{"_index":1720,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alberta",{"_index":4056,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["algeria",{"_index":1722,"title":{},"body":{"interfaces/CountryList.html":{}}}],["algorithm",{"_index":2769,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["alias",{"_index":1390,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["allow",{"_index":181,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["allowed",{"_index":2980,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["allowextralines",{"_index":767,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["allowing",{"_index":1184,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["allowinternational",{"_index":3933,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["allvalidators",{"_index":219,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PhoneNumberComponent.html":{}}}],["allvalidators.push",{"_index":222,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["allvalidators.push(this.controldir.control.validator",{"_index":3976,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["alone",{"_index":3535,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["along",{"_index":246,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":1522,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":1437,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":290,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["american",{"_index":1724,"title":{},"body":{"interfaces/CountryList.html":{}}}],["amet",{"_index":1330,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["amultiples",{"_index":2949,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":2961,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["and/or",{"_index":4015,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["andorra",{"_index":1726,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angola",{"_index":1728,"title":{},"body":{"interfaces/CountryList.html":{}}}],["anguilla",{"_index":1730,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angular",{"_index":76,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":1586,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["angular.json",{"_index":5347,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular/animations",{"_index":5158,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1149,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":282,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":5160,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1107,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1144,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":288,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":2686,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["animi",{"_index":1377,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["another",{"_index":71,"title":{},"body":{"classes/AbstractForm.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["answer",{"_index":1102,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["answer.label",{"_index":1085,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["antarctica",{"_index":1732,"title":{},"body":{"interfaces/CountryList.html":{}}}],["antigua",{"_index":1734,"title":{},"body":{"interfaces/CountryList.html":{}}}],["any)).then((pdfdoc",{"_index":3058,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":2673,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":1430,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["anywhere",{"_index":5297,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":5211,"title":{},"body":{"license.html":{}}}],["aperiam",{"_index":1353,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["api",{"_index":227,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":1097,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apidobformat",{"_index":3796,"title":{},"body":{"classes/Person.html":{}}}],["apiservice",{"_index":5273,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["apistatuscodes",{"_index":1648,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"miscellaneous/enumerations.html":{}}}],["apistatuscodes.error",{"_index":1659,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.success",{"_index":1649,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.warning",{"_index":1660,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apostrophe",{"_index":3193,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["apostrophes",{"_index":1316,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["app",{"_index":3464,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["appcomponentcss",{"_index":5120,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":5121,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":2629,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":3951,"title":{},"body":{"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["appears",{"_index":401,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["appendselectortobody",{"_index":2361,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["applicable",{"_index":893,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["applicant",{"_index":1185,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["applicants",{"_index":1188,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["application",{"_index":475,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":325,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/local-development/components.html":{}}}],["application.information",{"_index":3501,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["applicationbase",{"_index":2601,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":1501,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["applications",{"_index":979,"title":{},"body":{"classes/Address.html":{}}}],["appropriate",{"_index":849,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":2948,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["apps",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["arab",{"_index":2194,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arabia",{"_index":2144,"title":{},"body":{"interfaces/CountryList.html":{}}}],["architecto",{"_index":1339,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aren't",{"_index":1598,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["arg",{"_index":1736,"title":{},"body":{"interfaces/CountryList.html":{}}}],["argentina",{"_index":1737,"title":{},"body":{"interfaces/CountryList.html":{}}}],["args",{"_index":3032,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":2774,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":2414,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":3789,"title":{},"body":{"components/PasswordComponent.html":{},"changelog.html":{}}}],["arm",{"_index":1738,"title":{},"body":{"interfaces/CountryList.html":{}}}],["armenia",{"_index":1739,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aroud",{"_index":3395,"title":{},"body":{"components/HeaderComponent.html":{}}}],["around",{"_index":3153,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["array",{"_index":2643,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["array(0",{"_index":2644,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["artifacts",{"_index":5368,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aruba",{"_index":1741,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ascension",{"_index":2116,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ask",{"_index":5205,"title":{},"body":{"index.html":{}}}],["asm",{"_index":1723,"title":{},"body":{"interfaces/CountryList.html":{}}}],["assets",{"_index":5342,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["assets/gov3_bc_logo.png",{"_index":3407,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assistance",{"_index":3517,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["associate",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":447,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["association",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["assuming",{"_index":5376,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":5254,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":377,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ata",{"_index":1731,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atf",{"_index":1889,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atg",{"_index":1733,"title":{},"body":{"interfaces/CountryList.html":{}}}],["attachmentorder",{"_index":1409,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attempted",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["attr",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":3787,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":511,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["attributes",{"_index":3237,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["audit",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["aus",{"_index":1742,"title":{},"body":{"interfaces/CountryList.html":{}}}],["australia",{"_index":1743,"title":{},"body":{"interfaces/CountryList.html":{}}}],["austria",{"_index":1745,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aut",{"_index":1744,"title":{},"body":{"interfaces/CountryList.html":{}}}],["autem",{"_index":1359,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["auto",{"_index":741,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocomplete",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["autocomplete=\"false",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["autocorrect",{"_index":2476,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":85,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":2737,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":478,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":547,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["awkward",{"_index":3750,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["aze",{"_index":1746,"title":{},"body":{"interfaces/CountryList.html":{}}}],["azerbaijan",{"_index":1747,"title":{},"body":{"interfaces/CountryList.html":{}}}],["b",{"_index":4249,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["b555787",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["b80520f",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["b901868",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":3499,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["backdrop",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1580,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["backticks",{"_index":3521,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["backward",{"_index":977,"title":{},"body":{"classes/Address.html":{}}}],["bad",{"_index":5267,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["baee5ad",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["bahamas",{"_index":1749,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bahrain",{"_index":1751,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bangladesh",{"_index":1753,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bar",{"_index":61,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":640,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["bar.component",{"_index":4165,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":3102,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":3101,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":3100,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:12",{"_index":3111,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:13",{"_index":3108,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":3110,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":3109,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:16",{"_index":3112,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":3144,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":3107,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":3143,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":3135,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3145,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":3113,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":4391,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":4394,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:25",{"_index":3114,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:26",{"_index":4388,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":4375,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":3134,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":4380,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":3146,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":4379,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":4376,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":4378,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":4381,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":3099,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":4170,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["barbados",{"_index":1755,"title":{},"body":{"interfaces/CountryList.html":{}}}],["barbuda",{"_index":1735,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bars",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["barthélemy",{"_index":2113,"title":{},"body":{"interfaces/CountryList.html":{}}}],["base",{"_index":116,"title":{"classes/Base.html":{}},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["base.component",{"_index":2595,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":2603,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.service.ts",{"_index":1152,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["base.service.ts:104",{"_index":1169,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:108",{"_index":1180,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:13",{"_index":3664,"title":{},"body":{"interfaces/PageListInterface.html":{}}}],["base.service.ts:29",{"_index":1192,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:31",{"_index":1190,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:32",{"_index":1165,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:36",{"_index":1194,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:40",{"_index":1196,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:44",{"_index":1166,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:48",{"_index":1167,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:53",{"_index":1181,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:60",{"_index":1187,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:75",{"_index":1183,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:85",{"_index":1176,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:96",{"_index":1173,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base64",{"_index":5344,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":139,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":3225,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":2594,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":194,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["basic",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["basis",{"_index":5222,"title":{},"body":{"license.html":{}}}],["bc",{"_index":894,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["bcformat",{"_index":4352,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bcformat.test",{"_index":4353,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bclogobase64",{"_index":5125,"title":{},"body":{"coverage.html":{}}}],["bconly",{"_index":750,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{}}}],["bdi",{"_index":1798,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beatae",{"_index":1383,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["become",{"_index":5253,"title":{},"body":{"todo.html":{}}}],["befc319",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2312,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["begin",{"_index":3188,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["beginning",{"_index":3480,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["behavior",{"_index":106,"title":{},"body":{"classes/AbstractForm.html":{}}}],["behaviour",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":195,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["bel",{"_index":1758,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belarus",{"_index":1757,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belgium",{"_index":1759,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belize",{"_index":1761,"title":{},"body":{"interfaces/CountryList.html":{}}}],["below",{"_index":3476,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["ben",{"_index":1762,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beneficial",{"_index":3679,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["benefits",{"_index":3514,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["benin",{"_index":1763,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bermuda",{"_index":1765,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bes",{"_index":1770,"title":{},"body":{"interfaces/CountryList.html":{}}}],["best",{"_index":3391,"title":{},"body":{"components/HeaderComponent.html":{}}}],["better",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4456,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["bf3cf23",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["bfa",{"_index":1795,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bg",{"_index":3784,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bgd",{"_index":1752,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bgr",{"_index":1793,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhr",{"_index":1750,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhs",{"_index":1748,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhutan",{"_index":1766,"title":{},"body":{"interfaces/CountryList.html":{}}}],["big",{"_index":3017,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bih",{"_index":1775,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bind",{"_index":1241,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["bindings",{"_index":2662,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":765,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["birth",{"_index":3815,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":3807,"title":{},"body":{"classes/Person.html":{}}}],["bissau",{"_index":1920,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blanditiis",{"_index":1368,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blank",{"_index":810,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blm",{"_index":2111,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blob",{"_index":2761,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":2940,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":3447,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["blr",{"_index":1756,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blue",{"_index":3386,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blueimp",{"_index":2610,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":1277,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["blurevent",{"_index":2272,"title":{},"body":{"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["blz",{"_index":1760,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bmu",{"_index":1764,"title":{},"body":{"interfaces/CountryList.html":{}}}],["body",{"_index":273,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["body).subscribe",{"_index":1571,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["boilerplate",{"_index":3481,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bol",{"_index":1767,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivarian",{"_index":2244,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivia",{"_index":1768,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bonaire",{"_index":1771,"title":{},"body":{"interfaces/CountryList.html":{}}}],["boolean",{"_index":39,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"todo.html":{}}}],["bootstrap",{"_index":600,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":4204,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bosnia",{"_index":1776,"title":{},"body":{"interfaces/CountryList.html":{}}}],["both",{"_index":362,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CheckboxComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["botswana",{"_index":1779,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bottom",{"_index":486,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["bound",{"_index":5201,"title":{},"body":{"index.html":{}}}],["bouvet",{"_index":1781,"title":{},"body":{"interfaces/CountryList.html":{}}}],["box",{"_index":427,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["bps",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["bra",{"_index":1783,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brackets",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["brazil",{"_index":1784,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brb",{"_index":1754,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bread",{"_index":1663,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":1692,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":625,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["breadcrumb.component",{"_index":4163,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":1707,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":1706,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts",{"_index":1690,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":1708,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":1709,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":1689,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":3497,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["breaking",{"_index":976,"title":{},"body":{"classes/Address.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["breaks",{"_index":3612,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["british",{"_index":1786,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["british_columbia",{"_index":728,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["brn",{"_index":1790,"title":{},"body":{"interfaces/CountryList.html":{}}}],["broken",{"_index":5352,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":3078,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":2700,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":2633,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":2801,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":533,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":2721,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":557,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":540,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0,0",{"_index":571,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":483,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":537,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.need",{"_index":3495,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["browsermodule",{"_index":1143,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["brunei",{"_index":1791,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brunswick",{"_index":4059,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["btn",{"_index":1044,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CountryList.html":{}}}],["btnclick",{"_index":1030,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":2903,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["buiding",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3751,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":5296,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["building",{"_index":5285,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":4676,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":5145,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3389,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["bulgaria",{"_index":1794,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bullet",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["burkina",{"_index":1796,"title":{},"body":{"interfaces/CountryList.html":{}}}],["burundi",{"_index":1799,"title":{},"body":{"interfaces/CountryList.html":{}}}],["button",{"_index":64,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":609,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component",{"_index":4217,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["button.component.html",{"_index":1026,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.scss",{"_index":1025,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.ts",{"_index":4440,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{},"todo.html":{}}}],["button.component.ts:15",{"_index":4444,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4446,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4443,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:24",{"_index":4447,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":4448,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button/xicon",{"_index":4216,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":608,"title":{"components/ButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttongroup",{"_index":1059,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["buttongroupcomponent",{"_index":610,"title":{"components/ButtonGroupComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":1010,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["buttontype",{"_index":1028,"title":{},"body":{"components/ButtonComponent.html":{}}}],["bvt",{"_index":1780,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bwa",{"_index":1778,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bypass",{"_index":1197,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bypassguards",{"_index":1164,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bytes",{"_index":1458,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c",{"_index":3506,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["c04b81d",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["c054ca5",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["c122a2a",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["c2fd959",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["c347c39",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["c580225",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["c6067fd",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["c64c066",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["c78856a",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":5029,"title":{},"body":{"changelog.html":{}}}],["c8fb31b",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["c91fef0",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["caf",{"_index":1809,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["caicos",{"_index":2224,"title":{},"body":{"interfaces/CountryList.html":{}}}],["calculateprogresspercentage",{"_index":4371,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":3813,"title":{},"body":{"classes/Person.html":{}}}],["caledonia",{"_index":2056,"title":{},"body":{"interfaces/CountryList.html":{}}}],["call",{"_index":1564,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":3045,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":3033,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":2904,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["calling",{"_index":466,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callout",{"_index":3572,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["calls",{"_index":5339,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cambodia",{"_index":1801,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cameroon",{"_index":1803,"title":{},"body":{"interfaces/CountryList.html":{}}}],["can't",{"_index":2661,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canactivate",{"_index":4106,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivate(route",{"_index":4121,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild",{"_index":4107,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild(next",{"_index":4126,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canada",{"_index":723,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["canbypassguards",{"_index":339,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cancel",{"_index":2791,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":24,"title":{},"body":{"classes/AbstractForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["canda",{"_index":3355,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["candidates",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["cannotopen",{"_index":1439,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":1441,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":2650,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":3054,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":2938,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cape",{"_index":1805,"title":{},"body":{"interfaces/CountryList.html":{}}}],["capitalize",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["captcha",{"_index":1111,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":613,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["captcha.component",{"_index":1146,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":1118,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":5177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":612,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":1086,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":1121,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":3080,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":2635,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":2803,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":1566,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["careful",{"_index":4386,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":479,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":1155,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":2561,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":284,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["catcherror(err",{"_index":3332,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["categories",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":3008,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cayman",{"_index":1808,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cb65dc6",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["cbbfaa8",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["cc9910b",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["cck",{"_index":1821,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cd",{"_index":2655,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["cdnformat",{"_index":4346,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["cdnformat.test",{"_index":4350,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["center",{"_index":1697,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["central",{"_index":1810,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cf962bc",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["chaange",{"_index":4399,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["chad",{"_index":1814,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chain",{"_index":3614,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["chance",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["chanfges",{"_index":5382,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["change",{"_index":183,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":2286,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":4366,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":4396,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4367,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":2572,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":4464,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":1019,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changes.address",{"_index":3334,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue",{"_index":3342,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue._geocoderfulladdress",{"_index":3335,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.password",{"_index":3772,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['countrylist",{"_index":831,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['countrylist'].currentvalue",{"_index":832,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['images",{"_index":2691,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue",{"_index":2692,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":2693,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":2694,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":2695,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['provincelist",{"_index":834,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['provincelist'].currentvalue",{"_index":835,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changing",{"_index":2402,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["character",{"_index":3194,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["characters",{"_index":1313,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["che",{"_index":2190,"title":{},"body":{"interfaces/CountryList.html":{}}}],["check",{"_index":426,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["check.directive",{"_index":4219,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["check.directive.ts",{"_index":2495,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["check.directive.ts:32",{"_index":2500,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.directive.ts:34",{"_index":2503,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.service",{"_index":1198,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["check.service.ts",{"_index":320,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["check.service.ts:24",{"_index":343,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:25",{"_index":346,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:26",{"_index":347,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:27",{"_index":344,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check/duplicate",{"_index":2494,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["checkbox",{"_index":405,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["checkbox'},{'name",{"_index":615,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["checkbox.component.html",{"_index":1234,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1233,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":5246,"title":{},"body":{"todo.html":{}}}],["checkboxcomponent",{"_index":614,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcompletebaseservice",{"_index":1150,"title":{"injectables/CheckCompleteBaseService.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["checkconsentmodal",{"_index":368,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checkdigit",{"_index":3917,"title":{},"body":{"components/PhnComponent.html":{}}}],["checkforduplicates",{"_index":2506,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["checkimagedimensions(file",{"_index":3096,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":2675,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checking",{"_index":1203,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["checks",{"_index":412,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checksum",{"_index":1460,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["child",{"_index":3482,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{}}}],["chile",{"_index":1816,"title":{},"body":{"interfaces/CountryList.html":{}}}],["china",{"_index":1818,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chl",{"_index":1815,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chn",{"_index":1817,"title":{},"body":{"interfaces/CountryList.html":{}}}],["choice",{"_index":525,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["christmas",{"_index":1820,"title":{},"body":{"interfaces/CountryList.html":{}}}],["circle",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["city",{"_index":709,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateCityDirective.html":{},"changelog.html":{}}}],["city'},{'name",{"_index":617,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["city.component.html",{"_index":1272,"title":{},"body":{"components/CityComponent.html":{}}}],["city.component.scss",{"_index":1271,"title":{},"body":{"components/CityComponent.html":{}}}],["city.directive",{"_index":4225,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["city.directive.ts",{"_index":4330,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["city.directive.ts:26",{"_index":4332,"title":{},"body":{"directives/ValidateCityDirective.html":{}}}],["city/country/province",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["city_",{"_index":1281,"title":{},"body":{"components/CityComponent.html":{}}}],["citycomponent",{"_index":616,"title":{"components/CityComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cityindex",{"_index":3256,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["civ",{"_index":1837,"title":{},"body":{"interfaces/CountryList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["classval",{"_index":420,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clean",{"_index":3895,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["clear",{"_index":814,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["clearable",{"_index":2477,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["clearbutton",{"_index":2330,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cleardate",{"_index":2400,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cleared",{"_index":2349,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["clears",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":5315,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":596,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["click)=\"showfullsizeview",{"_index":4314,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":369,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(classval",{"_index":417,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":370,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(refnameval",{"_index":424,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickconsentmodalcontinue",{"_index":371,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickevent",{"_index":4442,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["clicking",{"_index":389,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink",{"_index":372,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink(label",{"_index":432,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":68,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":373,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":268,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["clito",{"_index":5318,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["close",{"_index":3493,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SampleModalComponent.html":{}}}],["closemodal",{"_index":4144,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["closes",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["cluster_captchamodule",{"_index":1125,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":1126,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":1127,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":1128,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":4157,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":4158,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":4159,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cmr",{"_index":1802,"title":{},"body":{"interfaces/CountryList.html":{}}}],["coard",{"_index":5207,"title":{},"body":{"index.html":{}}}],["cocos",{"_index":1822,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cod",{"_index":1830,"title":{},"body":{"interfaces/CountryList.html":{}}}],["code",{"_index":782,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":663,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["code.component",{"_index":4183,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":3990,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":3989,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":3988,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:101",{"_index":4011,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:105",{"_index":4009,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:15",{"_index":3996,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:16",{"_index":3994,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":3999,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":3998,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":3993,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:20",{"_index":3995,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:23",{"_index":4000,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:29",{"_index":4023,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:34",{"_index":4002,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:35",{"_index":4001,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:37",{"_index":4022,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:38",{"_index":4021,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:40",{"_index":4020,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:47",{"_index":4013,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:48",{"_index":3992,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:50",{"_index":4014,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:59",{"_index":4003,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:63",{"_index":4005,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:73",{"_index":4004,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:78",{"_index":4012,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:85",{"_index":4006,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:90",{"_index":4007,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:94",{"_index":4008,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":3987,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["code/validate",{"_index":4213,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["codes",{"_index":1658,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["cog",{"_index":1828,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cok",{"_index":1832,"title":{},"body":{"interfaces/CountryList.html":{}}}],["col",{"_index":1824,"title":{},"body":{"interfaces/CountryList.html":{}}}],["collected",{"_index":3502,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["collection",{"_index":408,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["colombia",{"_index":1825,"title":{},"body":{"interfaces/CountryList.html":{}}}],["color",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["colour",{"_index":1023,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["colours",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["columbia",{"_index":4019,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["column",{"_index":3657,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["com",{"_index":1826,"title":{},"body":{"interfaces/CountryList.html":{}}}],["come",{"_index":3498,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["comes",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":4562,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":3255,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["committed",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":4944,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":353,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commondatefieldformat",{"_index":2410,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":685,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatecheck",{"_index":2497,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["commonduplicatecheck]'},{'name",{"_index":687,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonformactionbar",{"_index":3653,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["commongeocoderinput",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["commonimage",{"_index":1405,"title":{"classes/CommonImage.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":1420,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":2843,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":2848,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":3069,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":2840,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":1442,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":3039,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":2892,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":2982,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":1461,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":1465,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":2814,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogevents",{"_index":1490,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["commonlogevents.error",{"_index":1542,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["commonlogger",{"_index":1497,"title":{"injectables/CommonLogger.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":1482,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{}}}],["commonmodule",{"_index":1148,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonphnvalidation",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["commonvalidatebcpostal",{"_index":4324,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["commonvalidatebcpostal]'},{'name",{"_index":689,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatecity",{"_index":4331,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["commonvalidatecity]'},{'name",{"_index":691,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatename",{"_index":4337,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["commonvalidatename]'},{'name",{"_index":693,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephone",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["commonvalidatepostalcode",{"_index":4340,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["commonvalidatepostalcode]'},{'name",{"_index":695,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidateregion",{"_index":4358,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["commonvalidateregion]'},{'name",{"_index":697,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatesin",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["commonvalidatestreet",{"_index":699,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["comoros",{"_index":1827,"title":{},"body":{"interfaces/CountryList.html":{}}}],["compare",{"_index":3918,"title":{},"body":{"components/PhnComponent.html":{}}}],["compat",{"_index":3011,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compatibilty",{"_index":978,"title":{},"body":{"classes/Address.html":{}}}],["compatible",{"_index":4786,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compilation",{"_index":5323,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":4886,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":5293,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":2671,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":5287,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":390,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["completed",{"_index":1179,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["completeness",{"_index":1204,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["complex",{"_index":1694,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":5213,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":3427,"title":{},"body":{"components/HeaderComponent.html":{}}}],["compodoccrc.json",{"_index":5028,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":178,"title":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component's",{"_index":3560,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["component_template",{"_index":604,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["componentlist",{"_index":4238,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["components",{"_index":144,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/accordion/accordion.component",{"_index":4205,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address/address.component",{"_index":4189,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button",{"_index":4193,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button/button.component",{"_index":4195,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":4196,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/city.component",{"_index":4191,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/validate",{"_index":4224,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/confirm",{"_index":4232,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/consent",{"_index":4197,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":4162,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/country/country.component",{"_index":3223,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":4236,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":4175,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":4176,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":4185,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/duplicate",{"_index":4218,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/email/email.component",{"_index":4231,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/error",{"_index":4220,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":4178,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":4164,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/full",{"_index":4210,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/geocoder",{"_index":4234,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/header/header.component",{"_index":4212,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":4247,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/name/name.component",{"_index":4199,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/name/validate",{"_index":4206,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/page",{"_index":4166,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":4168,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/phn.component",{"_index":4209,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phone",{"_index":4200,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":4182,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/province/province.component",{"_index":4190,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/radio/radio.component",{"_index":4202,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sample",{"_index":4230,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/sin.component",{"_index":4208,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/street.component",{"_index":4192,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/validate",{"_index":4222,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":4180,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":4188,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/validate",{"_index":4226,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":4169,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/xicon",{"_index":4215,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":5338,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["computer",{"_index":3488,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["computers",{"_index":5241,"title":{},"body":{"todo.html":{}}}],["concatenate",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["concatenated",{"_index":3834,"title":{},"body":{"classes/Person.html":{}}}],["concatenates",{"_index":3824,"title":{},"body":{"classes/Person.html":{}}}],["conditions",{"_index":5224,"title":{},"body":{"license.html":{}}}],["config",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":5140,"title":{},"body":{"coverage.html":{}}}],["configurable",{"_index":5336,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":1698,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":1563,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{}}}],["configured",{"_index":1138,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configuring",{"_index":5375,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["confirm",{"_index":619,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["confirmation",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["confirmtemplatecomponent",{"_index":618,"title":{"components/ConfirmTemplateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["congo",{"_index":1829,"title":{},"body":{"interfaces/CountryList.html":{}}}],["connected",{"_index":3350,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["connectivity",{"_index":1539,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["consectetur",{"_index":1331,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["consent",{"_index":413,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["consentmodal",{"_index":3526,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["consentmodalcomponent",{"_index":621,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["considered",{"_index":955,"title":{},"body":{"classes/Address.html":{}}}],["consistency",{"_index":1013,"title":{},"body":{"components/ButtonComponent.html":{}}}],["consistent",{"_index":1551,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PageFrameworkComponent.html":{},"todo.html":{}}}],["console",{"_index":305,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["console.error('an",{"_index":1578,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error('geocoder",{"_index":3261,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error('mspmaintenanceservice",{"_index":3578,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(`backend",{"_index":1582,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error(`mspmaintenanceservice",{"_index":3579,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(msg",{"_index":1561,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log",{"_index":299,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["console.log(\"error",{"_index":3073,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":2794,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":2851,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":2830,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["console.log('file",{"_index":2978,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":2809,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('handleerror",{"_index":3577,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log('http",{"_index":309,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":2914,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":3024,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":3091,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":1572,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log('opening",{"_index":2867,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('scaled",{"_index":4311,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('start",{"_index":2930,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('this",{"_index":3035,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":2678,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":2964,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":2926,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":3064,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":2681,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":3094,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(response",{"_index":3093,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(this.spaenvres",{"_index":3592,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log(var1",{"_index":2853,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["const",{"_index":198,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":474,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["constructor(@optional",{"_index":3326,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PhoneNumberComponent.html":{}}}],["constructor(controldir",{"_index":1238,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["constructor(errorcode",{"_index":1472,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(http",{"_index":239,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":1092,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(message",{"_index":3609,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["constructor(private",{"_index":1113,"title":{},"body":{"injectables/CaptchaDataService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["constructor(public",{"_index":1454,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":30,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":4293,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":1466,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":5381,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contact",{"_index":3519,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["contain",{"_index":1308,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["container",{"_index":1661,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/ErrorContainerComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["container'},{'name",{"_index":636,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["container.component",{"_index":4221,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["container.component.html",{"_index":2555,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.scss",{"_index":2554,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.ts",{"_index":2553,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:10",{"_index":2557,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.length",{"_index":4429,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container/error",{"_index":2552,"title":{},"body":{"components/ErrorContainerComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["container[0].scrollleft",{"_index":4435,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["contains",{"_index":3740,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["content",{"_index":396,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{}}}],["contentchild",{"_index":2573,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":2640,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contents",{"_index":3431,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contenttype",{"_index":1410,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["context",{"_index":5155,"title":{},"body":{"coverage.html":{}}}],["continue",{"_index":25,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{}}}],["continuebutton",{"_index":365,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["contrast",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["contributing",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["contributing.md",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":191,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"todo.html":{}}}],["control.ts",{"_index":114,"title":{},"body":{"classes/AbstractFormControl.html":{},"coverage.html":{}}}],["control.ts:10",{"_index":134,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:13",{"_index":168,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:15",{"_index":166,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:18",{"_index":167,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:22",{"_index":135,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:23",{"_index":136,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:26",{"_index":145,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:31",{"_index":165,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:34",{"_index":147,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:39",{"_index":150,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:44",{"_index":161,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:48",{"_index":163,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:65",{"_index":154,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.value",{"_index":2509,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["controlcontainer",{"_index":715,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controldir",{"_index":1235,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controldir.valueaccessor",{"_index":1264,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controls",{"_index":3543,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["controlvalueaccessor",{"_index":119,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["conventional",{"_index":5248,"title":{},"body":{"todo.html":{}}}],["convert",{"_index":2316,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":2432,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":2341,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["converted",{"_index":826,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["convertroutetotitle",{"_index":1666,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":1671,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":1673,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":2433,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":2348,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cook",{"_index":1833,"title":{},"body":{"interfaces/CountryList.html":{}}}],["copied",{"_index":503,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copy",{"_index":899,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["copy(object",{"_index":951,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copying",{"_index":3522,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["copylicense",{"_index":5111,"title":{},"body":{"coverage.html":{}}}],["copyright",{"_index":5208,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":5150,"title":{},"body":{"coverage.html":{}}}],["core",{"_index":624,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":4161,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["corebreadcrumb",{"_index":1695,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":623,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["corporis",{"_index":1379,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["correct",{"_index":1201,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correctly",{"_index":4109,"title":{},"body":{"guards/RouteGuardService.html":{},"changelog.html":{}}}],["correspond",{"_index":363,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":468,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":513,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["costa",{"_index":1835,"title":{},"body":{"interfaces/CountryList.html":{}}}],["could've",{"_index":2775,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["counter",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["countlength",{"_index":374,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countlength(refnameval",{"_index":438,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countries",{"_index":1711,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country",{"_index":497,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["country'},{'name",{"_index":627,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["country.component.html",{"_index":2266,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country.component.scss",{"_index":2267,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country/country.component",{"_index":726,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["country/prov",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["country/province",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["country/province/region",{"_index":4360,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["country_",{"_index":2268,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country_list",{"_index":725,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["country_list.find",{"_index":2264,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycode",{"_index":1712,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycomponent",{"_index":626,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrylist",{"_index":722,"title":{"interfaces/CountryList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["countryobj",{"_index":888,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.countrycode",{"_index":892,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.description",{"_index":2265,"title":{},"body":{"interfaces/CountryList.html":{}}}],["counts",{"_index":440,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["coverage",{"_index":5030,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpv",{"_index":1804,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cr18890",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":17,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["created",{"_index":2658,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":5133,"title":{},"body":{"coverage.html":{}}}],["creates",{"_index":5308,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["createtestingmodule",{"_index":5042,"title":{},"body":{"coverage.html":{}}}],["creating",{"_index":1153,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cri",{"_index":1834,"title":{},"body":{"interfaces/CountryList.html":{}}}],["criteria",{"_index":2519,"title":{},"body":{"components/EmailComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteria.test",{"_index":4328,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteriamsg",{"_index":3695,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["croatia",{"_index":1841,"title":{},"body":{"interfaces/CountryList.html":{}}}],["crumbs",{"_index":1664,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":3053,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cub",{"_index":1842,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cuba",{"_index":1843,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cunha",{"_index":2119,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cupiditate",{"_index":1387,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["curaçao",{"_index":1845,"title":{},"body":{"interfaces/CountryList.html":{}}}],["curr",{"_index":3004,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currently",{"_index":415,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":3050,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["custom",{"_index":522,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"todo.html":{}}}],["customize",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["cutoffdate",{"_index":3542,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["cuw",{"_index":1844,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cxr",{"_index":1819,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cycles",{"_index":2390,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cym",{"_index":1807,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyp",{"_index":1846,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyprus",{"_index":1847,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cze",{"_index":1848,"title":{},"body":{"interfaces/CountryList.html":{}}}],["czech",{"_index":1849,"title":{},"body":{"interfaces/CountryList.html":{}}}],["côte",{"_index":1838,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d",{"_index":2979,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["d.ts",{"_index":5299,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d4f0e3b",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["d5bf00b",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["d5dd02f",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["d[abceghj",{"_index":947,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["d\\'ivoire",{"_index":1839,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d]+/.test",{"_index":2427,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["da",{"_index":2118,"title":{},"body":{"interfaces/CountryList.html":{}}}],["danger",{"_index":550,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/PasswordComponent.html":{}}}],["danging",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["darken",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["darussalam",{"_index":1792,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dashboard",{"_index":1702,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["data",{"_index":308,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["data.city",{"_index":902,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.country",{"_index":904,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.province",{"_index":903,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.service",{"_index":1147,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":1088,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":4152,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":4155,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":4153,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":1093,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":1100,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":1104,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":1096,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":4154,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.street",{"_index":901,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["datachange",{"_index":1063,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/ToggleComponent.html":{}}}],["dataservice",{"_index":2652,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":2724,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":1527,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["date'},{'name",{"_index":629,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["date(date.year",{"_index":2351,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.component.ts",{"_index":4250,"title":{},"body":{"interfaces/SimpleDate.html":{},"todo.html":{}}}],["date.day",{"_index":2353,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getdate",{"_index":2347,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":2343,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":2345,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.interface.ts",{"_index":4246,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":2352,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.year",{"_index":2350,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datechange",{"_index":2309,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":628,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":2277,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":684,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":2332,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":1526,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["dateofbirth",{"_index":3797,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":3800,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":2297,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":631,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["datepicker.component.html",{"_index":2304,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":2305,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":630,"title":{"components/DatepickerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":2340,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":2307,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":2308,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":2363,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dates",{"_index":2311,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datetime",{"_index":2334,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["day",{"_index":2346,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["dayoutofrange",{"_index":2281,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dbb94e1",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["dd29a60",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":5337,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":3198,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["debouncetime(500",{"_index":3329,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["debug",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":1123,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":5264,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":51,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["defaultcolor",{"_index":3103,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["defaultcountry",{"_index":747,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulted",{"_index":772,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulterrmsg",{"_index":2273,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidbcpostal",{"_index":4030,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidchar",{"_index":4031,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.pattern",{"_index":4029,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.required",{"_index":4028,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrormessage",{"_index":1236,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["defaultprovince",{"_index":748,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaults",{"_index":833,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["defined",{"_index":32,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":2382,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["delay",{"_index":2587,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":3075,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{},"todo.html":{}}}],["delete(evt",{"_index":4298,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleted",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["deleteimage",{"_index":4292,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":3084,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delivery",{"_index":778,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["democratic",{"_index":1831,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denmark",{"_index":1851,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denominator",{"_index":4415,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":1003,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":1592,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/local-development/schematics.html":{}}}],["depending",{"_index":846,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["deployed",{"_index":1139,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deployurl",{"_index":3428,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deprecate",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1049,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["deprecriated",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":4140,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["descriptions",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["deserunt",{"_index":1395,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":703,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["designed",{"_index":3478,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["designs",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["detailed",{"_index":5260,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["detect",{"_index":2688,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["detection",{"_index":2389,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{}}}],["detector",{"_index":2687,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["determine",{"_index":959,"title":{},"body":{"classes/Address.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["determines",{"_index":63,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["deu",{"_index":1898,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dev",{"_index":1215,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{}}}],["developers",{"_index":182,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["development",{"_index":3828,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["device",{"_index":3487,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["devkit/schematics",{"_index":5317,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df26aa1",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["df678e6",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":2865,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["differ",{"_index":5378,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["differenceinyears",{"_index":3836,"title":{},"body":{"classes/Person.html":{}}}],["different",{"_index":5359,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["digitfinaldigit",{"_index":3920,"title":{},"body":{"components/PhnComponent.html":{}}}],["directive",{"_index":212,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive's",{"_index":3561,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["directives",{"_index":683,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["directly",{"_index":965,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disable",{"_index":190,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disablebefore",{"_index":2320,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disablecontinue",{"_index":3548,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["disabled",{"_index":21,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["disablegeocoder",{"_index":749,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disables",{"_index":41,"title":{},"body":{"classes/AbstractForm.html":{}}}],["disablesince",{"_index":2317,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":2313,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disabling",{"_index":3475,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["disiplay",{"_index":3366,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["dislayed",{"_index":3963,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["display",{"_index":796,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["display=\"table",{"_index":3441,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["display='inline",{"_index":3446,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["displayed",{"_index":416,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["displayerror",{"_index":2556,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["displayicon",{"_index":1644,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["displaying",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["displaymask",{"_index":3934,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["dist",{"_index":2580,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/build/pdf",{"_index":2615,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/build/pdf.worker.entry",{"_index":2617,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/common",{"_index":5374,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distantfuture",{"_index":5065,"title":{},"body":{"coverage.html":{}}}],["distantpast",{"_index":5066,"title":{},"body":{"coverage.html":{}}}],["distinctio",{"_index":1358,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["distinctuntilchanged",{"_index":3322,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["distributed",{"_index":5221,"title":{},"body":{"license.html":{}}}],["divide",{"_index":3913,"title":{},"body":{"components/PhnComponent.html":{}}}],["divisible",{"_index":4283,"title":{},"body":{"components/SinComponent.html":{}}}],["divs",{"_index":3676,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["dji",{"_index":1852,"title":{},"body":{"interfaces/CountryList.html":{}}}],["djibouti",{"_index":1853,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dma",{"_index":1854,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dnk",{"_index":1850,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dob",{"_index":3818,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":3798,"title":{},"body":{"classes/Person.html":{}}}],["doc",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["docinitparams",{"_index":3055,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":3524,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["document",{"_index":2513,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":541,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":3051,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":3026,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":4428,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":3707,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":3724,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":4588,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":2648,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["doing",{"_index":1052,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dolor",{"_index":1328,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dom",{"_index":578,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dominica",{"_index":1855,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dominican",{"_index":1856,"title":{},"body":{"interfaces/CountryList.html":{}}}],["don't",{"_index":1243,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{}}}],["don'ts",{"_index":5262,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":2776,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["don’t",{"_index":3491,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["dos",{"_index":5261,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":3661,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":485,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["drag",{"_index":2701,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":2790,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":2788,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":2792,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":2709,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["dropdown",{"_index":442,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":632,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dropdown.component.html",{"_index":2473,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2472,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":495,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":2703,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":2796,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":2798,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":2631,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ducimus",{"_index":1382,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["due",{"_index":1589,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dummy",{"_index":3829,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":448,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["duplicatecheckdirective",{"_index":686,"title":{"directives/DuplicateCheckDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duplist",{"_index":2499,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.find",{"_index":2508,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.length",{"_index":2507,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["dutch",{"_index":2158,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dynamic",{"_index":5161,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":847,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["dza",{"_index":1721,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d{3",{"_index":3957,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["d{4",{"_index":3958,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["e",{"_index":3507,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["e.g",{"_index":269,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e0bd207",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["e2271b7",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":355,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e35f16b",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["e458627",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["e485f67",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["e6db87e",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["e762fc1",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["e81927b",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["e89e6f3",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":2783,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":177,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":2777,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":1020,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["easily",{"_index":2764,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":3142,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ebb6998",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["ecu",{"_index":1857,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ecuador",{"_index":1858,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ed615a6",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["edf0b2e",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["edge",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["edittable",{"_index":3964,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["edward",{"_index":4069,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["egy",{"_index":1859,"title":{},"body":{"interfaces/CountryList.html":{}}}],["egypt",{"_index":1860,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eib",{"_index":2954,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["el",{"_index":1862,"title":{},"body":{"interfaces/CountryList.html":{}}}],["element",{"_index":534,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["element's",{"_index":2730,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":386,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":395,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('common",{"_index":568,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('div[class=\"modal",{"_index":566,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click",{"_index":565,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":560,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":556,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":551,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":554,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class*=\"${classval",{"_index":562,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(label",{"_index":574,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":545,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.css(`input[ng",{"_index":572,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":543,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":1042,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":49,"title":{},"body":{"classes/AbstractForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageSectionComponent.html":{}}}],["elementsgit",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["eligibility",{"_index":3512,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["elit",{"_index":1333,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["email",{"_index":2516,"title":{},"body":{"components/EmailComponent.html":{},"changelog.html":{}}}],["email'},{'name",{"_index":634,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["email.component.html",{"_index":2518,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.component.scss",{"_index":2517,"title":{},"body":{"components/EmailComponent.html":{}}}],["email_",{"_index":2522,"title":{},"body":{"components/EmailComponent.html":{}}}],["emailcomponent",{"_index":633,"title":{"components/EmailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["embedded",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["emirates",{"_index":2231,"title":{},"body":{"interfaces/CountryList.html":{}}}],["emit",{"_index":2397,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["emits",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":982,"title":{},"body":{"classes/Address.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["enabled",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["enables",{"_index":761,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["encapsulation",{"_index":2626,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["enclose",{"_index":3131,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":5345,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":3016,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":470,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":1103,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":5364,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["ensure",{"_index":1567,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":528,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["entered",{"_index":3490,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":3364,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["entries",{"_index":2672,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":4874,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":2598,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":1431,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":5175,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":5282,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["env",{"_index":3463,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["environment",{"_index":1216,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["equation",{"_index":2869,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equatorial",{"_index":1865,"title":{},"body":{"interfaces/CountryList.html":{}}}],["equivalent",{"_index":2318,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["eri",{"_index":1867,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eritrea",{"_index":1868,"title":{},"body":{"interfaces/CountryList.html":{}}}],["erorr",{"_index":3583,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["err",{"_index":3292,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["errmsg",{"_index":3156,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":3793,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":3792,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.pattern",{"_index":3220,"title":{},"body":{"components/FullNameComponent.html":{}}}],["errmsg.required",{"_index":3219,"title":{},"body":{"components/FullNameComponent.html":{},"components/PasswordComponent.html":{}}}],["error",{"_index":170,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('common",{"_index":4453,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["error('this",{"_index":3038,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":1573,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.error.message",{"_index":1579,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.errorcode",{"_index":2839,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":2850,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":2842,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":2845,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":1543,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.name",{"_index":1545,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.rawimagefile",{"_index":2844,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":2846,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":1583,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.statustext",{"_index":1547,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error_fetch_img",{"_index":5186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":5189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":1455,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{}}}],["errorcontainercomponent",{"_index":635,"title":{"components/ErrorContainerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errordescription",{"_index":1456,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":1445,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":2651,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":1575,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["errormessage",{"_index":132,"title":{"interfaces/ErrorMessage.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["errormessagerequired",{"_index":1061,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["errormessages",{"_index":2288,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{}}}],["errormessages.dayoutofrange",{"_index":2465,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":2470,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":2469,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":2468,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":2464,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":2467,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":2466,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errorname",{"_index":1544,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errorr",{"_index":4450,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["errorr.ts",{"_index":3608,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["errorr.ts:1",{"_index":3610,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["errorreason",{"_index":3047,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":1536,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":3002,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":3015,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":3014,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["esh",{"_index":2254,"title":{},"body":{"interfaces/CountryList.html":{}}}],["esp",{"_index":2174,"title":{},"body":{"interfaces/CountryList.html":{}}}],["especially",{"_index":3485,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["esse",{"_index":1351,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["est",{"_index":1869,"title":{},"body":{"interfaces/CountryList.html":{}}}],["estonia",{"_index":1870,"title":{},"body":{"interfaces/CountryList.html":{}}}],["et",{"_index":1370,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["etc",{"_index":499,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["eth",{"_index":1871,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ethiopia",{"_index":1872,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eum",{"_index":1362,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["eustatius",{"_index":1773,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ev",{"_index":3420,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":4404,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":2379,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":4420,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":1041,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["event.datatransfer.files",{"_index":2800,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":3352,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.jsdate",{"_index":2396,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":3368,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.preventdefault",{"_index":2799,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":3125,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":2422,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target.value",{"_index":2548,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["event.target['files",{"_index":2806,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":712,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["eventemitter(false",{"_index":2419,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":3363,"title":{},"body":{"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["everything",{"_index":1524,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":2969,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":2861,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":2795,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":2971,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ex",{"_index":2289,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["exactly",{"_index":2822,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":334,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example.component.ts",{"_index":4113,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":5379,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["examples",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["exampletodo",{"_index":5320,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":2746,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":1549,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/NameComponent.html":{},"license.html":{}}}],["exception",{"_index":3652,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["exclusive",{"_index":5183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":4434,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exendable",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["exercitationem",{"_index":1375,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":1172,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["exists",{"_index":2325,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["expand",{"_index":597,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expandtext",{"_index":589,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expect",{"_index":5280,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":1112,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["export",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":173,"title":{},"body":{"classes/AbstractFormControl.html":{},"changelog.html":{}}}],["exports",{"_index":1124,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":5226,"title":{},"body":{"license.html":{}}}],["extend",{"_index":923,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["extends",{"_index":115,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/getting-started.html":{}}}],["extra",{"_index":936,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["extract",{"_index":2748,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":3762,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f0202f2",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["f103e7c",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["f18457b",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["f21d329",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["f2ccfe6",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["f334faf",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["f541d81",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["f603e99",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":3761,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["facere",{"_index":1346,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["facets",{"_index":5360,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["facing",{"_index":3582,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["failed",{"_index":263,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":2670,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["falkland",{"_index":1874,"title":{},"body":{"interfaces/CountryList.html":{}}}],["false",{"_index":53,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"todo.html":{}}}],["family",{"_index":3878,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["faroe",{"_index":1877,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faso",{"_index":1797,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faster",{"_index":5240,"title":{},"body":{"todo.html":{}}}],["favicon_base64",{"_index":5123,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":4400,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["fbc012d",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["fc7fe65",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["feature.properties",{"_index":3251,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["federated",{"_index":2029,"title":{},"body":{"interfaces/CountryList.html":{}}}],["federation",{"_index":2108,"title":{},"body":{"interfaces/CountryList.html":{}}}],["feedback",{"_index":3781,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":1089,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":1094,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":1090,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":1098,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":5184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["field",{"_index":202,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["fieldmaxlenghts",{"_index":785,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fields",{"_index":743,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["fieldset",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["fiji",{"_index":1879,"title":{},"body":{"interfaces/CountryList.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":2723,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":2682,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":3097,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":2882,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":1411,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["filecontrol",{"_index":2665,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":2876,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":2812,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":2717,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileobservable",{"_index":2909,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":2913,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":2810,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":2811,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":2797,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":2807,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":2944,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":2945,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileupload",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["fileuploadbrowse",{"_index":2667,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":4510,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":637,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":2817,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":2568,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["filled",{"_index":954,"title":{},"body":{"classes/Address.html":{}}}],["filter",{"_index":2584,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["filter((mspimage",{"_index":2825,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":3419,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":2808,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":870,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{}}}],["fin",{"_index":1880,"title":{},"body":{"interfaces/CountryList.html":{}}}],["final",{"_index":2771,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finaldigit",{"_index":3921,"title":{},"body":{"components/PhnComponent.html":{}}}],["finally",{"_index":2779,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":795,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["findcountrycode",{"_index":887,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["findprovincedescription(prov",{"_index":879,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fine",{"_index":1529,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["finish",{"_index":3492,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["finishes",{"_index":2728,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finland",{"_index":1881,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fire",{"_index":3347,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["firefox",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":450,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["first/middle/last",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":3157,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["firstnamelabel",{"_index":3163,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["fix",{"_index":2619,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":3013,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fji",{"_index":1878,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flag",{"_index":3581,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["flags",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":5238,"title":{},"body":{"todo.html":{}}}],["flatmap",{"_index":2585,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flex",{"_index":3673,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["flk",{"_index":1873,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flow",{"_index":4102,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["fluid",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":148,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["fn.bind(this",{"_index":220,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["fns",{"_index":3837,"title":{},"body":{"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["focus",{"_index":969,"title":{},"body":{"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["focusable",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":5276,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":4973,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["followed",{"_index":3190,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["following",{"_index":2280,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["follows",{"_index":5247,"title":{},"body":{"todo.html":{}}}],["fonts",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["footer\"]')).element(by.css('button[type=\"submit\"]')).click",{"_index":567,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["force",{"_index":2683,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["forcerender",{"_index":2689,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":1569,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["form",{"_index":13,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{}}}],["form.ts",{"_index":7,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["form.ts:11",{"_index":47,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:14",{"_index":40,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:16",{"_index":54,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:18",{"_index":33,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:31",{"_index":62,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:37",{"_index":82,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:46",{"_index":74,"title":{},"body":{"classes/AbstractForm.html":{}}}],["formactionbar",{"_index":3128,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["formactionbarcomponent",{"_index":639,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":2331,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["format.directive",{"_index":4237,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":2409,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":2417,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":2413,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatdateofbirth",{"_index":3801,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":3244,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formatted",{"_index":2536,"title":{},"body":{"components/EmailComponent.html":{}}}],["formcontrol",{"_index":2296,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"todo.html":{}}}],["former",{"_index":2001,"title":{},"body":{"interfaces/CountryList.html":{}}}],["formerrors",{"_index":375,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["forms",{"_index":2510,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["formsmodule",{"_index":1145,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmibar",{"_index":5236,"title":{},"body":{"todo.html":{}}}],["formsubmitbar",{"_index":3126,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":641,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":1132,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":714,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["found",{"_index":331,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":5272,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":4880,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":3650,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["fra",{"_index":1882,"title":{},"body":{"interfaces/CountryList.html":{}}}],["framework",{"_index":3141,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["framework'},{'name",{"_index":651,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["framework.component",{"_index":4167,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":3660,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":3659,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":3649,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:29",{"_index":3662,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:31",{"_index":3663,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":3648,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["france",{"_index":1883,"title":{},"body":{"interfaces/CountryList.html":{}}}],["free",{"_index":1009,"title":{},"body":{"components/ButtonComponent.html":{}}}],["freedom",{"_index":3508,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["french",{"_index":1885,"title":{},"body":{"interfaces/CountryList.html":{}}}],["friendly",{"_index":2762,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fro",{"_index":1876,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fromevent",{"_index":2581,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":2802,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":2804,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":2789,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":2856,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":2858,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":2859,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fsm",{"_index":2027,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fugiat",{"_index":1354,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["full",{"_index":643,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["fulladdress",{"_index":3222,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":3802,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["fullname.split",{"_index":3846,"title":{},"body":{"classes/Person.html":{}}}],["fullnamecomponent",{"_index":642,"title":{"components/FullNameComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fullnameerrormsg",{"_index":3180,"title":{"interfaces/FullNameErrorMsg.html":{}},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["fullsizeviewmodal",{"_index":3541,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["function",{"_index":159,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["functionality",{"_index":354,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functiong",{"_index":4026,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["functions",{"_index":4387,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["futuna",{"_index":2253,"title":{},"body":{"interfaces/CountryList.html":{}}}],["future",{"_index":1018,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":2565,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["gab",{"_index":1892,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gabon",{"_index":1893,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gambia",{"_index":1895,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gbr",{"_index":2232,"title":{},"body":{"interfaces/CountryList.html":{}}}],["general",{"_index":777,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["generally",{"_index":69,"title":{},"body":{"classes/AbstractForm.html":{}}}],["generate",{"_index":5009,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generateskiptocontentlink",{"_index":3400,"title":{},"body":{"components/HeaderComponent.html":{}}}],["generateuuid",{"_index":233,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["generating",{"_index":313,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["generation",{"_index":4955,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["geo",{"_index":1896,"title":{},"body":{"interfaces/CountryList.html":{}}}],["geoaddressresult",{"_index":718,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":646,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["geocoderinput",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["geocoderinputcomponent",{"_index":645,"title":{"components/GeocoderInputComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geocoderservice",{"_index":3224,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["georgia",{"_index":1897,"title":{},"body":{"interfaces/CountryList.html":{}}}],["germany",{"_index":1899,"title":{},"body":{"interfaces/CountryList.html":{}}}],["get(url",{"_index":248,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":4372,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":4377,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":3799,"title":{},"body":{"classes/Person.html":{}}}],["getapplicationid",{"_index":1630,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getcontinuebutton",{"_index":376,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getcountrydescription",{"_index":2263,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{}}}],["getdateofbirthshort",{"_index":3816,"title":{},"body":{"classes/Person.html":{}}}],["geterrorcode",{"_index":1652,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getformatdateofbirth",{"_index":3819,"title":{},"body":{"classes/Person.html":{}}}],["getfullname",{"_index":3831,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":277,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{}}}],["getinputelement",{"_index":5044,"title":{},"body":{"coverage.html":{}}}],["getisbconly",{"_index":974,"title":{},"body":{"classes/Address.html":{}}}],["getlabel",{"_index":5045,"title":{},"body":{"coverage.html":{}}}],["getlegendcontext",{"_index":5046,"title":{},"body":{"coverage.html":{}}}],["getmaxlenasnumber",{"_index":3641,"title":{},"body":{"components/NameComponent.html":{}}}],["getname",{"_index":3822,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":360,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":445,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":361,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":458,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getpackageversionfrompackagejson",{"_index":5142,"title":{},"body":{"coverage.html":{}}}],["getpasswordstrength",{"_index":3701,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":3726,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getprogramname",{"_index":1634,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getprovincedescription",{"_index":4080,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["gets",{"_index":3316,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["getstarturl",{"_index":340,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["getstreet",{"_index":970,"title":{},"body":{"classes/Address.html":{}}}],["getsuccesscode",{"_index":1650,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getting",{"_index":4462,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["geturlindex",{"_index":1159,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["geturlindex(url",{"_index":1168,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["getvalue",{"_index":1323,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["getwarningcode",{"_index":1654,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["ggy",{"_index":1916,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gha",{"_index":1900,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ghana",{"_index":1901,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gib",{"_index":1902,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["gibraltar",{"_index":1903,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gif",{"_index":2708,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":2832,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gin",{"_index":1918,"title":{},"body":{"interfaces/CountryList.html":{}}}],["git",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["gitcommit",{"_index":5146,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":504,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["give",{"_index":2916,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{}}}],["given",{"_index":461,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{}}}],["gives",{"_index":1446,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["glp",{"_index":1910,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gmb",{"_index":1894,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnb",{"_index":1919,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnq",{"_index":1864,"title":{},"body":{"interfaces/CountryList.html":{}}}],["go",{"_index":467,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":5377,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":3020,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":3651,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["gov",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["governing",{"_index":5229,"title":{},"body":{"license.html":{}}}],["grab",{"_index":449,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["grc",{"_index":1904,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grd",{"_index":1908,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greece",{"_index":1905,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greenland",{"_index":1907,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenada",{"_index":1909,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenadines",{"_index":2133,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grl",{"_index":1906,"title":{},"body":{"interfaces/CountryList.html":{}}}],["group",{"_index":1056,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["group'},{'name",{"_index":611,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["group.component",{"_index":4194,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["group.component.html",{"_index":1058,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.scss",{"_index":1057,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":1048,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:38",{"_index":1065,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:39",{"_index":1069,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:40",{"_index":1070,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:41",{"_index":1066,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:42",{"_index":1067,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:43",{"_index":1068,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:44",{"_index":1071,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:45",{"_index":1080,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:47",{"_index":1078,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:48",{"_index":1064,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:55",{"_index":1076,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:61",{"_index":1072,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:66",{"_index":1073,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:70",{"_index":1074,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:74",{"_index":1077,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group/button",{"_index":1047,"title":{},"body":{"components/ButtonGroupComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["growing",{"_index":5202,"title":{},"body":{"index.html":{}}}],["gtm",{"_index":1914,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guadeloupe",{"_index":1911,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guam",{"_index":1913,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guard",{"_index":321,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service.ts",{"_index":4100,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:52",{"_index":4117,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:58",{"_index":4124,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:66",{"_index":4127,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:73",{"_index":4119,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guards",{"_index":1213,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["guatemala",{"_index":1915,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guernsey",{"_index":1917,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guessable",{"_index":3728,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":3730,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guf",{"_index":1884,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guiana",{"_index":1886,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guide",{"_index":5197,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":704,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["guinea",{"_index":1866,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gum",{"_index":1912,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guy",{"_index":1921,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guyana",{"_index":1922,"title":{},"body":{"interfaces/CountryList.html":{}}}],["haiti",{"_index":1924,"title":{},"body":{"interfaces/CountryList.html":{}}}],["half",{"_index":4421,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":4423,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":4433,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":2714,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["handleerror",{"_index":234,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":259,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["handlers",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":262,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["handling",{"_index":291,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happens",{"_index":66,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":471,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["harum",{"_index":1393,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["haserror",{"_index":3270,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hash",{"_index":2768,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasmask",{"_index":4341,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["hasn't",{"_index":864,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["hasnoresults",{"_index":3271,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hasvalue",{"_index":926,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["having",{"_index":3678,"title":{},"body":{"components/PageSectionComponent.html":{},"changelog.html":{}}}],["header",{"_index":3387,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["header'},{'name",{"_index":649,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["header.component.html",{"_index":3397,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":3396,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":648,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":3587,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["headers",{"_index":244,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["health",{"_index":3504,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{}}}],["heard",{"_index":1926,"title":{},"body":{"interfaces/CountryList.html":{}}}],["height",{"_index":2733,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["heightfactor",{"_index":1463,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["helena",{"_index":2115,"title":{},"body":{"interfaces/CountryList.html":{}}}],["help",{"_index":5284,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":312,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["helpers.ts",{"_index":5041,"title":{},"body":{"coverage.html":{}}}],["helpers/library",{"_index":4449,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["helpers/scrolltoerror",{"_index":3116,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["here",{"_index":1565,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/WizardProgressBarComponent.html":{}}}],["herzegovina",{"_index":1777,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hfactor",{"_index":1467,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":2720,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":56,"title":{},"body":{"classes/AbstractForm.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["hidefullsizeview",{"_index":4289,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":3696,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":5321,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":558,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["hkg",{"_index":1933,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hmd",{"_index":1925,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hnd",{"_index":1931,"title":{},"body":{"interfaces/CountryList.html":{}}}],["holy",{"_index":1929,"title":{},"body":{"interfaces/CountryList.html":{}}}],["homepage",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["honduras",{"_index":1932,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hong",{"_index":1934,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hood",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["hooks",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":3444,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["horizontally",{"_index":4383,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["hostlistener",{"_index":2418,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":2420,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":2412,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hrv",{"_index":1840,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hti",{"_index":1923,"title":{},"body":{"interfaces/CountryList.html":{}}}],["html",{"_index":602,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["html5",{"_index":2712,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":2935,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":2896,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":2423,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":229,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["http://full",{"_index":3429,"title":{},"body":{"components/HeaderComponent.html":{}}}],["http://www.apache.org/licenses/license",{"_index":5215,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":1506,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpclient",{"_index":240,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":734,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["httperrorresponse",{"_index":260,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpheaders",{"_index":242,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpoptions",{"_index":238,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpopts",{"_index":292,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":294,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":249,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":1105,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":5190,"title":{},"body":{"index.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":3226,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://geocoder.api.gov.bc.ca/addresses.json?minscore=50&maxresults=5&echo=false&brief=true&autocomplete=true&addressstring=784+hock",{"_index":3229,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/angular/angular/issues/24818",{"_index":3210,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":3732,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":3753,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":2300,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["human",{"_index":421,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hun",{"_index":1936,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hungary",{"_index":1937,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hyphen",{"_index":3191,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["hyphens",{"_index":1314,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["iceland",{"_index":1939,"title":{},"body":{"interfaces/CountryList.html":{}}}],["icon",{"_index":759,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["id",{"_index":1389,"title":{},"body":{"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["id='content",{"_index":3393,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":507,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":2823,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":140,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["idn",{"_index":1942,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ids",{"_index":1000,"title":{},"body":{"classes/Base.html":{}}}],["idx",{"_index":1210,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ie",{"_index":3887,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ie10",{"_index":4452,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["ignored",{"_index":2902,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":1407,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{}}}],["image.id",{"_index":2899,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":2884,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":2925,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":2923,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":2932,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.title",{"_index":4151,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["image/jpeg",{"_index":2928,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":2816,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":2897,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":2900,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":2676,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":2677,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":2679,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":4290,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":4315,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":2855,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":2637,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":2891,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":3040,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":2642,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["images.length",{"_index":2880,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":2883,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":2645,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":2826,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":2981,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":2984,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":2983,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":2894,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":3025,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":3034,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":3031,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":3027,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":3052,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":3076,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imn",{"_index":1951,"title":{},"body":{"interfaces/CountryList.html":{}}}],["implement",{"_index":3007,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["implementation",{"_index":15,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["implemented",{"_index":43,"title":{},"body":{"classes/AbstractForm.html":{},"changelog.html":{}}}],["implementing",{"_index":184,"title":{},"body":{"classes/AbstractFormControl.html":{},"guards/RouteGuardService.html":{}}}],["implements",{"_index":117,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["implied",{"_index":5227,"title":{},"body":{"license.html":{}}}],["import",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["import('pdfjs",{"_index":2614,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["importable",{"_index":5349,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":5301,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["importantly",{"_index":3674,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imported",{"_index":453,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":5257,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":1136,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":2710,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":2919,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["improvement",{"_index":3672,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imydate",{"_index":2293,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["incidunt",{"_index":1392,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["include",{"_index":1310,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":494,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":2784,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incomplete",{"_index":1174,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages",{"_index":1224,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages.length",{"_index":1227,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletevalue",{"_index":3949,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["incorrect",{"_index":480,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":3133,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["ind",{"_index":1940,"title":{},"body":{"interfaces/CountryList.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["index.ts",{"_index":5290,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":1484,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/PageListInterface.html":{}}}],["india",{"_index":1941,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indian",{"_index":1787,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indicate",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["indicates",{"_index":1177,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["individual",{"_index":3152,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["indonesia",{"_index":1943,"title":{},"body":{"interfaces/CountryList.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["infocolectionnoticecomponent",{"_index":410,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["information",{"_index":330,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":2292,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["inheiritance",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":138,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["init",{"_index":3891,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["initialization",{"_index":216,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["initialize",{"_index":3839,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":3562,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["initinvalid",{"_index":3646,"title":{},"body":{"components/NameComponent.html":{}}}],["injectable",{"_index":316,"title":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":318,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["injectiontoken",{"_index":4128,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["injector",{"_index":4129,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["inline",{"_index":3445,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["inmaintenance",{"_index":3586,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["input",{"_index":172,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["input'},{'name",{"_index":647,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["input(event",{"_index":2415,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.component",{"_index":4235,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["input.component.html",{"_index":3269,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.scss",{"_index":3268,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts",{"_index":3265,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:100",{"_index":3296,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:105",{"_index":3298,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:122",{"_index":3301,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:140",{"_index":3294,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:153",{"_index":3289,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:159",{"_index":3306,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:166",{"_index":3302,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:171",{"_index":3303,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:175",{"_index":3305,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:39",{"_index":3284,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:40",{"_index":3283,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:41",{"_index":3286,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:42",{"_index":3285,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:45",{"_index":3312,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:47",{"_index":3311,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:49",{"_index":3310,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:50",{"_index":3309,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:53",{"_index":3317,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:55",{"_index":3320,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:57",{"_index":3315,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:59",{"_index":3307,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:60",{"_index":3282,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:62",{"_index":3308,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:69",{"_index":3288,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:80",{"_index":3287,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:94",{"_index":3291,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.getattribute",{"_index":2424,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":2428,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":2426,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input/geocoder",{"_index":3264,"title":{},"body":{"components/GeocoderInputComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["input[type='file",{"_index":2660,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input_name",{"_index":2666,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":42,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["inside",{"_index":423,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["install",{"_index":4977,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":5195,"title":{},"body":{"index.html":{}}}],["installed",{"_index":5256,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":5134,"title":{},"body":{"coverage.html":{}}}],["instanceof",{"_index":1574,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["instances",{"_index":5243,"title":{},"body":{"todo.html":{}}}],["instead",{"_index":523,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":2744,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instruction",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":2646,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["insurance",{"_index":3520,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["integration",{"_index":5279,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["intentional",{"_index":4455,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["interface",{"_index":11,"title":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":702,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":1548,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["internally",{"_index":175,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["internationalprefix",{"_index":3967,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["internationalprefix.split",{"_index":3973,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["internet",{"_index":271,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["introduced",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":1448,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["invalidbcpostal",{"_index":4018,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["invalidchar",{"_index":1307,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["invalidemail",{"_index":2534,"title":{},"body":{"components/EmailComponent.html":{}}}],["invalidimagehanlder",{"_index":3021,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":3041,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":2285,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invisible",{"_index":2327,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invocation",{"_index":859,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iot",{"_index":1785,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ipsam",{"_index":1336,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ipsum",{"_index":1327,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["iradioitems",{"_index":3436,"title":{"interfaces/IRadioItems.html":{}},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["iran",{"_index":1945,"title":{},"body":{"interfaces/CountryList.html":{}}}],["iraq",{"_index":1948,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ireland",{"_index":1950,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irl",{"_index":1949,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irn",{"_index":1944,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irq",{"_index":1947,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irrelevant",{"_index":3246,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":1704,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["isbconly",{"_index":932,"title":{},"body":{"classes/Address.html":{}}}],["isbcphn",{"_index":3860,"title":{},"body":{"components/PhnComponent.html":{},"changelog.html":{}}}],["iscanada",{"_index":829,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iscomplete",{"_index":930,"title":{},"body":{"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["iscontinuedisabled",{"_index":3603,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isdate",{"_index":2434,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":2354,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":162,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["isl",{"_index":1938,"title":{},"body":{"interfaces/CountryList.html":{}}}],["islamic",{"_index":1946,"title":{},"body":{"interfaces/CountryList.html":{}}}],["island",{"_index":1782,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["islands",{"_index":1718,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isle",{"_index":1952,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isloading",{"_index":3104,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["isn't",{"_index":2663,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isopen",{"_index":590,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["ispaenvresponse",{"_index":3458,"title":{"interfaces/ISpaEnvResponse.html":{}},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["ispagecomplete",{"_index":341,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispagecomplete(url",{"_index":345,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{}}}],["ispagelistempty",{"_index":1160,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispdf",{"_index":2911,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isprerequisitecomplete",{"_index":342,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isr",{"_index":1954,"title":{},"body":{"interfaces/CountryList.html":{}}}],["israel",{"_index":1955,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isrequired",{"_index":746,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["issue",{"_index":2907,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":1142,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{}}}],["iste",{"_index":1347,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["istypeaheadloading",{"_index":3272,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["isundermaintenance",{"_index":3531,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isvalid",{"_index":927,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["it'll",{"_index":2384,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["it's",{"_index":452,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ita",{"_index":1956,"title":{},"body":{"interfaces/CountryList.html":{}}}],["italy",{"_index":1957,"title":{},"body":{"interfaces/CountryList.html":{}}}],["item",{"_index":883,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{}}}],["item.iscomplete",{"_index":1219,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["items",{"_index":1170,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["iterate",{"_index":3346,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["itself",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["jam",{"_index":1958,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jamaica",{"_index":1959,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jan",{"_index":2184,"title":{},"body":{"interfaces/CountryList.html":{}}}],["japan",{"_index":1961,"title":{},"body":{"interfaces/CountryList.html":{}}}],["javascript",{"_index":958,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["jersey",{"_index":1963,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jey",{"_index":1962,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jor",{"_index":1964,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jordan",{"_index":1965,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jpeg",{"_index":2756,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":2707,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpn",{"_index":1960,"title":{},"body":{"interfaces/CountryList.html":{}}}],["js",{"_index":5167,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":5144,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":5148,"title":{},"body":{"coverage.html":{}}}],["jsdate",{"_index":2380,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1591,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["json.stringify(error",{"_index":2890,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["kaz",{"_index":1966,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kazakhstan",{"_index":1967,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keeling",{"_index":1823,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keep",{"_index":142,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["ken",{"_index":1968,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kenya",{"_index":1969,"title":{},"body":{"interfaces/CountryList.html":{}}}],["key",{"_index":559,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["keyboard",{"_index":3362,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["keyboardevent",{"_index":2416,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["keyup",{"_index":2857,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kgz",{"_index":1978,"title":{},"body":{"interfaces/CountryList.html":{}}}],["khm",{"_index":1800,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kib",{"_index":2950,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":5225,"title":{},"body":{"license.html":{}}}],["kingdom",{"_index":2233,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kir",{"_index":1970,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kiribati",{"_index":1971,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kitts",{"_index":2121,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kna",{"_index":2120,"title":{},"body":{"interfaces/CountryList.html":{}}}],["know",{"_index":1051,"title":{},"body":{"components/ButtonGroupComponent.html":{},"additional-documentation/getting-started.html":{}}}],["known",{"_index":1141,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["kong",{"_index":1935,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kor",{"_index":1975,"title":{},"body":{"interfaces/CountryList.html":{}}}],["korea",{"_index":1973,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kuwait",{"_index":1977,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kwt",{"_index":1976,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kyrgyzstan",{"_index":1979,"title":{},"body":{"interfaces/CountryList.html":{}}}],["label",{"_index":133,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["label.getattribute('for",{"_index":546,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelforid",{"_index":514,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["labelid",{"_index":512,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelledby=\"mylargemodallabel\"]')).isdisplayed",{"_index":570,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":455,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":544,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelreplacementtag",{"_index":1306,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["labels",{"_index":179,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["labeltext",{"_index":2310,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["labrador",{"_index":4062,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["land",{"_index":1717,"title":{},"body":{"interfaces/CountryList.html":{}}}],["landing",{"_index":1202,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["language",{"_index":5228,"title":{},"body":{"license.html":{}}}],["lanka",{"_index":2178,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lao",{"_index":1980,"title":{},"body":{"interfaces/CountryList.html":{}}}],["largely",{"_index":2298,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["last",{"_index":3151,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastname",{"_index":3158,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastnamelabel",{"_index":3164,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["later",{"_index":2718,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["latvia",{"_index":1982,"title":{},"body":{"interfaces/CountryList.html":{}}}],["law",{"_index":5217,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3137,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["lbn",{"_index":1983,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lbr",{"_index":1987,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lby",{"_index":1989,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lca",{"_index":2123,"title":{},"body":{"interfaces/CountryList.html":{}}}],["leading",{"_index":3897,"title":{},"body":{"components/PhnComponent.html":{}}}],["leads",{"_index":476,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["leave",{"_index":3534,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lebanon",{"_index":1984,"title":{},"body":{"interfaces/CountryList.html":{}}}],["left",{"_index":1696,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["left/right",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":601,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":2622,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["lengths",{"_index":784,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["leone",{"_index":2153,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lesotho",{"_index":1986,"title":{},"body":{"interfaces/CountryList.html":{}}}],["less",{"_index":1015,"title":{},"body":{"components/ButtonComponent.html":{}}}],["leste",{"_index":2206,"title":{},"body":{"interfaces/CountryList.html":{}}}],["letter",{"_index":3189,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":1309,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["level",{"_index":1553,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":5298,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["lib",{"_index":359,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":1135,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":5281,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":5283,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":4967,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":4947,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":5271,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":5268,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["liberia",{"_index":1988,"title":{},"body":{"interfaces/CountryList.html":{}}}],["libif",{"_index":5363,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":2303,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":3754,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libsetup",{"_index":5196,"title":{},"body":{"index.html":{}}}],["libya",{"_index":1990,"title":{},"body":{"interfaces/CountryList.html":{}}}],["license",{"_index":5112,"title":{"license.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["license/index.ts",{"_index":5110,"title":{},"body":{"coverage.html":{}}}],["licensed",{"_index":5210,"title":{},"body":{"license.html":{}}}],["lie",{"_index":1991,"title":{},"body":{"interfaces/CountryList.html":{}}}],["liechtenstein",{"_index":1992,"title":{},"body":{"interfaces/CountryList.html":{}}}],["likes",{"_index":5266,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitations",{"_index":5231,"title":{},"body":{"license.html":{}}}],["line",{"_index":764,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["line:max",{"_index":3552,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lines",{"_index":838,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["link",{"_index":434,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":5304,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":5373,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":472,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":884,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["listed",{"_index":5263,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":281,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["literals",{"_index":1495,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lithuania",{"_index":1994,"title":{},"body":{"interfaces/CountryList.html":{}}}],["live",{"_index":5356,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lka",{"_index":2176,"title":{},"body":{"interfaces/CountryList.html":{}}}],["load",{"_index":2606,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{},"todo.html":{}}}],["loaded",{"_index":865,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["loadimage",{"_index":2604,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":2609,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":22,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["local",{"_index":2505,"title":{"additional-documentation/local-development.html":{}},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality,street",{"_index":3240,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["locally",{"_index":3500,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":2785,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":5324,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":1514,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["log(message",{"_index":1613,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logentry",{"_index":2596,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":1517,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logerror(errormessage",{"_index":1615,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logged",{"_index":1486,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logger",{"_index":1498,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logging",{"_index":306,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["logging/log",{"_index":2597,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror",{"_index":1605,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["loghttperror(error",{"_index":1541,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["loghttprequeststoconsole",{"_index":232,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["logic",{"_index":193,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["logo",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["logosrc",{"_index":3403,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":1519,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logservice",{"_index":2653,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["logsource",{"_index":1504,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["long",{"_index":328,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["longer",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":3904,"title":{},"body":{"components/PhnComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":3254,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lookup",{"_index":509,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["lookup(address",{"_index":3230,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lorem",{"_index":1326,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["losing",{"_index":1537,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lost",{"_index":270,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["lower",{"_index":1674,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["lso",{"_index":1985,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ltu",{"_index":1993,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lucia",{"_index":2124,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lux",{"_index":1995,"title":{},"body":{"interfaces/CountryList.html":{}}}],["luxembourg",{"_index":1996,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lva",{"_index":1981,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maarten",{"_index":2157,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mac",{"_index":1997,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macao",{"_index":1998,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macbooks",{"_index":5239,"title":{},"body":{"todo.html":{}}}],["macedonia",{"_index":2000,"title":{},"body":{"interfaces/CountryList.html":{}}}],["machine",{"_index":5316,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["madagascar",{"_index":2004,"title":{},"body":{"interfaces/CountryList.html":{}}}],["made",{"_index":4950,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maf",{"_index":2125,"title":{},"body":{"interfaces/CountryList.html":{}}}],["magnam",{"_index":1335,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["main",{"_index":1011,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maintenance",{"_index":3465,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenanceflag",{"_index":3538,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenancemessage",{"_index":3550,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["majorly",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":10,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":217,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["making",{"_index":1017,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["malawi",{"_index":2006,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malaysia",{"_index":2008,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maldives",{"_index":2010,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malformed",{"_index":3001,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mali",{"_index":2012,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malta",{"_index":2014,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malvinas",{"_index":1875,"title":{},"body":{"interfaces/CountryList.html":{}}}],["man",{"_index":1953,"title":{},"body":{"interfaces/CountryList.html":{}}}],["manage",{"_index":2765,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manitoba",{"_index":4057,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["manually",{"_index":2388,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["many",{"_index":3448,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["map",{"_index":2583,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":4403,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":2863,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map([['acl",{"_index":3554,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["map(prov",{"_index":867,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["map(x",{"_index":1681,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":5300,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":2315,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["mar",{"_index":2041,"title":{},"body":{"interfaces/CountryList.html":{}}}],["margins",{"_index":3139,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["mariana",{"_index":2071,"title":{},"body":{"interfaces/CountryList.html":{}}}],["marino",{"_index":2137,"title":{},"body":{"interfaces/CountryList.html":{}}}],["markallinputstouched",{"_index":27,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markastouched",{"_index":77,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markdown",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["markdownlint",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["markup",{"_index":1016,"title":{},"body":{"components/ButtonComponent.html":{}}}],["marshall",{"_index":2016,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martin",{"_index":2126,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martinique",{"_index":2018,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mask",{"_index":815,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["match",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":111,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":3247,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":4436,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil(math.random()*100",{"_index":2920,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":4424,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["mauritania",{"_index":2020,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mauritius",{"_index":2022,"title":{},"body":{"interfaces/CountryList.html":{}}}],["max",{"_index":2975,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["max_year_range",{"_index":5067,"title":{},"body":{"coverage.html":{}}}],["maxheight",{"_index":2994,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":2747,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":2270,"title":{},"body":{"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{},"todo.html":{}}}],["maxlenasnumber",{"_index":3620,"title":{},"body":{"components/NameComponent.html":{}}}],["maxlength",{"_index":1275,"title":{},"body":{"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"todo.html":{}}}],["maxlengths",{"_index":731,"title":{"interfaces/Maxlengths.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["maxretry",{"_index":2999,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":1444,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":2976,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":2991,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maybe",{"_index":4326,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["mayen",{"_index":2185,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mayotte",{"_index":2024,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mb",{"_index":2838,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["mcdonald",{"_index":1927,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mco",{"_index":2033,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mda",{"_index":2031,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdash",{"_index":3375,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["mdg",{"_index":2003,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdv",{"_index":2009,"title":{},"body":{"interfaces/CountryList.html":{}}}],["means",{"_index":406,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["meant",{"_index":3129,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["meet",{"_index":3760,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["member",{"_index":3879,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["menu",{"_index":5270,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":2582,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":2805,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["message",{"_index":1515,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["message.interface",{"_index":171,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["message.interface.ts",{"_index":2559,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["message.interface.ts:13",{"_index":2560,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["messages",{"_index":176,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["meta",{"_index":1520,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":582,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["method",{"_index":158,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["methods",{"_index":23,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["mex",{"_index":2025,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mexico",{"_index":2026,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mhl",{"_index":2015,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mib",{"_index":2951,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["micronesia",{"_index":2028,"title":{},"body":{"interfaces/CountryList.html":{}}}],["middle",{"_index":3150,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":3159,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["middlenamelabel",{"_index":3165,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["mime",{"_index":2706,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mini",{"_index":2324,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":2392,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["minimum",{"_index":3685,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ministry",{"_index":3503,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["minlen",{"_index":3704,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":3758,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":3697,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":3698,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":505,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"changelog.html":{}}}],["miquelon",{"_index":2130,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mirror",{"_index":508,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":5174,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["missing",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["mistakes",{"_index":5198,"title":{},"body":{"index.html":{}}}],["mkd",{"_index":1999,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mli",{"_index":2011,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mlt",{"_index":2013,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mmr",{"_index":2045,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mne",{"_index":2037,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mng",{"_index":2035,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mnp",{"_index":2069,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mobile",{"_index":3938,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["mockups",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["mod",{"_index":3916,"title":{},"body":{"components/PhnComponent.html":{}}}],["modal",{"_index":414,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["modal')).element(by.css('div[aria",{"_index":569,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["modal'},{'name",{"_index":622,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["modal.component",{"_index":4198,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modal.component.html",{"_index":1432,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.scss",{"_index":3529,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.ts",{"_index":3461,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:18",{"_index":4148,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:19",{"_index":4147,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:21",{"_index":4146,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:27",{"_index":4150,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:31",{"_index":4149,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal/consent",{"_index":3460,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modal/sample",{"_index":4139,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modaldirective",{"_index":2577,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":4172,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":4241,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":2335,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":2602,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":2600,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":4873,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["models/abstract",{"_index":1398,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/address.model",{"_index":721,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["models/base",{"_index":717,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ToggleComponent.html":{}}}],["models/container",{"_index":4397,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/error",{"_index":1399,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/images.model",{"_index":2589,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["models/mask.constants",{"_index":3884,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["models/person.model",{"_index":3197,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["modified",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["modifyjson",{"_index":5114,"title":{},"body":{"coverage.html":{}}}],["module",{"_index":1120,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":1122,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":1134,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":358,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohcommmonlibraryerror",{"_index":4451,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror",{"_index":3606,"title":{"classes/MoHCommonLibraryError.html":{}},"body":{"classes/MoHCommonLibraryError.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["mohcommonlibraryerror(msg",{"_index":4459,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohstart",{"_index":5135,"title":{},"body":{"coverage.html":{}}}],["moldova",{"_index":2032,"title":{},"body":{"interfaces/CountryList.html":{}}}],["molestiae",{"_index":1391,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["molestias",{"_index":1350,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mollitia",{"_index":1348,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["moment",{"_index":1004,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().toisostring",{"_index":1595,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["moment_",{"_index":1488,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["momentjs",{"_index":5346,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["monaco",{"_index":2034,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mongolia",{"_index":2036,"title":{},"body":{"interfaces/CountryList.html":{}}}],["montenegro",{"_index":2038,"title":{},"body":{"interfaces/CountryList.html":{}}}],["month",{"_index":2344,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["montserrat",{"_index":2040,"title":{},"body":{"interfaces/CountryList.html":{}}}],["more",{"_index":329,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["morocco",{"_index":2042,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mouse",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":4966,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moz",{"_index":2043,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mozambique",{"_index":2044,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mrt",{"_index":2019,"title":{},"body":{"interfaces/CountryList.html":{}}}],["msg",{"_index":1558,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/XiconButtonComponent.html":{}}}],["msp",{"_index":773,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["msp/api/env",{"_index":3539,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["mspdataservice",{"_index":2592,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":3072,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":3071,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":2815,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":2921,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":2927,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":3068,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":2970,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":2972,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":2915,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":2924,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":2922,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":2939,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":2966,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":2963,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":3087,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":3070,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":2873,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":2590,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msr",{"_index":2039,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mtq",{"_index":2017,"title":{},"body":{"interfaces/CountryList.html":{}}}],["multi",{"_index":1055,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["multiple",{"_index":1494,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":2947,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["multiply",{"_index":3908,"title":{},"body":{"components/PhnComponent.html":{}}}],["mus",{"_index":2021,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mutually",{"_index":5182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwi",{"_index":2005,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myanmar",{"_index":2046,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mydatepicker",{"_index":2295,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":5118,"title":{},"body":{"coverage.html":{}}}],["mys",{"_index":2007,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myt",{"_index":2023,"title":{},"body":{"interfaces/CountryList.html":{}}}],["n",{"_index":2702,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nam",{"_index":2047,"title":{},"body":{"interfaces/CountryList.html":{}}}],["name",{"_index":36,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name'},{'name",{"_index":644,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["name.component",{"_index":4211,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.component.html",{"_index":3155,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.scss",{"_index":3154,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.ts",{"_index":3149,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["name.component.ts:113",{"_index":3176,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:117",{"_index":3177,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:121",{"_index":3178,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:36",{"_index":3172,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:37",{"_index":3174,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:38",{"_index":3173,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:39",{"_index":3169,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:40",{"_index":3171,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:41",{"_index":3170,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:42",{"_index":3168,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:45",{"_index":3182,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:46",{"_index":3184,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:47",{"_index":3183,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:49",{"_index":3187,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:51",{"_index":3181,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:53",{"_index":3196,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:54",{"_index":3195,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:56",{"_index":3179,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:57",{"_index":3167,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:63",{"_index":3175,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.directive",{"_index":4207,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.directive.ts",{"_index":4336,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:26",{"_index":4338,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["name/full",{"_index":3148,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["name=\"${refnameval}\"]`)).click",{"_index":564,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":5319,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name@domain.com",{"_index":2537,"title":{},"body":{"components/EmailComponent.html":{}}}],["name^=\"${refnameval",{"_index":576,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).first().sendkeys(text",{"_index":573,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).sendkeys(text",{"_index":561,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name_",{"_index":3624,"title":{},"body":{"components/NameComponent.html":{}}}],["namecomponent",{"_index":364,"title":{"components/NameComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameregex",{"_index":3160,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["names",{"_index":2918,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["names.length",{"_index":3848,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":3847,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":3849,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":3850,"title":{},"body":{"classes/Person.html":{}}}],["namestr",{"_index":3619,"title":{},"body":{"components/NameComponent.html":{}}}],["namibia",{"_index":2048,"title":{},"body":{"interfaces/CountryList.html":{}}}],["naming",{"_index":5249,"title":{},"body":{"todo.html":{}}}],["napprox",{"_index":2958,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":2962,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":2960,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":957,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":2731,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":1412,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":1413,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["natus",{"_index":1338,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nauru",{"_index":2050,"title":{},"body":{"interfaces/CountryList.html":{}}}],["navigate",{"_index":28,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":78,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigates",{"_index":83,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigateto",{"_index":378,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":70,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigation",{"_index":1491,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["navigationend",{"_index":3417,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nb",{"_index":4058,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nbytes",{"_index":2943,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ncl",{"_index":2055,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nec",{"_index":2515,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["necessary",{"_index":394,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":16,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["negative",{"_index":3138,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nemo",{"_index":1360,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nepal",{"_index":2052,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ner",{"_index":2061,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nesciunt",{"_index":1397,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nested",{"_index":3136,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":1528,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["netherlands",{"_index":2054,"title":{},"body":{"interfaces/CountryList.html":{}}}],["network",{"_index":1538,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["never",{"_index":1568,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["nevis",{"_index":2122,"title":{},"body":{"interfaces/CountryList.html":{}}}],["new",{"_index":756,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["new.target.prototype",{"_index":3616,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["newfoundland",{"_index":4061,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["newurl",{"_index":1513,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["next",{"_index":391,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{}}}],["nextpagenumber",{"_index":2898,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nfk",{"_index":2067,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ng",{"_index":428,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":2496,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["ng_value_accessor",{"_index":716,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["nga",{"_index":2063,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ngaftercontentinit",{"_index":2854,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngafterviewinit",{"_index":3209,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["ngchanges",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["ngcontent",{"_index":3544,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ngcontrol",{"_index":152,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{}}}],["ngcontrol.control.setvalidators(allvalidators",{"_index":223,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.updatevalueandvalidity",{"_index":224,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.validator",{"_index":221,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngform",{"_index":44,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":5332,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":1242,"title":{},"body":{"components/CheckboxComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["ngmodelchange",{"_index":2411,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":323,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngmodules",{"_index":4108,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["ngonchanges",{"_index":2435,"title":{},"body":{"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"changelog.html":{}}}],["ngonchanges(changes",{"_index":830,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ngondestroy",{"_index":4373,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ngoninit",{"_index":125,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["ngselect",{"_index":520,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":4186,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":3130,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":599,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":2338,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":2294,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":4177,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":4240,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":2574,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nic",{"_index":2059,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nicaragua",{"_index":2060,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niger",{"_index":2062,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nigeria",{"_index":2064,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nisi",{"_index":1345,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["niu",{"_index":2065,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niue",{"_index":2066,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nl",{"_index":4060,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nld",{"_index":2053,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nmultiple",{"_index":2957,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nobis",{"_index":1374,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["node",{"_index":5191,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":5354,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":5327,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":2284,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["noidimage",{"_index":2628,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1342,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":1099,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":2326,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["nonvdi",{"_index":5242,"title":{},"body":{"todo.html":{}}}],["nopastdatesallowed",{"_index":2290,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["norfolk",{"_index":2068,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northern",{"_index":2070,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northwest",{"_index":4075,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["norway",{"_index":2072,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nostrum",{"_index":1384,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["note",{"_index":469,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["notes",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":3345,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["notice",{"_index":409,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["notify",{"_index":2742,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":3670,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["nova",{"_index":4064,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["now",{"_index":502,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["npl",{"_index":2051,"title":{},"body":{"interfaces/CountryList.html":{}}}],["npm",{"_index":1001,"title":{},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["nprstv",{"_index":944,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["nru",{"_index":2049,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ns",{"_index":4063,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nt",{"_index":4074,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nu",{"_index":4076,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["null",{"_index":837,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["null/undefined",{"_index":850,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["nulls",{"_index":3840,"title":{},"body":{"classes/Person.html":{}}}],["num",{"_index":3911,"title":{},"body":{"components/PhnComponent.html":{}}}],["number",{"_index":441,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["number'},{'name",{"_index":660,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["number(this.phn.substring(9",{"_index":3922,"title":{},"body":{"components/PhnComponent.html":{}}}],["number.component",{"_index":4201,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.component.html",{"_index":3929,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.scss",{"_index":3928,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts",{"_index":3927,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["number.component.ts:105",{"_index":3947,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:112",{"_index":3945,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:117",{"_index":3950,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:125",{"_index":3948,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:36",{"_index":3959,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:37",{"_index":3937,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:38",{"_index":3940,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:39",{"_index":3939,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:41",{"_index":3936,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:45",{"_index":3941,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:50",{"_index":3961,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:54",{"_index":3942,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:56",{"_index":3955,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:58",{"_index":3954,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:59",{"_index":3960,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:62",{"_index":3952,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:65",{"_index":3935,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:67",{"_index":3953,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:74",{"_index":3943,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.parseint",{"_index":3644,"title":{},"body":{"components/NameComponent.html":{}}}],["number/phone",{"_index":3926,"title":{},"body":{"components/PhoneNumberComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["numbers",{"_index":1311,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["numerator",{"_index":4417,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numpages",{"_index":3059,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["numquam",{"_index":1385,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nunavut",{"_index":4077,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nzl",{"_index":2057,"title":{},"body":{"interfaces/CountryList.html":{}}}],["o",{"_index":2831,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obcaecati",{"_index":1380,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["obj",{"_index":2407,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["obj.features.map(feature",{"_index":3249,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["object",{"_index":279,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"classes/Person.html":{}}}],["object.addressline1",{"_index":990,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline2",{"_index":992,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline3",{"_index":994,"title":{},"body":{"classes/Address.html":{}}}],["object.city",{"_index":995,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":996,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth",{"_index":3854,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":3851,"title":{},"body":{"classes/Person.html":{}}}],["object.keys(this._defaulterrmsg).map",{"_index":210,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["object.keys(this.disabled).map",{"_index":919,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.errormessage).map",{"_index":204,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["object.keys(this.fieldmaxlenghts).map",{"_index":912,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":108,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.keys(this.labels).map",{"_index":907,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.readonlyfields).map",{"_index":917,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.lastname",{"_index":3853,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":3852,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":997,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":998,"title":{},"body":{"classes/Address.html":{}}}],["object.setprototypeof(this",{"_index":3615,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["objectid",{"_index":124,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":5350,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":258,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":302,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":307,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observe",{"_index":1115,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":289,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":2905,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":2893,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":2985,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":2988,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":5214,"title":{},"body":{"license.html":{}}}],["occupied",{"_index":2081,"title":{},"body":{"interfaces/CountryList.html":{}}}],["occurances",{"_index":2562,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["occured",{"_index":1577,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["ocean",{"_index":1788,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ocurrence",{"_index":532,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["odit",{"_index":1388,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["of(error",{"_index":3585,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["of30",{"_index":2872,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":5371,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["older",{"_index":5193,"title":{},"body":{"index.html":{}}}],["oman",{"_index":2074,"title":{},"body":{"interfaces/CountryList.html":{}}}],["omit",{"_index":966,"title":{},"body":{"classes/Address.html":{}}}],["omn",{"_index":2073,"title":{},"body":{"interfaces/CountryList.html":{}}}],["onblur",{"_index":1273,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onblur($event",{"_index":3944,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["onblur(event",{"_index":1294,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["onblurevent",{"_index":2274,"title":{},"body":{"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{}}}],["onblurevent(event",{"_index":3630,"title":{},"body":{"components/NameComponent.html":{},"components/PostalCodeComponent.html":{}}}],["onbtnclick",{"_index":4441,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["once",{"_index":2760,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchange",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["onchanges",{"_index":713,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["onclick",{"_index":1027,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":1039,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":2404,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":2395,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":4365,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["one",{"_index":392,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror",{"_index":3276,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onerror(err",{"_index":3290,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ongoing",{"_index":2782,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":118,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["oninput",{"_index":2421,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":3702,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":3735,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup",{"_index":3277,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onkeyup(event",{"_index":3293,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onload",{"_index":3029,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onloading",{"_index":3278,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onloading(val",{"_index":3295,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onlyfuturedates",{"_index":2322,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["onnoresults",{"_index":3279,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onnoresults(val",{"_index":3297,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onpaste",{"_index":3780,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect",{"_index":3280,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onselect(event",{"_index":3299,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onstatuschange",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["ontario",{"_index":4066,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["onvaluechange",{"_index":1274,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onvaluechange(value",{"_index":1296,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["open",{"_index":2713,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["opened/read",{"_index":3036,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openfiledialog",{"_index":2866,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openmodal",{"_index":3527,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["opens",{"_index":553,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["openshift",{"_index":1140,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":5357,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":2750,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opt",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":4401,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["optio",{"_index":1352,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":515,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["optional",{"_index":38,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["optional()@self",{"_index":1260,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["optionally",{"_index":303,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":255,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["optiontext",{"_index":490,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":555,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":839,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["organize",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["orient",{"_index":2749,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":2997,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":496,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":2674,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":851,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"overview.html":{}}}],["outlying",{"_index":2235,"title":{},"body":{"interfaces/CountryList.html":{}}}],["output",{"_index":711,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":1029,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["outside",{"_index":3123,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":2837,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["override",{"_index":463,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["overridesscss",{"_index":5127,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":5233,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":393,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["overwritefile",{"_index":5136,"title":{},"body":{"coverage.html":{}}}],["overwritten",{"_index":403,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["pa",{"_index":3557,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["package",{"_index":1002,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":4958,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":5309,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":72,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":1686,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":351,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":518,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":527,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:122",{"_index":419,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":388,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:130",{"_index":425,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:138",{"_index":404,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:146",{"_index":431,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:153",{"_index":411,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:160",{"_index":487,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:169",{"_index":530,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:178",{"_index":433,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":397,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:186",{"_index":439,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":462,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":437,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":444,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":484,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":436,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":446,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":459,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":443,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":491,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pagechecklist",{"_index":1158,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["pageframework",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":650,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagelistinterface",{"_index":1191,"title":{"interfaces/PageListInterface.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["pagenumber",{"_index":2887,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":1679,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":1685,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":1175,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["pagesection",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["pagesectioncomponent",{"_index":652,"title":{"components/PageSectionComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pageurl",{"_index":4120,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["pains",{"_index":5203,"title":{},"body":{"index.html":{}}}],["pak",{"_index":2075,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pakistan",{"_index":2076,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palau",{"_index":2078,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palestinian",{"_index":2080,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pan",{"_index":2082,"title":{},"body":{"interfaces/CountryList.html":{}}}],["panama",{"_index":2083,"title":{},"body":{"interfaces/CountryList.html":{}}}],["papua",{"_index":2085,"title":{},"body":{"interfaces/CountryList.html":{}}}],["paraguay",{"_index":2087,"title":{},"body":{"interfaces/CountryList.html":{}}}],["param",{"_index":211,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["params",{"_index":81,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":3243,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":739,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["parents",{"_index":141,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["pariatur",{"_index":1376,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["parseint(scaledwidthstring",{"_index":4313,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parseint(this.maxlength",{"_index":3373,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["parsing",{"_index":1587,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["part",{"_index":2127,"title":{},"body":{"interfaces/CountryList.html":{}}}],["parts",{"_index":3838,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":482,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["passed",{"_index":59,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["passes",{"_index":3739,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["passing",{"_index":3756,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["password",{"_index":1450,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password'},{'name",{"_index":655,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["password.component.html",{"_index":3694,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":3693,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":3717,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":3692,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":654,"title":{"components/PasswordComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":3709,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["pasting",{"_index":3779,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["patch",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":4112,"title":{},"body":{"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["paths",{"_index":4887,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["pattern",{"_index":3161,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["payload",{"_index":1108,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":1117,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcn",{"_index":2091,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pdf",{"_index":1449,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pdf.good",{"_index":1451,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":3060,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":3046,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":2885,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":2579,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":3049,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":3048,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":3057,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.workersrc=pdfjsworker",{"_index":2618,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":2613,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":2578,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsworker",{"_index":2616,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":1440,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":3044,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pe",{"_index":4067,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["people\\'s",{"_index":1974,"title":{},"body":{"interfaces/CountryList.html":{}}}],["per",{"_index":315,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CountryList.html":{}}}],["performance",{"_index":860,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["period",{"_index":3192,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["periods",{"_index":1315,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["permissions",{"_index":5230,"title":{},"body":{"license.html":{}}}],["persisted",{"_index":803,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["person",{"_index":2599,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":3833,"title":{},"body":{"classes/Person.html":{}}}],["person.model",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["person.model.ts",{"_index":4248,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":1675,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["personchange",{"_index":3166,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["peru",{"_index":2088,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pg",{"_index":319,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["pharmacare's",{"_index":968,"title":{},"body":{"classes/Address.html":{}}}],["philippines",{"_index":2090,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phl",{"_index":2089,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phn",{"_index":3856,"title":{},"body":{"components/PhnComponent.html":{},"changelog.html":{}}}],["phn'},{'name",{"_index":657,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["phn.component.html",{"_index":3858,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.component.scss",{"_index":3857,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn_",{"_index":3864,"title":{},"body":{"components/PhnComponent.html":{}}}],["phncomponent",{"_index":656,"title":{"components/PhnComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":659,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["phone/radio",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["phonelength",{"_index":3982,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumber",{"_index":3930,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["phonenumbercomponent",{"_index":658,"title":{"components/PhoneNumberComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumberregex",{"_index":3931,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["pib",{"_index":2953,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pierre",{"_index":2129,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pipe",{"_index":2862,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(filter((evt",{"_index":2860,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":2908,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pitcairn",{"_index":2092,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pixel",{"_index":2752,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["place",{"_index":326,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["placeholder",{"_index":1276,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["placeholders",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":5252,"title":{},"body":{"todo.html":{}}}],["please",{"_index":2271,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"index.html":{}}}],["plurinational",{"_index":1769,"title":{},"body":{"interfaces/CountryList.html":{}}}],["plus",{"_index":758,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["plw",{"_index":2077,"title":{},"body":{"interfaces/CountryList.html":{}}}],["png",{"_index":2084,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["po",{"_index":776,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["point",{"_index":464,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["points",{"_index":4875,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["pol",{"_index":2093,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poland",{"_index":2094,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pollyfills.ts",{"_index":5334,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["polynesia",{"_index":1888,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poor",{"_index":2301,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["populated",{"_index":3030,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":3056,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["portugal",{"_index":2096,"title":{},"body":{"interfaces/CountryList.html":{}}}],["possible",{"_index":1263,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"todo.html":{}}}],["post",{"_index":235,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":272,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":662,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["postal.directive",{"_index":4214,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postal.directive.ts",{"_index":4323,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["postal.directive.ts:27",{"_index":4325,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["postalcode",{"_index":710,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["postalcode.directive",{"_index":4229,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postalcode.directive.ts",{"_index":4339,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["postalcode.directive.ts:48",{"_index":4343,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:49",{"_index":4342,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:51",{"_index":4344,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode_",{"_index":3997,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["postalcodebcregex",{"_index":929,"title":{},"body":{"classes/Address.html":{}}}],["postalcodecomponent",{"_index":661,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["potential",{"_index":2906,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":5302,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":2871,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["pr#13",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":3392,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pre",{"_index":4132,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["preceding",{"_index":2824,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["prefixarrayofchar",{"_index":3972,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["premium",{"_index":3516,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prerequisites",{"_index":1182,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["present",{"_index":3690,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preservesymlinks",{"_index":4805,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["prevent",{"_index":3778,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":5335,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previous",{"_index":1221,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["previously",{"_index":2929,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pri",{"_index":2097,"title":{},"body":{"interfaces/CountryList.html":{}}}],["primarily",{"_index":4382,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":1032,"title":{},"body":{"components/ButtonComponent.html":{}}}],["prime",{"_index":454,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["prince",{"_index":4068,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["principe",{"_index":2141,"title":{},"body":{"interfaces/CountryList.html":{}}}],["print",{"_index":963,"title":{},"body":{"classes/Address.html":{}}}],["printed",{"_index":960,"title":{},"body":{"classes/Address.html":{}}}],["prior",{"_index":5303,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":5322,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["privacy",{"_index":3510,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["private",{"_index":861,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["prk",{"_index":1972,"title":{},"body":{"interfaces/CountryList.html":{}}}],["probably",{"_index":3037,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["problem",{"_index":3681,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["proceed",{"_index":1186,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["processing",{"_index":2698,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processname",{"_index":3530,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["processresponse",{"_index":3377,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":3248,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":1499,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":1510,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["progress",{"_index":680,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["progressbarmodule",{"_index":4171,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":4239,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":3023,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":3022,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":1665,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":922,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["project>architect>build>options",{"_index":5380,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":5348,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":5178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../confirm",{"_index":5176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datepicker.component.ts",{"_index":5181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../images.model.ts",{"_index":5179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../logger.service.ts",{"_index":5180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha",{"_index":1087,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":5033,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":1131,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":1133,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":349,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/helpers/library",{"_index":3607,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["projects/common/helpers/scrolltoerror.ts",{"_index":5038,"title":{},"body":{"coverage.html":{}}}],["projects/common/helpers/test",{"_index":5040,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts",{"_index":580,"title":{},"body":{"components/AccordionCommonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:21",{"_index":594,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:22",{"_index":593,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:24",{"_index":598,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:25",{"_index":595,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:26",{"_index":592,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":705,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["projects/common/lib/components/button",{"_index":1046,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts",{"_index":1006,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts:36",{"_index":1034,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:37",{"_index":1035,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:38",{"_index":1036,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:39",{"_index":1037,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:40",{"_index":1031,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:44",{"_index":1038,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:47",{"_index":1040,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts",{"_index":1232,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:31",{"_index":1262,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:36",{"_index":1240,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:37",{"_index":1247,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:38",{"_index":1244,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:39",{"_index":1246,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:40",{"_index":1245,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:41",{"_index":1248,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:42",{"_index":1249,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:43",{"_index":1259,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:46",{"_index":1257,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:47",{"_index":1239,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:49",{"_index":1261,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:56",{"_index":1251,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:64",{"_index":1255,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:71",{"_index":1250,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:75",{"_index":1252,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:79",{"_index":1253,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:83",{"_index":1256,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts",{"_index":1270,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/city/city.component.ts:14",{"_index":1280,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:15",{"_index":1285,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:16",{"_index":1283,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:17",{"_index":1286,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:20",{"_index":1287,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:25",{"_index":1324,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:29",{"_index":1292,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:30",{"_index":1291,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:32",{"_index":1318,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:34",{"_index":1317,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:38",{"_index":1279,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:40",{"_index":1319,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:47",{"_index":1293,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:51",{"_index":1297,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:57",{"_index":1295,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:62",{"_index":1298,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/validate",{"_index":4329,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/confirm",{"_index":1639,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/consent",{"_index":3459,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":1688,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts",{"_index":1710,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date",{"_index":2408,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":5063,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":2278,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":2462,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:106",{"_index":2461,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:108",{"_index":2463,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":2460,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:113",{"_index":2459,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:114",{"_index":2436,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:120",{"_index":2450,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:128",{"_index":2451,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:136",{"_index":2452,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:141",{"_index":2454,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:192",{"_index":2453,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":2455,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:211",{"_index":2449,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:219",{"_index":2456,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:223",{"_index":2457,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:227",{"_index":2458,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:61",{"_index":2447,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:62",{"_index":2438,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:63",{"_index":2448,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:64",{"_index":2440,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:65",{"_index":2444,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":2446,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:71",{"_index":2442,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":2441,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:77",{"_index":2445,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:92",{"_index":2437,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:97",{"_index":2439,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:99",{"_index":2443,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":2471,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:11",{"_index":2492,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:13",{"_index":2483,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:14",{"_index":2484,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:15",{"_index":2485,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:16",{"_index":2481,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:17",{"_index":2479,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:18",{"_index":2480,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:19",{"_index":2486,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":2482,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":2490,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":2478,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":2491,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:32",{"_index":2489,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:36",{"_index":2487,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:40",{"_index":2488,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/duplicate",{"_index":2493,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts",{"_index":2512,"title":{},"body":{"components/EmailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts:23",{"_index":2521,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:24",{"_index":2525,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:25",{"_index":2523,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:28",{"_index":2526,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:33",{"_index":2543,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:37",{"_index":2528,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:38",{"_index":2527,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:40",{"_index":2542,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:42",{"_index":2538,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:47",{"_index":2520,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:49",{"_index":2539,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:56",{"_index":2529,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:62",{"_index":2531,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:68",{"_index":2530,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:73",{"_index":2533,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:79",{"_index":2532,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/error",{"_index":2551,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/file",{"_index":2569,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":3098,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/full",{"_index":3147,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/geocoder",{"_index":3263,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts",{"_index":3384,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts:20",{"_index":3409,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:21",{"_index":3410,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:22",{"_index":3408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:24",{"_index":3416,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:25",{"_index":3406,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:30",{"_index":3412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:39",{"_index":3414,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:43",{"_index":3415,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:51",{"_index":3411,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts",{"_index":3618,"title":{},"body":{"components/NameComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/name/name.component.ts:21",{"_index":3622,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:22",{"_index":3623,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:23",{"_index":3626,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:24",{"_index":3625,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:27",{"_index":3627,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:32",{"_index":3640,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:36",{"_index":3629,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:37",{"_index":3628,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:39",{"_index":3639,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:41",{"_index":3637,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:42",{"_index":3621,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:44",{"_index":3638,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:51",{"_index":3632,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:56",{"_index":3631,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:61",{"_index":3636,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:68",{"_index":3633,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:73",{"_index":3634,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:77",{"_index":3635,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:81",{"_index":3642,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/validate",{"_index":4335,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":3647,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":3683,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:118",{"_index":3733,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":3738,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:135",{"_index":3736,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:142",{"_index":3725,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:157",{"_index":3727,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":3713,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":3712,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":3711,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":3719,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":3720,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":3716,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:64",{"_index":3715,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:65",{"_index":3710,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:66",{"_index":3721,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":3718,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":3723,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":3722,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":3742,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:76",{"_index":3745,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:77",{"_index":3747,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":3741,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:82",{"_index":3746,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:83",{"_index":3743,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:84",{"_index":3744,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:85",{"_index":3708,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:92",{"_index":3734,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts",{"_index":3855,"title":{},"body":{"components/PhnComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:14",{"_index":3863,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:15",{"_index":3868,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:16",{"_index":3865,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:19",{"_index":3862,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:21",{"_index":3880,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:28",{"_index":3869,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:33",{"_index":3883,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:37",{"_index":3871,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:38",{"_index":3870,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:40",{"_index":3882,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:41",{"_index":3861,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:43",{"_index":3881,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:53",{"_index":3872,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:59",{"_index":3874,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:68",{"_index":3873,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:73",{"_index":3877,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:79",{"_index":3876,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:88",{"_index":3875,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phone",{"_index":3925,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/postal",{"_index":3986,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts",{"_index":4032,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts:43",{"_index":4036,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:44",{"_index":4041,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:45",{"_index":4038,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:46",{"_index":4042,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:47",{"_index":4040,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:48",{"_index":4039,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:49",{"_index":4043,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:52",{"_index":4044,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:57",{"_index":4054,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:61",{"_index":4046,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:62",{"_index":4045,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:64",{"_index":4053,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:66",{"_index":4051,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:70",{"_index":4035,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:73",{"_index":4052,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:80",{"_index":4047,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:84",{"_index":4049,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:92",{"_index":4048,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:97",{"_index":4050,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts",{"_index":3437,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:100",{"_index":4091,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:104",{"_index":4093,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:53",{"_index":4095,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:54",{"_index":4094,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:58",{"_index":4087,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:63",{"_index":4086,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:65",{"_index":4088,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:68",{"_index":4097,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:72",{"_index":4084,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:73",{"_index":4085,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:75",{"_index":4083,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:77",{"_index":4096,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:84",{"_index":4089,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:88",{"_index":4092,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:96",{"_index":4090,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/sample",{"_index":4138,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts",{"_index":4251,"title":{},"body":{"components/SinComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:24",{"_index":4271,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:30",{"_index":4274,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:31",{"_index":4273,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:33",{"_index":4258,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:34",{"_index":4261,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:35",{"_index":4262,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:36",{"_index":4260,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:39",{"_index":4263,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:45",{"_index":4275,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:49",{"_index":4264,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:50",{"_index":4256,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:52",{"_index":4272,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:62",{"_index":4265,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:68",{"_index":4267,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:77",{"_index":4266,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:82",{"_index":4270,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:88",{"_index":4268,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:97",{"_index":4269,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts",{"_index":5083,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/street/validate",{"_index":4361,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":4284,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":4295,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":4296,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":4297,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:16",{"_index":4303,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:18",{"_index":4294,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":4305,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:24",{"_index":4301,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:42",{"_index":4299,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:48",{"_index":4302,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:53",{"_index":4300,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":4316,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":4320,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":4321,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":4319,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":4322,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/validate",{"_index":4356,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/wizard",{"_index":4364,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/xicon",{"_index":4439,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts",{"_index":921,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts:11",{"_index":934,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:13",{"_index":937,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:14",{"_index":942,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:15",{"_index":939,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:16",{"_index":950,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:17",{"_index":938,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:18",{"_index":940,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:19",{"_index":941,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:23",{"_index":971,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:27",{"_index":973,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:36",{"_index":956,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:44",{"_index":953,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:50",{"_index":975,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:61",{"_index":952,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:7",{"_index":949,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:9",{"_index":933,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/base.ts",{"_index":999,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/lib/models/base.ts:11",{"_index":1005,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/lib/models/container.ts",{"_index":1662,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/lib/models/container.ts:12",{"_index":1669,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:18",{"_index":1672,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:22",{"_index":1678,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/error",{"_index":2558,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["projects/common/lib/models/images.model.ts",{"_index":1406,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/models/images.model.ts:16",{"_index":1474,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:17",{"_index":1476,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:18",{"_index":1473,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:20",{"_index":1475,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:29",{"_index":1417,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:35",{"_index":1422,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:36",{"_index":1419,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:38",{"_index":1427,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:39",{"_index":1429,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:40",{"_index":1428,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:41",{"_index":1425,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:42",{"_index":1426,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:43",{"_index":1424,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:46",{"_index":1423,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:48",{"_index":1421,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:49",{"_index":1418,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:56",{"_index":1478,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/lib/models/images.model.ts:60",{"_index":1480,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:61",{"_index":1479,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:68",{"_index":1481,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/mask.constants.ts",{"_index":5097,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/models/person.model.ts",{"_index":3795,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/lib/models/person.model.ts:13",{"_index":3808,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:14",{"_index":3810,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:15",{"_index":3809,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:18",{"_index":3806,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:19",{"_index":3804,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:22",{"_index":3805,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:25",{"_index":3817,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:30",{"_index":3820,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:35",{"_index":3823,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:53",{"_index":3827,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:67",{"_index":3832,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:86",{"_index":3812,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:91",{"_index":3811,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/simple",{"_index":4245,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/lib/services/abstract",{"_index":226,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["projects/common/lib/services/check",{"_index":1151,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts",{"_index":3221,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts:23",{"_index":3382,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:24",{"_index":3383,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:25",{"_index":3378,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:32",{"_index":3380,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:53",{"_index":3381,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:74",{"_index":3379,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/logger.service.ts",{"_index":1483,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/services/logger.service.ts:102",{"_index":1610,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:111",{"_index":1617,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:128",{"_index":1611,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:147",{"_index":1612,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:165",{"_index":1638,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:173",{"_index":1620,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:177",{"_index":1618,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:185",{"_index":1619,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:21",{"_index":1485,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/lib/services/logger.service.ts:41",{"_index":1627,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:47",{"_index":1608,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:53",{"_index":1633,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:57",{"_index":1631,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:61",{"_index":1637,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:65",{"_index":1635,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:69",{"_index":1621,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:73",{"_index":1614,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:77",{"_index":1616,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:97",{"_index":1609,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/route",{"_index":4099,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":4160,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":5361,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":5292,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":5362,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":5109,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":5113,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/moh",{"_index":5116,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/version",{"_index":5143,"title":{},"body":{"coverage.html":{}}}],["projects/common/src/public_api.ts",{"_index":5384,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":5154,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":5147,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":457,"title":{},"body":{"classes/AbstractTestPage.html":{},"guards/RouteGuardService.html":{}}}],["promise.resolve().then",{"_index":218,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PhoneNumberComponent.html":{}}}],["proper",{"_index":1447,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":2535,"title":{},"body":{"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":20,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":1496,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["property",{"_index":1523,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["props",{"_index":3250,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress",{"_index":3260,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.indexof",{"_index":3257,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":3258,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.localityname",{"_index":3252,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.provincecode",{"_index":3259,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":26,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["protection",{"_index":3509,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prototype",{"_index":3613,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["protractor",{"_index":535,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["prov",{"_index":869,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["prov.country",{"_index":868,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provide",{"_index":324,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":435,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":1205,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["provident",{"_index":1343,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["providers",{"_index":336,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":352,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":498,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"license.html":{}}}],["province'},{'name",{"_index":665,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["province.component.html",{"_index":4034,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province.component.scss",{"_index":4033,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province/country",{"_index":967,"title":{},"body":{"classes/Address.html":{}}}],["province/province.component",{"_index":730,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["province_",{"_index":4037,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province_list",{"_index":729,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["province_list.find",{"_index":4081,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecode",{"_index":4055,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecomponent",{"_index":664,"title":{"components/ProvinceComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["provincelist",{"_index":727,"title":{"interfaces/ProvinceList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["provincial",{"_index":3513,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["provision",{"_index":1703,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["provlist",{"_index":769,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj",{"_index":872,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.description",{"_index":880,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.provincecode",{"_index":878,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["prt",{"_index":2095,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pry",{"_index":2086,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pse",{"_index":2079,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pswdfeedback",{"_index":3782,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":3783,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":3699,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":123,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["public_api",{"_index":4024,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["publish",{"_index":5369,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":4589,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["puerto",{"_index":2098,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pull",{"_index":5199,"title":{},"body":{"index.html":{}}}],["pure",{"_index":5278,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":3821,"title":{},"body":{"classes/Person.html":{}}}],["pushes",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3394,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pwdcriteria",{"_index":3705,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pyf",{"_index":1887,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qat",{"_index":2100,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qatar",{"_index":2101,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qc",{"_index":4070,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["quality",{"_index":2757,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["quam",{"_index":1369,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quasi",{"_index":1337,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quebec",{"_index":4071,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["query",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":4392,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":80,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":3132,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{}}}],["questions",{"_index":3518,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["quia",{"_index":1344,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quidem",{"_index":1386,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quis",{"_index":1366,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quisquam",{"_index":1357,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quite",{"_index":1200,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["radio",{"_index":3438,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["radio's",{"_index":3449,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio'},{'name",{"_index":667,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["radio.component.html",{"_index":3451,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.scss",{"_index":3452,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.ts",{"_index":5245,"title":{},"body":{"todo.html":{}}}],["radio/checkbox",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["radiocomponent",{"_index":666,"title":{"components/RadioComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["radiolabels",{"_index":3450,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radios",{"_index":3439,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["ran",{"_index":5351,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":3095,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rapid",{"_index":3573,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rapidresponsecode",{"_index":3576,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ratio",{"_index":2753,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratione",{"_index":1381,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["rawimagefile",{"_index":1443,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["rc.0",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["rc.15",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["rc.16",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":738,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":3018,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"classes/AbstractForm.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["reactiveforms",{"_index":3324,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["read",{"_index":2716,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["readable",{"_index":422,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":2912,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":2968,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":2989,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":3042,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":3028,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":400,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["readme",{"_index":4858,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readonlyfields",{"_index":732,"title":{"interfaces/ReadOnlyFields.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["readpdf(pdffile",{"_index":3043,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reason",{"_index":2685,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["receiving",{"_index":1540,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["recieve",{"_index":3267,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["recommend",{"_index":3691,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":456,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["reduced",{"_index":2306,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ref",{"_index":2933,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":2391,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["refactored",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":4941,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":429,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["refnameval",{"_index":430,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["regex",{"_index":987,"title":{},"body":{"classes/Address.html":{}}}],["regex.test(this.postal",{"_index":989,"title":{},"body":{"classes/Address.html":{}}}],["regexp",{"_index":2540,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["regexp('^[vv]\\\\d[abceghj",{"_index":4327,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["regexp(address.postalcodebcregex",{"_index":988,"title":{},"body":{"classes/Address.html":{}}}],["regexplabel",{"_index":2564,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["region.directive",{"_index":4228,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["region.directive.ts",{"_index":4357,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["region.directive.ts:26",{"_index":4359,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["region/validate",{"_index":4227,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["register",{"_index":155,"title":{},"body":{"classes/AbstractFormControl.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"additional-documentation/getting-started.html":{}}}],["registered",{"_index":735,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["registeronchange",{"_index":126,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registeronchange(fn",{"_index":146,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registerontouched",{"_index":127,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registerontouched(fn",{"_index":149,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registervalidation",{"_index":128,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registervalidation(ngcontrol",{"_index":151,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registration",{"_index":4110,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["registration.module.ts",{"_index":335,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["registrationservice",{"_index":338,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["related",{"_index":4808,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["relates",{"_index":5353,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["release",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":5286,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remainder",{"_index":3914,"title":{},"body":{"components/PhnComponent.html":{}}}],["remove",{"_index":845,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["removed",{"_index":2821,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["removeline(line",{"_index":844,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["removing",{"_index":3010,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rename",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":3523,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rendering",{"_index":2684,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reorder",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["reorganize",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["repellat",{"_index":1356,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["replace",{"_index":208,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"todo.html":{}}}],["replace(/\\s/g",{"_index":3901,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["replace(/_/g",{"_index":3899,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["replacelabeltag",{"_index":169,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["reports",{"_index":2279,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{}}}],["reprehenderit",{"_index":1372,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["republic",{"_index":1812,"title":{},"body":{"interfaces/CountryList.html":{}}}],["repudiandae",{"_index":1378,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["repurpose",{"_index":1599,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["request",{"_index":252,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":1503,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["requests",{"_index":264,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":5156,"title":{},"body":{"coverage.html":{}}}],["require('blueimp",{"_index":2605,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":2612,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":2608,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":58,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":3162,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requirements",{"_index":3687,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["requires",{"_index":733,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["requisite",{"_index":4133,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["rerum",{"_index":1340,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["reset",{"_index":1130,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":3077,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":2910,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":2745,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":2773,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":5331,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["resolved",{"_index":3349,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["respective",{"_index":256,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":1590,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["response",{"_index":1106,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["responsetype",{"_index":1585,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["rest",{"_index":3092,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restore",{"_index":3617,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["restrictdate",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":110,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":112,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":2751,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrieve",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["retry",{"_index":2998,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":3000,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":2588,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["returned",{"_index":1109,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["returns",{"_index":65,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["reu",{"_index":2102,"title":{},"body":{"interfaces/CountryList.html":{}}}],["reverts",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["reviewmode",{"_index":4291,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["revise",{"_index":1199,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["rica",{"_index":1836,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rico",{"_index":2099,"title":{},"body":{"interfaces/CountryList.html":{}}}],["right",{"_index":501,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":3729,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role=\"progressbar",{"_index":3785,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":549,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["romania",{"_index":2105,"title":{},"body":{"interfaces/CountryList.html":{}}}],["root",{"_index":1206,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["rotate",{"_index":2736,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rou",{"_index":2104,"title":{},"body":{"interfaces/CountryList.html":{}}}],["route",{"_index":84,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["routeguard",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["routeguardservice",{"_index":333,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{}}}],["routeisactive",{"_index":3401,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeisactive(url",{"_index":3413,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routepath",{"_index":1676,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":1680,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":31,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":4369,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":4174,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routerstatesnapshot",{"_index":4123,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routes",{"_index":4105,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing.modle.ts",{"_index":4111,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing=true",{"_index":5311,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":3442,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["rules",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":4411,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":4976,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":75,"title":{},"body":{"classes/AbstractForm.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["rural",{"_index":775,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["rus",{"_index":2106,"title":{},"body":{"interfaces/CountryList.html":{}}}],["russian",{"_index":2107,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwa",{"_index":2109,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwanda",{"_index":2110,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rxjs",{"_index":283,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":286,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["réunion",{"_index":2103,"title":{},"body":{"interfaces/CountryList.html":{}}}],["s",{"_index":2942,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["s+)@(\\s+)\\.(\\s",{"_index":2541,"title":{},"body":{"components/EmailComponent.html":{}}}],["saba",{"_index":1774,"title":{},"body":{"interfaces/CountryList.html":{}}}],["safe",{"_index":4431,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["sahara",{"_index":2256,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saint",{"_index":2112,"title":{},"body":{"interfaces/CountryList.html":{}}}],["salvador",{"_index":1863,"title":{},"body":{"interfaces/CountryList.html":{}}}],["same",{"_index":519,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["samoa",{"_index":1725,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sample",{"_index":669,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["sampleimageinterface",{"_index":4137,"title":{"interfaces/SampleImageInterface.html":{}},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["samplemodal",{"_index":4142,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["samplemodalcomponent",{"_index":668,"title":{"components/SampleModalComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["san",{"_index":2136,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sandwich",{"_index":2171,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sao",{"_index":2139,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sapiente",{"_index":1334,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["saskatchewan",{"_index":4073,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["satisfy",{"_index":2385,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["satisifed",{"_index":3546,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sau",{"_index":2142,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saudi",{"_index":2143,"title":{},"body":{"interfaces/CountryList.html":{}}}],["save",{"_index":3358,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"index.html":{}}}],["saved",{"_index":2780,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["saving",{"_index":3012,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scale",{"_index":1471,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":2965,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":2931,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":1477,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":1464,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":4287,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":4307,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":2874,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":2996,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":2875,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":2993,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":2834,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":2586,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":3003,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":4410,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schematic",{"_index":4997,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":5314,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":4995,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":5313,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":5291,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["school",{"_index":3489,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["scotia",{"_index":4065,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["screen",{"_index":399,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["screenreader",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4854,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":3120,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrolldown",{"_index":379,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolls",{"_index":86,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":4374,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrolltoerror",{"_index":3115,"title":{},"body":{"components/FormActionBarComponent.html":{},"coverage.html":{}}}],["scrolltoerrorsonsubmit",{"_index":3105,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["scrollup",{"_index":380,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scss",{"_index":5341,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["sdn",{"_index":2179,"title":{},"body":{"interfaces/CountryList.html":{}}}],["search",{"_index":881,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{}}}],["searching",{"_index":3319,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["searchtext",{"_index":3273,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["second",{"_index":763,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["secondary",{"_index":1033,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":3390,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":653,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["section.component",{"_index":4184,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":3668,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":3667,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":3666,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:17",{"_index":3669,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:21",{"_index":3671,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":3665,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":3484,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["security",{"_index":4866,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["see",{"_index":332,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["select",{"_index":493,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["select/ng",{"_index":4187,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":552,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["select[ng",{"_index":575,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selected",{"_index":3376,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectedaddress",{"_index":3274,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectfilelabelref",{"_index":2639,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":524,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{}}}],["selection",{"_index":3370,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selections",{"_index":2314,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":381,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":489,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":583,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["selects",{"_index":492,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["self",{"_index":156,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["self.dataservice.getmspuuid",{"_index":2881,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":2936,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":2986,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":2937,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["semantic",{"_index":5251,"title":{},"body":{"todo.html":{}}}],["sen",{"_index":2145,"title":{},"body":{"interfaces/CountryList.html":{}}}],["send",{"_index":245,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["sending",{"_index":744,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sends",{"_index":521,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["sendspaenvserver(rapidresponsecode",{"_index":3574,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["senegal",{"_index":2146,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sequence",{"_index":1189,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["sequentially",{"_index":4103,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["sequi",{"_index":1396,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["serbia",{"_index":2148,"title":{},"body":{"interfaces/CountryList.html":{}}}],["server",{"_index":266,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":1110,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["service",{"_index":230,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":228,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:12",{"_index":241,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:17",{"_index":243,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:23",{"_index":250,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:31",{"_index":274,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:39",{"_index":276,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:53",{"_index":278,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:60",{"_index":261,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:63",{"_index":247,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":2591,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":2593,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["servicename",{"_index":3404,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services",{"_index":4872,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["services/abstract",{"_index":3474,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["services/geocoder.service",{"_index":719,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["services/logger.service",{"_index":3473,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sessionid",{"_index":1502,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["set",{"_index":751,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["set('addressstring",{"_index":3241,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('autocomplete",{"_index":3238,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('brief",{"_index":3234,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":3233,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('matchprecisionnot",{"_index":3239,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":3232,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":3231,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setaddress(data",{"_index":900,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setapplicationid(id",{"_index":1632,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setbuttongrpval",{"_index":1060,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbuttongrpval(val",{"_index":1075,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbypassguards(bypass",{"_index":1195,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setcheckboxval",{"_index":1237,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcheckboxval(event",{"_index":1254,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcity(value",{"_index":823,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setcountry(value",{"_index":811,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultcountryasoption",{"_index":885,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultprovinceasoption(country",{"_index":871,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdisabledstate",{"_index":129,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":160,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["seterrormsg",{"_index":130,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setfirstname(value",{"_index":3214,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setlabels",{"_index":905,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setlastname(value",{"_index":3218,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmaxlengths",{"_index":910,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setmiddlename(value",{"_index":3217,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setname(fullname",{"_index":3826,"title":{},"body":{"classes/Person.html":{}}}],["setpagecomplete",{"_index":1161,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpageincomplete",{"_index":1162,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpassword",{"_index":3703,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":3737,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setphonenumber",{"_index":3932,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setphonenumber(value",{"_index":3946,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setpostalcode(value",{"_index":828,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setprogramname(name",{"_index":1636,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setprogresssteps",{"_index":1667,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":1677,"title":{},"body":{"classes/Container.html":{}}}],["setprovince(value",{"_index":820,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setreadonlyfields",{"_index":915,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sets",{"_index":825,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["setseverity",{"_index":1606,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setseverity(severity",{"_index":1596,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setstarturl(url",{"_index":1193,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setstatus",{"_index":4082,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstatus(val",{"_index":3456,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["setstreet(val",{"_index":972,"title":{},"body":{"classes/Address.html":{}}}],["setstreetaddress(value",{"_index":821,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["settags",{"_index":1607,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["settags(message",{"_index":1600,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setter/getter",{"_index":3962,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["settimeout(scrolltoerror",{"_index":3124,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["settimestamp",{"_index":1593,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setting",{"_index":2319,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["setup",{"_index":322,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["setuprequest",{"_index":236,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":275,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":1560,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["seturl(newurl",{"_index":1511,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setvalue(val",{"_index":1325,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["severity",{"_index":1552,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["severitylevels",{"_index":1489,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["seychelles",{"_index":2150,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgp",{"_index":2154,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgs",{"_index":2170,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sha1",{"_index":2607,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":2973,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":2611,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":2680,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shared",{"_index":3486,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["sharedcoremodule",{"_index":4156,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":473,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["shn",{"_index":2114,"title":{},"body":{"interfaces/CountryList.html":{}}}],["shouldn't",{"_index":3584,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["show",{"_index":55,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":1062,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"todo.html":{}}}],["showfullsizeview",{"_index":3565,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["showline${line",{"_index":842,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline2",{"_index":770,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline3",{"_index":771,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["shown",{"_index":3479,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["showpasswordstrength",{"_index":3706,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["shows",{"_index":3443,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["side",{"_index":1576,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["sierra",{"_index":2152,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sign",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":3127,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/GeocoderInputComponent.html":{}}}],["simple",{"_index":1154,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{}}}],["simplechanges",{"_index":2291,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["simpledate",{"_index":4244,"title":{"interfaces/SimpleDate.html":{}},"body":{"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":5340,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simplicity",{"_index":1014,"title":{},"body":{"components/ButtonComponent.html":{}}}],["simply",{"_index":3009,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageSectionComponent.html":{}}}],["simulates",{"_index":3344,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["sin",{"_index":4252,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["sin'},{'name",{"_index":671,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["sin.component.html",{"_index":4254,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.component.scss",{"_index":4253,"title":{},"body":{"components/SinComponent.html":{}}}],["sin_",{"_index":4259,"title":{},"body":{"components/SinComponent.html":{}}}],["sincomponent",{"_index":670,"title":{"components/SinComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singapore",{"_index":2155,"title":{},"body":{"interfaces/CountryList.html":{}}}],["single",{"_index":3388,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageFrameworkComponent.html":{},"components/RadioComponent.html":{}}}],["sint",{"_index":1772,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sit",{"_index":1329,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["site",{"_index":1705,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["sitereg",{"_index":3677,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["size",{"_index":1414,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["sizetxt",{"_index":1415,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":1416,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sjm",{"_index":2182,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sk",{"_index":4072,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["skip",{"_index":398,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["skip_content_hash",{"_index":3398,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiplibcheck",{"_index":5328,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["skiplinkpath",{"_index":3399,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiptocontentbutton",{"_index":366,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slb",{"_index":2163,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sle",{"_index":2151,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slightly",{"_index":3426,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slot",{"_index":1699,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":1693,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slovakia",{"_index":2160,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slovenia",{"_index":2162,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slv",{"_index":1861,"title":{},"body":{"interfaces/CountryList.html":{}}}],["small",{"_index":2772,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["smooth",{"_index":107,"title":{},"body":{"classes/AbstractForm.html":{}}}],["smr",{"_index":2135,"title":{},"body":{"interfaces/CountryList.html":{}}}],["social",{"_index":4257,"title":{},"body":{"components/SinComponent.html":{}}}],["software",{"_index":5220,"title":{},"body":{"license.html":{}}}],["solomon",{"_index":2164,"title":{},"body":{"interfaces/CountryList.html":{}}}],["solve",{"_index":2868,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["som",{"_index":2165,"title":{},"body":{"interfaces/CountryList.html":{}}}],["somalia",{"_index":2166,"title":{},"body":{"interfaces/CountryList.html":{}}}],["something",{"_index":964,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":5115,"title":{},"body":{"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["south",{"_index":2168,"title":{},"body":{"interfaces/CountryList.html":{}}}],["southern",{"_index":1890,"title":{},"body":{"interfaces/CountryList.html":{}}}],["soutput",{"_index":2946,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["spa",{"_index":3462,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag",{"_index":3466,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_message",{"_index":3467,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_acl_maintenance_flag\":\"\",\"spa_env_msp_acl_maintenance_message",{"_index":3555,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag",{"_index":3468,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag\":\"\",\"spa_env_msp_maintenance_message",{"_index":3556,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_message",{"_index":3469,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_name",{"_index":3575,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_now",{"_index":3470,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_end",{"_index":3471,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start",{"_index":3472,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end\":\"\",\"spa_env_now",{"_index":3558,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["space",{"_index":2328,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":5365,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["spaces",{"_index":3902,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["spaenvres",{"_index":3549,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spain",{"_index":2175,"title":{},"body":{"interfaces/CountryList.html":{}}}],["specfic",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":1312,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["specific",{"_index":180,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":5383,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["specified",{"_index":253,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["spinner",{"_index":57,"title":{},"body":{"classes/AbstractForm.html":{}}}],["split",{"_index":2879,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splits",{"_index":3235,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["splunk",{"_index":1452,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["spm",{"_index":2128,"title":{},"body":{"interfaces/CountryList.html":{}}}],["srb",{"_index":2147,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sri",{"_index":2177,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ssd",{"_index":2172,"title":{},"body":{"interfaces/CountryList.html":{}}}],["stable",{"_index":3253,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["stack",{"_index":4457,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["standard",{"_index":961,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":4996,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":4422,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":5119,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":5122,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":5124,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":5117,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":5126,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":5128,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":5130,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":5132,"title":{},"body":{"coverage.html":{}}}],["start/package",{"_index":5139,"title":{},"body":{"coverage.html":{}}}],["started",{"_index":4463,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":5258,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["startoftoday",{"_index":3835,"title":{},"body":{"classes/Person.html":{}}}],["starts",{"_index":2888,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{}}}],["starturl",{"_index":1163,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["state",{"_index":781,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":5031,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2030,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":928,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["status",{"_index":1657,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"changelog.html":{},"todo.html":{}}}],["statuschange",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["statustext",{"_index":1546,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["step",{"_index":2836,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":4438,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":4370,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":1670,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["stepper/wizard",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["stepper/wizardprogress",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["steps",{"_index":2699,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["still",{"_index":2514,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PageSectionComponent.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["store",{"_index":935,"title":{},"body":{"classes/Address.html":{}}}],["stored",{"_index":857,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stp",{"_index":2138,"title":{},"body":{"interfaces/CountryList.html":{}}}],["str",{"_index":2566,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{}}}],["str.replace",{"_index":2567,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["str.slice(0",{"_index":3374,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["street",{"_index":760,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["street'},{'name",{"_index":673,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["street.component.ts",{"_index":5250,"title":{},"body":{"todo.html":{}}}],["street.directive",{"_index":4223,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["street.directive.ts",{"_index":4362,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["street.directive.ts:25",{"_index":4363,"title":{},"body":{"directives/ValidateStreetDirective.html":{}}}],["streetcomponent",{"_index":672,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["strength",{"_index":3684,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":3700,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":79,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["strip",{"_index":197,"title":{},"body":{"classes/AbstractFormControl.html":{},"changelog.html":{}}}],["stripped",{"_index":3336,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PhoneNumberComponent.html":{}}}],["stripped.length",{"_index":3984,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["stripstringtomaxlength",{"_index":3281,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["stripstringtomaxlength(str",{"_index":3304,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["structure",{"_index":745,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stuff",{"_index":3893,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["style",{"_index":1007,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageSectionComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["style.width]='strengthpercentage",{"_index":3786,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":3794,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":5310,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styled",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1691,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":5372,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":5367,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common",{"_index":5366,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":5307,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["stylesscss",{"_index":5129,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":585,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["styling",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["stylings",{"_index":1024,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stylized",{"_index":3385,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sub",{"_index":3236,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["subclasses",{"_index":1493,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["subfolder",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3314,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["submission",{"_index":1492,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["submit",{"_index":387,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitbar",{"_index":3654,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["submitlabel",{"_index":3106,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["submitted",{"_index":196,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["subscribe",{"_index":1521,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["subscribe(evt",{"_index":2793,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(response",{"_index":3590,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["subscribe(this.updateskipcontentlink.bind(this",{"_index":3421,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(url",{"_index":4405,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscription",{"_index":4389,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["success",{"_index":310,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["success_fetch_img",{"_index":5185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":5188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successcode",{"_index":1645,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["successfully",{"_index":2878,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":1021,"title":{},"body":{"components/ButtonComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{}}}],["sudan",{"_index":2173,"title":{},"body":{"interfaces/CountryList.html":{}}}],["suggestion",{"_index":3680,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["sum",{"_index":3915,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["sumofremainders",{"_index":3894,"title":{},"body":{"components/PhnComponent.html":{}}}],["sunhighlight",{"_index":2360,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["super",{"_index":788,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":1507,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["super(message",{"_index":3611,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["super.ngoninit",{"_index":1400,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["supply",{"_index":4454,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["support",{"_index":4645,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sur",{"_index":2180,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sure",{"_index":800,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["suriname",{"_index":2181,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svalbard",{"_index":2183,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svg",{"_index":5232,"title":{},"body":{"modules.html":{}}}],["svk",{"_index":2159,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svn",{"_index":2161,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swaziland",{"_index":2187,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swe",{"_index":2188,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sweden",{"_index":2189,"title":{},"body":{"interfaces/CountryList.html":{}}}],["switch",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":4419,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":3323,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switchmap(searchphrase",{"_index":3330,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switzerland",{"_index":2191,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swz",{"_index":2186,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sxm",{"_index":2156,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syc",{"_index":2149,"title":{},"body":{"interfaces/CountryList.html":{}}}],["symbol",{"_index":3983,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["symlink",{"_index":5312,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["syr",{"_index":2192,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syrian",{"_index":2193,"title":{},"body":{"interfaces/CountryList.html":{}}}],["system",{"_index":2697,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["t",{"_index":251,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":3369,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["tabbed",{"_index":402,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["table",{"_index":3455,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5157,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":2563,"title":{},"body":{"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":209,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["taiwan",{"_index":2196,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tajikistan",{"_index":2198,"title":{},"body":{"interfaces/CountryList.html":{}}}],["take",{"_index":3496,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["takes",{"_index":280,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["taking",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["tanzania",{"_index":2200,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tap",{"_index":285,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["target",{"_index":257,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["tca",{"_index":2222,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tcd",{"_index":1813,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tell",{"_index":5306,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":14,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["template'},{'name",{"_index":620,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["template.component",{"_index":4233,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["template.component.html",{"_index":1643,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.scss",{"_index":1642,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts",{"_index":1641,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["template.component.ts:18",{"_index":1647,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:25",{"_index":1651,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:29",{"_index":1653,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:33",{"_index":1655,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template/confirm",{"_index":1640,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["templateforms",{"_index":3266,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["templates",{"_index":5343,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":587,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["temporary",{"_index":2917,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["temporibus",{"_index":1355,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["tenetur",{"_index":1361,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["territories",{"_index":1891,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["territory",{"_index":1789,"title":{},"body":{"interfaces/CountryList.html":{}}}],["test",{"_index":350,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["test(var1",{"_index":2852,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":465,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tests",{"_index":356,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Person.html":{},"changelog.html":{}}}],["text",{"_index":418,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["text)).click",{"_index":563,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["text.touppercase",{"_index":4027,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["textmaskmodule",{"_index":4181,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["tgo",{"_index":2207,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tha",{"_index":2202,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thailand",{"_index":2203,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thanks",{"_index":4926,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that's",{"_index":1550,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["then((data",{"_index":103,"title":{},"body":{"classes/AbstractForm.html":{}}}],["there's",{"_index":2386,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["therefore",{"_index":898,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["theyt",{"_index":3019,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":3688,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this._applicationheadermap.get(this.processname",{"_index":3588,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._bypassguards",{"_index":1208,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._continue(state.url",{"_index":4130,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this._defaulterrmsg[x",{"_index":206,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this._headers",{"_index":311,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this._headers.get",{"_index":1509,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set",{"_index":1508,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('severity",{"_index":1597,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('tags",{"_index":1601,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('timestamp",{"_index":1594,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._log",{"_index":1516,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._logerror",{"_index":1518,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._onchange",{"_index":187,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._onchange(event",{"_index":1268,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":2399,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this._onchange(null",{"_index":2394,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{}}}],["this._onchange(stripped",{"_index":3361,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(this.addr",{"_index":817,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._onchange(this.person",{"_index":3216,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._onchange(this.search",{"_index":3372,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(true",{"_index":3571,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._onchange(val",{"_index":1082,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this._onchange(value",{"_index":3980,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._onchange(values",{"_index":3213,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._ontouched",{"_index":189,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._ontouched($event",{"_index":3981,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._ontouched(this.addr",{"_index":819,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._sendlog(errormessage",{"_index":1535,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._sendlog(message",{"_index":1532,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._starturl",{"_index":1207,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._value",{"_index":3454,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.accept.emit(fn",{"_index":3602,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.accept.emit(true",{"_index":3568,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.activeindex",{"_index":4406,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.addline(2",{"_index":806,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addline(3",{"_index":808,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr",{"_index":754,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline1",{"_index":822,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline2",{"_index":805,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline3",{"_index":807,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.city",{"_index":824,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.country",{"_index":793,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.postal",{"_index":816,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.province",{"_index":798,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.address",{"_index":3318,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.address[addrlookup",{"_index":854,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.addr",{"_index":818,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.selectedaddress",{"_index":3359,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.addressline1",{"_index":980,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline2",{"_index":991,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline3",{"_index":993,"title":{},"body":{"classes/Address.html":{}}}],["this.addrlabels[x",{"_index":908,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.agreecheck",{"_index":3604,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.allowextralines",{"_index":804,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.allowinternational",{"_index":3971,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.apidobformat",{"_index":3842,"title":{},"body":{"classes/Person.html":{}}}],["this.application",{"_index":2656,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.base_url}/addresses.json",{"_index":3228,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.bconly",{"_index":789,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["this.blur.emit",{"_index":1402,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.blurevent.emit",{"_index":2275,"title":{},"body":{"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["this.browsefileref.nativeelement",{"_index":3079,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":2864,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":3082,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":1045,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["this.buttongroup.nativeelement.focus",{"_index":1083,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.cancontinue",{"_index":3118,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":3081,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":3083,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":4413,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":4408,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.checkbox.nativeelement.focus",{"_index":1269,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":2827,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":981,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{}}}],["this.cleardate",{"_index":2393,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.click.emit",{"_index":4461,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.clickevent.emit",{"_index":4460,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.close.emit",{"_index":3570,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.componentlabel",{"_index":3757,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.consentmodal.showfullsizeview",{"_index":3528,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.continuebutton",{"_index":539,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":538,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":2669,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.controldir",{"_index":2546,"title":{},"body":{"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["this.controldir.control.setvalidators(allvalidators",{"_index":3977,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.controldir.control.updatevalueandvalidity",{"_index":3978,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.controldir.control.validator",{"_index":3975,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":2372,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":2377,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":1687,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":983,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{}}}],["this.countrylist",{"_index":889,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.countrylist.find",{"_index":890,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.criteria.test",{"_index":2549,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.criteriamsg",{"_index":3765,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.cutoffdate.emit(this.spaenvres",{"_index":3600,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.data",{"_index":1084,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["this.datachange.emit(this.data",{"_index":1267,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.datachange.emit(val",{"_index":1081,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.dataservice.getmspuuid",{"_index":3063,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":2378,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":2398,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":2359,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":3841,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":2358,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":2371,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":2374,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":2366,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":2368,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.defaultcountry",{"_index":886,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.defaulterrmsg[x",{"_index":2276,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.defaulterrormessage",{"_index":1266,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.defaultprovince",{"_index":875,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablecontinue",{"_index":3605,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.disabled",{"_index":192,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disabled[x",{"_index":920,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablegeocoder",{"_index":896,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.dobformat",{"_index":3843,"title":{},"body":{"classes/Person.html":{}}}],["this.duplist",{"_index":2511,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["this.email",{"_index":2544,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.errmsg",{"_index":3206,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":3771,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":3769,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":3767,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":3074,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessage",{"_index":203,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessage[x",{"_index":207,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessagerequired",{"_index":1265,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.errormessages",{"_index":2356,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":3770,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":3768,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":3766,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.fieldmaxlenghts[x",{"_index":914,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.findcountrycode",{"_index":797,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.firstname",{"_index":3200,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.form",{"_index":740,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.form.get(x).markastouched",{"_index":109,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.valuechanges.pipe(debouncetime(0)).subscribe((values",{"_index":3211,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.fullsizeviewmodal.config.keyboard",{"_index":3566,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.hide",{"_index":3569,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.show",{"_index":3567,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.generateskiptocontentlink",{"_index":3425,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":3331,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.get",{"_index":5274,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":3242,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":4412,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":4407,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":2657,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":548,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getpasswordstrength",{"_index":3775,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.geturlindex",{"_index":1211,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":2819,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":2847,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":2849,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":2841,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":2828,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":2829,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.haserror",{"_index":3343,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.hasmask",{"_index":4355,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["this.hasnoresults",{"_index":3340,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.heightfactor",{"_index":1470,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(url",{"_index":296,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":1119,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":300,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":1114,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":293,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":2668,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":4310,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":4309,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":2818,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":3085,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":3090,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":3065,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":3066,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.inmaintenance",{"_index":3564,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.isbcphn",{"_index":3905,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.iscanada",{"_index":813,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.isdate(this.disablesince",{"_index":2370,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":2373,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isloading",{"_index":3117,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.ispagelistempty",{"_index":1209,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.istypeaheadloading",{"_index":3339,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.isundermaintenance",{"_index":3563,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.label",{"_index":200,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/XiconButtonComponent.html":{}}}],["this.label.replace",{"_index":201,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this.labels",{"_index":906,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labels[x",{"_index":909,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labeltext",{"_index":2357,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":3202,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":298,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":3061,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":1525,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({event",{"_index":3580,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({name",{"_index":2877,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.maintenanceflag",{"_index":3594,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.maintenancemessage",{"_index":3595,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.mask",{"_index":3886,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.maxlen",{"_index":3645,"title":{},"body":{"components/NameComponent.html":{}}}],["this.maxlengths",{"_index":911,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.maxlengths[x",{"_index":913,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.middlename",{"_index":3204,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.minlen",{"_index":3759,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":3763,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":3764,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":2383,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.namestr",{"_index":3643,"title":{},"body":{"components/NameComponent.html":{}}}],["this.ngmodelchange.emit",{"_index":2431,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":2401,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":2405,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":2696,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":1282,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.observablefromfiles(filelist",{"_index":2813,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onchange.emit(this.person",{"_index":3215,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onchange.emit(values",{"_index":3212,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onerror(err",{"_index":3333,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.onlyfuturedates",{"_index":2375,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.pagechecklist",{"_index":1217,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.filter",{"_index":1225,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.findindex",{"_index":1228,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.length",{"_index":1231,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.map((item",{"_index":1218,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx",{"_index":1222,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx].iscomplete",{"_index":1220,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.password",{"_index":3773,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":3777,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.pattern",{"_index":3208,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person",{"_index":3199,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.firstname",{"_index":3201,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.lastname",{"_index":3203,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.middlename",{"_index":3205,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.phn",{"_index":3885,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn.length",{"_index":3903,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn.trim",{"_index":3896,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn.trim().length",{"_index":3890,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn[0",{"_index":3906,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phonenumber",{"_index":3965,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.placeholder",{"_index":3968,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.post()these",{"_index":5275,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":1570,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.postal",{"_index":985,"title":{},"body":{"classes/Address.html":{}}}],["this.postal.length",{"_index":986,"title":{},"body":{"classes/Address.html":{}}}],["this.postalcode",{"_index":4025,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.progresssteps",{"_index":1684,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":4425,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":4416,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":984,"title":{},"body":{"classes/Address.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.provincelist",{"_index":863,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provincelist.find",{"_index":873,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provlist",{"_index":866,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.pswdstrength",{"_index":3774,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":2895,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.readonlyfields[x",{"_index":918,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.registervalidation",{"_index":2545,"title":{},"body":{"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["this.required",{"_index":3089,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":3207,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":2820,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":2886,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":2901,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.events.pipe",{"_index":3418,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([this.service.getstarturl",{"_index":4135,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.router.navigate([url",{"_index":102,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.url",{"_index":1212,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.router.url.includes(url",{"_index":3423,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url}#content",{"_index":3435,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.routerevents",{"_index":4402,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":4414,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.samplemodal.hide",{"_index":4145,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.samplemodal.show",{"_index":4143,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.scaledwidth",{"_index":4312,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":4409,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.scrolltoerrorsonsubmit",{"_index":3119,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.search",{"_index":3338,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.search.length",{"_index":3351,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.next(this.search",{"_index":3371,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.pipe",{"_index":3328,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.selectedaddress",{"_index":3341,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.sendspaenvserver(headername",{"_index":3589,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.service.canbypassguards",{"_index":4131,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.ispagecomplete(pageurl",{"_index":4136,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.isprerequisitecomplete",{"_index":4134,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setdefaultcountryasoption",{"_index":794,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption",{"_index":812,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption(this.addr.country",{"_index":799,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.seterrormsg",{"_index":186,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.setlabels",{"_index":790,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setmaxlengths",{"_index":791,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setpagecomplete",{"_index":4115,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpageincomplete",{"_index":4114,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setreadonlyfields",{"_index":792,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setseverity(severitylevels.error",{"_index":1534,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setseverity(severitylevels.info",{"_index":1531,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settags(message.event",{"_index":1557,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settimestamp",{"_index":1556,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setuprequest(observable",{"_index":297,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":3067,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.showline2",{"_index":840,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.showline3",{"_index":841,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.sin",{"_index":4276,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.length",{"_index":4281,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim",{"_index":4280,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim().length",{"_index":4279,"title":{},"body":{"components/SinComponent.html":{}}}],["this.size",{"_index":2362,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.skiplinkpath",{"_index":3424,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":542,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.spaenvres",{"_index":3591,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_flag",{"_index":3593,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_message",{"_index":3596,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_flag",{"_index":3597,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_message",{"_index":3598,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_start",{"_index":3599,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":4427,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.strengthpercentage",{"_index":3776,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.stripstringtomaxlength(changes.address.currentvalue._geocoderfulladdress",{"_index":3337,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.stripstringtomaxlength(data.fulladdress",{"_index":3360,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.typeaheadlist",{"_index":3327,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.updateprovlist",{"_index":809,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.updateskipcontentlink",{"_index":3422,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.url",{"_index":1512,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.uuid",{"_index":1457,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.validatephn",{"_index":3889,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.validateself",{"_index":2547,"title":{},"body":{"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["this.validateself.bind(this",{"_index":3974,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.validatesin",{"_index":4278,"title":{},"body":{"components/SinComponent.html":{}}}],["this.valuechange.emit",{"_index":1401,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.valuechange.emit(this.phonenumber",{"_index":3979,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.valuechange.emit(val",{"_index":3457,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.viewcontainerref",{"_index":4306,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":1468,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.zone.run",{"_index":2690,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this[lookup",{"_index":843,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["those",{"_index":5259,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":2934,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["through",{"_index":3547,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["throw",{"_index":265,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/XiconButtonComponent.html":{}}}],["throwerror",{"_index":1487,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["throwerror('geocoder",{"_index":3262,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":1584,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["throwerror(msg",{"_index":1562,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["thumbnail",{"_index":2787,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["thumbnail'},{'name",{"_index":675,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["thumbnail.html",{"_index":4286,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":4285,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":674,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":2952,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tick",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["tickanddetectchanges",{"_index":5047,"title":{},"body":{"coverage.html":{}}}],["tiff",{"_index":2740,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tihs",{"_index":3140,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":2941,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["timeout",{"_index":3122,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["times",{"_index":2833,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["timor",{"_index":2205,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tip",{"_index":1137,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":3658,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":591,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tjk",{"_index":2197,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkl",{"_index":2209,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkm",{"_index":2220,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tls",{"_index":2204,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tobago",{"_index":2215,"title":{},"body":{"interfaces/CountryList.html":{}}}],["today",{"_index":2376,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["todo",{"_index":9,"title":{"todo.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["together",{"_index":3825,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":1054,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":677,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["toggle.component.html",{"_index":4318,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":4317,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":676,"title":{"components/ToggleComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["togo",{"_index":2208,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tohse",{"_index":5370,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["tokelau",{"_index":2210,"title":{},"body":{"interfaces/CountryList.html":{}}}],["told",{"_index":2704,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tome",{"_index":2140,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tomorrow",{"_index":2321,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ton",{"_index":2211,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tonga",{"_index":2212,"title":{},"body":{"interfaces/CountryList.html":{}}}],["toobig",{"_index":1436,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":3752,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":1435,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["tostring",{"_index":931,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":1554,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["touched",{"_index":188,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["trace",{"_index":4458,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["track",{"_index":143,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":1453,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transclusion",{"_index":3483,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["transformed",{"_index":2967,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["translation",{"_index":1095,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["tree",{"_index":579,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["trigger",{"_index":301,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["triggers",{"_index":3088,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["trimmed",{"_index":2425,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":2429,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":2430,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":3245,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["trinidad",{"_index":2214,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tristan",{"_index":2117,"title":{},"body":{"interfaces/CountryList.html":{}}}],["true",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["truncate",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":3532,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["try/catch",{"_index":4432,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ts",{"_index":5289,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":4999,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsdoc",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["tslint",{"_index":2620,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["tslint:disable",{"_index":3551,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["tslint:disable:max",{"_index":2621,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["tto",{"_index":2213,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tun",{"_index":2216,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tunisia",{"_index":2217,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tur",{"_index":2218,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkey",{"_index":2219,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkmenistan",{"_index":2221,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turks",{"_index":2223,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turn",{"_index":2755,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turned",{"_index":1214,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["tuv",{"_index":2225,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tuvalu",{"_index":2226,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tweak",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["tweaks",{"_index":506,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["twn",{"_index":2195,"title":{},"body":{"interfaces/CountryList.html":{}}}],["two",{"_index":5358,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":37,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["typeahead",{"_index":3321,"title":{},"body":{"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":3275,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmatch",{"_index":3300,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmodule",{"_index":4173,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":4242,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typed",{"_index":3313,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeof",{"_index":916,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["typeoption",{"_index":382,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":517,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":5326,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":531,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["types/pdfjs",{"_index":5163,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4839,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["typetext",{"_index":383,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(refnameval",{"_index":526,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence",{"_index":384,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence(refnameval",{"_index":529,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typical",{"_index":4101,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["typo",{"_index":481,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tza",{"_index":2199,"title":{},"body":{"interfaces/CountryList.html":{}}}],["u.s",{"_index":2250,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uga",{"_index":2227,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uganda",{"_index":2228,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ui",{"_index":3367,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ukr",{"_index":2229,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ukraine",{"_index":2230,"title":{},"body":{"interfaces/CountryList.html":{}}}],["umi",{"_index":2234,"title":{},"body":{"interfaces/CountryList.html":{}}}],["unable",{"_index":1559,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["unchecked",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["uncomment",{"_index":5333,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["unde",{"_index":1341,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["undefined",{"_index":295,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["under",{"_index":2974,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["underlines",{"_index":3900,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["underlying",{"_index":5204,"title":{},"body":{"index.html":{}}}],["understand",{"_index":3537,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["uniqness",{"_index":1459,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":314,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{}}}],["unit",{"_index":3830,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["united",{"_index":2201,"title":{},"body":{"interfaces/CountryList.html":{}}}],["united_states",{"_index":724,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["units",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":1438,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":1050,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["unnecessary",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["unreleased",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["unsuccessful",{"_index":1581,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unsure",{"_index":3006,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":2727,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["up",{"_index":488,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["upcoming",{"_index":5330,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":451,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":5137,"title":{},"body":{"coverage.html":{}}}],["updateappcomponentts",{"_index":5151,"title":{},"body":{"coverage.html":{}}}],["updated",{"_index":2287,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["updatepackagejson",{"_index":5152,"title":{},"body":{"coverage.html":{}}}],["updateprovlist",{"_index":862,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updates",{"_index":855,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updateskipcontentlink",{"_index":3402,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatetsconfig",{"_index":5138,"title":{},"body":{"coverage.html":{}}}],["updating",{"_index":1022,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["upload",{"_index":2647,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploaded",{"_index":1408,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":2623,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":638,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["uploader.component",{"_index":4179,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":2624,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":2625,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":1433,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":2570,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":2987,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":3062,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":2641,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["upper",{"_index":827,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["uppercasepipe",{"_index":3991,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":4010,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["url",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/WizardProgressBarComponent.html":{}}}],["url.com/fpcare/example#content",{"_index":3430,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.includes",{"_index":1229,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["url.includes(x.route",{"_index":4426,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["urlbasename",{"_index":3405,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urltree",{"_index":4125,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["uruguay",{"_index":2237,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ury",{"_index":2236,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usa",{"_index":1713,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usable",{"_index":5269,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":1701,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["use",{"_index":357,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["used",{"_index":174,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["usedropdownlist",{"_index":2269,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["useexisting",{"_index":337,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["useful",{"_index":2329,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["usegeocoder",{"_index":895,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["user",{"_index":67,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["user's",{"_index":2781,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":3689,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["users",{"_index":762,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["uses",{"_index":882,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["using",{"_index":254,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["ut",{"_index":1371,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uuid",{"_index":287,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":137,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["uzb",{"_index":2238,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uzbekistan",{"_index":2239,"title":{},"body":{"interfaces/CountryList.html":{}}}],["v3",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":753,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["val.country",{"_index":877,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.countrycode",{"_index":891,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.description",{"_index":876,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.label",{"_index":4098,"title":{},"body":{"components/RadioComponent.html":{}}}],["val.provincecode",{"_index":874,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["valid",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate",{"_index":2498,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate(control",{"_index":2501,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validatebcpostaldirective",{"_index":688,"title":{"directives/ValidateBcPostalDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatecitydirective",{"_index":690,"title":{"directives/ValidateCityDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateCityDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatenamedirective",{"_index":692,"title":{"directives/ValidateNameDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatepc",{"_index":4354,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["validatepc(control",{"_index":4345,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["validatephn",{"_index":3859,"title":{},"body":{"components/PhnComponent.html":{}}}],["validatephnresult",{"_index":3888,"title":{},"body":{"components/PhnComponent.html":{}}}],["validatepostalcodedirective",{"_index":694,"title":{"directives/ValidatePostalcodeDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateregiondirective",{"_index":696,"title":{"directives/ValidateRegionDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateRegionDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateresult",{"_index":4277,"title":{},"body":{"components/SinComponent.html":{}}}],["validates",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["validateself",{"_index":213,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["validatesin",{"_index":4255,"title":{},"body":{"components/SinComponent.html":{}}}],["validatestreetdirective",{"_index":698,"title":{"directives/ValidateStreetDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validating",{"_index":157,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["validation",{"_index":50,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CaptchaDataService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validationerrors",{"_index":153,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validations",{"_index":3686,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["validator",{"_index":214,"title":{},"body":{"classes/AbstractFormControl.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validatorfn",{"_index":2504,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validators",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["validing",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":52,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["valuechange",{"_index":1278,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["valuemax=\"100",{"_index":3791,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":3790,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":3788,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":856,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vanuatu",{"_index":2241,"title":{},"body":{"interfaces/CountryList.html":{}}}],["var",{"_index":603,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["variable",{"_index":848,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["variablescss",{"_index":5131,"title":{},"body":{"coverage.html":{}}}],["vat",{"_index":1928,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vatican",{"_index":1930,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vct",{"_index":2131,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ven",{"_index":2242,"title":{},"body":{"interfaces/CountryList.html":{}}}],["venezuela",{"_index":2243,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verde",{"_index":1806,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verify/captcha",{"_index":1116,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":1091,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":1101,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":5187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":2302,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["versionjs",{"_index":5153,"title":{},"body":{"coverage.html":{}}}],["versions",{"_index":4591,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":3440,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["very",{"_index":4385,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["vgb",{"_index":2247,"title":{},"body":{"interfaces/CountryList.html":{}}}],["via",{"_index":510,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["viet",{"_index":2246,"title":{},"body":{"interfaces/CountryList.html":{}}}],["view",{"_index":4384,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewchild",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":2632,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('button",{"_index":1043,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('buttongroup",{"_index":1079,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["viewchild('canvas",{"_index":2649,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":2634,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('checkbox",{"_index":1258,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["viewchild('consentmodal",{"_index":3525,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["viewchild('dp",{"_index":2337,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":2630,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":46,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":3540,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":2636,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('samplesmodal",{"_index":4141,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["viewchild('selectfilelabel",{"_index":2638,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":4390,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren",{"_index":4395,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":4393,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":4288,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":2576,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewencapsulation.none",{"_index":2627,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewproviders",{"_index":742,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["vincent",{"_index":2132,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vir",{"_index":2249,"title":{},"body":{"interfaces/CountryList.html":{}}}],["virgin",{"_index":2248,"title":{},"body":{"interfaces/CountryList.html":{}}}],["visibility",{"_index":2323,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["visible",{"_index":802,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vitae",{"_index":1373,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vnm",{"_index":2245,"title":{},"body":{"interfaces/CountryList.html":{}}}],["void",{"_index":73,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["voluptatem",{"_index":1349,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptates",{"_index":1394,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatibus",{"_index":1363,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatum",{"_index":1367,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vs",{"_index":5265,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["vut",{"_index":2240,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vv]\\\\d[abceghj",{"_index":943,"title":{},"body":{"classes/Address.html":{}}}],["w",{"_index":5294,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":2726,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["walk",{"_index":3907,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["wallis",{"_index":2252,"title":{},"body":{"interfaces/CountryList.html":{}}}],["want",{"_index":516,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":1656,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"components/PasswordComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warningcode",{"_index":1646,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["warnings",{"_index":5235,"title":{},"body":{"todo.html":{}}}],["warranties",{"_index":5223,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5329,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":5295,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":962,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/getting-started.html":{}}}],["waze",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["we'll",{"_index":2403,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["we're",{"_index":4430,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":4418,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":3494,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":385,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["weight",{"_index":3910,"title":{},"body":{"components/PhnComponent.html":{}}}],["weights",{"_index":3892,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["weights[i",{"_index":3912,"title":{},"body":{"components/PhnComponent.html":{}}}],["well",{"_index":3348,"title":{},"body":{"components/GeocoderInputComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["western",{"_index":2255,"title":{},"body":{"interfaces/CountryList.html":{}}}],["wfactor",{"_index":1469,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whatever",{"_index":327,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["whether",{"_index":1178,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["whole",{"_index":5355,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":1500,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["width",{"_index":2732,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["width/height",{"_index":2364,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":1462,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["widthoption",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["widthoptions",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3533,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["window.location.hostname",{"_index":1505,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["window.location.href",{"_index":3433,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.href.indexof(this.skip_content_hash",{"_index":3432,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.origin}/${this.urlbasename",{"_index":3434,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.outerwidth",{"_index":4437,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["window.scrollto",{"_index":104,"title":{},"body":{"classes/AbstractForm.html":{}}}],["winds",{"_index":2381,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wip",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":3545,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":460,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":3365,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/XiconButtonComponent.html":{},"license.html":{}}}],["wizard",{"_index":679,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["wizardprogressbar",{"_index":5325,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":678,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":1668,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["wlf",{"_index":2251,"title":{},"body":{"interfaces/CountryList.html":{}}}],["won't",{"_index":1588,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["work",{"_index":477,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["workaround",{"_index":2659,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["worker",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2664,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":500,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["wrap",{"_index":3682,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wrapped",{"_index":2339,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":2299,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper/row",{"_index":3675,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wraps",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":5288,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":131,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["writevalue(obj",{"_index":2406,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":164,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["writing",{"_index":5219,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":2739,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":1434,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["wsm",{"_index":2134,"title":{},"body":{"interfaces/CountryList.html":{}}}],["x",{"_index":205,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["x.getdate",{"_index":2355,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["x.iscomplete",{"_index":1226,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.route",{"_index":1230,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.slice(1)).join",{"_index":1683,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":3086,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":1682,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xicon",{"_index":682,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{}}}],["xiconbutton",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["xiconbuttoncomponent",{"_index":681,"title":{"components/XiconButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["xiff",{"_index":2735,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["year",{"_index":2342,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["yeardistantfuture",{"_index":2283,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["yeardistantpast",{"_index":2282,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["yellow",{"_index":5237,"title":{},"body":{"todo.html":{}}}],["yem",{"_index":2257,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yemen",{"_index":2258,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yes",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImageProcessingError.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"classes/MoHCommonLibraryError.html":{},"components/RadioComponent.html":{}}}],["yes/no",{"_index":1053,"title":{},"body":{"components/ButtonGroupComponent.html":{},"changelog.html":{}}}],["yib",{"_index":2956,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":5305,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":1008,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":5255,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":5200,"title":{},"body":{"index.html":{}}}],["yt",{"_index":4078,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yugoslav",{"_index":2002,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yukon",{"_index":4079,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yyyy/mm/dd",{"_index":2333,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":3803,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":946,"title":{},"body":{"classes/Address.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z0",{"_index":4334,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["z])[a",{"_index":4333,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z][0",{"_index":4347,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["z][a",{"_index":3186,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateNameDirective.html":{}}}],["z]\\\\d",{"_index":948,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["z]\\s?[0",{"_index":4349,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["za",{"_index":3185,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["zabceghj",{"_index":945,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["zaf",{"_index":2167,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zambia",{"_index":2260,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zealand",{"_index":2058,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zero",{"_index":2889,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["zeros",{"_index":3898,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["zib",{"_index":2955,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zimbabwe",{"_index":2262,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zip",{"_index":783,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["zmb",{"_index":2259,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zone",{"_index":2654,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":5172,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1129,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["zwe",{"_index":2261,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zxcvbn",{"_index":3749,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":3748,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form.ts\n        \n\n            \n                Description\n            \n            \n                TODO: Make interface for abstract form - this form is the template form implementation\nNeed to create a reactive form implementation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-form.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:14\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:11\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:16\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:31\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:18\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:46\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:37\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, Params } from '@angular/router';\n\n/**\n * TODO: Make interface for abstract form - this form is the template form implementation\n * Need to create a reactive form implementation\n */\nexport abstract class AbstractForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string, queryParams?: Params ) {\n\n    this.router.navigate([url], { queryParams: queryParams })\n      .then((data) => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractFormControl.html":{"url":"classes/AbstractFormControl.html","title":"class - AbstractFormControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractFormControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form-control.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            ControlValueAccessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:65\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ErrorMessage, replaceLabelTag } from './error-message.interface';\nimport { Input, OnInit } from '@angular/core';\nimport { Base } from './base';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\n\n// Class does not get exported - used internally\nexport abstract class AbstractFormControl extends Base implements OnInit, ControlValueAccessor {\n\n  // Default messages - must be defined in each component\n  abstract _defaultErrMsg: ErrorMessage = {};\n\n  // Must be defined in component as default labels are specific to component\n  @Input() abstract label: string;\n\n  @Input() disabled: boolean = false;\n\n  // Input to allow developers to change default messages\n  @Input() errorMessage: ErrorMessage;\n\n\n  // Required for implementing ControlValueAccessor\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  // Required for implementing ControlValueAccessor\n  abstract writeValue( value: any ): void;\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  // Disable control\n  setDisabledState( isDisabled: boolean ): void {\n    this.disabled = isDisabled;\n  }\n\n  protected setErrorMsg() {\n    // Some components have logic based off no label being submitted - strip off '(optional)'\n    const _label = this.label ? this.label.replace( '(optional)' , '' ) : 'Field';\n\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this._defaultErrMsg[x] = this.errorMessage[x] );\n    }\n\n    // Replace label tags with label\n    Object.keys(this._defaultErrMsg).map( x => this._defaultErrMsg[x] = replaceLabelTag( this._defaultErrMsg[x] , _label ) );\n  }\n\n  /**\n   * Register self validating method\n   * @param control control directive\n   * @param fn function for validating self\n   */\n  protected registerValidation( ngControl: NgControl, fn: ValidationErrors ) {\n\n    // Register validateSelf validator so that it will be added on component initialization.\n    // Makes the component a self validating component.\n    Promise.resolve().then(() => {\n\n      if ( ngControl ) {\n\n        const allValidators = [fn.bind(this)];\n        if ( ngControl.control.validator ) {\n          allValidators.push( ngControl.control.validator );\n        }\n        ngControl.control.setValidators(allValidators);\n        ngControl.control.updateValueAndValidity();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/abstract-api-service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:17\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:60\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:31\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:39\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:53\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { UUID } from 'angular2-uuid';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n\n  /* Helper function for generating a unique UUID per request for logging. */\n  protected generateUUID() {\n    return UUID.UUID();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPgCheckService.html":{"url":"injectables/AbstractPgCheckService.html","title":"injectable - AbstractPgCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPgCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-pg-check.service.ts\n        \n\n            \n                Description\n            \n            \n                The abstract class for our route guard service.  You MUST setup the NgModule\nto provide your application's service in place of AbstractPgCheckService.\nYour application's route guard service can do whatever it wants as long as it\nimplements these methods.\nMore information on setup can be found in @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            //registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                getStartUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPageComplete\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPrerequisiteComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractPgCheckService.\n *\n * Your application's route guard service can do whatever it wants as long as it\n * implements these methods.\n * \n * More information on setup can be found in @see RouteGuardService.\n *\n *  @example\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPgCheckService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract isPageComplete( url: string ): boolean;\n  public abstract isPrerequisiteComplete(): boolean;\n  public abstract getStartUrl(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreeConsentModal\n                            \n                            \n                                checkConsentModal\n                            \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickConsentModalContinue\n                            \n                            \n                                clickLink\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                countLength\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                scrollUp\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                            \n                                typeTextFirstOccurrence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreeConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \nagreeConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:138\n                \n            \n\n\n            \n                \n                    Clicks the checkbox which means the user agrees with the info collection notice.\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \ncheckConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:153\n                \n            \n\n\n            \n                \n                    Checks if the consent modal is currently displayed or not\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(classVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:122\n                \n            \n\n\n            \n                \n                    Clicks the button based on the text specified\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    classVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable class value for a button\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text inside the button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:130\n                \n            \n\n\n            \n                \n                    Clicks the check box based on the ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickConsentModalContinue\n                        \n                        \n                    \n                \n            \n            \n                \nclickConsentModalContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:146\n                \n            \n\n\n            \n                \n                    Clicks continue inside the modal\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLink\n                        \n                        \n                    \n                \n            \n            \n                \nclickLink(label: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:178\n                \n            \n\n\n            \n                \n                    Clicks the link based from the label and text provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countLength\n                        \n                        \n                    \n                \n            \n            \n                \ncountLength(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:186\n                \n            \n\n\n            \n                \n                    Counts the number of options inside a dropdown box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollUp\n                        \n                        \n                    \n                \n            \n            \n                \nscrollUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:160\n                \n            \n\n\n            \n                \n                    Scrolls up to the top of the page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeTextFirstOccurrence\n                        \n                        \n                    \n                \n            \n            \n                \ntypeTextFirstOccurrence(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:169\n                \n            \n\n\n            \n                \n                    Types the text inside the first ocurrence of input field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeText(refNameVal: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).sendKeys(text);\n  }\n\n  /**\n   * Clicks the button based on the text specified\n   * @param classVal Human readable class value for a button\n   * @param text Text inside the button\n   */\n  clickButton(classVal: string, text: string) {\n    element(by.cssContainingText(`button[class*=\"${classVal}\"]`, text)).click();\n  }\n\n  /**\n   * Clicks the check box based on the ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   */\n  clickCheckBox(refNameVal: string) {\n    element(by.css(`input[ng-reflect-name=\"${refNameVal}\"]`)).click();\n  }\n\n  /**\n   * Clicks the checkbox which means the user agrees with the info collection notice.\n   * InfoColectionNoticeComponent \n   */\n  agreeConsentModal() {\n    element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click();\n  }\n\n  /**\n   * Clicks continue inside the modal\n   * InfoColectionNoticeComponent \n   */\n  clickConsentModalContinue() {\n    element(by.css('div[class=\"modal-footer\"]')).element(by.css('button[type=\"submit\"]')).click();\n  }\n\n  /**\n   * Checks if the consent modal is currently displayed or not\n   */\n  checkConsentModal() {\n    return element(by.css('common-consent-modal')).element(by.css('div[aria-labelledby=\"myLargeModalLabel\"]')).isDisplayed();\n  }\n\n  /**\n   * Scrolls up to the top of the page\n   */\n  scrollUp() {\n      browser.executeScript('window.scrollTo(0,0)');\n  }\n\n  /**\n   * Types the text inside the first ocurrence of input field\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeTextFirstOccurrence(refNameVal: string, text: string) {\n      element.all(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).first().sendKeys(text);\n  }\n\n  /**\n   * Clicks the link based from the label and text provided\n   * @param label\n   * @param text\n   */\n  clickLink(label: string, text: string) {\n      element(by.cssContainingText(label, text)).click();\n  }\n\n  /**\n   * Counts the number of options inside a dropdown box\n   * @param refNameVal\n   */\n  countLength(refNameVal: string){\n      return $$(`select[ng-reflect-name^=\"${refNameVal}\"] option`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionCommonComponent.html":{"url":"components/AccordionCommonComponent.html","title":"component - AccordionCommonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionCommonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        AccordionComponent is a\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-accordion\n            \n\n            \n                styleUrls\n                ./accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/accordion/accordion.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/accordion/accordion.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(click to expand)'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AccordionComponent } from 'ngx-bootstrap';\n/**\n * AccordionComponent is a\n *\n * @example\n *       \t\n  *       \n * @export\n */\n\n@Component({\n  selector: 'common-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionCommonComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() isOpen: boolean = false;\n\n  public expandText: string =  '(click to expand)';\n  ngOnInit() {\n  }\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n    \n        \n          {{title}} \n          \n          {{expandText}}\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{title}}                     {{expandText}}                    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionCommonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddrLabelList.html":{"url":"interfaces/AddrLabelList.html","title":"interface - AddrLabelList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddrLabelList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address1\n                                \n                                \n                                            Optional\n                                        address2\n                                \n                                \n                                            Optional\n                                        address3\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address3\n                                    \n                                \n                                \n                                    \n                                        address3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressLine1\n                            \n                            \n                                    Public\n                                addressLine2\n                            \n                            \n                                    Public\n                                addressLine3\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                isValid\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Static\n                                PostalCodeBCRegEx\n                            \n                            \n                                    Public\n                                province\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    street\n                                \n                                \n                                    isBCOnly\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:11\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:13\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PostalCodeBCRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:44\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:36\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:23\n                                \n                            \n\n                \n                    \n                        setstreet(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCOnly\n                    \n                \n\n                \n                    \n                        getisBCOnly()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Address {\n\n  static PostalCodeBCRegEx = '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$';\n\n  public addressLine1: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine2: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine3: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n  public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n  public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n  // For backward compatibilty with applications that use street.\n  get street() {\n    return this.addressLine1;\n  }\n\n  set street( val: string ) {\n    this.addressLine1 = val;\n  }\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.addressLine1}, ${this.city}`;\n  }\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.addressLine1 && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  get isBCOnly(): boolean {\n    let isValid = false;\n    if (this.postal &&\n      this.postal.length > 0) {\n      const regEx = new RegExp(Address.PostalCodeBCRegEx);\n      isValid = regEx.test(this.postal);\n    }\n    return isValid;\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.addressLine1 = object.addressLine1;\n    this.addressLine2 = object.addressLine2;\n    this.addressLine3 = object.addressLine3;\n\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Button Component is a button which can be used across the application to have\nsame button style.\nYou're free to create custom (bootstrap) buttons as your application\nrequires. The main advantages to this component are:\n\nconsistency\nsimplicity (less markup)\nmaking future changes easier, such as automatically updating any changes\nto button colour stylings.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"secondary\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, ViewChild, EventEmitter, Input, Output, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Button Component is a button which can be used across the application to have\n * same button style.\n *\n * You're free to create custom (bootstrap) buttons as your application\n * requires. The main advantages to this component are:\n *\n *  - consistency\n *  - simplicity (less markup)\n *  - making future changes easier, such as automatically updating any changes\n * to button colour stylings.\n *\n *\n * @example\n *        \n *        \n * @export\n */\n@Component({\n  selector: 'common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class ButtonComponent implements OnInit {\n\n  // Can pass the Style class of a button e.g. For primary, btn btn-primary. Default, btn btn-default. Error, btn btn-danger\n  @Input() buttonType: 'default' | 'primary' | 'secondary' = 'default';\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Button';\n  @Output() btnClick: EventEmitter = new EventEmitter();\n  @ViewChild('button') button: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    this.btnClick.emit($event);\n  }\n}\n\n    \n\n    \n        \n\t\t\t{{label}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonGroupComponent.html":{"url":"components/ButtonGroupComponent.html","title":"component - ButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button-group/button-group.component.ts\n\n\n    \n        Description\n    \n    \n        BUTTONGROUPCOMPONENT IS DEPRECATED!  DO NOT USE UNLESS YOU KNOW WHAT YOU'RE\nDOING.\nIf you need a Yes/No toggle, @see RadioComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent) }\n                \n            \n\n\n            \n                selector\n                common-button-group\n            \n\n            \n                styleUrls\n                ./button-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-group.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                buttonGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setButtonGrpVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setButtonGrpVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetButtonGrpVal(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('buttonGroup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * BUTTONGROUPCOMPONENT IS **DEPRECATED**!  **DO NOT USE** UNLESS YOU KNOW WHAT YOU'RE\n * DOING.\n *\n * If you need a Yes/No toggle, @see RadioComponent\n * @deprecated\n *\n *\n *\n *\n * @example\n *       \n *         \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent )}\n  ]\n})\nexport class ButtonGroupComponent implements ControlValueAccessor {\n\n  @Input() data: boolean;\n  @Input() required: boolean = true;\n  @Input() showError: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() errorMessageRequired: string = 'Field is required.';\n  @Input() label: string = 'Default Checkbox';\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('buttonGroup') buttonGroup: ElementRef;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n\n  }\n\n\n  setButtonGrpVal(val: any) {\n    this.dataChange.emit(val);\n    this._onChange(val);\n    this._onTouched();\n  }\n\n  focus() {\n    this.buttonGroup.nativeElement.focus();\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n     {{answer.label}} \n    \n  \n  \n    {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}       {{answer.label}}             {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Design Guidelines\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckCompleteBaseService.html":{"url":"injectables/CheckCompleteBaseService.html","title":"injectable - CheckCompleteBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckCompleteBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Extend this class when creating a service to create your custom Route Guard\nlogic.  This class should work as-is for simple use-cases.  For Route Guard\nsetup @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                            \n                                    Private\n                                _startUrl\n                            \n                            \n                                    Public\n                                pageCheckList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                getStartUrl\n                            \n                            \n                                    Protected\n                                getUrlIndex\n                            \n                            \n                                    Public\n                                isComplete\n                            \n                            \n                                    Public\n                                isPageComplete\n                            \n                            \n                                    Protected\n                                isPageListEmpty\n                            \n                            \n                                    Public\n                                isPrerequisiteComplete\n                            \n                            \n                                    Public\n                                setPageComplete\n                            \n                            \n                                    Public\n                                setPageIncomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    startUrl\n                                \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUrlIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:104\n                \n            \n\n\n            \n                \n                    Index of URL in the items list, -1 if not exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:96\n                \n            \n\n\n            \n                \n                    Check for incomplete pages\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:85\n                \n            \n\n\n            \n                \n                    Indicates whether page has been completed or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isPageListEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageListEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:53\n                \n            \n\n\n            \n                \n                    Any prerequisites that need list of pages \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:75\n                \n            \n\n\n            \n                \n                    Sets the page to completed, allowing applicant to proceed to next page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageIncomplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:60\n                \n            \n\n\n            \n                \n                    Sets page to not be completed, so applicants cannot complete application out of sequence\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCheckList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageListInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        startUrl\n                    \n                \n\n\n                \n                    \n                        setstartUrl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n// TODO: Revise - does not work quite correct when there is no landing page.\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox component is a input checkbox\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrorMessage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setCheckboxVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:36\n                            \n                        \n                \n                    \n                        You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:41\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:42\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCheckboxVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetCheckboxVal(event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('checkbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\n/**\n * Checkbox component is a input checkbox\n *\n * @example\n *       \n *       \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n\n  // TODO: Remove to make custom form control -- possible breaking change\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\nexport class CheckboxComponent extends Base implements  OnInit, ControlValueAccessor {\n  defaultErrorMessage: string = '';\n\n  /**\n   * You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n   */\n  @Input() data: boolean = false;\n  @Input() required: boolean = false;  // TODO: Remove - breaking change\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Default Checkbox';\n  @Input() errorMessageRequired: string;\n  @Input() showError: boolean;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('checkbox') checkbox: ElementRef;\n\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    if ( this.errorMessageRequired ) {\n      this.defaultErrorMessage = this.errorMessageRequired;\n    } else {\n      this.defaultErrorMessage = this.label + ' is required.';\n    }\n  }\n\n  setCheckboxVal(event: boolean) {\n    this.data = event;\n    this.dataChange.emit(this.data);\n    this._onChange(event);\n    this._onTouched();\n  }\n\n  focus() {\n    this.checkbox.nativeElement.focus();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n\n{{label}}\n\n\n\n    {{defaultErrorMessage}}\n\n\n\n  {{defaultErrorMessage}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}    {{defaultErrorMessage}}  {{defaultErrorMessage}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/city/city.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-city\n            \n\n            \n                styleUrls\n                ./city.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                city\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/city/city.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'city_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:25\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n@Component({\n  selector: 'common-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.scss']\n})\nexport class CityComponent extends AbstractFormControl implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'City';\n  @Input() maxlength: string = '100';\n  @Input() labelforId: string = 'city_' + this.objectId;\n  @Input() placeholder: string = 'City name';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.city = val;\n    }\n  }\n  get value() {\n    return this.city;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  city: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  };\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: string ) {\n    this.city = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: string ): void {\n    if ( value !== undefined ) {\n      this.city = value;\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n \n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidChar}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:21\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport enum CommonLogEvents {\n  navigation = 'navigation',\n  error = 'error',\n  submission = 'submission'\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: CommonLogEvents.error,\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  // TODO: Remove moment dependency\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonLogger.html":{"url":"injectables/CommonLogger.html","title":"injectable - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                url\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _log\n                            \n                            \n                                    Protected\n                                _logError\n                            \n                            \n                                    Private\n                                _sendLog\n                            \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                logError\n                            \n                            \n                                    Public\n                                logHttpError\n                            \n                            \n                                    Private\n                                setSeverity\n                            \n                            \n                                    Private\n                                setTags\n                            \n                            \n                                    Private\n                                setTimestamp\n                            \n                            \n                                setURL\n                            \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    applicationId\n                                \n                                \n                                    programName\n                                \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _log(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:97\n                \n            \n\n\n            \n                \n                    Log a message to Splunk. This is the main way to send logs and\nautomatically includes meta-data. You do not need to subscribe to the\nresponse, as the service already does that. The input object must have an\n'event' property set, everything else is optional.\nExample:\nthis.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object, nesting is fine, with event property\nset.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _logError(errorMessage: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _sendLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _sendLog(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:128\n                \n            \n\n\n            \n                \n                    Internal method to send logs to Splunk, includes meta-data except that's\nconsistent across all requests, but not specific values like severity\nlevel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object or anything that can be toString()'d,\nlike Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(errorMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logHttpError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logHttpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:111\n                \n            \n\n\n            \n                \n                    Log HTTP errors, e.g. when losing network connectivity or receiving an\nerror response code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSeverity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSeverity(severity: SeverityLevels)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    severity\n                                    \n                                                SeverityLevels\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTags(message: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:185\n                \n            \n\n\n            \n                \n                    The headers are easier to search in splunk, and we aren't using tags, so\nrepurpose it to event type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setURL\n                        \n                        \n                    \n                \n            \n            \n                \nsetURL(newURL: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:23\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:60\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:31\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  })\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:41\n                            \n                        \n\n                \n                    \n                        The HTTP Headers which go with each request.  These MUST be set if you are\nusing the logger.  Fields include:\n\nprogram (REQUIRED, the application wide code)\napplicationId (REQUIRED, like sessionId)\nrequest_method (REQUIRED, 'POST')\nlogsource: (REQUIRED, window.location.hostname)\nhttp_x_forwarded_host (REQUIRED, window.location.hostname)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:17\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        applicationId\n                    \n                \n\n                \n                    \n                        getapplicationId()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:57\n                                \n                            \n\n                \n                    \n                        setapplicationId(id: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:53\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        programName\n                    \n                \n\n                \n                    \n                        getprogramName()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:65\n                                \n                            \n\n                \n                    \n                        setprogramName(name: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:61\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:165\n                                \n                            \n                    \n                        \n                                Overwrite the inherited httpOptions so we can set responseType to text.\nThis updates Angular's parsing, and it won't error out due to the server\nnot responding with JSON.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport enum CommonLogEvents {\n  navigation = 'navigation',\n  error = 'error',\n  submission = 'submission'\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: CommonLogEvents.error,\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  // TODO: Remove moment dependency\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmTemplateComponent.html":{"url":"components/ConfirmTemplateComponent.html","title":"component - ConfirmTemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmTemplateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-confirm-template\n            \n\n            \n                styleUrls\n                ./confirm-template.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-template.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayIcon\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    successCode\n                                \n                                \n                                    errorCode\n                                \n                                \n                                    warningCode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayIcon\n                    \n                \n                \n                    \n                        Type :         ApiStatusCodes\n\n                    \n                \n                \n                    \n                        Default value : ApiStatusCodes.SUCCESS\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        successCode\n                    \n                \n\n                \n                    \n                        getsuccessCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorCode\n                    \n                \n\n                \n                    \n                        geterrorCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        warningCode\n                    \n                \n\n                \n                    \n                        getwarningCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Base } from '../../models/base';\n\n\nexport enum ApiStatusCodes {\n  SUCCESS = '0',\n  ERROR = '1',\n  WARNING = '2'\n}\n\n@Component({\n  selector: 'common-confirm-template',\n  templateUrl: './confirm-template.component.html',\n  styleUrls: ['./confirm-template.component.scss']\n})\nexport class ConfirmTemplateComponent extends Base {\n\n  @Input() displayIcon: ApiStatusCodes = ApiStatusCodes.SUCCESS;\n\n  constructor() {\n    super();\n  }\n\n  // Status codes\n  get successCode() {\n    return ApiStatusCodes.SUCCESS;\n  }\n\n  get errorCode() {\n    return ApiStatusCodes.ERROR;\n  }\n\n  get warningCode() {\n    return ApiStatusCodes.WARNING;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n  \n\n\n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmTemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n            \n                Description\n            \n            \n                Base functionality for container that is used to display bread crumbs \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:12\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:18\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/country/country.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ErrorMessage } from '../../models/error-message.interface';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\nexport function getCountryDescription( countryCode: string ) {\n  const countryObj = COUNTRY_LIST.find( val => countryCode === val.countryCode );\n  return countryObj ? countryObj.description : countryCode;\n}\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() errorMessage: ErrorMessage;\n  @Input() placeholder: string = 'Please select a country';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, periods, apostrophes and blank characters.',\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/datepicker/datepicker.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\nThis component reports the following errors.\n    required\n    dayOutOfRange\n    yearDistantPast\n    yearDistantFuture\n    noFutureDatesAllowed\n    invalidValue\n  These messages can be changed by updated messages using the errorMessages interface/\n  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                            Optional\n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:92\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:97\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:71\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:77\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:61\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:63\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n\n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n\n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                         {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                clearable\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clearable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent extends Base implements ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n  @Input() clearable: boolean = true;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n\n  {{label}} is required.\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}  {{label}} is required.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DuplicateCheckDirective.html":{"url":"directives/DuplicateCheckDirective.html","title":"directive - DuplicateCheckDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DuplicateCheckDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDuplicateCheck]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dupList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dupList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:32\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// Local function\nfunction checkForDuplicates( control: AbstractControl,\n                             dupList: string[] ): { [key: string]: boolean } | null {\n  // Duplicate check\n  if ( dupList && dupList.length ) {\n\n  const duplicate = dupList.find( x => x === control.value );\n  return (duplicate ? { 'duplicate': true } : null);\n  }\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonDuplicateCheck( dupList: string[] ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return checkForDuplicates( control, dupList );\n  };\n}\n\n@Directive({\n  selector: '[commonDuplicateCheck]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true}\n    ]\n})\nexport class DuplicateCheckDirective implements Validator {\n\n  @Input() dupList: string[];\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n  return checkForDuplicates( control, this.dupList );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailComponent.html":{"url":"components/EmailComponent.html","title":"component - EmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/email/email.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-email\n            \n\n            \n                styleUrls\n                ./email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Private\n                                criteria\n                            \n                            \n                                email\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/email/email.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Email'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteria\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /^(\\S+)@(\\S+)\\.(\\S+)$/\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:33\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter,\n  OnInit} from '@angular/core';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Email';\n  @Input() maxlength: string = '255';\n  @Input() labelforId: string = 'email_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.email = val;\n    }\n  }\n  get value() {\n    return this.email;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  email: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`\n  };\n\n  private criteria: RegExp = /^(\\S+)@(\\S+)\\.(\\S+)$/;\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n    this.email = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.email = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    if ( this.email ) {\n      const result = this.criteria.test( this.email );\n      return result ? null : { invalidEmail: true };\n    }\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidEmail}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidEmail}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorContainerComponent.html":{"url":"components/ErrorContainerComponent.html","title":"component - ErrorContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/error-container/error-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-error-container\n            \n\n            \n                styleUrls\n                ./error-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'common-error-container',\n  templateUrl: './error-container.component.html',\n  styleUrls: ['./error-container.component.scss']\n})\nexport class ErrorContainerComponent {\n\n  @Input() displayError: boolean = false;\n\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/error-message.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/error-message.interface.ts:13\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const LabelReplacementTag = '{label}';\nexport interface ErrorMessage {\n  required?: string;\n  [key: string]: string;\n}\n\n// To catch all occurances of the label tag in the message\nconst regExpLabel = new RegExp( LabelReplacementTag, 'g' );\n\n// Function only used with library\nexport function replaceLabelTag( str: string, value: string ) {\n  return str.replace( regExpLabel, value );\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ModalDirective} from 'ngx-bootstrap';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../models/images.model';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../models/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\n// const pdfjs = import('pdfjs-dist/build/pdf');\n// const pdfjsWorker = import('pdfjs-dist/build/pdf.worker.entry');\nimport { pdfJsWorker } from 'pdfjs-dist/build/pdf.worker.entry';\nPDFJS.workerSrc=pdfJsWorker;\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['images'] && (\n            (changes['images'].currentValue && changes['images'].currentValue.length === 0)\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    // console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n\n    /** Opens the file upload dialog from the browser. */\n    openFileDialog() {\n        console.log('opening file dialog');\n        this.browseFileRef.nativeElement.click();\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                scrollToErrorsOnSubmit\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollToErrorsOnSubmit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { scrollToError } from '../../../helpers/scrollToError';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  @Input() scrollToErrorsOnSubmit: boolean = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n\n      if (this.scrollToErrorsOnSubmit) {\n        // Scroll to error after 50ms, give time for errors to display etc.\n        // This timeout is outside of Angular change detection.\n        setTimeout(scrollToError, 50);\n      }\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullNameComponent.html":{"url":"components/FullNameComponent.html","title":"component - FullNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/full-name/full-name.component.ts\n\n\n    \n        Description\n    \n    \n        FullNameComponent includes a first, middle, and last name field.  If you only\nneed an individual field, @see NameComponent.\nNote This component is in dev, there are issues around \"required\"\nTODO - Properly handle \"required\"\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent) }\n                \n            \n\n\n            \n                selector\n                common-full-name\n            \n\n            \n                styleUrls\n                ./full-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Public\n                                NameRegEx\n                            \n                            \n                                    Private\n                                pattern\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                firstNamelabel\n                            \n                            \n                                lastNamelabel\n                            \n                            \n                                middleNamelabel\n                            \n                            \n                                person\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                personChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'First Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Last Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        middleNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Middle Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        person\n                    \n                \n                \n                    \n                        Type :         Person\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        personChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FullNameErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            NameRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'is required'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n    \n        \n    \n                 \n\n\n\n    \n\n\n\n    \n\n\n\n\n    \n        \n            {{firstNamelabel}}\n            \n            \n                {{firstNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{middleNamelabel}}\n            \n            \n                {{middleNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{lastNamelabel}}\n            \n            \n                {{lastNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n\n        \n    \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     {{firstNamelabel}}                                        {{firstNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{middleNamelabel}}                                        {{middleNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{lastNamelabel}}                                        {{lastNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                         -->'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FullNameErrorMsg.html":{"url":"interfaces/FullNameErrorMsg.html","title":"interface - FullNameErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FullNameErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/full-name/full-name.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeocoderInputComponent.html":{"url":"components/GeocoderInputComponent.html","title":"component - GeocoderInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeocoderInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n\n\n    \n        Description\n    \n    \n        For TemplateForms, pass in an Address and recieve an Address\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-geocoder-input\n            \n\n            \n                styleUrls\n                ./geocoder-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geocoder-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                hasNoResults\n                            \n                            \n                                    Public\n                                isTypeaheadLoading\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                    Public\n                                selectedAddress\n                            \n                            \n                                    Public\n                                typeaheadList$\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onError\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                onLoading\n                            \n                            \n                                onNoResults\n                            \n                            \n                                onSelect\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                stripStringToMaxLength\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                label\n                            \n                            \n                                maxlength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl, geocoderService: GeocoderService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geocoderService\n                                                  \n                                                        \n                                                                        GeocoderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Default value : new Address()\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Address Lookup'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(err)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoading\n                        \n                        \n                    \n                \n            \n            \n                \nonLoading(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoResults\n                        \n                        \n                    \n                \n            \n            \n                \nonNoResults(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: TypeaheadMatch)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TypeaheadMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            stripStringToMaxLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stripStringToMaxLength(str: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasNoResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:49\n                            \n                        \n\n                \n                    \n                        Geocoder API has returned and has no results, an empty array. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTypeaheadLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:47\n                            \n                        \n\n                \n                    \n                        Is the Geocoder API request still in progress? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:45\n                            \n                        \n\n                \n                    \n                        The string in the box the user has typed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:57\n                            \n                        \n\n                \n                    \n                        The subject that triggers on user text input and gets typeaheadList$ to update.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:53\n                            \n                        \n\n                \n                    \n                        Similar to this.address, but we can null it when user is searching for new addresses \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeaheadList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:55\n                            \n                        \n\n                \n                    \n                        The list of results, from API, that is passed to the typeahead list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ChangeDetectorRef, Output, EventEmitter, SimpleChanges, OnChanges, Optional, Self } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, tap, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\nimport { GeocoderService, GeoAddressResult } from '../../services/geocoder.service';\nimport { CANADA } from '../country/country.component';\nimport { BRITISH_COLUMBIA } from '../province/province.component';\nimport { Address } from '../../models/address.model';\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\n\n\n/**\n * For TemplateForms, pass in an Address and recieve an Address\n * @example\n *           \n *           \n *\n * @note\n * For ReactiveForms, pass in a string and recieve a string.  If you need the\n * Address object you can use (addressChange) in addition.\n *\n * @example\n *           \n *          \n */\n@Component({\n  selector: 'common-geocoder-input',\n  templateUrl: './geocoder-input.component.html',\n  styleUrls: ['./geocoder-input.component.scss']\n})\nexport class GeocoderInputComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n\n  @Input() label: string = 'Address Lookup';\n  @Input() address: Address = new Address();\n  @Output() addressChange = new EventEmitter();\n  @Input() maxlength: string = '255';\n\n  /** The string in the box the user has typed */\n  public search: string;\n  /** Is the Geocoder API request still in progress? */\n  public isTypeaheadLoading: boolean = false;\n  /** Geocoder API has returned and has no results, an empty array. */\n  public hasNoResults: boolean = false;\n  public hasError: boolean = false;\n\n  /** Similar to this.address, but we can null it when user is searching for new addresses */\n  public selectedAddress: Address;\n  /** The list of results, from API, that is passed to the typeahead list */\n  public typeaheadList$: Observable; // Result from GeoCoderService address lookup\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n  constructor(@Optional() @Self() public controlDir: NgControl, private geocoderService: GeocoderService, private cd: ChangeDetectorRef) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => this.geocoderService.lookup(searchPhrase)),\n      catchError(err => this.onError(err))\n    );\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes &&\n      changes.address &&\n      changes.address.currentValue._geocoderFullAddress) {\n        const stripped = this.stripStringToMaxLength(changes.address.currentValue._geocoderFullAddress);\n\n        this.search = stripped;\n        this.isTypeaheadLoading = false;\n        this.hasNoResults = false;\n        this.selectedAddress = changes.address.currentValue;\n      }\n\n  }\n\n  onError(err): Observable {\n    this.hasError = true;\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onLoading(val: boolean): void {\n    this.isTypeaheadLoading = val;\n  }\n\n  // Note - this will fire after an onError as well\n  onNoResults(val: boolean): void {\n    this._onChange(null);\n    \n    // If we have results, the error has resolved (e.g. network has re-connected)\n    if (val === false) {\n      this.hasError = false;\n    }\n\n    // If we have no search text, hide the no results errors\n    if (this.search.length === 0) {\n      this.hasNoResults = false;\n      return;\n    }\n\n    this.hasNoResults = val;\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n    const data: GeoAddressResult = event.item;\n\n    const addr = new Address();\n    addr.city = data.city;\n    // GeoCoder is only for BC, Canada, values can be set.\n    addr.country = CANADA; // Default country is Canda\n    addr.province = BRITISH_COLUMBIA;  // Default province is BC\n    addr.street = data.street;\n    // Save and emit Address for (addressChange)\n    this.selectedAddress = addr;\n    this.addressChange.emit(this.selectedAddress);\n\n    // Output string to FormControl.\n    const stripped = this.stripStringToMaxLength(data.fullAddress);\n    this._onChange(stripped);\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    // Filter out 'enter' and other similar keyboard events that can trigger\n    // when user is selecting a typeahead option instead of entering new text.\n    // Without this filter, we do another HTTP request + force disiplay the UI\n    // for now reason\n    if (event.keyCode === 13 || event.keyCode === 9) {  // enter & tab\n      return;\n    }\n    // Clear out selection\n    this.selectedAddress = null;\n    this.searchText$.next(this.search);\n  }\n\n  onBlur(event): void {\n    this._onTouched();\n    this._onChange(this.search);\n  }\n\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.search = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  private stripStringToMaxLength(str: string){\n    const maxlength = parseInt(this.maxlength, 10);\n    return str.slice(0, maxlength);\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n  \n     &mdash; Loading\n      \n    \n  \n\n  \n    \n  \n\n\n        \n\n\n\n     &mdash; Selected\n        \n    \n\n\n\n     &mdash; No Results\n        \n    \n\n\n\n\n     &mdash; Error\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       — Loading                                 — Selected                 — No Results                 — Error            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'GeocoderInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Protected\n                                ADDRESS_URL\n                            \n                            \n                                    Protected\n                                BASE_URL\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Protected\n                                processResponse\n                            \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:53\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:23\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:60\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:31\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:17\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:12\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        HeaderComponent is the stylized blue header at the top of every single\napplication.  It has a built-in \"Skip to Content\" tab-accessible section\nthat's best practice for screen readers.  You must create an element with\nid='content' for this to work!  Best practice is to put this \"content\"\nelement as a wrapper aroud your \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SKIP_CONTENT_HASH\n                            \n                            \n                                    Public\n                                skipLinkPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateSkipToContentLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                routeIsActive\n                            \n                            \n                                updateSkipContentLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                logoSrc\n                            \n                            \n                                serviceName\n                            \n                            \n                                urlBaseName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        logoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/gov3_bc_logo.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        urlBaseName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateSkipToContentLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSkipToContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeIsActive\n                        \n                        \n                    \n                \n            \n            \n                \nrouteIsActive(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSkipContentLink\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSkipContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKIP_CONTENT_HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipLinkPath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n/**\n * HeaderComponent is the stylized blue header at the top of every single\n * application.  It has a built-in \"Skip to Content\" tab-accessible section\n * that's best practice for screen readers.  **You must create an element with\n * `id='content'` for this to work!**  Best practice is to put this \"content\"\n * element as a wrapper aroud your ``\n *\n */\n@Component({\n  selector: 'common-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() serviceName: string = '';\n  @Input() urlBaseName: string = '';\n  @Input() logoSrc: string = 'assets/gov3_bc_logo.png';\n\n  public skipLinkPath;\n  private SKIP_CONTENT_HASH = '#content';\n\n  constructor(private router: Router ) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n    ).subscribe(this.updateSkipContentLink.bind(this));\n\n    this.updateSkipContentLink();\n  }\n\n  routeIsActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  updateSkipContentLink() {\n    this.skipLinkPath = this.generateSkipToContentLink();\n  }\n\n  // Slightly complicated because we have to include the deployUrl in manually.\n  // If deployUrl changes this code must too.\n  //\n  // \"http://full-url.com/fpcare/example#content\"\n  private generateSkipToContentLink(): string {\n    // don't add duplicate #contents\n    if (window.location.href.indexOf(this.SKIP_CONTENT_HASH) !== -1) {\n      return window.location.href;\n    }\n\n    return `${window.location.origin}/${this.urlBaseName + this.router.url}#content`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{serviceName}}\n      Skip to main content\n    \n\n      \n        \n      \n      \n        \n      \n      \n        \n      \n  \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{serviceName}}      Skip to main content                                                                  -->  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioItems.html":{"url":"interfaces/IRadioItems.html","title":"interface - IRadioItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRadioItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/radio/radio.component.ts\n        \n\n            \n                Description\n            \n            \n                RadioComponent is a single radio which can be used to have multiple radios\nbased on the radio label values.\nTo display radio in a vertical style use display=\"table-row-group\" by default\nit shows in horizontal or inline display, display='inline-block' You can\nhave many radio's and the number is based on the Radio label Value. For 3\nradio buttons, radioLabels value is of type IRadioItems[].\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *        \n *        \n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpaEnvResponse.html":{"url":"interfaces/ISpaEnvResponse.html","title":"interface - ISpaEnvResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISpaEnvResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/consent-modal/consent-modal.component.ts\n        \n\n            \n                Description\n            \n            \n                Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\nthen proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\nmaintenance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_NOW\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_NOW\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_NOW:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { forwardRef, Component, EventEmitter, Input, Output, ViewChild, OnInit} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { CommonLogger } from '../../services/logger.service';\nimport { AbstractHttpService } from '../../services/abstract-api-service';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n/**\n * Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\n * then proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\n * maintenance.\n *\n *\n * @example\n*       \t\n*           \n * @export\n */\n\nexport interface ISpaEnvResponse {\n  SPA_ENV_MSP_MAINTENANCE_FLAG: string;\n  SPA_ENV_MSP_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_ACL_MAINTENANCE_FLAG: string;\n  SPA_ENV_ACL_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_START: string;\n  SPA_ENV_NOW: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_END: string;\n}\n\n// Disabling tslint for @example below.\n// tslint:disable:max-line-length\n\n/**\n * ConsentModalComponent, aka the \"Information Collection Notice\", is a modal\n * designed to be shown at the beginning of an application. It is a boilerplate\n * checkbox to consent to information collection.\n *\n * Currently this component requires the body to be manually set as a child\n * element (via transclusion)\n *\n * TODO - Set default body if none is passed in.\n *\n * @example\n *       \n *                      Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .\n *       \n *\n *\n *        // Component code - Remove backticks when copying (necessary to render docs)\n *        `@ViewChild('consentModal') consentModal: ConsentModalComponent`\n *        ...\n *        openModal(){\n *          this.consentModal.showFullSizeView();\n *        }\n */\n@Component({\n  selector: 'common-consent-modal',\n  templateUrl: './consent-modal.component.html',\n  styleUrls: ['./consent-modal.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ConsentModalComponent )}\n  ]\n})\n\nexport class ConsentModalComponent extends AbstractHttpService implements ControlValueAccessor, OnInit  {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    @Input() processName: string;\n\n    /**\n     * If `isUnderMaintenance` is true, then this will automatically try and\n     * make a request to the SPA ENV server to determine if it's in a\n     * maintenance window.  If your application determines this manually, leave\n     * this alone.\n     */\n    @Input() isUnderMaintenance: boolean = false;\n    @Input() title: string;\n    @Input() body: string; // = 'Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .';\n    @Input() agreeLabel: string = 'I have read and understand this info';\n    @Input() continueButton: string = 'Continue';\n    @Input() maintenanceFlag: string = 'false';\n    @Input() url: string = '/msp/api/env';\n    @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n    @Output() close = new EventEmitter();\n    @Output() cutOffDate: EventEmitter = new EventEmitter();\n    @Output() accept = new EventEmitter();\n\n    /**\n     * Used in cases where we have custom form controls inside NgContent that we\n     * wish to be satisifed before user can continue through modal.\n     */\n    @Input() disableContinue: boolean = false;\n\n    public spaEnvRes: ISpaEnvResponse = {} as any;\n    public maintenanceMessage: string;\n\n    // public maintenanceFlag: string ;\n\n\n    // tslint:disable-next-line:max-line-length\n    private _applicationHeaderMap: Map = new Map([['ACL', '{\"SPA_ENV_MSP_ACL_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_ACL_MAINTENANCE_MESSAGE\":\"\"}'], ['MSP', '{\"SPA_ENV_MSP_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_MAINTENANCE_MESSAGE\":\"\"}'], ['PA', '{\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\"}']]);\n    agreeCheck: boolean = false;\n\n    public _onChange = (_: any) => {};\n    public _onTouched = () => {};\n\n\n    constructor(protected http: HttpClient,  private logService: CommonLogger) {\n        super(http);\n    }\n\n\n\n    ngOnInit(): void {\n      // Called after ngOnInit when the component's or directive's content has been initialized.\n      // Add 'implements AfterContentInit' to the class.\n      if (this.isUnderMaintenance) {\n        this.inMaintenance();\n      }\n\n    }\n\n    /**\n     * Call this method to display the modal.\n     */\n    showFullSizeView() {\n        this.fullSizeViewModal.config.keyboard = false;\n        this.fullSizeViewModal.show();\n    }\n\n    continue() {\n        this.accept.emit(true);\n        this.fullSizeViewModal.hide();\n        this.close.emit();\n        this._onChange(true);\n        this._onTouched();\n    }\n\n    // Api callout to get the message from the Rapid code\n    sendSpaEnvServer(rapidResponseCode: string): Observable {\n        this._headers = new HttpHeaders({\n            'SPA_ENV_NAME': rapidResponseCode\n        });\n        return this.post(this.url, null);\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n      console.log('handleError', JSON.stringify(error));\n      if (error.error instanceof ErrorEvent) {\n          // Client-side / network error occured\n          console.error('MspMaintenanceService error: ', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code\n          console.error(`MspMaintenanceService Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n      }\n      // this.logService.log({event: 'error', key: 'Cannot get maintenance flag from spa-env-server'});\n\n      // A user facing erorr message /could/ go here; we shouldn't log dev info through the throwError observable\n      return of(error);\n  }\n\n\n  inMaintenance() {\n        const headerName = this._applicationHeaderMap.get(this.processName);\n\n        this.sendSpaEnvServer(headerName)\n                .subscribe(response => {\n                    this.spaEnvRes =  response;\n                    console.log(this.spaEnvRes);\n                    if (this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage =  this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_MESSAGE;\n                    }\n                    if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_START) {\n                        this.cutOffDate.emit(this.spaEnvRes);\n                    }\n\n            }, (error: Response | any) => {\n                console.log('Error when calling the MSP Maintenance: ' + error);\n                this.logService.log({\n                  event: 'ACL - SPA Env System Error',\n                  success: false,\n                  errMsg: 'ACL - SPA Env Rapid Response Error' + error\n                });\n        }\n\n      );\n  }\n\n  registerOnChange(fn: any): void {\n    this.accept.emit(fn) ;\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n\n    //\n  }\n\n  isContinueDisabled(): boolean {\n    return !this.agreeCheck || this.disableContinue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Maxlengths.html":{"url":"interfaces/Maxlengths.html","title":"interface - Maxlengths","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Maxlengths\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoHCommonLibraryError.html":{"url":"classes/MoHCommonLibraryError.html","title":"class - MoHCommonLibraryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoHCommonLibraryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/helpers/library-errorr.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/helpers/library-errorr.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MoHCommonLibraryError extends Error {\n    constructor(message?: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameComponent.html":{"url":"components/NameComponent.html","title":"component - NameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/name/name.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-name\n            \n\n            \n                styleUrls\n                ./name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                nameStr\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:32\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.scss']\n})\nexport class NameComponent extends Base implements ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Name';\n  @Input() maxlen: string = '255';\n  @Input() labelforId: string = 'name_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.nameStr = val;\n    }\n  }\n  get value() {\n    return this.nameStr;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  public nameStr: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.nameStr = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlen, 10 );\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{label}} is required.\n  \n  \n     1; else initInvalid;\">\n        {{label}} must begin with a letter and cannot include special characters except hyphens,\n        periods, apostrophes and blank characters.\n    \n  \n\n\n\n  {{label}} must be with a letter.\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{label}} is required.         1; else initInvalid;\">        {{label}} must begin with a letter and cannot include special characters except hyphens,        periods, apostrophes and blank characters.        {{label}} must be with a letter.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It should be used on every page unless there is a good\nexception.\nNote: CommonFormActionBar (and SubmitBar) must come AFTER this element, not\ninside in version 2.0.0 and above.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It should be used on every page unless there is a good\n * exception.\n *\n * Note: CommonFormActionBar (and SubmitBar) must come *AFTER* this element, not\n * inside in version 2.0.0 and above.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageListInterface.html":{"url":"interfaces/PageListInterface.html","title":"interface - PageListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for used when checking completeness of item\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isComplete\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:13\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n// TODO: Revise - does not work quite correct when there is no landing page.\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n// IMPROVEMENT: Add a 'flex' @Input(), that adds display flex.  Importantly, it\n// must set flex on the wrapper/row divs in the html.  There are some cases\n// (like SiteReg) where having flex layout is beneficial.  My first suggestion\n// was to simply style the , but the problem is that we\n// need flex on the child elements of page-section (that still wrap ng-content).\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:142\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:157\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                TODO:  Convert to custom form control - remove ngForm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiDobFormat\n                            \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                                \n                                    fullname\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiDobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyyMMdd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyy/MM/dd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:18\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:86\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:30\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        fullname\n                    \n                \n\n                \n                    \n                        getfullname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:67\n                                \n                            \n                    \n                        \n                                Returns the person's full name - first middle last name concatenated together \n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Base } from './base';\nimport { format, startOfToday, differenceInYears } from 'date-fns';\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'yyyy/MM/dd';\n  public apiDobFormat = 'yyyyMMdd';\n\n  // Initialize dob to nulls - To be removed\n  public dateOfBirth: Date;\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.apiDobFormat ) : null;\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.dobFormat ) : null;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Returns the person's full name - first middle last name concatenated together */\n  get fullname() {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.middleName ) {\n      _name = _name ? _name.concat( ' ' + this.middleName ) : this.middleName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): Number {\n    return differenceInYears( this.dateOfBirth, startOfToday() );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth = object.dateOfBirth;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhnComponent.html":{"url":"components/PhnComponent.html","title":"component - PhnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phn/phn.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phn\n            \n\n            \n                styleUrls\n                ./phn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                phn\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validatePhn\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isBCPhn\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phn/phn.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isBCPhn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Personal Health Number (PHN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phn_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validatePhn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePhn()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:33\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\n\n@Component({\n  selector: 'common-phn',\n  templateUrl: './phn.component.html',\n  styleUrls: ['./phn.component.scss']\n})\nexport class PhnComponent extends AbstractFormControl implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Personal Health Number (PHN)';\n  @Input() placeholder: string = '1111 111 111';\n  @Input() labelforId: string = 'phn_' + this.objectId;\n\n  // Self-Validation inputs\n  @Input() isBCPhn: boolean = true;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`,\n  };\n\n  @Input()\n  set value( val: string ) {\n    if ( val) {\n      this.phn = val;\n    }\n  }\n  get value() {\n    return this.phn;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  phn: string = '';\n  mask: any;\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n      [NUMBER, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.phn ) { // IE fix when focus does not display required error\n      this.phn = value;\n      this._onChange( value );\n      this.valueChange.emit( value );\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.phn = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const validatePhnResult = this.validatePhn();\n    if ( validatePhnResult ) {\n      return validatePhnResult;\n    }\n    return null;\n   }\n\n  private validatePhn(): ValidationErrors | null {\n\n    if ( this.phn && this.phn.trim().length > 0 ) {\n\n      // Init weights and other stuff\n      const weights: number[] = [-1, 2, 4, 8, 5, 10, 9, 7, 3, -1];\n      let sumOfRemainders = 0;\n\n      // Clean up string\n      const value = this.phn.trim();\n      this.phn = value\n                  .replace( /^0+/, '' ) // remove leading zeros\n                  .replace(/_/g, '') // remove underlines\n                  .replace(/\\s/g, ''); // spaces\n\n      // Test for length\n      if (this.phn.length !== 10) {\n        return { 'invalid': true };\n      }\n      // Look for a number that starts with 9 if BC only\n      if (this.isBCPhn && this.phn[0] !== '9') {\n        return { 'invalid': true };\n      } else if (!this.isBCPhn && this.phn[0] === '9') { // Number cannot have 9\n        return { 'invalid': true };\n      }\n\n      // Walk through each character\n      for (let i = 0; i  0) {\n          // multiply the value against the weight\n          result = num * weights[i];\n\n          // divide by 11 and save the remainder\n          result = result % 11;\n\n          // add it to our sum\n          sumOfRemainders += result;\n        }\n      }\n\n      // mod by 11\n      const checkDigit = 11 - (sumOfRemainders % 11);\n\n      // if the result is 10 or 11, it is an invalid PHN\n      if (checkDigit === 10 || checkDigit === 11) {\n        return { 'invalid': true };\n      }\n\n      // Compare against 10th digitfinalDigit\n      const finalDigit = Number(this.phn.substring(9, 10));\n      if (checkDigit !== finalDigit) {\n        return { 'invalid': true };\n      }\n    }\n    return null;\n  }\n\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{_defaultErrMsg.required}}\n    \n    \n      {{_defaultErrMsg.invalid}}\n    \n    \n      {{_defaultErrMsg.duplicate}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{_defaultErrMsg.required}}              {{_defaultErrMsg.invalid}}              {{_defaultErrMsg.duplicate}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneNumberComponent.html":{"url":"components/PhoneNumberComponent.html","title":"component - PhoneNumberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhoneNumberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phone-number/phone-number.component.ts\n\n\n    \n        Description\n    \n    \n        PhoneNumberComponent is a used to show the Phone number.\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phone-number\n            \n\n            \n                styleUrls\n                ./phone-number.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-number.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                            \n                                    Static\n                                PhoneNumberRegEx\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                setPhoneNumber\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowInternational\n                            \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phone-number/phone-number.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowInternational\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mobile'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetPhoneNumber(value)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { incompleteValue: boolean; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    incompleteValue: `${LabelReplacementTag} does not appear to be valid.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PhoneNumberRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:50\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  Optional,\n  Self,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, NgForm, NgControl } from '@angular/forms';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\n\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\n/**\n * PhoneNumberComponent is a used to show the Phone number.\n *\n *\n * @example\n *         \n * @export\n */\n\n\n@Component({\n  selector: 'common-phone-number',\n  templateUrl: './phone-number.component.html',\n  styleUrls: ['./phone-number.component.scss'],\n})\n\nexport class PhoneNumberComponent extends AbstractFormControl implements OnInit {\n\n  static PhoneNumberRegEx = '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$';\n  @Input() displayMask: boolean = true;\n  @Input() required: boolean = false;\n  @Input() label: string = 'Mobile';\n\n  @Input() allowInternational: boolean = true;\n\n  // Setter/getter for when not used in form (ex. data dislayed but not edittable)\n  @Input()\n  set value( val: string ) {\n    if ( val !== undefined ) {\n      this.phoneNumber = val;\n    }\n  }\n  get value() {\n    return this.phoneNumber;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  public phoneNumber: string = '';\n\n  public mask: any;\n  public placeholder: string;\n\n  // Abstact variable defined\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    incompleteValue: `${LabelReplacementTag} does not appear to be valid.`\n  };\n\n  constructor(@Optional() @Self() public controlDir: NgControl) {\n    super();\n    if (controlDir) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const internationalPrefix = '+1';\n    this.placeholder = '(555) 555-5555';\n    this.mask = ['(', /[2-9]/, NUMBER, NUMBER, ')', SPACE, NUMBER, NUMBER, NUMBER, '-', NUMBER, NUMBER, NUMBER, NUMBER];\n\n    if (this.allowInternational) {\n      this.placeholder = `${internationalPrefix} ${this.placeholder}`;\n      const prefixArrayOfChar = internationalPrefix.split(''); // ['+', '1']\n      this.mask = [...prefixArrayOfChar, SPACE, ...this.mask];\n    }\n\n\n\n    // Register self validation\n    Promise.resolve().then(() => {\n\n      if (this.controlDir) {\n\n        const allValidators = [this.validateSelf.bind(this)];\n        if (this.controlDir.control.validator) {\n          allValidators.push(this.controlDir.control.validator);\n        }\n        this.controlDir.control.setValidators(allValidators);\n        this.controlDir.control.updateValueAndValidity();\n      }\n    });\n\n  }\n\n  setPhoneNumber(value) {\n    // console.log( 'setPhoneNumber: ', value );\n    this.phoneNumber = value;\n    this.valueChange.emit(this.phoneNumber);\n    this._onChange(value);\n  }\n\n  onBlur( $event ) {\n    this._onTouched($event);\n  }\n\n\n  writeValue(value: any): void {\n    if  (value !== undefined ) {\n      // phoneNumber is where the actual data is displayed to user for this\n      // component\n      this.phoneNumber = value;\n    }\n  }\n\n  private validateSelf() {\n    const value = this.phoneNumber;\n    const phoneLength = this.allowInternational ? 11 : 10;\n\n    if (value) {\n      const stripped = value\n        .replace(/_/g, '') // remove underlines\n        .replace(/\\s/g, '') // spaces\n        .replace(/\\+|-/g, '') // + or - symbol\n        .replace('(', '')\n        .replace(')', '');\n\n      const valid = stripped.length === phoneLength;\n      return valid ? null : { incompleteValue: true };\n\n    }\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n  \n\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.incompleteValue}}\n  \n\n\n\n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{_defaultErrMsg.required}}        {{_defaultErrMsg.incompleteValue}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhoneNumberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                mask\n                            \n                            \n                                postalCode\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                upperCasePipe\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                displayMask\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postalCode_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:101\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format A1A 1A1',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:29\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { LETTER, NUMBER, SPACE } from '../../models/mask.constants';\nimport { Base } from '../../models/base';\nimport { ErrorMessage } from '../../../public_api';\n\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss']\n})\nexport class PostalCodeComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() labelforId: string = 'postalCode_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    // console.log( 'set value: ', val );\n    if (val) {\n      this.postalCode = val;\n    }\n  }\n  get value() {\n    // console.log( 'get value: ', this.postalCode );\n    return this.postalCode;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  postalCode: string = '';\n  mask: any;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format A1A 1A1',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n     //console.log( 'onValueChange: ', value, this.postalCode );\n\n    if ( value !== this.postalCode ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.postalCode = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.postalCode = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n  \n  \n    \n      {{label}} {{defaultErrMsg.required}}\n    \n    \n      {{defaultErrMsg.pattern}}\n    \n    \n      {{defaultErrMsg.invalidBCPostal}}\n    \n    \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} {{defaultErrMsg.required}}              {{defaultErrMsg.pattern}}              {{defaultErrMsg.invalidBCPostal}}            {{label}} {{defaultErrMsg.invalidChar}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProvinceComponent.html":{"url":"components/ProvinceComponent.html","title":"component - ProvinceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProvinceComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/province/province.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-province\n            \n\n            \n                styleUrls\n                ./province.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./province.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                province\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                provinceList\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/province/province.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'province_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please select a province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        provinceList\n                    \n                \n                \n                    \n                        Type :         ProvinceList[]\n\n                    \n                \n                \n                    \n                        Default value : PROVINCE_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:61\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:57\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlength: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidChar}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProvinceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/province/province.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlength: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioComponent.html":{"url":"components/RadioComponent.html","title":"component - RadioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/radio/radio.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-radio\n            \n\n            \n                styleUrls\n                ./radio.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                _value\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setStatus\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                instructionText\n                            \n                            \n                                label\n                            \n                            \n                                radioLabels\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/radio/radio.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :     \"table-row-group\" | \"inline-block\"\n\n                    \n                \n                \n                    \n                        Default value : 'inline-block'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instructionText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioLabels\n                    \n                \n                \n                    \n                        Type :         IRadioItems[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ]\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:75\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:68\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *        \n *        \n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  {{instructionText}}\n  \n    \n      \n      \n      {{val.label}}\n      \n    \n  \n\n  \n    {{_defaultErrMsg.required}}\n  \n\n\n\n\n  \n    \n  \n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}  {{instructionText}}                        {{val.label}}                  {{_defaultErrMsg.required}}              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyFields.html":{"url":"interfaces/ReadOnlyFields.html","title":"interface - ReadOnlyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyFields\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardService.html":{"url":"guards/RouteGuardService.html","title":"guard - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/route-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Use this service to implement Route Guards in your application. This is for a\ntypical form flow, where the user must proceed sequentially from one page to\nthe next.\nTo setup, you must:\n\nCreate a service implementing the abstract methods in AbstractPgService (\"RegistrationService\")\nSetup AbstractPgCheckService in NgModule providers, to useExisting the service from previous step.\nAdd this RouteGuardService to same providers from previous step.\nConfigure routes to use RouteGuardService - canActivate or canActivateChild\nHave each \"page\" in the form call setPageIncomplete() or setPageComplete() (from the \"RegistrationService\")\n\nYou must make sure to setup AbstractPgCheckService in NgModules correctly.\n\n                \n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [RouteGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.setPageIncomplete(); }\ncontinue() { this.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPgCheckService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/route-guard.service.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPgCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:73\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\n\n/**\n * Use this service to implement Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPgService` (\"RegistrationService\")\n * 2. Setup AbstractPgCheckService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this RouteGuardService to same providers from previous step.\n * 4. Configure routes to use RouteGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"RegistrationService\")\n *\n *\n * You must make sure to setup AbstractPgCheckService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [RouteGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.setPageIncomplete(); }\n *                continue() { this.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router,\n    private service: AbstractPgCheckService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Pre-requisite has not be completed\n     */\n    if (false === this.service.isPrerequisiteComplete()) {\n      this.router.navigate([this.service.getStartUrl()]);\n      return false;\n    }\n\n    if (false === this.service.isPageComplete(pageUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SampleImageInterface.html":{"url":"interfaces/SampleImageInterface.html","title":"interface - SampleImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SampleImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sample-modal/sample-modal.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        desc\n                                \n                                \n                                        path\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleModalComponent.html":{"url":"components/SampleModalComponent.html","title":"component - SampleModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SampleModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sample-modal/sample-modal.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sample-modal\n            \n\n            \n                styleUrls\n                ./sample-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sample-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sampleModal\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                    Public\n                                openModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :         SampleImageInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sampleModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('samplesModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{title}}\n        \n          \n        \n      \n\n      \n        \n          {{image.title}}\n          \n        \n      \n\n      \n        Close\n      \n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{title}}                                                        {{image.title}}                                      Close            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SampleModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { ProgressbarModule, ModalModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { CountryComponent } from './components/country/country.component';\nimport { ProvinceComponent } from './components/province/province.component';\nimport { CityComponent } from './components/city/city.component';\nimport { StreetComponent } from './components/street/street.component';\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ConsentModalComponent } from './components/consent-modal/consent-modal.component';\nimport { NameComponent } from './components/name/name.component';\nimport { PhoneNumberComponent } from './components/phone-number/phone-number.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AccordionCommonComponent } from './components/accordion/accordion.component';\nimport { ValidateNameDirective } from './components/name/validate-name.directive';\nimport { SinComponent } from './components/sin/sin.component';\nimport { PhnComponent } from './components/phn/phn.component';\nimport { FullNameComponent } from './components/full-name/full-name.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ValidateBcPostalDirective } from './components/postal-code/validate-bc-postal.directive';\nimport { XiconButtonComponent } from './components/xicon-button/xicon-button.component';\nimport { DuplicateCheckDirective } from './components/duplicate-check/duplicate-check.directive';\nimport { ErrorContainerComponent } from './components/error-container/error-container.component';\nimport { ValidateStreetDirective } from './components/street/validate-street.directive';\nimport { ValidateCityDirective } from './components/city/validate-city.directive';\nimport { ValidateRegionDirective } from './components/validate-region/validate-region.directive';\nimport { ValidatePostalcodeDirective } from './components/postal-code/validate-postalcode.directive';\nimport { SampleModalComponent } from './components/sample-modal/sample-modal.component';\nimport { EmailComponent } from './components/email/email.component';\nimport { ConfirmTemplateComponent } from './components/confirm-template/confirm-template.component';\nimport { GeocoderInputComponent } from './components/geocoder-input/geocoder-input.component';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\n\n\nconst componentList = [\n  CoreBreadcrumbComponent,\n  FormActionBarComponent,\n  PageFrameworkComponent,\n  PasswordComponent,\n  WizardProgressBarComponent,\n  DateComponent,\n  DatepickerComponent,\n  FileUploaderComponent,\n  ThumbnailComponent,\n  FormSubmitBarComponent,\n  PostalCodeComponent,\n  PageSectionComponent,\n  DropdownComponent,\n  ToggleComponent,\n  AddressComponent,\n  CountryComponent,\n  ProvinceComponent,\n  CityComponent,\n  StreetComponent,\n  ButtonGroupComponent,\n  ButtonComponent,\n  CheckboxComponent,\n  ConsentModalComponent,\n  NameComponent,\n  FullNameComponent,\n  PhoneNumberComponent,\n  RadioComponent,\n  AccordionCommonComponent,\n  SinComponent,\n  PhnComponent,\n  HeaderComponent,\n  XiconButtonComponent,\n  ErrorContainerComponent,\n  SampleModalComponent,\n  EmailComponent,\n  ConfirmTemplateComponent,\n  GeocoderInputComponent,\n\n\n  // Directives\n  ValidateNameDirective,\n  DuplicateCheckDirective,\n  ValidateBcPostalDirective,\n  ValidateStreetDirective,\n  ValidateCityDirective,\n  ValidateRegionDirective,\n  ValidatePostalcodeDirective,\n  DateFieldFormatDirective\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  declarations: [\n    componentList,\n  ],\n  exports: [\n    componentList\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SinComponent.html":{"url":"components/SinComponent.html","title":"component - SinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sin/sin.component.ts\n\n\n    \n        Description\n    \n    \n        This component reports the following errors.\n    required\n    invalid\n    duplicate\n  These messages can be changed by updated messages using the errorMessages interface\n  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sin\n            \n\n            \n                styleUrls\n                ./sin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                sin\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                    Private\n                                validateSin\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Social Insurance Number (SIN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sin_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSin()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:45\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\n\n/**\n * This component reports the following errors.\n *    required\n *    invalid\n *    duplicate\n *\n *  These messages can be changed by updated messages using the errorMessages interface\n *  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n */\n\n@Component({\n  selector: 'common-sin',\n  templateUrl: './sin.component.html',\n  styleUrls: ['./sin.component.scss']\n})\nexport class SinComponent extends AbstractFormControl implements OnInit {\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  };\n\n  sin: string = '';\n  mask: any;\n\n  @Input() label: string = 'Social Insurance Number (SIN)';\n  @Input() maxlength: string = '15';\n  @Input() placeholder: string = '111 111 111';\n  @Input() labelforId: string = 'sin_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    console.log( 'set value: ', val );\n    if ( val ) {\n      this.sin = val;\n    }\n  }\n  get value() {\n    return this.sin;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.sin ) { // IE fix when focus does not display required error\n      this.sin = value;\n      this._onChange( value );\n      this.valueChange.emit( value );\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.sin = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const validateResult = this.validateSin();\n    if ( validateResult ) {\n      return validateResult;\n    }\n    return null;\n   }\n\n   private validateSin(): ValidationErrors | null {\n\n    if ( this.sin && this.sin.trim().length > 0 ) {\n\n      // Init weights and other stuff\n      const weights: number[] = [1, 2, 1, 2, 1, 2, 1, 2, 1];\n      let sum = 0;\n\n      // Clean up string\n      const value = this.sin.trim();\n      this.sin = value\n                  .replace(/_/g, '') // remove underlines\n                  .replace(/\\s/g, ''); // spaces\n\n      // Test for length\n      if (this.sin.length !== 9) {\n        return { 'invalid': true };\n      }\n\n      // Test for string of zeros\n      if ( this.sin === '000000000') {\n        return { 'invalid': true };\n      }\n\n      // Walk through each character\n      for (let i = 0; i  9) {\n          result = result - 9;\n        }\n\n        // add it to our sum\n        sum += result;\n      }\n\n      // The sum must be divisible by 10\n      if (sum % 10 !== 0) {\n        return { 'invalid': true };\n      }\n\n    }\n\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{_defaultErrMsg.required}}\n    \n    \n      {{_defaultErrMsg.invalid}}\n    \n    \n      {{_defaultErrMsg.duplicate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{_defaultErrMsg.required}}              {{_defaultErrMsg.invalid}}              {{_defaultErrMsg.duplicate}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { CommonImage } from '../../models/images.model';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateBcPostalDirective.html":{"url":"directives/ValidateBcPostalDirective.html","title":"directive - ValidateBcPostalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateBcPostalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateBcPostal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-bc-postal.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\n// TODO: determine whether this is used or not.  If not use, maybe it can be removed\n//  @deprecated - logic added to validate-postalcode directive\nexport const commonValidateBcPostal: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for BC postal code\n  */\n const criteria: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$');\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidBCPostal': true };\n  }\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateBcPostal]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true}\n  ]\n})\nexport class ValidateBcPostalDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateBcPostal( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateCityDirective.html":{"url":"directives/ValidateCityDirective.html","title":"directive - ValidateCityDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateCityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/city/validate-city.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateCity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/validate-city.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateCity: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for  city names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z0-9\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateCity]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true}\n  ]\n})\nexport class ValidateCityDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateCity( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateNameDirective.html":{"url":"directives/ValidateNameDirective.html","title":"directive - ValidateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/name/validate-name.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/validate-name.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateName: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n   /**\n   * Valid characters for name\n   */\n  const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n};\n\n\n@Directive({\n  selector: '[commonValidateName]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true}\n  ]\n})\nexport class ValidateNameDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateName( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePostalcodeDirective.html":{"url":"directives/ValidatePostalcodeDirective.html","title":"directive - ValidatePostalcodeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePostalcodeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePostalcode]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bcOnly\n                            \n                            \n                                hasMask\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bcOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hasMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:48\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// local function\nfunction validatePC(control: AbstractControl, hasMask: boolean, bcOnly: boolean): { [key: string]: boolean } | null {\n\n  if ( control.value ) {\n\n    if ( hasMask ) {\n      const cdnFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n\n      if ( !cdnFormat.test( control.value ) ) {\n        return { 'pattern': true };\n      }\n    } else {\n      const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9 ]*$' );\n\n      if ( !criteria.test( control.value ) ) {\n        return  { 'invalidChar': true };\n      }\n    }\n\n    if ( bcOnly ) {\n      // Valid characters for BC postal code\n      const bcFormat: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Z][ ]?\\\\d[ABCEGHJ-NPRSTV-Z]\\\\d$');\n      if ( !bcFormat.test( control.value ) ) {\n        return { 'invalidBCPostal': true };\n      }\n    }\n  }\n  return null;\n}\n\nexport function commonValidatePostalcode( hasMask: boolean, bcOnly: boolean ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return validatePC( control, hasMask , bcOnly);\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePostalcode]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true}\n  ]\n})\nexport class ValidatePostalcodeDirective implements Validator {\n  @Input() hasMask: boolean = true;\n  @Input() bcOnly: boolean = false;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePC( control, this.hasMask , this.bcOnly );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateRegionDirective.html":{"url":"directives/ValidateRegionDirective.html","title":"directive - ValidateRegionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateRegionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/validate-region/validate-region.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateRegion]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/validate-region/validate-region.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateRegion: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for country/province/region names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateRegion]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true}\n  ]\n})\nexport class ValidateRegionDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateRegion( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateStreetDirective.html":{"url":"directives/ValidateStreetDirective.html","title":"directive - ValidateStreetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateStreetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/street/validate-street.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateStreet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/validate-street.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateStreet: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for street\n  */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9#/&\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateStreet]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true}\n  ]\n})\nexport class ValidateStreetDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateStreet( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../models/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): Number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.includes(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XiconButtonComponent.html":{"url":"components/XiconButtonComponent.html","title":"component - XiconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  XiconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/xicon-button/xicon-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-xicon-button\n            \n\n            \n                styleUrls\n                ./xicon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xicon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n                \n                    \n                        Label to use for accessibility.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBtnClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBtnClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MoHCommonLibraryError } from '../../../helpers/library-errorr';\n\n@Component({\n  selector: 'common-xicon-button',\n  templateUrl: './xicon-button.component.html',\n  styleUrls: ['./xicon-button.component.scss']\n})\nexport class XiconButtonComponent implements OnInit {\n\n  /**\n   * Label to use for accessibility.\n   * @required\n   */\n  @Input() label: string;\n  /**\n   * @deprecated - Remove at breaking change and go to (click)\n   */\n  @Output() clickEvent: EventEmitter = new EventEmitter();\n  @Output() click: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.label) {\n      // todo - change to MohCommmonLibraryError -> test in IE10\n      // throw Error('common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.');\n      const msg = `common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.\n      e.g. \n`; // Intentional to create a blank line between our error and stack trace.\n      throw new MoHCommonLibraryError(msg);\n    }\n  }\n\n  onBtnClick() {\n    this.clickEvent.emit();\n    this.click.emit();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'XiconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nUnreleased \"moh-common-lib\" (2019-11-20)\n3.0.0-rc.16 \"moh-common-lib\" (2019-11-20)\nBug Fixes\n\nset sin value before call onChange (7e270d8)\nupdated email error message, strip off (optional) from labels (788c3d1)\nupdated phone error message (f0202f2)\n\n3.0.0-rc.15 \"moh-common-lib\" (2019-11-15)\nCode Refactoring\n\nemail component uses abstract control class and is self-validing, units tests started (f21d329)\n\n3.0.0-rc.14 \"moh-common-lib\" (2019-11-14)\nBug Fixes\n\nrange dates indicate no future or past dates allowed (see notes at top of file) (a73785f)\n\nCode Refactoring\n\nprovince component uses abstract control class, added ng-select to styles for testing (48e2120)\ncity component uses abstract control class (492934b)\ncommonPhnValidation deprecriated, phnComponent modified to be self-validating (cc9910b)\ncommonValidateSin removed, sin component self validates, reactive tests started for sin (e0bd207)\nstreet component uses abstract control class (36eeddb)\n\nFeatures\n\nAdded CommonLogEvents to commonLogger - common events that apps have when logging (a1b8211)\n\nTests\n\nrefactored tests so that call helper functions (21afb82)\n\n3.0.0-rc.13 \"moh-common-lib\" (2019-11-06)\nBug Fixes\n\nadded logic to abstract-form-control to check for no label submitted. (ed615a6)\ncheck for label not passed in set default value as 'Field' (655a0fd)\n\n3.0.0-rc.12 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nGeocoderInput: Now emits an onChange with null if it has no results. (009d779)\n\n3.0.0-rc.11 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nFileUploader: Fix a11y for danging aria label (3f6a466)\nCR18890 - added check for year (679ac15)\n\nTests\n\nRemove extra unnecessary tick() call. (8248e61)\nUnit tests for phone/radio passing.  Also internal refactoring. (14bce6e)\n\n3.0.0-rc.10 \"moh-common-lib\" (2019-11-01)\nFeatures\n\nPhone: Phone now has an 'incompleteValue' error and text. (a1bd381)\n\n3.0.0-rc.9 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Remove debug label (a7efeee)\n\n3.0.0-rc.8 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Replace (chance) event with (blur) for IE (61b54fd)\n\n3.0.0-rc.7 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nPhoneNumber: IE fix by changing event (71eb531)\n\nFeatures\n\nPhoneNumber: Add allowInternational flag to disable the \"+1\" (108e46b)\nPhoneNumber: Now a self-validating component. (6650ef8)\n\nBREAKING CHANGES\n\nPhoneNumber: Deleted commonValidatePhone directive\n\n3.0.0-rc.6 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nDate: Remove ngOnChanges (015602c)\nadded ngChanges to date to detect label changes, no longer can add question by default (38c822b)\nadded placeholder country & regexp for label (61c0cdc)\n\n3.0.0-rc.5 \"moh-common-lib\" (2019-10-28)\nFeatures\n\nadded fullname to person.model (28d9585)\nAbstractAPI: Has a generateUUID method. (5362c67)\n\n3.0.0-rc.4 \"moh-common-lib\" (2019-10-23)\nBug Fixes\n\nDate format string modified to use format from date-fns module (4bb54c0)\nFixed date component to handle no validators on the control. (5441be2)\n\n3.0.0-rc.3 \"moh-common-lib\" (2019-10-22)\n3.0.0-rc.2 \"moh-common-lib\" (2019-10-22)\nBug Fixes\n\nDate:  Setting restrictDate to \"past\" no longer includes today, matching previous behaviour (8fc79af)\n\n3.0.0-rc.1 \"moh-common-lib\" (2019-10-22)\nBuild\n\nAdd new command to build release candidates for v3 (e89e6f3)\n\nFeatures\n\nDate: DateComponent is NgControl (51f2ea4)\n\n3.0.0-rc.0 \"moh-common-lib\" (2019-10-22)\n2.28.0 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\ncall _onChange to trigger form validations (c91fef0)\n\n2.27.2 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\nFileUploader: Attempted fix at PDF parsing for Edge using worker. (2ebd235)\n\n2.27.1 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nConsentModal: disableContinue works correctly (f18457b)\n\n2.27.0 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nGeocoderService: Change default API filter (34f0a40)\nGeocoderService: Exendable methods via inheiritance (7355610)\n\nFeatures\n\nGeocoderInput: New Component CommonGeocoderInput (224e362)\nGeocoderInput: Now a ControlValueAccessor (730f9c7)\n\n2.26.0 \"moh-common-lib\" (2019-10-15)\nBug Fixes\n\nlogic in validate postal-code directive to handle bcOnly flag (88bc3f3)\n\nDocumentation\n\nPublishing: Make it more clear when to use \"patch\" or \"minor\" versions. (02cb2c5)\n\nFeatures\n\nCAPTCHA: Shows required error on touched (16be24b)\nadded bc only postal code check for address component (e6db87e)\nConsentModal: Add disableContinue @Input(), used with custom controls (8aa41ec)\n\n2.24.0 \"moh-common-lib\" (2019-10-11)\nFeatures\n\nFileUploader: Add a blank \"Add\" thumbnail user can click (1251212)\nAdded confirmation template for response pages (1f1a0f9)\nAdded confirmation template for response pages (aa2b7f9)\n\n2.23.0 \"moh-common-lib\" (2019-10-10)\nFeatures\n\nadded abilty to modify messages in date rather than replace. (2235059)\n\n2.22.0 \"moh-common-lib\" (2019-10-09)\nFeatures\n\ncommonValidatePhone: Phone format validation (510ad9e)\n\n2.21.0 \"moh-common-lib\" (2019-10-09)\nBug Fixes\n\nPhone: Can now use [ngModel] by itself (5910979)\n\nFeatures\n\nemail: Create EmailComponent (based on Name) (27b488b)\n\nStyles\n\nPageSection: Change bullet styles (f541d81)\n\n2.20.1 \"moh-common-lib\" (2019-10-09)\nStyles\n\nHeader: Header text wraps on mobile, no longer breaking mobile (1303722)\n\n2.20.0 \"moh-common-lib\" (2019-10-08)\nFeatures\n\nadded ability to set query parameters on navigate method in abstract form (4f3e59f)\n\n2.19.0 \"moh-common-lib\" (2019-10-01)\nBug Fixes\n\ndate component to check for null, undefined and zero, trigger year validation on month change (0ed3875)\nfile uploader - check to confirm have array to check length in onChange method (c6067fd)\n\n2.18.1 \"moh-common-lib\" (2019-09-27)\nBug Fixes\n\nfixed off by 1 date in year validator (9a38474)\n\n2.18.0 \"moh-common-lib\" (2019-09-26)\nBug Fixes\n\nbug in file uploader - check for null array (cf962bc)\n\nFeatures\n\nadded sample-modal component to display sample doc images (4f8f2e7)\n\n2.17.1 \"moh-common-lib\" (2019-09-25)\nBug Fixes\n\nadded check for errors when component not used as form control (7d274e8)\ncolor-success changed to 83D31D to match color on mockups (c64c066)\nerror in checkbox html check errors exist (29c5160)\n\nDocumentation\n\nTODO: Create TODO file with list of breaking changes for version 3 (9dc5375)\nTODO: Rename todo to a markdown file for GitHub support (496c252)\n\n2.17.0 \"moh-common-lib\" (2019-09-24)\nBug Fixes\n\nadded space in error message (radio) (6427f10)\nbug introduced when try to display errors when field touched (radio/checkbox) (aceb028)\ncheckbox fixed to be custom form control (1c51f01)\nset radio touched on blur, display required message when touched (c78856a)\n\nDocumentation\n\nTweak publishing so it passes markdownlint (901885e)\n\nFeatures\n\nAdded required error message to component (d5dd02f)\n\n2.16.0 \"moh-common-lib\" (2019-09-20)\nBug Fixes\n\nupdate address1 when street updated (29e521c)\n\n2.15.0 \"moh-common-lib\" (2019-09-19)\nBug Fixes\n\nremoved check for US from address component (996cad7)\n\n2.14.0 \"moh-common-lib\" (2019-09-17)\nFeatures\n\nSet label defaults to yes/no in radio component (66e58e7)\n\n2.13.0 \"moh-common-lib\" (2019-09-17)\nBug Fixes\n\nclear province when country changes, placeholders updated (8380850)\n\n2.12.0 \"moh-common-lib\" (2019-09-16)\nBug Fixes\n\nradio buttons working for more than 2 options as custom form control (f2ccfe6)\nRemoved check for undefined (7398e93)\n\nFeatures\n\nAdded ability to disable specfic fields in address component (5965aec)\n\n2.11.0 \"moh-common-lib\" (2019-09-12)\nBug Fixes\n\nPostal code clears when country changes to Canada (2c0b127)\n\nDocumentation\n\nAdd info on publishing new builds (9855d9c)\n\n2.10.0 \"moh-common-lib\" (2019-09-05)\nBug Fixes\n\nPhoneNumber: The first numbers within the brackets must be 2-9 now (5069fe8)\n\n2.9.0 \"moh-common-lib\" (2019-08-30)\nBug Fixes\n\nexport common image elementsgit (483b735)\n\n2.8.1 \"moh-common-lib\" (2019-08-22)\nBug Fixes\n\nDate: Capitalize placeholders (4d39002)\n\n2.8.0 \"moh-common-lib\" (2019-08-20)\nBug Fixes\n\nReorder address fields (cbbfaa8)\n\nFeatures\n\nadded validation for street component (0699178)\nadded validations for postal code, country/province, added abiltiy to update error messages (60befc2)\nvalidation for valid characters in city component (16da113)\n\n2.7.1 \"moh-common-lib\" (2019-08-15)\nBug Fixes\n\nDateComponent: Handles having 00 as day (67b6f78)\nFileUpload: Remove console log on ngchanges (7c99c1e)\n\n2.7.0 \"moh-common-lib\" (2019-08-13)\nBug Fixes\n\nFixed displaying of the error message in name component (1650a23)\nAddress:  Clear out address line data when removing the line (3f1149e)\n\n2.6.0 \"moh-common-lib\" (2019-08-09)\nCode Refactoring\n\nModified address to used MSP label and length defaults (5bb54fc)\n\nFeatures\n\nfunctions to retrieve country, prov descriptions,  maxlengths input for addresss (978250b)\n\n2.5.2 \"moh-common-lib\" (2019-08-02)\n2.5.1 \"moh-common-lib\" (2019-07-31)\nBug Fixes\n\nremoved plus sign used to concatenate string for aria-label (#32) (3a5677b), closes #32\n\n2.5.0 \"moh-common-lib\" (2019-07-31)\nFeatures\n\nAddress: added input to address component to allow users to change default labels on fields. (#31) (ebb6998), closes #31\n\n2.4.0 \"moh-common-lib\" (2019-07-29)\n2.3.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Now has default country/prov behaviour built in (8361a0e)\n\n2.2.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Additional lines must be removed in order (ac9d61c)\nAddress: Now can show 2 extra address lines (previously only one) (af91989)\n\nStyles\n\nXIconButton: Change icon from 'times' to 'times-circle' (aad93b5)\n\n2.1.5 \"moh-common-lib\" (2019-07-18)\nAccessibility\n\nRadio: Hide radio for FireFox but keep tab-focusable. (8f6886f)\nXIconButton: Add label (867f969)\n\n2.1.4 \"moh-common-lib\" (2019-07-16)\nAccessibility\n\nPhone: Fix association of labels for phone component (c122a2a)\n\n2.1.3 \"moh-common-lib\" (2019-07-11)\nAccessibility\n\nRadio: Convert radio to use fieldset. (2c2f322)\nRadio: New focus style for RadioComponent, styled better for mouse (c2fd959)\n\n2.1.2 \"moh-common-lib\" (2019-07-10)\nAccessibility\n\nRadio: Radio is now focusable via tab / screenreader (126d876)\n\nStyles\n\nConsentModal: Backdrop enabled when modal is open. (b901868)\n\n2.1.1 \"moh-common-lib\" (2019-07-09)\nBug Fixes\n\nAddress: Implement allowExtralines to opt-in to new multi-line (5a7c37b)\n\nBREAKING CHANGES\n\nAddress: This reverts an accidentally introduced breaking change in 2.1.0 where all address components would use the new line behaviour.  Now, it is opt-in.\n\n2.1.0 \"moh-common-lib\" (2019-07-09)\nAccessibility\n\nStepper/Wizard: Darken link text by 5% to get AA colour contrast (a27faa9)\n\nBug Fixes\n\nRadio: Fix empty label for RadioComponent for a11y (Waze) (7400a64)\n\nBuild\n\nAdd \"a11y\" type to changelog and commit types (edf0b2e)\n\nCode Refactoring\n\nAddressComponent: Reorganize order of inputs, add AddressLine1 (5d8f61d)\n\nDocumentation\n\nAddressModel: Add TSDOC descriptions on street and addressLine1 (6f093d2)\n\nFeatures\n\nAddressComponent: Add 'disableGeocoder' @Input (a512eb0)\n\n2.0.1 \"moh-common-lib\" (2019-07-04)\nBug Fixes\n\nPhoneNumber: Required @Input works properly (5b18c5f)\n\nCode Refactoring\n\nXIconButton: Add (click) event, @deprecate (clickEvent) (baee5ad)\n\n2.0.0 \"moh-common-lib\" (2019-06-28)\nBug Fixes\n\nDate: Remove console logs. (a9aaf59)\nPHN: Remove console logs when setting values. (d4f0e3b)\nStepper/WizardProgress: Add vertical padding (b555787)\n\nFeatures\n\nFormActionBar: Change to full-width,  remove widthOptions (6254d29)\nName, Postal: Update validators to be compatible with reactive forms (e35f16b)\n\nStyles\n\nPageFramework:  Full height page framework, pushes form bar down (6b8cedd)\n\nBREAKING CHANGES\n\nPageFramework: Shows an error when a FormActionBar is embedded\nFormActionBar: Width changes may break designs, @Input removed\n\n1.8.0 \"moh-common-lib\" (2019-06-25)\nBug Fixes\n\nDropdown: Add visible form label to input (2a511e7)\nProvince: Add placeholder when not using dropdown (8e823c5)\nProvince: Init val = undefined (was empty string); fix placeholder. (09ae712)\n\nFeatures\n\nCity: Add placeholder @Input with default (f103e7c)\nDropdown: Add 'clearable' property from ng-select (8f24e2e)\nProvince: Field is clearable when not required (47d614a)\nStreet: Add placeholder @Input with default (ae493e7)\n\n1.7.0 \"moh-common-lib\" (2019-06-24)\nBug Fixes\n\nCheckbox: Checkbox component now defaults to unchecked. (6775a4d)\n\nDocumentation\n\nAdditionalDocumentation:  preserveSymlinks in for npm link (e458627)\nRouteGuard: Document RouteGuardService and related classes. (fc7fe65)\nRouteGuard: Fix instruction examples for RouteGuard. (3a06f99)\n\nFeatures\n\nXIconButton: Add XIconButtonComponent. Include fixes to RadioComponent. (0ba1d1e)\n\n1.6.2 \"moh-common-lib\" (2019-06-20)\nBug Fixes\n\nCheckbox: Fix labels for checkbox to properly associate (af516d0)\n\n1.6.1 \"moh-common-lib\" (2019-06-19)\nBug Fixes\n\naddress and component - defaults now displaying (6c09982)\n\nFeatures\n\nroute guard implemented (befc319)\n\n1.6.0 \"moh-common-lib\" (2019-06-19)\nDocumentation\n\nContributing: Update contributing to show WIP option (3f42b31)\n\nFeatures\n\nPageFramework: Add 15px left/right padding, to counter taking padding from .container-fluid (7febf6d)\n\n1.5.0 \"moh-common-lib\" (2019-06-18)\nBug Fixes\n\nSIN, Address, RouteGuard: SIN all 0s fix, add RouteGuard service, and default address data. (4295b03)\nToggle: Switch order of Yes/No, so that 'No' comes first. (e485f67)\n\n1.4.0 \"moh-common-lib\" (2019-06-13)\nFeatures\n\ne2e: Add new methods in abstract-test-page (#19) (a702d6d), closes #19\n\n1.3.0 \"moh-common-lib\" (2019-06-13)\nDocumentation\n\nConsentModal: Add example typescript code to open modal. (7ff8510)\nConsentModal: Document consent modal with example (fbc012d)\n\nFeatures\n\nFormActionBar: Add 'extra-width' option to widthOption for all bps (5b88093)\n\n1.2.0 \"moh-common-lib\" (2019-06-10)\nFeatures\n\nFormActionBar: Add \"widthOption\" to for custom CSS width override (36476f8)\n\n1.1.1 \"moh-common-lib\" (2019-06-07)\nFeatures\n\nHeader: Logo image path can be overwritten (03c1243)\n\n1.1.0 \"moh-common-lib\" (2019-06-07)\nBug Fixes\n\nSIN string all zeros - invalid (96a58b1)\nSIN, PHN: SIN string all zeros is invalid, added isBCPHn to PHN. (51bfe3b)\n\nBuild\n\nnpm-scripts: Update what is committed after auto-buiding (c8fb31b)\n\nDocumentation\n\nReadme: Update to readme and docs homepage (f334faf)\n\nFeatures\n\nHeader: Create HeaderComponent with built-in \"Skip To Content\" (3868c50)\n\n1.0.2 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nToggle: Properly emit value changes. Had a typo. (e2271b7)\n\n1.0.1 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nRadio: Removed the default status label and changed the name of radio (#17) (acbbdc1), closes #17\n\nCode Refactoring\n\nSecurity: up to date in 10.256s (ac7406b)\nToggle: ToggleComponent now uses RadioComponent under the hood (e81927b)\n\n1.0.0 \"moh-common-lib\" (2019-06-05)\nBug Fixes\n\nImports: Merge /services, /models, /images entry points into main (151f173)\n\nFeatures\n\nFullName: Create FullNameComponent for first/middle/last (41f5609)\n\n0.0.34 \"moh-common-lib\" (2019-06-05)\nFeatures\n\nPHN, SIN components from FPC. Name majorly refactored. (c04b81d)\n\n0.0.33 \"moh-common-lib\" (2019-06-04)\nBug Fixes\n\nConsentModal:  ConsentModal passes TSLint rules (66f9608)\nConsentModal: Fixed multiple compile time issues with import paths (09ce95a)\nRadioComponent: Changed onStatusChange to statusChange (185148b)\n\nDocumentation\n\nButtonComponent: Updated documentation for ButtonComponent. (4d5992a)\nButtonGroupComponent: ButtonGroupComponent is DEPRECATED (c580225)\nRadioComponent: Re-organize docs for radio component (b80520f)\n\nFeatures\n\nCreate Button, Checkbox, Consent Modal, Radio, Name, Phone Number components (dd29a60)\nCreate Button, Checkbox, Consent Modal, radio, Name, Phone Number Components  (53a109b), closes PR#13\n\n0.0.32 \"moh-common-lib\" (2019-05-15)\nBug Fixes\n\nautocomplete turned off, fixed bug in postal to work with fpcare (1c8242e)\nDatepicker: Remove the IE provided 'X' to clear input (2ddfc23)\n\nDocumentation\n\nBasic styling to use BC Gov colours and fonts (7226b37)\nCreate design guidelines markdown file for each component (9f5a04e)\n\nFeatures\n\nButtonGroupComponent: Create ButtonGroupComponent with ControlValueAccessor (22710b7)\nDocumentation: Customize tabs in docs, adding \"Design Guidelines\" (df678e6)\n\n0.0.31 \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\nCaptchaComponent: Add autocomplete=\"false\" to CAPTCHA (18d69c6)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nAddressComponent: Split AddressComponent into City/Country/Province Components (3a98fb0)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (c347c39)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input) (67c4797)\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                10 %\n                (4/40)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                projects/common/helpers/library-errorr.ts\n            \n            class\n            MoHCommonLibraryError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/helpers/scrollToError.ts\n            \n            function\n            scrollToError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            createTestingModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getInputElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getLegendContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            tickAndDetectChanges\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/accordion/accordion.component.ts\n            \n            component\n            AccordionCommonComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                18 %\n                (9/49)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            AddrLabelList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            Maxlengths\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            ReadOnlyFields\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button-group/button-group.component.ts\n            \n            component\n            ButtonGroupComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/city.component.ts\n            \n            component\n            CityComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            directive\n            ValidateCityDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            variable\n            commonValidateCity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/confirm-template/confirm-template.component.ts\n            \n            component\n            ConfirmTemplateComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            component\n            ConsentModalComponent\n            \n                17 %\n                (7/39)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            interface\n            ISpaEnvResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            component\n            CountryComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            function\n            getCountryDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            CANADA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            COUNTRY_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            UNITED_STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                18 %\n                (10/54)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantFuture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantPast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            MAX_YEAR_RANGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            directive\n            DuplicateCheckDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            checkForDuplicates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            commonDuplicateCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/email.component.ts\n            \n            component\n            EmailComponent\n            \n                9 %\n                (3/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/error-container/error-container.component.ts\n            \n            component\n            ErrorContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                26 %\n                (10/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            component\n            FullNameComponent\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            interface\n            FullNameErrorMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n            \n            component\n            GeocoderInputComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/name.component.ts\n            \n            component\n            NameComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            directive\n            ValidateNameDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            variable\n            commonValidateName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/phn.component.ts\n            \n            component\n            PhnComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/phone-number.component.ts\n            \n            component\n            PhoneNumberComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                7 %\n                (2/27)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            directive\n            ValidateBcPostalDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            variable\n            commonValidateBcPostal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            directive\n            ValidatePostalcodeDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            commonValidatePostalcode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            validatePC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            component\n            ProvinceComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            function\n            getProvinceDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            BRITISH_COLUMBIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            PROVINCE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            component\n            RadioComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            interface\n            IRadioItems\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            component\n            SampleModalComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            interface\n            SampleImageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/sin.component.ts\n            \n            component\n            SinComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/street.component.ts\n            \n            component\n            StreetComponent\n            \n                13 %\n                (5/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            directive\n            ValidateStreetDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            variable\n            commonValidateStreet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            directive\n            ValidateRegionDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            variable\n            commonValidateRegion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/xicon-button/xicon-button.component.ts\n            \n            component\n            XiconButtonComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form-control.ts\n            \n            class\n            AbstractFormControl\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/common/lib/models/address.model.ts\n            \n            class\n            Address\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            class\n            Container\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            interface\n            ErrorMessage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            function\n            replaceLabelTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            LabelReplacementTag\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            regExpLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImage\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            class\n            Person\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-pg-check.service.ts\n            \n            injectable\n            AbstractPgCheckService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            injectable\n            CheckCompleteBaseService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            interface\n            PageListInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                26 %\n                (4/15)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                36 %\n                (8/22)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/route-guard.service.ts\n            \n            guard\n            RouteGuardService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/common/lib/shared-core.module.ts\n            \n            variable\n            componentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            date-fns : ^2.5.1\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^3.2.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiStatusCodes   (projects/.../confirm-template.component.ts)\n                        \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.model.ts)\n                        \n                        \n                            CommonLogEvents   (projects/.../logger.service.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiStatusCodes\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/lib/models/images.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/services/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonLogEvents\n                    \n                \n                        \n                            \n                                 navigation\n                            \n                        \n                        \n                            \n                                Value : navigation\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 submission\n                            \n                        \n                        \n                            \n                                Value : submission\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation - https://bcgov.github.io/moh-common-styles/\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains.\nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. Or if you're able you can ask me in person.  Thanks\n- Adam Coard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nMoh-Common-Lib:\n- [ ] Security warnings (GitHub)\nBreaking Changes for version 3.0.0:\n\n FormActionBar / FormSubmiBar - make the on load default colour yellow\nThis can fix a \"flash\" of the first colour on macbooks and faster computers (nonVDI)\n\n\n Delete all instances of showError. We never use it as an @Input.\n address.model.ts\n public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n radio.component.ts\n @Input() showError: boolean; // TODO: Remove - breaking change\n // TODO: remove status change - breaking change\n\n\n checkbox.component.ts\n Remove to make custom form control -- possible breaking change\n @Input() required: boolean = false;  // TODO: Remove - breaking change\n Remove the showError\n\n\n xicon-button.component.ts\n Remove clickEvent output. Should be able to just use \"click\", which follows conventional Angular naming.\n\n\n street.component.ts\n Replace \"maxlen\" with \"maxlength\" across this and other components. Maxlength is more semantic / consistent.  Search for this in other places too.\n\n\n date.component.ts - Should become a FormControl (NgControl)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocal Development\n\ncomponents\nschematics\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n ~~*High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:*~~ [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/common\nIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nYou must make sure to set \"preserveSymlinks\": true in angular.json under the project>architect>build>options.\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nTypeScript\nimport { example } from 'moh-common-lib'\nIf you've made any chanfges to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
