var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractForm.html",[0,0.006,1,3.312]],["body/classes/AbstractForm.html",[0,0.007,1,5.115,2,2.076,3,0.19,4,0.207,5,0.095,6,7.214,7,4.416,8,0.207,9,0.789,10,2.436,11,1.709,12,6.784,13,0.76,14,5.944,15,3.456,16,5.227,17,3.384,18,7.506,19,5.115,20,0.903,21,3.439,22,4.878,23,0.655,24,6.459,25,0.978,26,0.012,27,0.468,28,0.317,29,0.648,30,1.161,31,5.05,32,6.459,33,1.572,34,2.474,35,5.649,36,2.548,37,2.003,38,6.459,39,5.05,40,4.716,41,5.115,42,4.398,43,0.689,44,0.617,45,1.118,46,5.05,47,3.228,48,4.716,49,6.459,50,1.532,51,4.398,52,1.78,53,4.308,54,5.05,55,5.649,56,1.78,57,0.913,58,5.649,59,2.311,60,5.115,61,6.459,62,6.459,63,4.716,64,1.342,65,1.175,66,5.05,67,4.398,68,3.707,69,6.459,70,6.459,71,0.49,72,5.05,73,6.459,74,3.096,75,3.906,76,5.115,77,4.306,78,2.42,79,0.245,80,2.236,81,0.424,82,0.962,83,2.524,84,0.174,85,3.054,86,5.05,87,0.993,88,3.439,89,0.641,90,2.899,91,5.05,92,5.05,93,5.05,94,1.869,95,5.05,96,5.05,97,5.05,98,5.05,99,0.007,100,0.009,101,0.007]],["title/classes/AbstractHttpService.html",[0,0.006,102,2.286]],["body/classes/AbstractHttpService.html",[0,0.009,2,1.866,3,0.171,4,0.186,5,0.086,8,0.186,9,0.736,13,0.848,15,3.758,17,3.634,20,0.576,23,0.64,25,1.209,26,0.012,27,0.544,28,0.334,29,0.752,30,0.881,43,0.619,44,0.555,45,1.042,57,0.882,68,3.458,78,3.769,79,0.233,84,0.156,85,2.745,89,0.914,99,0.006,100,0.008,101,0.006,102,3.294,103,6.401,104,3.874,105,3.969,106,1.302,107,4.419,108,3.19,109,4.09,110,5.356,111,4.605,112,5.032,113,4.771,114,2.774,115,5.938,116,3.594,117,4.135,118,6.025,119,4.61,120,4.538,121,5.248,122,4.399,123,4.771,124,4.771,125,5.938,126,5.475,127,4.538,128,5.356,129,4.399,130,4.829,131,4.905,132,2.23,133,3.855,134,4.771,135,4.399,136,2.569,137,2.745,138,4.409,139,3.643,140,4.61,141,4.538,142,4.771,143,5.356,144,4.798,145,4.102,146,3.643,147,1.142,148,4.771,149,4.102,150,2.477,151,4.771,152,4.771,153,4.771,154,5.105,155,4.538,156,4.771,157,4.538,158,3.969,159,4.538,160,3.643,161,5.269,162,2.23,163,2.481,164,2.481,165,2.089,166,3.969,167,4.538,168,2.481,169,2.089,170,3.969,171,3.314,172,4.538,173,1.209,174,6.025,175,6.025,176,4.538,177,2.745,178,4.538,179,6.025,180,6.025,181,2.089,182,4.538,183,3.594,184,2.904,185,4.538,186,4.538,187,1.935,188,3.594,189,3.969,190,4.538,191,2.39,192,5.269,193,3.314,194,3.314,195,3.314]],["title/injectables/AbstractPgCheckService.html",[196,1.602,197,2.676]],["body/injectables/AbstractPgCheckService.html",[0,0.01,3,0.207,4,0.225,5,0.104,8,0.225,13,0.911,15,3.958,23,0.62,25,0.833,26,0.012,27,0.399,28,0.225,29,0.551,30,1.186,57,0.911,71,0.547,74,3.71,78,3.266,79,0.189,81,0.462,84,0.189,99,0.008,100,0.01,101,0.008,103,6.301,106,1.188,108,3.591,196,2.61,197,5.188,198,3.156,199,5.418,200,4.809,201,4.681,202,4.443,203,3.912,204,2.143,205,6.77,206,6.815,207,6.815,208,6.815,209,0.833,210,3.912,211,5.397,212,5.96,213,3.018,214,4.681,215,2.14,216,5.96,217,2.14,218,1.947,219,5.96,220,1.379,221,6.13,222,6.13,223,5.864,224,6.13,225,5.499,226,5.499,227,4.809,228,5.499,229,5.499]],["title/classes/AbstractTestPage.html",[0,0.006,230,3.054]],["body/classes/AbstractTestPage.html",[0,0.009,2,1.142,3,0.194,4,0.114,5,0.097,8,0.114,9,0.518,11,0.861,13,0.499,15,2.651,16,4.182,19,3.359,23,0.652,25,1.11,26,0.012,27,0.603,28,0.319,29,0.735,34,2.503,43,0.785,44,0.924,53,3.305,56,1.738,57,0.965,59,1.518,60,5.803,64,1.31,65,1.158,71,0.589,76,4.559,77,2.565,78,2.759,79,0.096,84,0.096,89,0.889,99,0.004,100,0.006,101,0.004,106,1.552,131,2.888,133,2.714,136,1.809,150,1.744,169,3.621,173,0.497,191,2.284,210,2.435,215,1.808,220,1.059,230,4.204,231,7.144,232,5.601,233,2.43,234,3.709,235,1.061,236,3.359,237,5.035,238,4.485,239,1.697,240,2.435,241,2.435,242,6.536,243,5.757,244,3.097,245,4.242,246,1.584,247,4.499,248,5.144,249,5.757,250,5.757,251,4.242,252,4.242,253,5.757,254,4.242,255,5.757,256,4.242,257,5.757,258,5.757,259,5.176,260,6.536,261,5.757,262,5.757,263,4.242,264,4.242,265,4.242,266,4.242,267,6.2,268,4.242,269,1.284,270,2.779,271,4.242,272,2.565,273,2.435,274,2.759,275,2.888,276,3.305,277,4.242,278,3.482,279,2.779,280,3.097,281,3.709,282,3.709,283,4.242,284,4.242,285,3.709,286,2.779,287,2.888,288,3.709,289,4.242,290,3.359,291,3.709,292,5.757,293,2.779,294,3.097,295,1.22,296,4.559,297,3.097,298,3.709,299,4.242,300,3.748,301,2.779,302,4.45,303,4.242,304,6.13,305,5.176,306,5.118,307,4.242,308,2.779,309,1.878,310,3.92,311,4.57,312,6.76,313,0.296,314,7.01,315,2.779,316,4.242,317,2.779,318,3.097,319,2.488,320,3.756,321,2.779,322,2.779,323,4.242,324,2.779,325,4.242,326,1.104,327,4.559,328,2.779,329,2.779,330,4.242,331,2.779,332,4.242,333,2.888,334,4.242,335,3.006,336,2.455,337,2.759,338,4.559,339,4.527,340,5.757,341,4.242,342,5.035,343,4.242,344,2.779,345,3.359,346,4.559,347,2.779,348,3.359,349,3.359,350,3.359,351,3.097,352,2.435,353,4.242,354,1.682,355,4.242,356,4.242,357,3.709,358,4.242,359,5.757,360,1.625,361,3.709,362,2.565,363,4.242,364,2.435,365,3.709,366,3.709,367,3.097,368,2.779,369,2.779,370,2.888,371,4.242,372,2.779,373,1.878,374,4.242,375,5.757,376,2.779,377,5.144,378,3.147,379,1.878,380,0.917,381,3.709,382,2.12,383,2.033,384,2.714,385,1.421,386,3.147,387,3.359,388,3.097,389,3.709,390,3.359,391,3.359,392,4.242,393,3.709,394,4.242,395,2.888,396,3.006,397,3.097,398,5.757,399,5.035,400,2.877,401,4.182,402,4.204,403,4.242,404,2.779,405,1.744,406,4.242,407,0.758,408,4.242,409,2.565,410,2.714,411,3.709,412,4.242,413,4.242,414,2.779,415,4.964,416,0.99,417,4.242,418,2.779,419,3.359,420,4.242,421,2.12,422,1.68,423,0.659,424,4.242,425,2.779,426,2.779,427,2.779,428,2.779,429,2.779,430,2.779,431,2.779,432,2.779,433,2.779,434,2.779,435,2.779,436,2.779,437,2.779,438,2.779,439,2.2,440,4.242,441,4.242,442,4.242,443,2.779,444,2.779,445,2.779,446,2.779,447,2.43,448,1.23,449,4.242,450,2.779,451,2.779,452,4.242,453,2.779,454,2.779,455,2.779,456,2.779,457,2.779,458,2.779,459,2.779,460,2.779,461,2.779,462,2.779,463,2.779,464,2.779,465,2.779]],["title/components/AccordionCommonComponent.html",[313,0.157,466,0.962]],["body/components/AccordionCommonComponent.html",[0,0.007,3,0.183,4,0.199,5,0.119,8,0.199,9,0.77,11,1.279,13,0.741,20,0.887,23,0.614,26,0.012,27,0.507,28,0.286,30,0.921,33,1.319,43,0.859,44,0.77,45,1.09,52,1.152,56,1.494,57,0.571,64,1.126,65,0.735,71,0.509,79,0.217,80,2.15,81,0.408,84,0.217,99,0.007,100,0.009,101,0.007,106,1.049,147,0.686,209,0.77,215,1.978,220,1.132,235,1.325,246,1.049,269,1.083,295,1.152,313,0.263,380,1.049,407,1.126,416,0.988,423,1.494,466,1.701,467,1.225,468,1.188,469,1.225,470,4.247,471,6.99,472,1.935,473,0.955,474,1.331,475,6.298,476,1.239,477,6.298,478,1.239,479,6.298,480,7.663,481,2.18,482,6.99,483,5.218,484,4.856,485,4.856,486,4.856,487,4.856,488,4.599,489,6.298,490,4.856,491,2.655,492,2.427,493,1.152,494,1.639,495,0.711,496,1.925,497,1.264,498,1.264,499,1.049,500,1.264,501,1.083,502,1.264,503,1.083,504,1.264,505,1.117,506,1.264,507,1.117,508,1.264,509,1.117,510,1.264,511,1.117,512,1.264,513,1.117,514,1.188,515,1.264,516,1.083,517,1.264,518,1.083,519,1.264,520,1.117,521,1.264,522,1.264,523,1.117,524,1.264,525,1.083,526,1.264,527,1.117,528,1.819,529,1.117,530,1.049,531,1.083,532,1.639,533,1.083,534,1.264,535,1.117,536,1.264,537,1.117,538,1.264,539,1.049,540,1.264,541,1.117,542,1.264,543,1.117,544,1.225,545,1.264,546,1.083,547,1.083,548,1.264,549,1.083,550,1.264,551,1.083,552,1.264,553,1.117,554,1.264,555,1.117,556,1.264,557,1.117,558,1.264,559,1.083,560,1.264,561,1.117,562,1.188,563,1.117,564,1.083,565,1.264,566,0.925,567,1.083,568,1.264,569,1.083,570,1.264,571,1.083,572,1.264,573,1.083,574,1.264,575,1.083,576,1.264,577,1.083,578,1.264,579,1.083,580,1.264,581,1.083,582,1.225,583,1.264]],["title/interfaces/AddrLabelList.html",[584,0.7,585,3.054]],["body/interfaces/AddrLabelList.html",[0,0.004,3,0.117,4,0.127,5,0.058,8,0.127,9,0.563,10,0.973,20,0.393,26,0.012,27,0.225,28,0.288,29,0.791,30,1.06,34,1.764,36,1.966,43,0.75,44,0.965,45,1.254,47,1.549,59,1.109,65,0.832,71,0.59,74,1.486,79,0.249,81,0.26,82,0.591,84,0.189,87,1.197,89,0.97,90,1.779,99,0.004,100,0.006,101,0.004,132,1.147,136,1.322,169,2.12,173,1.261,177,1.874,187,2.344,191,2.18,203,1.779,204,1.275,209,0.379,217,0.973,218,1.316,235,0.469,239,0.914,259,2.455,273,1.779,300,1.373,302,2.11,310,3.136,313,0.229,326,1.198,336,1.322,337,1.486,354,1.229,364,1.779,373,1.373,378,1.694,382,4.029,383,3.709,385,1.841,395,3.742,396,1.618,401,1.983,405,1.274,416,1.115,421,1.549,472,1.275,474,0.469,476,0.61,478,0.61,481,0.914,499,0.995,531,0.691,547,0.691,584,0.771,585,4.442,586,1.187,587,1.401,588,1.401,589,2.455,590,5.685,591,5.685,592,5.685,593,3.961,594,5.15,595,1.059,596,1.303,597,2.947,598,1.966,599,1.764,600,1.543,601,2.207,602,1.092,603,0.973,604,2.644,605,2.455,606,4.121,607,2.711,608,3.517,609,3.176,610,3.136,611,3.136,612,2.263,613,3.893,614,3.742,615,3.136,616,2.711,617,2.711,618,2.711,619,4.142,620,2.263,621,2.455,622,2.711,623,2.711,624,2.711,625,1.549,626,1.694,627,0.973,628,1.874,629,1.618,630,1.274,631,0.713,632,2.263,633,2.711,634,2.711,635,2.455,636,3.647,637,1.828,638,2.711,639,2.879,640,6.337,641,2.711,642,0.454,643,2.11,644,2.455,645,2.455,646,2.785,647,2.711,648,2.455,649,2.711,650,4.12,651,2.455,652,2.711,653,2.455,654,2.455,655,4.028,656,2.711,657,2.711,658,4.028,659,2.947,660,2.711,661,2.455,662,2.711,663,2.711,664,2.711,665,2.53,666,3.154,667,1.983,668,2.53,669,2.711,670,2.711,671,2.711,672,4.442,673,1.694,674,1.073,675,1.594,676,1.073,677,0.914,678,2.711,679,2.711,680,6.685,681,4.028,682,2.711,683,3.136,684,2.12,685,4.028,686,6.768,687,4.806,688,1.694,689,2.455,690,2.263,691,2.711,692,2.711,693,2.711,694,2.711,695,2.711,696,2.711,697,5.32,698,1.694,699,2.711,700,5.148,701,2.711,702,2.455,703,2.11,704,2.711,705,5.685,706,5.958,707,5.685,708,2.711,709,2.711,710,4.028,711,2.711,712,4.028,713,2.644,714,2.711,715,2.11,716,2.711,717,2.711,718,2.711,719,2.711,720,4.028,721,1.983,722,2.711,723,2.711,724,3.742,725,2.711,726,2.711,727,2.711,728,2.682,729,3.647,730,2.785,731,4.028,732,4.028,733,1.779,734,4.028,735,4.028,736,2.711,737,1.618,738,2.711,739,2.711,740,4.352,741,2.263,742,2.263,743,2.455,744,1.147,745,2.711,746,2.711,747,2.711,748,1.874,749,1.779,750,2.711,751,2.711,752,1.147,753,2.711,754,2.455,755,2.287,756,2.711,757,5.32,758,2.711,759,2.711,760,2.711,761,2.711,762,2.711,763,2.263,764,2.747,765,2.711,766,4.442,767,4.028,768,3.363,769,4.028,770,4.806,771,2.263,772,2.711,773,2.711,774,2.263,775,2.11,776,2.11,777,2.263,778,1.779,779,2.711,780,2.711,781,2.711,782,3.363,783,2.711,784,2.711,785,2.263,786,2.711,787,3.647,788,2.455,789,2.405,790,2.455,791,2.711,792,2.711,793,2.711,794,1.874,795,1.874,796,2.711,797,2.711,798,2.711,799,2.711,800,2.711,801,1.147,802,1.147,803,1.073,804,1.594,805,1.147,806,1.073,807,1.427,808,1.427,809,1.322,810,2.711,811,2.711,812,2.711,813,2.711,814,2.711,815,2.711,816,2.711,817,2.711,818,2.711,819,2.711]],["title/classes/Address.html",[0,0.006,606,2.184]],["body/classes/Address.html",[0,0.009,2,1.831,3,0.168,4,0.182,5,0.084,8,0.182,9,0.874,13,0.7,23,0.672,25,0.674,26,0.012,27,0.323,28,0.338,29,0.747,30,1.145,40,4.344,43,0.607,44,0.544,45,0.771,57,0.788,65,0.674,71,0.584,84,0.153,89,0.907,94,1.648,99,0.006,100,0.008,101,0.006,106,0.962,114,2.739,160,4.733,162,2.943,173,0.796,184,3.807,191,1.766,220,1.404,234,5.203,239,2.107,272,3.598,274,3.427,275,4.051,360,2.738,382,3.348,383,3.211,385,1.993,405,2.939,410,3.807,547,1.494,593,3.662,606,4.382,642,0.652,646,4.87,689,5.305,728,1.648,733,3.415,744,2.646,752,1.648,789,3.106,794,4.051,820,3.894,821,2.325,822,3.032,823,2.693,824,7.043,825,6.699,826,6.699,827,7.666,828,4.892,829,6.699,830,5.662,831,7.666,832,6.699,833,4.453,834,4.453,835,6.253,836,6.253,837,4.279,838,4.453,839,4.453,840,4.453,841,4.453,842,4.453,843,4.453,844,5.949,845,6.955,846,6.253,847,4.051,848,5.203,849,5.203,850,4.453,851,4.453,852,4.453,853,5.203,854,4.453,855,4.453,856,5.949,857,5.949,858,4.453,859,5.203,860,4.711,861,4.344,862,5.949,863,5.949,864,4.344,865,5.949,866,5.949,867,5.203,868,5.949,869,5.949,870,5.949,871,3.598,872,4.453,873,4.453,874,5.859,875,5.859,876,5.949,877,2.434,878,4.711,879,4.711,880,6.699,881,4.453,882,4.453,883,4.453,884,4.453,885,4.453,886,4.453,887,4.453,888,4.453,889,4.453,890,4.453,891,4.453,892,4.453,893,4.453,894,4.453]],["title/classes/Base.html",[0,0.006,602,0.992]],["body/classes/Base.html",[0,0.011,2,2.554,3,0.234,4,0.254,5,0.117,8,0.254,9,0.897,20,0.991,23,0.588,26,0.012,28,0.254,43,0.847,44,0.759,71,0.505,79,0.214,84,0.214,99,0.009,100,0.01,101,0.009,106,1.343,160,4.437,220,1.265,407,1.442,602,1.913,627,2.304,823,4.437,895,5.434,896,7.338,897,4.011,898,4.212,899,3.517,900,3.378,901,2.703,902,7.338,903,2.625,904,2.458,905,2.379,906,2.625,907,4.212,908,3.397]],["title/components/ButtonComponent.html",[313,0.157,501,0.932]],["body/components/ButtonComponent.html",[0,0.008,3,0.159,4,0.173,5,0.108,8,0.173,9,0.703,10,2.051,11,1.167,13,0.677,20,0.828,23,0.63,25,0.641,26,0.012,27,0.508,28,0.3,29,0.425,30,0.841,33,1.205,36,2.336,37,1.68,43,1.087,44,0.798,45,0.995,52,1.004,56,2.001,57,0.677,64,1.028,65,0.871,71,0.396,75,3.478,79,0.198,80,1.875,81,0.356,82,0.807,84,0.198,99,0.006,100,0.008,101,0.006,106,0.915,147,0.813,150,1.741,162,2.128,204,1.592,209,0.703,215,1.806,218,1.643,235,1.316,246,0.915,269,0.944,295,1.004,313,0.291,319,2.3,360,2.683,367,3.092,380,0.915,405,2.364,407,1.028,409,3.478,416,0.99,423,1.364,439,3.353,466,0.974,467,1.068,468,1.036,469,1.068,472,1.808,473,0.833,474,1.323,476,1.131,478,1.131,481,2.065,492,2.874,493,1.004,494,1.496,495,0.62,496,1.823,497,1.102,498,1.102,499,0.915,500,1.102,501,1.562,502,1.102,503,0.944,504,1.102,505,0.974,506,1.102,507,0.974,508,1.102,509,0.974,510,1.102,511,0.974,512,1.102,513,0.974,514,1.036,515,1.102,516,0.944,517,1.102,518,0.944,519,1.102,520,0.974,521,1.102,522,1.102,523,0.974,524,1.102,525,0.944,526,1.102,527,0.974,528,1.699,529,0.974,530,0.915,531,0.944,532,1.496,533,0.944,534,1.102,535,0.974,536,1.102,537,0.974,538,1.102,539,0.915,540,1.102,541,0.974,542,1.102,543,0.974,544,1.068,545,1.102,546,0.944,547,0.944,548,1.102,549,0.944,550,1.102,551,0.944,552,1.102,553,0.974,554,1.102,555,0.974,556,1.102,557,0.974,558,1.102,559,0.944,560,1.102,561,0.974,562,1.036,563,0.974,564,0.944,565,1.102,566,0.807,567,0.944,568,1.102,569,0.944,570,1.102,571,0.944,572,1.102,573,0.944,574,1.102,575,0.944,576,1.102,577,0.944,578,1.102,579,0.944,580,1.102,581,0.944,582,1.068,583,1.102,595,1.322,596,1.661,598,2.336,599,2.501,601,2.03,620,4.199,630,2.364,642,0.62,909,3.703,910,4.768,911,4.199,912,5.751,913,2.756,914,5.029,915,3.68,916,5.751,917,5.751,918,5.751,919,5.751,920,5.751,921,5.029,922,3.916,923,4.236,924,4.554,925,4.554,926,5.029,927,5.029,928,5.751,929,5.029,930,5.029,931,5.029,932,6.53,933,1.806,934,5.171,935,5.751,936,7.005,937,4.554,938,4.234,939,4.234,940,4.234,941,4.234,942,4.234,943,5.029,944,4.234,945,1.418,946,3.949,947,5.751,948,5.982,949,3.703]],["title/components/ButtonGroupComponent.html",[313,0.157,503,0.932]],["body/components/ButtonGroupComponent.html",[0,0.005,3,0.143,4,0.156,5,0.101,8,0.156,9,0.654,10,1.94,11,1.086,13,0.629,20,0.784,23,0.662,25,1.014,26,0.012,27,0.545,28,0.329,29,0.672,30,1.121,33,1.12,36,2.21,37,1.512,43,1.062,44,0.952,45,1.159,50,1.673,52,0.904,56,1.818,57,0.83,64,0.956,65,1.161,71,0.461,79,0.184,80,1.688,81,0.32,82,0.726,84,0.184,87,1.318,99,0.005,100,0.007,101,0.005,106,0.824,147,0.539,191,2.45,204,1.854,209,0.654,213,2.368,215,1.679,217,1.679,218,1.913,220,1.185,235,1.307,239,1.576,246,0.824,269,0.85,287,3.641,295,0.904,313,0.232,319,2.215,380,0.824,385,1.791,407,0.956,416,1.061,421,2.673,423,1.268,466,0.877,467,0.962,468,0.932,469,0.962,472,1.055,473,0.75,474,1.316,476,1.052,478,1.052,493,0.904,494,1.392,495,0.558,496,1.743,497,0.992,498,0.992,499,0.824,500,0.992,501,0.85,502,0.992,503,1.709,504,0.992,505,0.877,506,0.992,507,0.877,508,0.992,509,0.877,510,0.992,511,0.877,512,0.992,513,0.877,514,0.932,515,0.992,516,0.85,517,0.992,518,0.85,519,0.992,520,0.877,521,0.992,522,0.992,523,0.877,524,0.992,525,0.85,526,0.992,527,0.877,528,1.608,529,0.877,530,0.824,531,0.85,532,1.392,533,0.85,534,0.992,535,0.877,536,0.992,537,0.877,538,0.992,539,0.824,540,0.992,541,0.877,542,0.992,543,0.877,544,0.962,545,0.992,546,0.85,547,0.85,548,0.992,549,0.85,550,0.992,551,1.377,552,0.992,553,0.877,554,0.992,555,0.877,556,0.992,557,0.877,558,0.992,559,0.85,560,0.992,561,0.877,562,0.932,563,0.877,564,0.85,565,0.992,566,0.726,567,0.85,568,0.992,569,0.85,570,0.992,571,0.85,572,0.992,573,0.85,574,0.992,575,0.85,576,0.992,577,0.85,578,0.992,579,0.85,580,0.992,581,0.85,582,0.962,583,0.992,595,1.23,596,1.589,598,2.524,599,2.366,600,2.069,601,2.961,630,2.199,639,1.688,642,0.558,674,2.138,675,1.319,676,2.138,801,1.979,802,1.979,803,1.319,804,2.318,805,1.979,806,2.138,871,4.05,911,3.905,933,1.679,946,3.736,950,7.258,951,6.572,952,3.334,953,4.511,954,4.677,955,4.677,956,4.235,957,4.677,958,4.235,959,2.199,960,4.677,961,5.348,962,5.348,963,6.178,964,2.121,965,2.121,966,5.348,967,5.586,968,3.953,969,4.892,970,5.348,971,3.812,972,3.812,973,3.812,974,3.812,975,3.812,976,3.812,977,3.812,978,3.812,979,3.812,980,3.812,981,5.348,982,3.812,983,2.199,984,3.812,985,3.812,986,5.348,987,3.812,988,3.812,989,3.812,990,3.812,991,3.334,992,5.348]],["title/injectables/CaptchaDataService.html",[196,1.602,993,2.676]],["body/injectables/CaptchaDataService.html",[0,0.009,3,0.189,4,0.206,5,0.095,8,0.206,13,0.758,20,0.638,23,0.601,25,1.135,26,0.012,27,0.544,28,0.307,29,0.752,42,5.696,57,0.837,71,0.604,79,0.258,81,0.423,84,0.222,89,1.006,99,0.007,100,0.009,101,0.007,107,3.887,112,4.549,117,4.55,137,3.043,138,4.262,146,3.043,164,2.751,165,2.317,173,0.899,196,2.723,198,2.888,220,1.335,755,1.632,993,4.124,994,6.137,995,3.985,996,6.444,997,6.444,998,6.444,999,5.032,1000,5.032,1001,6.217,1002,6.777,1003,5.032,1004,6.278,1005,6.217,1006,6.783,1007,5.032,1008,6.217,1009,7.138,1010,6.933,1011,5.032,1012,4.401,1013,4.098,1014,3.674,1015,6.217,1016,3.426,1017,3.674,1018,4.841,1019,4.401,1020,3.426,1021,6.217,1022,6.217,1023,5.636,1024,4.401,1025,5.636,1026,6.217]],["title/modules/CaptchaModule.html",[1027,2.401,1028,2.676]],["body/modules/CaptchaModule.html",[0,0.008,3,0.207,4,0.225,5,0.104,13,0.648,23,0.442,26,0.012,57,0.648,79,0.288,81,0.463,82,1.05,84,0.189,89,0.699,99,0.008,100,0.01,101,0.008,108,3.021,164,3.012,203,4.57,215,1.73,217,2.547,235,1.033,239,2.011,240,3.916,313,0.207,349,5.403,360,2.11,422,3.332,492,2.754,493,1.307,505,1.958,587,1.676,588,1.676,621,5.403,637,1.479,744,2.039,828,4.982,899,2.641,907,3.163,993,5.262,1004,4.363,1006,4.363,1018,5.047,1027,4.254,1028,5.487,1029,3.332,1030,5.421,1031,5.869,1032,4.818,1033,4.818,1034,4.818,1035,4.818,1036,5.403,1037,4.023,1038,5.51,1039,7.412,1040,5.51,1041,7.412,1042,5.967,1043,5.047,1044,2.641,1045,5.51,1046,4.818,1047,5.51,1048,4.818,1049,5.51,1050,3.752,1051,5.51,1052,4.818,1053,5.967,1054,5.51,1055,4.818,1056,5.967,1057,4.363]],["title/injectables/CheckCompleteBaseService.html",[196,1.602,1058,3.054]],["body/injectables/CheckCompleteBaseService.html",[0,0.01,3,0.148,4,0.16,5,0.074,8,0.292,9,0.667,13,0.642,15,1.806,17,3.228,20,0.692,21,2.671,22,4.462,23,0.661,25,1.079,26,0.012,27,0.517,28,0.316,29,0.715,30,1.207,43,0.856,44,0.829,45,1.173,57,0.952,64,1.38,65,1.117,71,0.568,74,3.416,78,3.805,79,0.216,81,0.33,83,1.96,84,0.188,87,1.334,89,0.979,94,2.322,99,0.005,100,0.008,101,0.005,106,0.848,108,2.416,114,2.512,162,1.451,173,1.212,196,2.09,197,3.491,198,2.251,199,2.671,201,4.101,202,3.132,209,0.479,213,2.778,214,3.794,215,1.232,220,1.377,221,5.37,222,5.37,223,4.968,224,5.37,227,3.43,239,1.608,272,5.057,273,3.132,309,3.003,326,1.42,360,2.09,362,3.299,385,1.827,409,3.299,448,1.737,584,0.914,637,1.464,713,3.892,744,2.019,755,2.393,764,2.727,777,3.984,778,3.892,823,3.299,830,5.844,913,2.615,1058,3.984,1059,6.567,1060,3.106,1061,4.771,1062,4.32,1063,3.984,1064,2.982,1065,5.486,1066,5.486,1067,5.486,1068,5.486,1069,5.931,1070,5.37,1071,5.37,1072,5.486,1073,5.486,1074,5.456,1075,3.922,1076,3.922,1077,3.922,1078,3.922,1079,3.794,1080,2.675,1081,3.984,1082,3.922,1083,4.771,1084,4.952,1085,3.922,1086,4.32,1087,3.715,1088,5.388,1089,3.922,1090,3.922,1091,4.771,1092,3.922,1093,4.771,1094,4.771,1095,3.984,1096,3.922,1097,4.771,1098,4.771,1099,3.922,1100,4.581,1101,3.922,1102,3.922,1103,3.922,1104,3.922,1105,3.922,1106,5.486,1107,3.106,1108,3.43,1109,3.43,1110,2.372,1111,2.372,1112,4.771,1113,4.771,1114,5.486,1115,6.234,1116,5.486,1117,4.771,1118,4.32,1119,4.32,1120,3.715,1121,4.771,1122,3.43,1123,3.43,1124,3.43,1125,3.43,1126,3.106,1127,3.43,1128,3.43,1129,3.43,1130,3.43,1131,3.43,1132,3.43,1133,3.43,1134,3.43,1135,3.43,1136,3.43]],["title/components/CheckboxComponent.html",[313,0.157,507,0.962]],["body/components/CheckboxComponent.html",[0,0.005,3,0.144,4,0.157,5,0.101,8,0.157,9,0.657,10,1.947,11,1.091,13,0.632,20,0.787,23,0.666,25,0.939,26,0.012,27,0.531,28,0.332,29,0.622,30,1.169,33,1.126,36,2.218,37,1.522,43,1.09,44,0.976,45,1.328,50,1.677,52,0.91,56,1.274,57,0.79,64,0.96,65,1.139,71,0.486,79,0.213,80,1.699,81,0.322,82,0.731,84,0.185,87,1.057,99,0.005,100,0.008,101,0.005,106,0.829,147,0.542,191,2.805,204,1.86,209,0.657,215,1.687,217,1.687,218,1.919,220,1.244,235,1.308,239,1.98,244,3.923,246,0.829,269,0.856,287,5.44,295,0.91,313,0.266,319,2.22,380,0.829,407,1.108,416,1.117,421,2.685,423,1.274,466,0.882,467,0.968,468,0.939,469,0.968,472,1.063,473,0.755,474,1.317,476,1.057,478,1.057,493,0.91,494,1.398,495,0.561,496,1.748,497,0.999,498,0.999,499,0.829,500,0.999,501,0.856,502,0.999,503,0.856,504,0.999,505,0.882,506,0.999,507,1.685,508,0.999,509,0.882,510,0.999,511,0.882,512,0.999,513,0.882,514,0.939,515,0.999,516,0.856,517,0.999,518,0.856,519,0.999,520,0.882,521,0.999,522,0.999,523,0.882,524,0.999,525,0.856,526,0.999,527,0.882,528,1.613,529,0.882,530,0.829,531,0.856,532,1.398,533,0.856,534,0.999,535,0.882,536,0.999,537,0.882,538,0.999,539,0.829,540,0.999,541,0.882,542,0.999,543,0.882,544,0.968,545,0.999,546,0.856,547,0.856,548,0.999,549,0.856,550,0.999,551,0.856,552,0.999,553,0.882,554,0.999,555,0.882,556,0.999,557,0.882,558,0.999,559,0.856,560,0.999,561,0.882,562,0.939,563,0.882,564,0.856,565,0.999,566,0.731,567,0.856,568,0.999,569,0.856,570,0.999,571,0.856,572,0.999,573,0.856,574,0.999,575,0.856,576,0.999,577,0.856,578,0.999,579,0.856,580,0.999,581,0.856,582,0.968,583,0.999,595,1.236,596,1.593,598,2.53,599,2.375,600,2.077,601,2.972,602,1.593,603,1.205,627,1.205,630,2.209,631,1.236,642,0.561,674,2.146,675,1.328,676,2.146,677,1.131,801,1.988,802,1.988,803,1.328,804,2.325,805,1.988,806,1.86,871,4.062,901,1.86,903,1.373,904,1.285,905,1.244,906,1.373,933,1.687,945,1.285,946,3.75,959,2.209,964,2.131,965,2.131,967,5.6,968,3.967,969,4.91,983,2.209,991,4.699,1137,3.356,1138,5.373,1139,5.373,1140,5.422,1141,5.373,1142,3.837,1143,3.837,1144,5.373,1145,3.923,1146,3.438,1147,3.837,1148,3.249,1149,3.837,1150,3.837,1151,3.837,1152,3.837,1153,3.837,1154,3.837,1155,3.837,1156,3.837,1157,3.837,1158,3.837,1159,5.373,1160,3.837,1161,1.285,1162,1.42,1163,3.837,1164,3.837,1165,3.837,1166,3.837,1167,3.837]],["title/components/CityComponent.html",[313,0.157,509,0.962]],["body/components/CityComponent.html",[0,0.005,3,0.132,4,0.143,5,0.095,8,0.143,9,0.615,10,1.852,11,1.022,13,0.593,20,0.639,23,0.67,25,1.135,26,0.012,27,0.58,28,0.339,29,0.777,30,0.999,33,1.055,37,1.389,43,1.042,44,1.025,45,0.871,50,1.194,52,0.831,56,1.194,57,0.862,64,0.9,65,1.188,71,0.558,79,0.203,81,0.294,82,0.667,84,0.12,89,0.444,99,0.005,100,0.007,101,0.005,114,2.318,147,0.712,209,0.615,220,1.106,235,1.3,246,0.757,269,0.781,295,0.831,313,0.222,319,2.301,380,0.757,400,2.947,407,1.054,416,1.035,423,1.194,466,0.805,467,0.884,468,0.857,469,0.884,472,0.97,473,0.689,474,1.31,476,0.991,478,0.991,493,0.831,494,1.31,495,0.512,496,1.678,497,0.911,498,0.911,499,0.757,500,0.911,501,0.781,502,0.911,503,0.781,504,0.911,505,0.805,506,0.911,507,0.805,508,0.911,509,1.483,510,0.911,511,0.805,512,0.911,513,0.805,514,0.857,515,0.911,516,0.781,517,0.911,518,0.781,519,0.911,520,0.805,521,0.911,522,0.911,523,0.805,524,0.911,525,0.781,526,0.911,527,0.805,528,1.534,529,0.805,530,0.757,531,0.781,532,1.31,533,0.781,534,0.911,535,0.805,536,0.911,537,0.805,538,0.911,539,0.757,540,0.911,541,0.805,542,0.911,543,0.805,544,0.884,545,0.911,546,0.781,547,0.781,548,0.911,549,0.781,550,0.911,551,0.781,552,0.911,553,0.805,554,0.911,555,0.805,556,0.911,557,0.805,558,0.911,559,0.781,560,0.911,561,0.805,562,0.857,563,0.805,564,0.781,565,0.911,566,0.667,567,0.781,568,0.911,569,0.781,570,0.911,571,0.781,572,0.911,573,0.781,574,0.911,575,0.781,576,0.911,577,0.781,578,0.911,579,0.781,580,0.911,581,0.781,582,0.884,583,0.911,587,1.532,588,1.532,593,4.175,595,1.356,596,1.738,600,1.975,602,1.529,603,1.1,627,1.1,631,1.158,637,0.94,639,2.855,642,0.737,674,2.041,675,1.743,676,2.041,677,1.032,752,1.864,801,2.182,802,1.296,803,1.743,804,2.461,805,1.296,806,1.743,807,2.318,808,1.612,809,2.147,875,5.156,901,1.743,903,1.253,904,1.173,905,1.136,906,1.253,933,1.581,945,2.159,964,2.339,965,2.339,983,1.44,1044,2.413,1161,1.173,1162,1.296,1168,3.063,1169,5.036,1170,5.036,1171,3.413,1172,3.078,1173,3.078,1174,2.753,1175,2.611,1176,2.947,1177,2.826,1178,2.826,1179,1.915,1180,3.413,1181,5.036,1182,3.502,1183,3.502,1184,5.036,1185,2.147,1186,3.502,1187,3.222,1188,3.502,1189,3.502,1190,5.036,1191,3.502,1192,3.502,1193,2.01,1194,3.502,1195,2.01,1196,3.502,1197,3.502,1198,3.502,1199,3.502,1200,3.502,1201,3.502,1202,3.502,1203,1.915,1204,3.502,1205,2.01,1206,3.502,1207,2.01,1208,1.253,1209,1.802,1210,1.253,1211,1.802,1212,1.802,1213,1.802,1214,1.253,1215,1.253,1216,1.802,1217,1.802,1218,1.253,1219,1.253,1220,1.253,1221,1.253,1222,1.253,1223,1.802,1224,1.743,1225,1.253,1226,1.802,1227,1.802,1228,1.253,1229,1.802,1230,1.253,1231,1.253,1232,1.253,1233,1.253,1234,2.307,1235,1.253,1236,1.253,1237,1.253,1238,1.253,1239,1.253,1240,1.253,1241,1.253,1242,1.253,1243,1.253,1244,1.253,1245,1.253,1246,1.253,1247,1.253,1248,1.253,1249,1.253,1250,1.253,1251,1.802,1252,1.253,1253,1.253,1254,1.253,1255,1.253,1256,1.253,1257,1.253,1258,1.253,1259,1.253,1260,1.253,1261,1.253,1262,1.253,1263,1.253,1264,1.253,1265,1.802,1266,1.253,1267,1.253,1268,1.253,1269,1.253,1270,1.253,1271,1.032,1272,1.253,1273,1.253,1274,1.253,1275,1.253,1276,1.253,1277,1.253,1278,1.253,1279,1.253,1280,2.413,1281,1.75,1282,1.75,1283,1.678,1284,1.173,1285,1.828]],["title/classes/CommonImage.html",[0,0.006,1286,2.286]],["body/classes/CommonImage.html",[0,0.01,2,2.121,3,0.194,4,0.211,5,0.143,8,0.211,9,0.8,17,2.2,20,0.912,23,0.679,26,0.012,27,0.522,28,0.345,29,0.657,43,0.704,44,0.631,59,2.343,71,0.587,79,0.177,84,0.269,89,0.655,94,2.423,99,0.007,100,0.009,101,0.007,106,1.115,147,1.103,209,0.631,220,0.836,238,3.302,309,2.285,326,2.24,354,2.047,584,0.864,642,0.755,795,3.12,907,4.482,908,2.821,1271,2.12,1284,1.728,1286,4.136,1287,3.302,1288,4.35,1289,4.459,1290,5.252,1291,5.252,1292,5.252,1293,5.252,1294,5.252,1295,4.603,1296,5.252,1297,5.252,1298,6.548,1299,5.16,1300,5.16,1301,4.575,1302,5.16,1303,5.16,1304,5.16,1305,5.16,1306,5.16,1307,5.16,1308,5.16,1309,5.16,1310,5.16,1311,3.302,1312,3.96,1313,3.513,1314,3.302,1315,3.513,1316,3.513,1317,3.513,1318,3.513,1319,3.302,1320,3.513,1321,3.513,1322,3.513,1323,3.12,1324,3.768,1325,3.768,1326,3.302,1327,3.768,1328,3.768,1329,3.768,1330,2.579,1331,2.2,1332,3.513,1333,3.12,1334,3.768,1335,3.302,1336,3.768,1337,3.768,1338,3.768,1339,3.513,1340,3.768,1341,3.768,1342,3.513,1343,3.768,1344,3.768,1345,4.575,1346,4.781,1347,4.781,1348,4.781,1349,3.759,1350,3.768,1351,4.781,1352,4.781,1353,3.768,1354,4.781,1355,4.459]],["title/classes/CommonImageProcessingError.html",[0,0.006,1323,2.529]],["body/classes/CommonImageProcessingError.html",[0,0.01,2,2.189,3,0.2,4,0.218,5,0.149,8,0.218,9,0.816,17,2.27,20,0.847,23,0.645,25,0.806,26,0.012,27,0.484,28,0.329,29,0.835,59,1.905,71,0.58,79,0.183,84,0.271,89,0.675,94,1.97,99,0.007,100,0.009,101,0.007,137,3.22,147,1.031,209,0.651,220,1.277,238,3.407,309,2.358,326,2.23,354,2.112,584,0.892,642,0.779,795,3.22,907,4.189,908,2.911,1271,1.569,1284,1.783,1286,4.397,1287,3.407,1288,4.039,1289,3.625,1290,3.888,1291,3.888,1292,3.888,1293,3.888,1294,3.888,1295,3.407,1296,3.888,1297,3.888,1301,4.864,1311,3.407,1312,4.039,1313,3.625,1314,3.407,1315,3.625,1316,3.625,1317,3.625,1318,3.625,1319,3.407,1320,3.625,1321,3.625,1322,3.625,1323,4.039,1324,5.329,1325,5.329,1326,3.407,1327,3.888,1328,3.888,1329,3.888,1330,2.661,1331,2.27,1332,3.625,1333,3.22,1334,3.888,1335,3.407,1336,3.888,1337,3.888,1338,5.588,1339,5.367,1340,3.888,1341,3.888,1342,3.625,1343,3.888,1344,3.888,1345,4.628,1346,4.877,1347,4.877,1348,4.877,1349,3.834,1350,3.888,1351,4.877,1352,4.877,1353,3.888,1354,4.877,1355,4.548,1356,5.324,1357,6.679,1358,5.324,1359,6.679,1360,5.324]],["title/interfaces/CommonImageScaleFactors.html",[584,0.7,1345,2.529]],["body/interfaces/CommonImageScaleFactors.html",[0,0.01,3,0.206,4,0.224,5,0.146,8,0.224,9,0.832,13,0.801,17,2.341,20,0.696,23,0.44,25,0.831,26,0.012,27,0.494,28,0.303,29,0.55,57,0.646,59,1.964,71,0.571,79,0.189,84,0.274,89,0.696,94,2.031,99,0.008,100,0.01,101,0.008,147,1.045,209,0.671,220,0.889,238,3.512,309,2.43,326,2.26,354,2.177,584,0.919,586,2.102,642,0.803,795,3.319,907,4.247,908,3,1271,1.618,1284,1.838,1286,4.045,1287,3.512,1288,4.116,1289,3.737,1290,4.008,1291,4.008,1292,4.008,1293,4.008,1294,4.008,1295,3.512,1296,4.008,1297,4.008,1301,4.474,1311,3.512,1312,4.116,1313,3.737,1314,3.512,1315,3.737,1316,3.737,1317,3.737,1318,3.737,1319,3.512,1320,3.737,1321,3.737,1322,3.737,1323,3.319,1324,4.008,1325,4.008,1326,3.512,1327,4.008,1328,4.008,1329,4.008,1330,2.743,1331,2.341,1332,3.737,1333,3.319,1334,4.008,1335,3.512,1336,4.008,1337,4.008,1338,4.008,1339,3.737,1340,4.008,1341,4.008,1342,3.737,1343,4.008,1344,4.008,1345,4.901,1346,5.807,1347,5.807,1348,5.403,1349,3.907,1350,4.008,1351,4.97,1352,4.97,1353,4.008,1354,4.97,1355,5.038,1361,5.953,1362,5.488]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.006,1349,2.401]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.01,2,2.218,3,0.203,4,0.221,5,0.145,8,0.221,9,0.823,13,0.792,17,2.301,20,0.854,23,0.616,25,1.02,26,0.012,27,0.532,28,0.314,29,0.675,57,0.635,59,1.93,71,0.569,79,0.186,84,0.272,89,0.684,94,1.996,99,0.008,100,0.009,101,0.008,147,1.037,209,0.823,220,0.874,238,3.452,309,2.389,326,2.263,354,2.14,584,0.903,642,0.789,795,3.262,907,4.214,908,2.949,1271,1.59,1284,1.807,1286,4.014,1287,3.452,1288,4.072,1289,3.673,1290,3.939,1291,3.939,1292,3.939,1293,3.939,1294,3.939,1295,3.452,1296,3.939,1297,3.939,1301,4.44,1311,3.452,1312,4.072,1313,3.673,1314,3.452,1315,3.673,1316,3.673,1317,3.673,1318,3.673,1319,3.452,1320,3.673,1321,3.673,1322,3.673,1323,3.262,1324,3.939,1325,3.939,1326,3.452,1327,3.939,1328,3.939,1329,3.939,1330,2.696,1331,2.301,1332,3.673,1333,3.262,1334,3.939,1335,3.452,1336,3.939,1337,3.939,1338,3.939,1339,3.673,1340,3.939,1341,3.939,1342,3.673,1343,3.939,1344,3.939,1345,4.88,1346,5.614,1347,5.614,1348,5.361,1349,4.214,1350,4.917,1351,5.614,1352,4.917,1353,4.917,1354,4.917,1355,4.999,1361,5.889,1363,6.734,1364,5.395,1365,5.395]],["title/interfaces/CommonLogMessage.html",[584,0.7,1366,2.848]],["body/interfaces/CommonLogMessage.html",[0,0.006,3,0.244,4,0.171,5,0.079,8,0.171,9,0.695,15,1.919,17,3.107,23,0.334,26,0.012,27,0.47,28,0.285,29,0.418,50,1.728,71,0.558,75,2.521,78,2.727,79,0.251,81,0.35,84,0.196,85,2.521,89,1.008,99,0.006,100,0.008,101,0.006,102,3.111,104,1.998,107,3.541,108,2.52,109,2.521,111,2.839,112,3.641,115,4.506,117,3.266,119,4.145,121,4.739,122,4.73,130,3.441,132,2.106,139,2.521,140,4.145,144,2.668,146,2.521,147,1.135,149,2.839,150,1.714,154,3.875,160,3.917,164,2.279,165,1.919,169,2.62,173,1.158,184,2.668,191,2.257,195,5.49,196,2.179,215,1.309,220,1.049,275,2.839,300,2.52,336,1.778,352,2.393,360,1.597,379,2.52,385,1.396,396,2.177,402,3.044,416,0.589,448,2.52,584,0.953,586,1.597,631,0.959,637,2.066,642,0.833,668,3.204,728,2.106,733,2.393,744,1.543,748,2.521,749,2.393,755,2.362,775,2.839,821,2.177,837,2.279,860,4.506,864,3.044,900,2.62,915,2.668,924,3.302,945,2.717,1013,3.805,1016,3.875,1110,2.521,1111,2.521,1146,2.668,1161,1.396,1271,1.677,1311,2.668,1312,2.521,1335,4.145,1366,5.24,1367,3.044,1368,3.646,1369,4.169,1370,4.506,1371,4.976,1372,2.839,1373,3.266,1374,2.668,1375,3.302,1376,2.279,1377,4.506,1378,3.646,1379,6.371,1380,3.646,1381,4.976,1382,4.976,1383,6.087,1384,4.976,1385,2.839,1386,4.976,1387,4.976,1388,4.976,1389,3.646,1390,4.976,1391,3.646,1392,4.411,1393,4.56,1394,3.646,1395,3.646,1396,4.976,1397,4.976,1398,5.13,1399,4.506,1400,5.13,1401,2.521,1402,4.506,1403,3.044,1404,3.302,1405,3.646,1406,3.646,1407,3.111,1408,3.646,1409,3.646,1410,3.646,1411,3.646,1412,3.646,1413,3.646,1414,3.646,1415,3.646,1416,2.668,1417,3.646,1418,3.641,1419,3.646,1420,3.646,1421,3.646,1422,3.646,1423,3.646,1424,3.646,1425,3.646,1426,3.646,1427,3.646,1428,3.044,1429,3.044,1430,3.302,1431,4.976,1432,2.668,1433,3.646,1434,3.646,1435,3.646,1436,3.646,1437,3.302,1438,3.646,1439,3.646,1440,3.646,1441,3.646,1442,3.302,1443,3.441,1444,2.393,1445,3.302,1446,3.044,1447,3.044,1448,3.646,1449,3.302,1450,3.646,1451,3.646,1452,4.506,1453,2.668,1454,3.302,1455,3.044,1456,4.506,1457,3.646,1458,3.302,1459,3.302,1460,3.302,1461,3.646,1462,3.302,1463,3.646,1464,4.976,1465,3.302,1466,3.646,1467,3.302,1468,2.668,1469,3.646,1470,3.646,1471,3.646,1472,3.646,1473,3.646,1474,3.646,1475,4.506,1476,3.646,1477,3.646,1478,3.646,1479,3.646,1480,3.646,1481,3.646,1482,3.646,1483,2.839,1484,3.646,1485,3.044,1486,3.646]],["title/injectables/CommonLogger.html",[196,1.602,1374,2.676]],["body/injectables/CommonLogger.html",[0,0.004,3,0.202,4,0.122,5,0.056,8,0.122,9,0.548,13,0.633,15,2.948,17,3.538,20,0.379,23,0.665,25,1.233,26,0.012,27,0.593,28,0.34,29,0.813,30,0.438,43,0.734,44,0.657,45,0.517,50,1.771,57,0.949,65,1.086,71,0.552,75,2.712,78,3.436,79,0.22,81,0.251,84,0.154,85,1.808,89,0.93,99,0.004,100,0.006,101,0.004,102,4.008,104,1.433,106,1.163,107,3.811,108,2.382,109,3.872,110,3.551,111,4.36,112,4.461,113,3.551,114,2.064,115,5.07,116,2.368,117,3.43,119,4.301,121,4.882,122,4.909,123,2.368,124,2.368,125,3.551,126,3.274,128,4.26,129,2.184,130,3.872,131,3.053,132,2.369,133,1.913,134,2.368,135,2.184,136,1.275,137,1.808,138,3.51,139,3.253,140,4.692,142,2.368,143,2.368,144,3.442,145,2.036,146,3.253,147,1.133,148,2.368,149,3.053,150,2.212,151,2.368,152,2.368,153,2.368,154,4.069,156,2.368,158,2.615,160,4.065,164,1.635,165,1.377,169,2.064,173,0.962,184,2.869,191,2.371,195,4.909,196,1.717,198,1.716,215,1.408,220,1.188,275,3.053,300,2.382,336,1.275,352,2.574,360,1.717,379,2.647,385,1.502,396,1.561,402,2.184,416,0.634,448,1.324,584,0.751,631,1.031,637,2.035,642,0.874,668,3.095,728,1.991,733,2.574,744,1.659,748,2.712,749,2.574,755,2.564,775,3.053,821,2.341,837,2.451,860,4.733,864,3.274,900,2.064,915,2.869,924,3.551,945,2.54,1013,3.675,1016,3.053,1110,1.808,1111,1.808,1146,1.913,1161,2.401,1271,1.586,1311,2.869,1312,1.808,1335,4.301,1366,5.23,1367,2.184,1370,2.368,1371,2.615,1372,2.036,1373,2.574,1374,2.869,1375,3.551,1376,2.451,1377,4.26,1378,3.921,1379,6.27,1380,3.921,1381,5.227,1382,5.227,1383,6.27,1384,5.227,1385,2.036,1386,3.921,1387,3.921,1388,5.227,1389,3.921,1390,3.921,1391,3.921,1392,4.746,1393,4.5,1394,2.615,1395,4.705,1396,5.227,1397,3.921,1398,5.07,1399,4.733,1400,4.733,1401,2.712,1402,4.733,1403,3.274,1404,3.551,1405,3.921,1406,3.921,1407,3.267,1408,3.921,1409,3.921,1410,3.921,1411,2.615,1412,2.615,1413,3.921,1414,2.615,1415,2.615,1416,2.869,1417,3.921,1418,3.442,1419,3.921,1420,3.921,1421,3.921,1422,2.615,1423,2.615,1424,2.615,1425,2.615,1426,2.615,1427,3.921,1428,3.274,1429,3.274,1430,3.551,1431,5.227,1432,2.869,1433,3.921,1434,3.921,1435,2.615,1436,2.615,1437,2.368,1438,2.615,1439,4.705,1440,2.615,1441,2.615,1442,2.368,1443,2.712,1444,1.716,1445,2.368,1446,2.184,1447,2.184,1448,2.615,1449,2.368,1450,2.615,1451,2.615,1452,3.551,1453,1.913,1454,2.368,1455,2.184,1456,3.551,1457,2.615,1458,2.368,1459,2.368,1460,2.368,1461,2.615,1462,2.368,1463,2.615,1464,4.705,1465,3.551,1466,3.921,1467,3.551,1468,2.869,1469,3.921,1470,3.921,1471,5.227,1472,2.615,1473,2.615,1474,3.921,1475,4.733,1476,2.615,1477,3.921,1478,3.921,1479,3.921,1480,3.921,1481,2.615,1482,2.615,1483,2.036,1484,2.615,1485,2.184,1486,2.615,1487,4.484,1488,4.484,1489,4.484,1490,4.484,1491,4.484,1492,4.484,1493,4.484,1494,2.99,1495,2.99,1496,2.99,1497,2.99,1498,2.99,1499,2.99,1500,2.99,1501,2.99,1502,2.99,1503,2.99,1504,2.99,1505,2.99,1506,2.99,1507,2.615,1508,2.615,1509,2.615,1510,2.615,1511,2.99,1512,2.615,1513,2.615,1514,2.99,1515,2.99,1516,2.99,1517,2.99,1518,2.99,1519,2.99,1520,2.99,1521,2.99,1522,2.99]],["title/classes/Container.html",[0,0.006,1523,2.529]],["body/classes/Container.html",[0,0.008,2,2.321,3,0.302,4,0.231,5,0.106,8,0.231,9,0.847,13,0.815,17,3.196,23,0.6,25,1.049,26,0.012,27,0.502,28,0.306,29,0.695,57,0.815,59,2.478,65,1.049,71,0.579,74,4.056,79,0.194,83,2.822,84,0.238,89,0.879,99,0.008,100,0.01,101,0.008,106,1.22,150,2.848,162,2.563,236,5.485,305,5.485,364,3.976,483,5.32,562,1.381,563,1.298,584,1.16,602,1.643,684,3.189,763,4.123,764,2.822,1079,4.531,1523,4.725,1524,4.471,1525,6.058,1526,6.058,1527,5.934,1528,6.927,1529,6.553,1530,4.795,1531,5.646,1532,6.058,1533,6.058,1534,5.646,1535,6.058,1536,6.058,1537,5.705,1538,5.646,1539,5.646,1540,5.646,1541,6.058,1542,4.938,1543,4.938,1544,4.938,1545,4.938,1546,4.938,1547,4.938,1548,6.058,1549,4.938]],["title/components/CoreBreadcrumbComponent.html",[313,0.157,513,0.962]],["body/components/CoreBreadcrumbComponent.html",[0,0.006,3,0.175,4,0.19,5,0.115,8,0.19,11,1.241,13,0.719,20,0.867,23,0.49,26,0.012,27,0.496,29,0.613,34,1.777,41,4.84,52,1.1,56,1.45,57,0.546,59,2.187,64,1.092,65,0.702,77,3.696,79,0.16,81,0.39,84,0.21,99,0.006,100,0.009,101,0.006,106,1.002,147,0.655,209,0.747,215,2.147,235,1.322,239,1.802,246,1.002,269,1.034,278,3.696,295,1.1,306,4.463,313,0.257,352,3.508,378,3.341,380,1.002,385,2.047,386,3.341,387,4.84,393,5.345,397,4.463,407,1.092,423,1.723,466,1.067,467,1.17,468,1.135,469,1.17,472,1.893,473,0.912,474,1.328,476,1.202,478,1.202,481,2.142,493,1.1,494,1.59,495,0.679,496,1.891,497,1.207,498,1.207,499,1.002,500,1.207,501,1.034,502,1.207,503,1.034,504,1.207,505,1.067,506,1.207,507,1.067,508,1.207,509,1.067,510,1.207,511,1.067,512,1.207,513,1.671,514,1.934,515,1.207,516,1.034,517,1.207,518,1.034,519,1.207,520,1.067,521,1.207,522,1.207,523,1.067,524,1.207,525,1.034,526,1.207,527,1.067,528,1.779,529,1.067,530,1.002,531,1.034,532,1.59,533,1.034,534,1.207,535,1.067,536,1.207,537,1.067,538,1.207,539,1.002,540,1.207,541,1.067,542,1.207,543,1.067,544,1.17,545,1.207,546,1.034,547,1.034,548,1.207,549,1.034,550,1.207,551,1.034,552,1.207,553,1.067,554,1.207,555,1.067,556,1.207,557,1.067,558,1.207,559,1.034,560,1.207,561,1.067,562,1.135,563,1.067,564,1.034,565,1.207,566,0.884,567,1.034,568,1.207,569,1.034,570,1.207,571,1.034,572,1.207,573,1.034,574,1.207,575,1.034,576,1.207,577,1.034,578,1.207,579,1.034,580,1.207,581,1.034,582,1.17,583,1.207,587,1.859,588,1.859,602,1.723,666,3.508,823,3.696,1432,3.911,1550,5.978,1551,5.413,1552,4.056,1553,5.306,1554,8.024,1555,7.266,1556,6.112,1557,6.112,1558,6.112,1559,6.112,1560,6.112,1561,6.112,1562,4.162,1563,6.112,1564,6.112,1565,6.112,1566,6.112,1567,6.112,1568,6.112,1569,6.112,1570,4.638,1571,4.638]],["title/components/CountryComponent.html",[313,0.157,516,0.932]],["body/components/CountryComponent.html",[0,0.002,3,0.064,4,0.07,5,0.054,8,0.07,9,0.349,10,1.161,11,0.58,13,0.336,20,0.362,23,0.609,25,0.884,26,0.012,27,0.468,28,0.304,29,0.629,30,0.889,33,0.599,37,0.674,43,0.901,44,0.945,45,0.75,50,1.146,52,0.403,56,0.678,57,0.655,64,0.511,65,0.977,71,0.486,79,0.127,81,0.143,82,0.324,84,0.18,87,0.562,89,0.362,99,0.002,100,0.004,101,0.002,106,1.904,114,1.315,147,0.404,173,0.774,209,0.349,213,0.753,220,0.783,235,1.213,246,0.367,269,0.379,295,0.403,313,0.139,319,1.747,380,0.367,382,2.781,383,0.815,391,1.346,400,1.847,407,0.661,416,0.858,423,0.678,466,0.391,467,0.429,468,0.699,469,0.429,473,0.334,474,1.237,476,0.562,478,0.562,493,0.403,494,0.743,495,0.249,496,1.127,497,0.442,498,0.442,499,0.367,500,0.442,501,0.379,502,0.442,503,0.379,504,0.442,505,0.391,506,0.442,507,0.391,508,0.442,509,0.391,510,0.442,511,0.391,512,0.442,513,0.391,514,0.416,515,0.442,516,0.966,517,0.442,518,0.379,519,0.442,520,0.391,521,0.442,522,0.442,523,0.391,524,0.442,525,0.379,526,0.442,527,0.391,528,0.962,529,0.391,530,0.367,531,0.379,532,0.743,533,0.379,534,0.442,535,0.391,536,0.442,537,0.391,538,0.442,539,0.367,540,0.442,541,0.391,542,0.442,543,0.391,544,0.429,545,0.442,546,0.379,547,0.379,548,0.442,549,0.379,550,0.442,551,0.379,552,0.442,553,0.391,554,0.442,555,0.391,556,0.442,557,0.391,558,0.442,559,0.379,560,0.442,561,0.391,562,0.416,563,0.391,564,0.379,565,0.442,566,0.324,567,0.379,568,0.442,569,0.379,570,0.442,571,0.379,572,0.442,573,0.379,574,0.442,575,0.379,576,0.442,577,0.379,578,0.442,579,0.379,580,0.442,581,0.379,582,0.429,583,0.442,584,0.478,587,0.869,588,0.869,593,0.929,595,0.85,596,1.32,600,1.238,602,1.028,603,0.534,608,3.56,609,1.492,610,1.157,611,2.517,627,0.534,631,0.657,637,0.456,639,2.14,642,0.707,667,1.828,673,1.562,674,1.279,675,0.989,676,1.279,677,0.501,752,1.368,778,0.976,782,2.086,785,1.241,801,1.368,802,0.629,803,0.989,804,1.811,805,0.629,806,0.989,807,1.315,808,0.782,809,1.218,878,3.826,901,0.989,903,0.608,904,0.569,905,0.551,906,0.608,933,0.897,945,1.451,948,1.346,964,1.466,965,1.466,983,0.699,1044,1.369,1161,0.569,1162,0.629,1171,2.415,1172,1.93,1173,1.93,1174,1.562,1175,1.637,1177,1.772,1178,1.772,1179,0.929,1180,2.415,1185,1.218,1193,0.976,1195,0.976,1203,0.929,1205,0.976,1207,0.976,1208,0.608,1209,1.022,1210,0.608,1211,1.022,1212,1.022,1213,1.022,1214,0.608,1215,0.608,1216,1.022,1217,1.022,1218,0.608,1219,0.608,1220,0.608,1221,0.608,1222,0.608,1223,1.022,1224,0.989,1225,0.608,1226,1.022,1227,1.022,1228,0.608,1229,1.022,1230,0.608,1231,0.608,1232,0.608,1233,0.608,1234,1.55,1235,0.608,1236,0.608,1237,0.608,1238,0.608,1239,0.608,1240,0.608,1241,0.608,1242,0.608,1243,0.608,1244,0.608,1245,0.608,1246,0.608,1247,0.608,1248,0.608,1249,0.608,1250,0.608,1251,1.022,1252,0.608,1253,0.608,1254,0.608,1255,0.608,1256,0.608,1257,0.608,1258,0.608,1259,0.608,1260,0.608,1261,0.608,1262,0.608,1263,0.608,1264,0.608,1265,1.022,1266,0.608,1267,0.608,1268,0.608,1269,0.608,1270,0.608,1271,0.501,1272,0.608,1273,0.608,1274,0.608,1275,0.608,1276,0.608,1277,0.608,1278,0.608,1279,0.608,1280,1.369,1281,0.849,1282,0.849,1283,0.815,1284,0.569,1285,0.887,1572,1.241,1573,2.499,1574,2.499,1575,2.699,1576,2.857,1577,1.7,1578,1.7,1579,1.7,1580,2.499,1581,1.7,1582,1.7,1583,1.7,1584,1.7,1585,2.857,1586,1.7,1587,1.7,1588,1.7,1589,1.7,1590,1.7,1591,1.7,1592,1.7,1593,1.7,1594,1.7,1595,1.7,1596,1.7,1597,1.7,1598,2.499,1599,6.976,1600,2.499,1601,1.486,1602,1.486,1603,1.486,1604,1.486,1605,6.098,1606,1.486,1607,1.486,1608,1.486,1609,1.486,1610,1.486,1611,1.486,1612,2.499,1613,1.486,1614,1.486,1615,1.486,1616,1.486,1617,1.486,1618,1.486,1619,1.486,1620,1.486,1621,1.486,1622,1.486,1623,1.486,1624,1.486,1625,1.486,1626,1.486,1627,1.486,1628,1.486,1629,1.486,1630,1.486,1631,1.486,1632,1.486,1633,1.486,1634,1.486,1635,1.486,1636,1.486,1637,1.486,1638,1.486,1639,1.486,1640,1.486,1641,1.486,1642,1.486,1643,1.486,1644,1.486,1645,1.486,1646,1.486,1647,1.486,1648,1.486,1649,1.486,1650,1.486,1651,1.486,1652,1.486,1653,1.486,1654,1.486,1655,1.486,1656,1.486,1657,1.486,1658,1.486,1659,2.499,1660,1.486,1661,1.486,1662,1.486,1663,1.486,1664,1.486,1665,1.486,1666,1.486,1667,1.486,1668,1.486,1669,3.164,1670,1.486,1671,1.486,1672,1.486,1673,1.945,1674,1.486,1675,1.486,1676,2.499,1677,1.486,1678,1.486,1679,1.486,1680,1.486,1681,1.486,1682,1.486,1683,1.486,1684,1.486,1685,1.486,1686,1.486,1687,1.486,1688,1.486,1689,1.486,1690,1.486,1691,1.486,1692,1.486,1693,1.486,1694,1.486,1695,1.486,1696,1.346,1697,1.486,1698,1.486,1699,5.897,1700,1.486,1701,1.486,1702,1.486,1703,1.486,1704,1.486,1705,2.499,1706,1.486,1707,1.486,1708,1.486,1709,1.486,1710,1.486,1711,1.486,1712,1.486,1713,1.486,1714,1.486,1715,1.486,1716,2.499,1717,1.486,1718,3.233,1719,1.486,1720,1.486,1721,1.486,1722,1.486,1723,1.486,1724,1.486,1725,1.486,1726,1.486,1727,1.486,1728,1.486,1729,1.486,1730,1.486,1731,1.486,1732,1.486,1733,1.486,1734,1.486,1735,1.486,1736,1.486,1737,1.486,1738,1.486,1739,1.486,1740,1.486,1741,1.486,1742,1.486,1743,1.486,1744,1.486,1745,1.486,1746,1.486,1747,1.486,1748,1.486,1749,1.486,1750,1.486,1751,1.486,1752,1.486,1753,3.789,1754,1.486,1755,1.486,1756,1.486,1757,1.486,1758,1.486,1759,1.486,1760,1.486,1761,1.486,1762,1.486,1763,1.486,1764,1.486,1765,1.486,1766,1.486,1767,1.486,1768,1.486,1769,1.486,1770,1.486,1771,1.486,1772,3.789,1773,1.486,1774,1.486,1775,1.486,1776,1.486,1777,1.486,1778,1.241,1779,1.486,1780,1.486,1781,1.486,1782,1.486,1783,1.486,1784,2.499,1785,1.486,1786,1.486,1787,1.486,1788,1.486,1789,1.346,1790,1.486,1791,1.486,1792,1.486,1793,1.486,1794,1.486,1795,1.486,1796,1.486,1797,1.486,1798,1.486,1799,1.486,1800,1.486,1801,1.486,1802,1.486,1803,1.486,1804,1.486,1805,1.486,1806,1.486,1807,1.486,1808,1.486,1809,1.486,1810,1.486,1811,1.486,1812,1.486,1813,1.486,1814,1.486,1815,1.486,1816,1.486,1817,1.486,1818,1.486,1819,1.486,1820,1.486,1821,1.486,1822,1.486,1823,1.486,1824,1.486,1825,1.486,1826,1.486,1827,1.486,1828,1.486,1829,1.486,1830,1.486,1831,1.486,1832,1.486,1833,1.486,1834,1.486,1835,1.486,1836,1.486,1837,1.486,1838,1.486,1839,1.486,1840,1.486,1841,1.486,1842,1.486,1843,1.486,1844,1.486,1845,1.486,1846,1.486,1847,1.486,1848,1.486,1849,1.486,1850,1.486,1851,1.486,1852,1.486,1853,1.486,1854,1.486,1855,1.486,1856,1.486,1857,1.486,1858,1.486,1859,1.486,1860,2.499,1861,2.499,1862,1.486,1863,1.486,1864,1.486,1865,1.486,1866,1.486,1867,2.499,1868,1.486,1869,1.486,1870,1.486,1871,1.486,1872,1.486,1873,1.486,1874,1.486,1875,1.486,1876,1.486,1877,1.486,1878,1.486,1879,1.486,1880,1.486,1881,1.486,1882,1.486,1883,1.486,1884,1.486,1885,1.486,1886,1.486,1887,1.486,1888,1.486,1889,1.486,1890,1.486,1891,1.486,1892,1.486,1893,1.486,1894,1.486,1895,1.486,1896,1.486,1897,1.486,1898,1.486,1899,1.486,1900,1.486,1901,1.486,1902,1.486,1903,1.486,1904,1.486,1905,1.486,1906,1.486,1907,1.486,1908,1.486,1909,1.486,1910,1.486,1911,1.486,1912,1.486,1913,1.486,1914,1.486,1915,1.486,1916,1.486,1917,2.927,1918,1.486,1919,1.486,1920,1.486,1921,1.486,1922,1.486,1923,1.486,1924,1.486,1925,1.486,1926,1.486,1927,1.486,1928,1.486,1929,1.486,1930,1.486,1931,1.486,1932,1.486,1933,1.486,1934,2.499,1935,1.486,1936,1.486,1937,1.486,1938,1.486,1939,1.486,1940,1.486,1941,1.486,1942,1.486,1943,1.486,1944,1.486,1945,1.486,1946,1.486,1947,1.486,1948,1.486,1949,1.486,1950,1.486,1951,1.486,1952,1.486,1953,1.486,1954,1.486,1955,1.486,1956,1.486,1957,1.486,1958,1.486,1959,1.486,1960,1.486,1961,1.486,1962,1.486,1963,1.486,1964,1.486,1965,1.486,1966,1.486,1967,1.486,1968,1.486,1969,1.486,1970,1.486,1971,1.346,1972,1.486,1973,1.486,1974,1.486,1975,1.486,1976,1.486,1977,1.486,1978,1.486,1979,1.486,1980,1.486,1981,1.486,1982,1.486,1983,1.486,1984,1.486,1985,1.486,1986,1.486,1987,1.486,1988,1.486,1989,1.486,1990,1.486,1991,1.486,1992,1.486,1993,1.486,1994,1.486,1995,1.486,1996,1.486,1997,1.486,1998,1.486,1999,1.486,2000,4.866,2001,1.486,2002,1.486,2003,1.486,2004,1.486,2005,1.486,2006,1.486,2007,1.486,2008,1.486,2009,1.486,2010,1.486,2011,1.486,2012,1.486,2013,1.486,2014,1.486,2015,2.499,2016,1.486,2017,1.486,2018,1.486,2019,1.486,2020,1.486,2021,1.486,2022,1.486,2023,1.486,2024,1.486,2025,1.486,2026,1.486,2027,1.486,2028,1.486,2029,1.486,2030,1.486,2031,1.486,2032,1.486,2033,1.486,2034,1.486,2035,1.486,2036,1.486,2037,1.486,2038,1.486,2039,1.486,2040,1.486,2041,1.486,2042,1.486,2043,1.486,2044,1.486,2045,1.486,2046,1.486,2047,1.486,2048,1.486,2049,1.486,2050,1.486,2051,1.486,2052,1.486,2053,1.486,2054,1.486,2055,1.486,2056,3.789,2057,1.486,2058,1.486,2059,1.486,2060,1.486,2061,2.499,2062,1.486,2063,1.486,2064,1.486,2065,1.486,2066,1.486,2067,1.486,2068,1.486,2069,1.486,2070,1.486,2071,1.486,2072,1.486,2073,1.486,2074,1.486,2075,1.486,2076,1.486,2077,1.486,2078,1.486,2079,1.486,2080,1.486,2081,1.486,2082,2.499,2083,1.486,2084,1.486,2085,1.486,2086,1.486,2087,1.486,2088,1.486,2089,4.225,2090,1.486,2091,1.486,2092,1.486,2093,1.486,2094,1.486,2095,1.486,2096,1.486,2097,1.486,2098,1.486,2099,1.486,2100,1.486,2101,1.486,2102,1.486,2103,1.486,2104,1.486,2105,1.486,2106,1.486,2107,1.486,2108,1.486,2109,1.486,2110,1.486,2111,1.486,2112,1.486,2113,1.486,2114,1.486,2115,1.486,2116,1.486,2117,1.486,2118,1.486,2119,1.486,2120,1.486,2121,1.486,2122,1.486,2123,1.486,2124,1.486,2125,1.486,2126,1.486,2127,1.486,2128,1.486,2129,1.486,2130,1.486,2131,1.486,2132,1.486,2133,1.486,2134,1.486,2135,1.486,2136,2.499,2137,1.486,2138,1.486,2139,1.486,2140,1.486,2141,1.486,2142,1.486,2143,1.486,2144,1.486,2145,1.486,2146,1.486,2147,1.486,2148,1.486,2149,1.486,2150,1.486,2151,1.241,2152,1.486,2153,1.486]],["title/interfaces/CountryList.html",[584,0.7,608,2.676]],["body/interfaces/CountryList.html",[0,0.003,3,0.075,4,0.082,5,0.038,8,0.082,9,0.399,10,0.626,20,0.253,26,0.012,28,0.133,29,0.327,30,0.7,43,0.272,44,0.811,45,0.564,50,0.473,65,0.724,71,0.477,79,0.142,81,0.167,82,0.38,84,0.195,87,0.392,89,0.414,99,0.003,100,0.005,101,0.003,106,1.91,147,0.282,173,0.855,209,0.244,213,0.883,220,0.323,235,0.302,313,0.123,319,0.626,382,2.068,383,0.955,391,1.578,400,0.996,416,0.912,468,0.488,474,0.302,476,0.392,478,0.392,516,0.444,584,0.693,586,0.763,587,0.992,588,0.992,593,1.09,595,0.952,596,1.251,600,1.092,602,0.773,603,0.626,608,3.374,609,1.702,610,1.357,611,2.22,631,0.458,637,0.535,639,2.117,642,0.771,667,2.087,673,1.09,674,0.69,675,1.129,676,0.69,677,0.587,752,1.531,778,1.144,782,2.381,785,1.455,801,0.738,803,1.129,804,1.655,806,1.129,807,0.918,808,0.918,809,0.85,878,4.176,945,1.386,948,1.578,964,0.791,965,0.791,1044,1.563,1171,1.63,1172,1.041,1173,1.041,1175,0.883,1177,0.955,1178,0.955,1180,1.63,1185,0.85,1208,0.713,1209,1.167,1210,0.713,1211,1.167,1212,1.167,1213,1.167,1214,0.713,1215,0.713,1216,1.167,1217,1.167,1218,0.713,1219,0.713,1220,0.713,1221,0.713,1222,0.713,1223,1.167,1224,1.129,1225,0.713,1226,1.167,1227,1.167,1228,0.713,1229,1.167,1230,0.713,1231,0.713,1232,0.713,1233,0.713,1234,1.711,1235,0.713,1236,0.713,1237,0.713,1238,0.713,1239,0.713,1240,0.713,1241,0.713,1242,0.713,1243,0.713,1244,0.713,1245,0.713,1246,0.713,1247,0.713,1248,0.713,1249,0.713,1250,0.713,1251,1.167,1252,0.713,1253,0.713,1254,0.713,1255,0.713,1256,0.713,1257,0.713,1258,0.713,1259,0.713,1260,0.713,1261,0.713,1262,0.713,1263,0.713,1264,0.713,1265,1.167,1266,0.713,1267,0.713,1268,0.713,1269,0.713,1270,0.713,1271,0.587,1272,0.713,1273,0.713,1274,0.713,1275,0.713,1276,0.713,1277,0.713,1278,0.713,1279,0.713,1280,1.563,1281,0.996,1282,0.996,1283,0.955,1284,0.668,1285,1.041,1572,1.455,1573,1.743,1574,1.743,1575,1.455,1580,1.743,1598,3.619,1599,6.999,1600,2.852,1601,1.743,1602,1.743,1603,1.743,1604,1.743,1605,6.354,1606,1.743,1607,1.743,1608,1.743,1609,1.743,1610,1.743,1611,1.743,1612,2.852,1613,1.743,1614,1.743,1615,1.743,1616,1.743,1617,1.743,1618,1.743,1619,1.743,1620,1.743,1621,1.743,1622,1.743,1623,1.743,1624,1.743,1625,1.743,1626,1.743,1627,1.743,1628,1.743,1629,1.743,1630,1.743,1631,1.743,1632,1.743,1633,1.743,1634,1.743,1635,1.743,1636,1.743,1637,1.743,1638,1.743,1639,1.743,1640,1.743,1641,1.743,1642,1.743,1643,1.743,1644,1.743,1645,1.743,1646,1.743,1647,1.743,1648,1.743,1649,1.743,1650,1.743,1651,1.743,1652,1.743,1653,1.743,1654,1.743,1655,1.743,1656,1.743,1657,1.743,1658,1.743,1659,2.852,1660,1.743,1661,1.743,1662,1.743,1663,1.743,1664,1.743,1665,1.743,1666,1.743,1667,1.743,1668,1.743,1669,3.491,1670,1.743,1671,1.743,1672,1.743,1673,2.22,1674,1.743,1675,1.743,1676,2.852,1677,1.743,1678,1.743,1679,1.743,1680,1.743,1681,1.743,1682,1.743,1683,1.743,1684,1.743,1685,1.743,1686,1.743,1687,1.743,1688,1.743,1689,1.743,1690,1.743,1691,1.743,1692,1.743,1693,1.743,1694,1.743,1695,1.743,1696,1.578,1697,1.743,1698,1.743,1699,6.175,1700,1.743,1701,1.743,1702,1.743,1703,1.743,1704,1.743,1705,2.852,1706,1.743,1707,1.743,1708,1.743,1709,1.743,1710,1.743,1711,1.743,1712,1.743,1713,1.743,1714,1.743,1715,1.743,1716,2.852,1717,1.743,1718,3.619,1719,1.743,1720,1.743,1721,1.743,1722,1.743,1723,1.743,1724,1.743,1725,1.743,1726,1.743,1727,1.743,1728,1.743,1729,1.743,1730,1.743,1731,1.743,1732,1.743,1733,1.743,1734,1.743,1735,1.743,1736,1.743,1737,1.743,1738,1.743,1739,1.743,1740,1.743,1741,1.743,1742,1.743,1743,1.743,1744,1.743,1745,1.743,1746,1.743,1747,1.743,1748,1.743,1749,1.743,1750,1.743,1751,1.743,1752,1.743,1753,4.181,1754,1.743,1755,1.743,1756,1.743,1757,1.743,1758,1.743,1759,1.743,1760,1.743,1761,1.743,1762,1.743,1763,1.743,1764,1.743,1765,1.743,1766,1.743,1767,1.743,1768,1.743,1769,1.743,1770,1.743,1771,1.743,1772,4.181,1773,1.743,1774,1.743,1775,1.743,1776,1.743,1777,1.743,1778,1.455,1779,1.743,1780,1.743,1781,1.743,1782,1.743,1783,1.743,1784,2.852,1785,1.743,1786,1.743,1787,1.743,1788,1.743,1789,1.578,1790,1.743,1791,1.743,1792,1.743,1793,1.743,1794,1.743,1795,1.743,1796,1.743,1797,1.743,1798,1.743,1799,1.743,1800,1.743,1801,1.743,1802,1.743,1803,1.743,1804,1.743,1805,1.743,1806,1.743,1807,1.743,1808,1.743,1809,1.743,1810,1.743,1811,1.743,1812,1.743,1813,1.743,1814,1.743,1815,1.743,1816,1.743,1817,1.743,1818,1.743,1819,1.743,1820,1.743,1821,1.743,1822,1.743,1823,1.743,1824,1.743,1825,1.743,1826,1.743,1827,1.743,1828,1.743,1829,1.743,1830,1.743,1831,1.743,1832,1.743,1833,1.743,1834,1.743,1835,1.743,1836,1.743,1837,1.743,1838,1.743,1839,1.743,1840,1.743,1841,1.743,1842,1.743,1843,1.743,1844,1.743,1845,1.743,1846,1.743,1847,1.743,1848,1.743,1849,1.743,1850,1.743,1851,1.743,1852,1.743,1853,1.743,1854,1.743,1855,1.743,1856,1.743,1857,1.743,1858,1.743,1859,1.743,1860,2.852,1861,2.852,1862,1.743,1863,1.743,1864,1.743,1865,1.743,1866,1.743,1867,2.852,1868,1.743,1869,1.743,1870,1.743,1871,1.743,1872,1.743,1873,1.743,1874,1.743,1875,1.743,1876,1.743,1877,1.743,1878,1.743,1879,1.743,1880,1.743,1881,1.743,1882,1.743,1883,1.743,1884,1.743,1885,1.743,1886,1.743,1887,1.743,1888,1.743,1889,1.743,1890,1.743,1891,1.743,1892,1.743,1893,1.743,1894,1.743,1895,1.743,1896,1.743,1897,1.743,1898,1.743,1899,1.743,1900,1.743,1901,1.743,1902,1.743,1903,1.743,1904,1.743,1905,1.743,1906,1.743,1907,1.743,1908,1.743,1909,1.743,1910,1.743,1911,1.743,1912,1.743,1913,1.743,1914,1.743,1915,1.743,1916,1.743,1917,3.277,1918,1.743,1919,1.743,1920,1.743,1921,1.743,1922,1.743,1923,1.743,1924,1.743,1925,1.743,1926,1.743,1927,1.743,1928,1.743,1929,1.743,1930,1.743,1931,1.743,1932,1.743,1933,1.743,1934,2.852,1935,1.743,1936,1.743,1937,1.743,1938,1.743,1939,1.743,1940,1.743,1941,1.743,1942,1.743,1943,1.743,1944,1.743,1945,1.743,1946,1.743,1947,1.743,1948,1.743,1949,1.743,1950,1.743,1951,1.743,1952,1.743,1953,1.743,1954,1.743,1955,1.743,1956,1.743,1957,1.743,1958,1.743,1959,1.743,1960,1.743,1961,1.743,1962,1.743,1963,1.743,1964,1.743,1965,1.743,1966,1.743,1967,1.743,1968,1.743,1969,1.743,1970,1.743,1971,1.578,1972,1.743,1973,1.743,1974,1.743,1975,1.743,1976,1.743,1977,1.743,1978,1.743,1979,1.743,1980,1.743,1981,1.743,1982,1.743,1983,1.743,1984,1.743,1985,1.743,1986,1.743,1987,1.743,1988,1.743,1989,1.743,1990,1.743,1991,1.743,1992,1.743,1993,1.743,1994,1.743,1995,1.743,1996,1.743,1997,1.743,1998,1.743,1999,1.743,2000,5.226,2001,1.743,2002,1.743,2003,1.743,2004,1.743,2005,1.743,2006,1.743,2007,1.743,2008,1.743,2009,1.743,2010,1.743,2011,1.743,2012,1.743,2013,1.743,2014,1.743,2015,2.852,2016,1.743,2017,1.743,2018,1.743,2019,1.743,2020,1.743,2021,1.743,2022,1.743,2023,1.743,2024,1.743,2025,1.743,2026,1.743,2027,1.743,2028,1.743,2029,1.743,2030,1.743,2031,1.743,2032,1.743,2033,1.743,2034,1.743,2035,1.743,2036,1.743,2037,1.743,2038,1.743,2039,1.743,2040,1.743,2041,1.743,2042,1.743,2043,1.743,2044,1.743,2045,1.743,2046,1.743,2047,1.743,2048,1.743,2049,1.743,2050,1.743,2051,1.743,2052,1.743,2053,1.743,2054,1.743,2055,1.743,2056,4.181,2057,1.743,2058,1.743,2059,1.743,2060,1.743,2061,2.852,2062,1.743,2063,1.743,2064,1.743,2065,1.743,2066,1.743,2067,1.743,2068,1.743,2069,1.743,2070,1.743,2071,1.743,2072,1.743,2073,1.743,2074,1.743,2075,1.743,2076,1.743,2077,1.743,2078,1.743,2079,1.743,2080,1.743,2081,1.743,2082,2.852,2083,1.743,2084,1.743,2085,1.743,2086,1.743,2087,1.743,2088,1.743,2089,4.611,2090,1.743,2091,1.743,2092,1.743,2093,1.743,2094,1.743,2095,1.743,2096,1.743,2097,1.743,2098,1.743,2099,1.743,2100,1.743,2101,1.743,2102,1.743,2103,1.743,2104,1.743,2105,1.743,2106,1.743,2107,1.743,2108,1.743,2109,1.743,2110,1.743,2111,1.743,2112,1.743,2113,1.743,2114,1.743,2115,1.743,2116,1.743,2117,1.743,2118,1.743,2119,1.743,2120,1.743,2121,1.743,2122,1.743,2123,1.743,2124,1.743,2125,1.743,2126,1.743,2127,1.743,2128,1.743,2129,1.743,2130,1.743,2131,1.743,2132,1.743,2133,1.743,2134,1.743,2135,1.743,2136,2.852,2137,1.743,2138,1.743,2139,1.743,2140,1.743,2141,1.743,2142,1.743,2143,1.743,2144,1.743,2145,1.743,2146,1.743,2147,1.743,2148,1.743,2149,1.743,2150,1.743,2151,1.455,2152,1.743,2153,1.743]],["title/components/DateComponent.html",[313,0.157,518,0.932]],["body/components/DateComponent.html",[0,0.004,3,0.105,4,0.114,5,0.08,8,0.114,9,0.521,10,1.621,11,1.33,13,0.501,20,0.54,23,0.657,25,0.941,26,0.012,27,0.509,28,0.333,29,0.623,30,0.958,33,0.892,36,2.512,37,2.047,43,1.018,44,1.003,45,0.999,47,1.396,50,1.553,52,0.663,56,1.01,57,0.771,59,1.524,64,0.761,65,1.063,67,1.902,68,1.604,71,0.577,79,0.214,80,2.557,81,0.235,82,0.532,84,0.146,87,0.838,89,0.354,90,1.604,94,1.034,99,0.004,100,0.006,101,0.004,132,1.034,147,0.602,150,1.751,173,1.111,181,1.961,204,1.179,209,0.521,218,1.217,220,1.137,235,1.278,239,1.255,246,0.604,269,0.623,274,2.041,295,0.663,313,0.234,319,1.952,326,1.108,336,1.191,337,2.474,350,2.212,373,1.237,379,1.886,380,0.604,405,1.148,407,0.923,416,1.037,423,1.01,466,0.642,467,0.705,468,0.683,469,0.705,472,1.429,473,0.55,474,1.292,476,0.838,478,0.838,481,1.702,493,0.663,494,1.108,495,0.409,496,1.502,497,0.727,498,0.727,499,0.604,500,0.727,501,0.623,502,0.727,503,0.623,504,0.727,505,0.642,506,0.727,507,0.642,508,0.727,509,0.642,510,0.727,511,0.642,512,0.727,513,0.642,514,0.683,515,0.727,516,0.623,517,0.727,518,1.287,519,0.727,520,0.642,521,0.727,522,0.727,523,0.642,524,0.727,525,0.623,526,0.727,527,0.642,528,1.343,529,0.642,530,0.604,531,0.623,532,1.108,533,0.623,534,0.727,535,0.642,536,0.727,537,0.642,538,0.727,539,0.604,540,0.727,541,0.642,542,0.727,543,0.642,544,0.705,545,0.727,546,0.623,547,0.623,548,0.727,549,0.623,550,0.727,551,0.623,552,0.727,553,0.642,554,0.727,555,0.642,556,0.727,557,0.642,558,0.727,559,0.623,560,0.727,561,0.642,562,0.683,563,0.642,564,0.623,565,0.727,566,0.984,567,0.623,568,0.727,569,0.623,570,0.727,571,0.623,572,0.727,573,0.623,574,0.727,575,0.623,576,0.727,577,0.623,578,0.727,579,0.623,580,0.727,581,0.623,582,0.705,583,0.727,584,0.468,587,1.296,588,1.296,595,0.979,596,1.369,598,1.847,599,1.977,602,1.369,603,0.877,625,1.396,626,1.527,627,1.337,628,1.689,629,1.459,630,1.751,631,0.979,637,1.885,642,0.409,677,0.823,713,2.445,728,2.3,730,2.576,744,1.576,749,1.604,755,2.209,837,2.328,897,1.527,898,1.604,899,1.339,900,2.376,901,1.474,903,1,904,0.936,905,0.906,906,1,922,4.46,933,1.337,946,1.689,1064,2.328,1145,4.973,1148,3.961,1161,0.936,1162,1.034,1185,2.793,1208,1,1209,1.524,1210,1,1211,1.524,1212,1.524,1213,1.524,1214,1,1215,1,1216,1.524,1217,1.524,1218,1,1219,1,1220,1,1221,1,1222,1,1223,1.524,1224,1.474,1225,1,1226,1.524,1227,1.524,1228,1,1229,1.524,1230,1,1231,1,1232,1,1233,1,1234,2.066,1235,1,1236,1,1237,1,1238,1,1239,1,1240,1,1241,1,1242,1,1243,1,1244,1,1245,1,1246,1,1247,1,1248,1,1249,1,1250,1,1251,1.524,1252,1,1253,1,1254,1,1255,1,1256,1,1257,1,1258,1,1259,1,1260,1,1261,1,1262,1,1263,1,1264,1,1265,1.524,1266,1,1267,1,1268,1,1269,1,1270,1,1271,0.823,1272,1,1273,1,1274,1,1275,1,1276,1,1277,1,1278,1,1279,1,1284,2.194,1330,1.396,1331,2.651,1373,2.445,1407,3.933,1416,1.788,2154,2.212,2155,3.725,2156,3.725,2157,4.514,2158,5.435,2159,4.514,2160,4.514,2161,5.435,2162,4.514,2163,5.049,2164,4.514,2165,4.514,2166,4.514,2167,4.514,2168,5.049,2169,3.303,2170,4.514,2171,4.514,2172,4.088,2173,2.794,2174,3.515,2175,3.694,2176,4.259,2177,3.121,2178,2.794,2179,2.794,2180,3.515,2181,2.794,2182,2.794,2183,2.794,2184,5.187,2185,2.794,2186,3.373,2187,2.794,2188,2.794,2189,2.794,2190,2.794,2191,2.445,2192,3.11,2193,2.794,2194,2.794,2195,2.794,2196,4.246,2197,5.187,2198,5.728,2199,2.794,2200,2.794,2201,4.438,2202,2.794,2203,2.794,2204,3.725,2205,2.794,2206,3.11,2207,2.725,2208,3.11,2209,3.373,2210,3.725,2211,3.11,2212,3.11,2213,3.725,2214,3.725,2215,2.794,2216,2.794,2217,2.794,2218,2.794,2219,3.725,2220,2.794,2221,3.725,2222,3.725,2223,3.725,2224,3.725,2225,3.725,2226,3.725,2227,3.725,2228,3.725,2229,3.725,2230,3.725,2231,3.725,2232,2.794,2233,2.794,2234,2.794,2235,3.725,2236,2.794,2237,2.794,2238,2.443,2239,2.212,2240,3.373,2241,3.11,2242,3.11,2243,2.443,2244,3.11,2245,3.11,2246,2.04,2247,2.212,2248,1.527,2249,2.9,2250,2.443,2251,2.212,2252,3.725,2253,2.443,2254,3.725,2255,2.443,2256,3.725,2257,2.443,2258,4.514,2259,2.443,2260,5.187,2261,3.725,2262,4.514,2263,2.443,2264,3.314,2265,2.212,2266,2.443,2267,2.04,2268,1.689,2269,2.212,2270,2.443,2271,2.443,2272,2.443,2273,2.212,2274,4.514,2275,2.04,2276,1.339,2277,2.04,2278,3.725,2279,3.725,2280,3.725,2281,3.725,2282,3.725,2283,3.725,2284,3.725]],["title/interfaces/DateErrorMsg.html",[584,0.7,2180,2.848]],["body/interfaces/DateErrorMsg.html",[0,0.005,3,0.143,4,0.155,5,0.072,8,0.155,9,0.652,10,1.193,11,0.771,20,0.482,26,0.012,28,0.307,29,0.807,30,0.902,36,2.393,43,0.518,44,0.951,45,0.923,47,1.899,50,1.78,59,1.359,65,0.934,67,2.587,68,2.181,71,0.59,79,0.242,80,2.962,81,0.319,82,0.724,84,0.184,87,0.747,89,0.482,90,2.181,94,1.406,99,0.005,100,0.007,101,0.005,106,0.821,132,1.406,147,0.537,150,1.562,173,1.259,181,2.456,204,1.052,209,0.464,218,1.085,220,0.864,235,0.575,239,1.573,274,1.821,313,0.265,319,1.193,326,0.989,336,1.62,337,2.557,350,3.008,373,1.682,379,1.682,405,1.562,416,1.1,472,1.477,474,0.575,476,0.747,478,0.747,481,1.12,518,0.847,566,0.724,584,0.636,586,1.455,587,1.623,588,1.623,595,1.227,596,1.463,598,1.909,599,2.043,602,1.265,603,1.193,625,1.899,626,2.077,627,1.193,628,2.297,629,1.983,630,1.562,631,0.874,637,1.891,642,0.556,677,1.12,713,2.181,728,2.282,730,2.297,744,1.406,749,2.181,755,2,837,2.077,897,2.917,898,3.063,899,2.557,900,3.079,922,4.199,946,2.297,1064,2.077,1145,4.883,1148,4.418,1185,2.63,1208,1.359,1209,1.909,1210,1.359,1211,1.909,1212,1.909,1213,1.909,1214,1.359,1215,1.359,1216,1.909,1217,1.909,1218,1.359,1219,1.359,1220,1.359,1221,1.359,1222,1.359,1223,1.909,1224,1.847,1225,1.359,1226,1.909,1227,1.909,1228,1.359,1229,1.909,1230,1.359,1231,1.359,1232,1.359,1233,1.359,1234,2.393,1235,1.359,1236,1.359,1237,1.359,1238,1.359,1239,1.359,1240,1.359,1241,1.359,1242,1.359,1243,1.359,1244,1.359,1245,1.359,1246,1.359,1247,1.359,1248,1.359,1249,1.359,1250,1.359,1251,1.909,1252,1.359,1253,1.359,1254,1.359,1255,1.359,1256,1.359,1257,1.359,1258,1.359,1259,1.359,1260,1.359,1261,1.359,1262,1.359,1263,1.359,1264,1.359,1265,1.909,1266,1.359,1267,1.359,1268,1.359,1269,1.359,1270,1.359,1271,1.12,1272,1.359,1273,1.359,1274,1.359,1275,1.359,1276,1.359,1277,1.359,1278,1.359,1279,1.359,1284,2.065,1330,1.899,1331,3.004,1373,3.063,1407,3.851,1416,2.431,2154,3.008,2155,3.322,2156,3.322,2157,3.322,2158,5.393,2159,3.322,2160,3.322,2161,5.393,2162,3.322,2163,4.666,2164,3.322,2165,3.322,2166,3.322,2167,3.322,2168,3.322,2169,2.431,2170,3.322,2171,3.322,2172,3.008,2174,2.587,2175,3.414,2177,3.227,2180,4.199,2184,4.883,2186,3.008,2191,2.181,2192,2.774,2196,4.044,2197,4.883,2198,5.393,2201,4.044,2204,3.322,2206,2.774,2207,2.431,2208,2.774,2209,3.008,2210,3.322,2211,2.774,2212,2.774,2213,3.322,2214,3.322,2219,3.322,2221,3.322,2222,3.322,2223,3.322,2224,3.322,2225,3.322,2226,3.322,2227,3.322,2228,3.322,2229,3.322,2230,3.322,2231,3.322,2235,3.322,2238,3.322,2239,3.008,2240,5.579,2241,5.144,2242,5.144,2243,5.849,2244,5.144,2245,5.144,2246,2.774,2247,3.008,2248,2.077,2249,3.633,2250,3.322,2251,3.008,2252,4.666,2253,3.322,2254,4.666,2255,3.322,2256,4.666,2257,3.322,2258,5.393,2259,3.322,2260,5.785,2261,4.666,2262,5.393,2263,3.322,2264,3.063,2265,3.008,2266,3.322,2267,2.774,2268,2.297,2269,3.008,2270,3.322,2271,3.322,2272,3.322,2273,3.008,2274,5.393,2275,2.774,2276,1.821,2277,2.774]],["title/directives/DateFieldFormatDirective.html",[495,0.612,567,0.932]],["body/directives/DateFieldFormatDirective.html",[0,0.008,3,0.229,4,0.248,5,0.114,8,0.248,23,0.58,26,0.012,28,0.248,79,0.209,81,0.51,84,0.209,94,2.248,99,0.009,100,0.01,101,0.009,173,1.294,326,1.581,416,1.093,421,3.865,473,1.195,474,1.096,495,1.059,566,1.158,567,1.614,595,1.665,596,1.834,642,0.889,933,2.273,945,2.59,1175,3.206,2285,6.764,2286,5.312,2287,7.24,2288,7.734,2289,6.331,2290,6.074,2291,5.312,2292,6.074,2293,5.733,2294,6.074,2295,4.81,2296,6.074,2297,6.074,2298,6.074,2299,6.074,2300,6.074,2301,6.074,2302,5.312,2303,8.181,2304,6.074,2305,6.074,2306,7.24,2307,6.074,2308,6.074,2309,6.074]],["title/components/DatepickerComponent.html",[313,0.157,520,0.962]],["body/components/DatepickerComponent.html",[0,0.003,3,0.094,4,0.102,5,0.074,8,0.102,9,0.477,10,1.51,11,0.793,13,0.46,20,0.61,23,0.661,25,1.025,26,0.012,27,0.526,28,0.329,29,0.679,30,0.916,33,0.818,36,1.946,37,0.99,42,1.7,43,1.042,44,0.827,45,0.941,47,1.248,50,1.485,51,1.7,52,0.592,56,1.485,57,0.853,59,1.397,64,0.698,65,1.098,71,0.406,75,1.51,79,0.215,80,1.106,81,0.21,82,0.476,84,0.134,87,0.946,88,3.704,89,0.794,90,1.433,94,2.013,99,0.003,100,0.005,101,0.003,106,0.54,132,0.924,133,3.481,136,2.517,147,0.552,161,3.415,162,2.013,171,1.823,173,0.698,177,2.909,183,1.977,187,1.065,191,0.99,204,1.506,209,0.477,213,1.729,217,1.226,218,1.554,220,1.097,235,1.266,239,1.74,246,0.54,269,0.557,274,2.305,288,4.757,295,0.592,313,0.277,336,1.065,337,1.197,339,2.852,354,1.549,360,1.496,361,2.184,370,1.7,373,2.409,380,0.54,385,0.836,401,3.481,402,2.852,405,2.427,407,0.86,416,1.068,423,1.485,447,2.184,466,0.574,467,0.63,468,0.611,469,0.63,472,1.332,473,0.491,474,1.281,476,0.768,478,0.768,481,1.603,491,4.216,493,0.592,494,1.252,495,0.365,496,1.415,497,0.65,498,0.65,499,0.54,500,0.65,501,0.557,502,0.65,503,0.557,504,0.65,505,0.574,506,0.65,507,0.574,508,0.65,509,0.574,510,0.65,511,0.574,512,0.65,513,0.574,514,0.611,515,0.65,516,0.557,517,0.65,518,0.557,519,0.65,520,1.439,521,0.65,522,0.65,523,0.574,524,0.65,525,0.557,526,0.65,527,0.574,528,1.252,529,0.574,530,0.54,531,0.557,532,1.016,533,0.557,534,0.65,535,0.574,536,0.65,537,0.574,538,0.65,539,0.54,540,0.65,541,0.574,542,0.65,543,0.574,544,0.63,545,0.65,546,0.557,547,0.557,548,0.65,549,0.557,550,0.65,551,0.557,552,0.65,553,0.574,554,0.65,555,0.574,556,0.65,557,0.574,558,0.65,559,0.557,560,0.65,561,0.574,562,0.611,563,0.574,564,0.557,565,0.65,566,0.476,567,0.557,568,0.65,569,0.557,570,0.65,571,0.557,572,0.65,573,0.557,574,0.65,575,0.557,576,0.65,577,0.557,578,0.65,579,0.557,580,0.65,581,0.557,582,0.63,583,0.65,584,0.654,587,1.188,588,1.188,595,0.898,596,1.141,597,3.078,598,2.112,599,1.842,600,1.611,601,2.305,602,1.29,603,0.784,625,1.248,626,2.974,627,1.226,628,1.51,629,1.304,630,1.606,631,0.898,637,1.048,642,0.704,665,1.15,674,1.665,675,0.864,676,1.665,677,0.736,684,1.798,688,2.974,690,5.196,721,2.499,728,2.505,741,3.512,754,1.977,764,2.95,776,2.659,801,1.445,802,1.445,803,0.864,804,1.883,805,1.445,806,1.665,877,1.365,900,1.798,901,1.352,903,0.893,904,0.836,905,0.81,906,0.893,923,1.51,925,1.977,933,1.226,945,0.836,959,1.606,964,1.549,965,1.549,1063,1.823,1080,1.665,1081,2.852,1146,1.598,1161,0.836,1162,0.924,1208,0.893,1209,1.397,1210,0.893,1211,1.397,1212,1.397,1213,1.397,1214,0.893,1215,0.893,1216,1.397,1217,1.397,1218,0.893,1219,0.893,1220,0.893,1221,0.893,1222,0.893,1223,1.397,1224,1.665,1225,0.893,1226,1.397,1227,1.397,1228,0.893,1229,1.397,1230,0.893,1231,0.893,1232,0.893,1233,0.893,1234,1.946,1235,0.893,1236,0.893,1237,0.893,1238,0.893,1239,0.893,1240,0.893,1241,0.893,1242,0.893,1243,0.893,1244,0.893,1245,0.893,1246,0.893,1247,0.893,1248,0.893,1249,0.893,1250,0.893,1251,1.397,1252,0.893,1253,0.893,1254,0.893,1255,0.893,1256,0.893,1257,0.893,1258,0.893,1259,0.893,1260,0.893,1261,0.893,1262,0.893,1263,0.893,1264,0.893,1265,1.397,1266,0.893,1267,0.893,1268,0.893,1269,0.893,1270,0.893,1271,0.736,1272,0.893,1273,0.893,1274,0.893,1275,0.893,1276,0.893,1277,0.893,1278,0.893,1279,0.893,1284,0.836,1295,4.185,1312,2.362,1331,2.517,1370,1.977,1373,2.242,1376,2.135,1407,4.496,1444,1.433,1468,2.499,2169,3.078,2172,3.809,2180,3.275,2186,1.977,2191,3.122,2196,2.362,2201,2.362,2240,1.977,2241,1.823,2242,1.823,2244,1.823,2245,1.823,2246,2.852,2249,2.659,2260,4.307,2264,2.242,2268,2.362,2278,3.415,2279,3.415,2280,3.415,2281,3.415,2282,3.415,2283,3.415,2284,3.415,2310,1.977,2311,6.445,2312,3.905,2313,3.415,2314,6.612,2315,3.905,2316,3.905,2317,3.905,2318,2.499,2319,2.362,2320,3.905,2321,3.905,2322,4.81,2323,6.342,2324,5.179,2325,4.81,2326,5.439,2327,3.905,2328,3.905,2329,3.905,2330,3.415,2331,4.81,2332,4.81,2333,5.439,2334,5.903,2335,5.903,2336,5.903,2337,4.81,2338,3.905,2339,6.259,2340,4.757,2341,2.497,2342,1.872,2343,3.905,2344,4.757,2345,2.135,2346,3.905,2347,2.497,2348,3.415,2349,2.497,2350,2.852,2351,2.497,2352,2.497,2353,4.757,2354,5.439,2355,5.439,2356,7.117,2357,2.497,2358,2.497,2359,2.497,2360,2.497,2361,3.905,2362,3.093,2363,3.905,2364,3.905,2365,2.497,2366,3.905,2367,2.497,2368,3.905,2369,2.497,2370,2.497,2371,3.905,2372,2.497,2373,3.905,2374,2.497,2375,3.905,2376,2.497,2377,4.757,2378,2.497,2379,2.497,2380,3.905,2381,2.497,2382,2.497,2383,2.497,2384,3.905,2385,2.497,2386,2.852,2387,2.497,2388,4.81,2389,2.497,2390,3.905,2391,2.497,2392,2.497,2393,3.905,2394,4.81,2395,3.905,2396,2.497,2397,1.977,2398,2.497,2399,2.184,2400,2.497,2401,2.497,2402,2.497,2403,2.497,2404,2.497,2405,2.497,2406,2.497,2407,2.497,2408,2.497,2409,2.497,2410,6.259,2411,2.497,2412,2.497,2413,2.497,2414,2.497,2415,2.497,2416,2.497,2417,2.497,2418,2.497,2419,2.497,2420,2.497,2421,2.497,2422,2.497,2423,2.497,2424,2.497,2425,3.905,2426,2.497,2427,3.905,2428,2.497,2429,2.497,2430,3.093,2431,4.81,2432,2.497,2433,2.497,2434,4.206,2435,2.497,2436,2.497,2437,2.497,2438,2.184,2439,1.7,2440,2.497,2441,2.497,2442,2.184,2443,2.497,2444,2.497,2445,2.497,2446,3.905,2447,3.093,2448,2.497,2449,2.497,2450,2.497,2451,2.497,2452,2.497,2453,2.497]],["title/directives/DayValidationDirective.html",[495,0.612,569,0.932]],["body/directives/DayValidationDirective.html",[0,0.007,3,0.201,4,0.219,5,0.101,8,0.219,13,0.789,23,0.586,25,0.811,26,0.012,27,0.388,28,0.314,29,0.537,33,1.404,44,0.819,57,0.63,71,0.543,79,0.252,81,0.45,82,1.02,84,0.184,87,1.319,89,0.679,99,0.007,100,0.009,101,0.007,163,2.927,173,1.411,181,3.368,204,1.856,209,0.819,217,2.105,218,1.915,326,1.995,416,1.034,448,2.371,473,1.053,474,1.015,495,0.981,566,1.02,569,1.709,598,2.618,626,2.927,728,2.708,861,3.91,877,2.927,900,3.086,959,2.755,1373,3.847,1407,2.927,2192,3.91,2196,4.871,2201,4.637,2211,4.894,2212,3.91,2248,4.192,2264,4.2,2275,5.342,2276,3.507,2277,5.599,2342,3.212,2397,6.072,2454,6.706,2455,4.682,2456,4.425,2457,4.425,2458,6.702,2459,6.399,2460,7.316,2461,5.354,2462,5.354,2463,3.238,2464,5.354,2465,5.354,2466,4.682,2467,4.053,2468,4.682,2469,7.316,2470,7.895,2471,5.354,2472,5.354,2473,5.354,2474,5.354]],["title/components/DropdownComponent.html",[313,0.157,380,0.904]],["body/components/DropdownComponent.html",[0,0.006,3,0.155,4,0.169,5,0.106,8,0.169,9,0.69,11,1.146,13,0.664,20,0.817,23,0.671,25,0.975,26,0.012,27,0.543,28,0.334,29,0.646,30,1.096,33,1.183,43,1.093,44,0.98,45,0.977,50,1.527,52,0.977,56,1.339,57,0.815,64,1.009,65,1.162,71,0.545,79,0.221,81,0.346,82,0.785,84,0.142,87,1.362,99,0.006,100,0.008,101,0.006,147,0.582,187,2.407,204,1.563,209,0.69,217,1.773,218,1.613,220,1.311,235,1.314,246,0.891,269,0.919,295,0.977,313,0.242,319,2.409,327,4.47,380,1.619,407,1.151,416,1.12,423,1.339,466,0.948,467,1.04,468,1.008,469,1.04,472,1.783,473,0.811,474,1.321,476,1.111,478,1.111,481,2.041,493,0.977,494,1.469,495,0.603,496,1.802,497,1.072,498,1.072,499,0.891,500,1.072,501,0.919,502,1.072,503,0.919,504,1.072,505,0.948,506,1.072,507,0.948,508,1.072,509,0.948,510,1.072,511,0.948,512,1.072,513,0.948,514,1.008,515,1.072,516,0.919,517,1.072,518,0.919,519,1.072,520,0.948,521,1.072,522,1.072,523,0.948,524,1.072,525,0.919,526,1.072,527,0.948,528,1.676,529,0.948,530,0.891,531,0.919,532,1.469,533,0.919,534,1.072,535,0.948,536,1.072,537,0.948,538,1.072,539,0.891,540,1.072,541,0.948,542,1.072,543,0.948,544,1.04,545,1.072,546,0.919,547,0.919,548,1.072,549,0.919,550,1.072,551,0.919,552,1.072,553,0.948,554,1.072,555,0.948,556,1.072,557,0.948,558,1.072,559,0.919,560,1.072,561,0.948,562,1.008,563,0.948,564,0.919,565,1.072,566,0.785,567,0.919,568,1.072,569,0.919,570,1.072,571,0.919,572,1.072,573,0.919,574,1.072,575,0.919,576,1.072,577,0.919,578,1.072,579,0.919,580,1.072,581,0.919,582,1.04,583,1.072,598,2.304,600,2.157,601,3.086,602,1.643,603,1.294,627,1.294,631,1.298,674,2.228,675,1.426,676,2.228,677,1.215,801,2.089,802,2.089,803,1.426,804,2.397,805,2.089,806,1.426,901,1.954,903,1.474,904,1.38,905,1.336,906,1.474,959,2.321,964,2.239,965,2.239,983,2.321,1079,3.894,1161,1.38,1162,1.525,1176,3.218,2324,5.099,2434,3.604,2475,3.604,2476,5.645,2477,5.645,2478,6.439,2479,6.439,2480,6.439,2481,5.631,2482,5.645,2483,4.121,2484,4.121,2485,4.121,2486,4.121,2487,4.121,2488,4.121,2489,4.121,2490,4.121,2491,4.121,2492,4.121,2493,4.121,2494,4.121,2495,4.121,2496,4.121]],["title/directives/DuplicateCheckDirective.html",[495,0.612,571,0.932]],["body/directives/DuplicateCheckDirective.html",[0,0.008,3,0.206,4,0.223,5,0.103,8,0.223,13,0.799,23,0.544,25,0.827,26,0.012,27,0.396,28,0.302,29,0.548,30,0.993,33,1.422,34,2.092,44,0.668,57,0.643,71,0.565,79,0.233,81,0.459,82,1.041,84,0.233,87,1.452,89,1.007,99,0.008,100,0.009,101,0.008,163,2.986,169,2.515,173,0.976,181,3.124,204,1.879,209,0.829,217,2.131,218,1.939,309,2.419,333,5.258,385,1.829,386,2.986,416,0.959,448,3.269,473,1.075,474,1.028,495,0.993,566,1.041,571,1.722,728,2.996,752,2.858,764,3.392,959,2.79,2248,4.036,2342,3.934,2456,4.465,2457,4.465,2463,3.303,2467,4.104,2497,5.847,2498,5.391,2499,4.325,2500,5.847,2501,7.254,2502,5.462,2503,5.512,2504,5.462,2505,4.342,2506,3.719,2507,5.847,2508,5.462,2509,5.462,2510,4.325,2511,3.988,2512,3.988,2513,5.462,2514,5.462]],["title/components/ErrorContainerComponent.html",[313,0.157,523,0.962]],["body/components/ErrorContainerComponent.html",[0,0.007,3,0.193,4,0.21,5,0.123,8,0.21,11,1.325,20,0.91,23,0.523,26,0.012,27,0.52,28,0.21,30,0.955,33,1.367,43,0.7,44,0.627,45,1.129,52,1.217,56,1.548,64,1.166,79,0.177,81,0.431,84,0.177,99,0.007,100,0.009,101,0.007,147,1.144,235,1.329,246,1.109,269,1.144,295,1.217,313,0.27,380,1.109,407,1.166,416,0.922,423,1.548,466,1.18,467,1.295,468,1.255,469,1.295,473,1.01,474,1.334,476,1.284,478,1.284,493,1.217,494,1.698,495,0.751,496,1.965,497,1.335,498,1.335,499,1.109,500,1.335,501,1.144,502,1.335,503,1.144,504,1.335,505,1.18,506,1.335,507,1.18,508,1.335,509,1.18,510,1.335,511,1.18,512,1.335,513,1.18,514,1.255,515,1.335,516,1.144,517,1.335,518,1.144,519,1.335,520,1.18,521,1.335,522,1.335,523,1.736,524,1.335,525,1.144,526,1.335,527,1.18,528,1.867,529,1.18,530,1.109,531,1.144,532,1.698,533,1.144,534,1.335,535,1.18,536,1.335,537,1.18,538,1.335,539,1.109,540,1.335,541,1.18,542,1.335,543,1.18,544,1.295,545,1.335,546,1.144,547,1.144,548,1.335,549,1.144,550,1.335,551,1.144,552,1.335,553,1.18,554,1.335,555,1.18,556,1.335,557,1.18,558,1.335,559,1.144,560,1.335,561,1.18,562,1.255,563,1.18,564,1.144,565,1.335,566,0.978,567,1.144,568,1.335,569,1.144,570,1.335,571,1.144,572,1.335,573,1.144,574,1.335,575,1.144,576,1.335,577,1.144,578,1.335,579,1.144,580,1.335,581,1.144,582,1.295,583,1.335,1523,3.946,2515,6.275,2516,5.682,2517,4.488,2518,6.526,2519,6.526,2520,7.175,2521,6.526]],["title/interfaces/FileUploaderMsg.html",[584,0.7,2522,3.312]],["body/interfaces/FileUploaderMsg.html",[0,0.003,3,0.151,4,0.078,5,0.148,8,0.211,9,0.63,11,0.639,12,4.505,20,0.242,22,2.428,26,0.012,27,0.374,28,0.19,29,0.191,30,0.754,34,1.784,36,1.436,40,2.931,45,1.06,50,1.506,58,1.669,59,2.098,60,1.511,64,0.341,65,0.84,71,0.437,79,0.258,80,0.845,81,0.16,82,0.364,83,0.954,84,0.108,87,1.347,89,0.995,94,2.582,99,0.004,100,0.004,101,0.003,104,0.915,108,1.778,121,2.142,132,1.164,136,0.814,138,1.643,139,1.154,145,2.142,147,1.091,150,0.784,165,1.848,168,1.043,169,0.879,170,4.505,171,1.393,173,1.444,184,1.221,187,0.814,188,2.492,189,1.669,191,1.248,192,1.669,204,0.528,209,0.233,210,1.095,213,0.845,218,0.545,235,0.476,241,2.304,272,1.154,273,1.095,276,1.095,298,1.669,302,1.299,304,1.669,309,1.393,313,0.151,326,1.443,333,1.299,335,0.996,337,2.657,345,1.511,348,1.511,354,1.592,360,0.731,362,1.903,364,1.095,367,2.931,370,3.993,384,1.221,385,1.054,386,1.043,396,0.996,410,1.221,415,1.393,416,0.924,419,1.511,422,1.154,423,1.222,467,0.481,468,0.467,472,0.871,473,0.79,474,0.289,476,0.375,478,0.375,481,0.562,488,2.297,491,1.043,492,0.954,525,0.425,584,0.32,586,0.731,587,0.957,588,0.957,595,0.923,596,1.222,597,2.569,598,1.126,599,1.784,602,0.746,603,0.599,625,0.954,626,1.043,629,1.643,630,0.784,631,0.439,642,1.052,650,2.428,651,1.511,659,1.221,665,0.879,668,0.879,677,0.562,683,1.299,684,1.448,721,1.221,730,1.903,737,1.643,742,1.393,752,2.17,755,2.059,764,0.954,776,1.299,778,1.095,794,2.428,821,0.996,828,1.393,837,1.043,900,1.448,904,0.639,905,1.302,907,1.095,913,1.508,937,1.511,945,2.191,946,3.706,953,2.297,968,1.221,1013,1.72,1037,2.297,1050,1.299,1055,1.669,1080,2.501,1088,1.393,1146,2.013,1187,1.221,1208,0.683,1209,1.126,1210,0.683,1211,1.126,1212,1.126,1213,1.126,1214,0.683,1215,0.683,1216,1.126,1217,1.126,1218,0.683,1219,0.683,1220,0.683,1221,0.683,1222,0.683,1223,1.126,1224,1.089,1225,0.683,1226,1.126,1227,1.126,1228,0.683,1229,1.126,1230,0.683,1231,0.683,1232,0.683,1233,0.683,1234,1.666,1235,0.683,1236,0.683,1237,0.683,1238,0.683,1239,0.683,1240,0.683,1241,0.683,1242,0.683,1243,0.683,1244,0.683,1245,0.683,1246,0.683,1247,0.683,1248,0.683,1249,0.683,1250,0.683,1251,1.126,1252,0.683,1253,0.683,1254,0.683,1255,0.683,1256,0.683,1257,0.683,1258,0.683,1259,0.683,1260,0.683,1261,0.683,1262,0.683,1263,0.683,1264,0.683,1265,1.126,1266,0.683,1267,0.683,1268,0.683,1269,0.683,1270,0.683,1271,1.183,1272,0.683,1273,0.683,1274,0.683,1275,0.683,1276,0.683,1277,0.683,1278,0.683,1279,0.683,1280,1.924,1284,1.725,1286,3.814,1288,4.989,1289,2.733,1295,4.291,1301,1.903,1314,1.221,1319,1.221,1323,3.353,1326,1.221,1331,0.814,1332,1.299,1339,2.142,1342,3.171,1345,1.903,1349,1.095,1355,1.299,1392,3.993,1399,2.492,1400,2.492,1401,2.816,1416,3.548,1443,1.903,1444,2.304,1446,1.393,1447,1.393,1453,1.221,1468,1.221,1789,1.511,1971,1.511,2169,1.221,2174,1.299,2175,2.013,2191,1.806,2197,2.492,2206,2.297,2208,2.931,2246,1.393,2267,1.393,2268,1.154,2276,0.915,2293,1.511,2319,1.154,2342,0.915,2377,2.752,2430,1.511,2522,3.179,2523,1.669,2524,1.511,2525,2.752,2526,1.908,2527,3.146,2528,1.908,2529,1.511,2530,4.014,2531,3.688,2532,2.931,2533,1.908,2534,3.511,2535,2.569,2536,2.733,2537,3.146,2538,3.146,2539,1.908,2540,3.146,2541,1.669,2542,3.146,2543,1.908,2544,3.146,2545,1.908,2546,1.908,2547,1.908,2548,1.908,2549,1.908,2550,1.908,2551,1.154,2552,1.908,2553,1.908,2554,1.908,2555,1.908,2556,3.511,2557,1.908,2558,4.505,2559,3.179,2560,1.908,2561,3.146,2562,2.752,2563,3.146,2564,1.908,2565,3.146,2566,1.221,2567,1.511,2568,1.669,2569,1.221,2570,1.511,2571,1.908,2572,1.908,2573,1.908,2574,4.014,2575,1.908,2576,1.908,2577,1.908,2578,1.908,2579,1.908,2580,1.908,2581,1.908,2582,1.908,2583,1.908,2584,1.908,2585,1.908,2586,1.908,2587,4.073,2588,2.931,2589,1.908,2590,1.908,2591,1.669,2592,1.299,2593,4.014,2594,1.908,2595,1.908,2596,6.976,2597,1.908,2598,1.908,2599,1.669,2600,1.908,2601,1.908,2602,1.908,2603,1.669,2604,2.492,2605,1.908,2606,4.014,2607,1.908,2608,1.908,2609,1.669,2610,1.908,2611,1.908,2612,1.908,2613,1.908,2614,3.146,2615,1.908,2616,1.908,2617,1.908,2618,1.908,2619,1.908,2620,3.146,2621,1.908,2622,1.908,2623,4.014,2624,4.014,2625,1.908,2626,3.146,2627,1.669,2628,1.908,2629,2.752,2630,1.908,2631,1.908,2632,1.908,2633,1.908,2634,1.908,2635,1.908,2636,4.014,2637,3.146,2638,3.146,2639,1.908,2640,4.014,2641,1.669,2642,1.908,2643,1.669,2644,2.752,2645,3.146,2646,3.146,2647,1.908,2648,1.908,2649,1.669,2650,3.146,2651,1.908,2652,1.908,2653,3.511,2654,1.908,2655,1.299,2656,3.146,2657,1.669,2658,2.931,2659,1.154,2660,4.08,2661,3.511,2662,1.669,2663,1.511,2664,1.908,2665,1.908,2666,1.511,2667,1.908,2668,4.657,2669,1.299,2670,3.146,2671,2.752,2672,1.908,2673,1.299,2674,1.908,2675,4.014,2676,4.048,2677,4.849,2678,4.657,2679,1.908,2680,1.908,2681,1.393,2682,1.908,2683,1.908,2684,1.908,2685,1.393,2686,1.908,2687,1.908,2688,3.146,2689,1.908,2690,1.908,2691,1.908,2692,3.146,2693,1.908,2694,1.908,2695,1.908,2696,1.908,2697,1.393,2698,1.908,2699,4.014,2700,3.146,2701,3.4,2702,1.669,2703,1.669,2704,5.863,2705,1.908,2706,1.299,2707,1.908,2708,1.908,2709,1.511,2710,1.908,2711,1.908,2712,1.669,2713,1.908,2714,3.146,2715,1.908,2716,1.908,2717,1.908,2718,2.931,2719,1.908,2720,1.669,2721,1.908,2722,1.669,2723,1.393,2724,1.908,2725,1.908,2726,1.908,2727,1.908,2728,1.511,2729,1.669,2730,1.908,2731,3.146,2732,4.014,2733,1.908,2734,1.908,2735,1.908,2736,1.908,2737,1.908,2738,1.908,2739,1.908,2740,1.908,2741,4.014,2742,1.908,2743,1.908,2744,1.908,2745,1.908,2746,1.908,2747,1.908,2748,1.908,2749,1.908,2750,1.908,2751,1.908,2752,2.297,2753,3.146,2754,3.146,2755,1.908,2756,1.908,2757,7.188,2758,5.544,2759,3.146,2760,4.014,2761,3.146,2762,5.152,2763,1.669,2764,1.908,2765,1.908,2766,1.908,2767,3.146,2768,4.014,2769,1.908,2770,1.908,2771,1.908,2772,4.073,2773,5.152,2774,1.908,2775,2.492,2776,5.863,2777,1.908,2778,1.393,2779,2.013,2780,1.511,2781,1.511,2782,4.657,2783,1.908,2784,1.908,2785,5.152,2786,1.908,2787,1.908,2788,1.908,2789,1.908,2790,1.908,2791,1.908,2792,1.908,2793,1.908,2794,3.146,2795,1.908,2796,1.908,2797,1.908,2798,3.146,2799,3.146,2800,4.014,2801,1.908,2802,3.146,2803,1.908,2804,1.908,2805,1.669,2806,1.908,2807,1.908,2808,1.908,2809,1.908,2810,1.908,2811,1.908,2812,1.908,2813,1.908,2814,4.657,2815,1.908,2816,3.146,2817,1.908,2818,1.669,2819,1.511,2820,1.908,2821,3.146,2822,1.908,2823,1.908,2824,4.657,2825,1.908,2826,1.908,2827,6.351,2828,1.908,2829,1.908,2830,2.752,2831,3.146,2832,1.908,2833,1.908,2834,4.014,2835,1.908,2836,5.152,2837,4.014,2838,4.014,2839,5.152,2840,1.908,2841,2.752,2842,1.908,2843,1.908,2844,1.393,2845,1.511,2846,1.908,2847,1.908,2848,1.393,2849,1.908,2850,1.908,2851,1.908,2852,3.146,2853,4.657,2854,4.657,2855,1.908,2856,5.544,2857,1.908,2858,1.908,2859,1.669,2860,1.669,2861,1.908,2862,1.908,2863,3.146,2864,1.908,2865,3.146,2866,1.908,2867,1.908,2868,1.908,2869,3.146,2870,2.752,2871,1.908,2872,1.908,2873,1.908,2874,1.908,2875,1.908,2876,1.908,2877,1.908,2878,1.908,2879,1.908,2880,4.657,2881,1.908,2882,1.511,2883,1.908,2884,4.657,2885,3.146,2886,4.014,2887,4.657,2888,1.908,2889,1.908,2890,1.908,2891,1.908,2892,1.908,2893,1.908,2894,1.908,2895,1.908,2896,1.908,2897,1.908,2898,3.146,2899,4.014,2900,3.146,2901,1.908,2902,3.146,2903,1.908,2904,1.908,2905,1.908,2906,1.908,2907,1.908,2908,1.908,2909,4.014,2910,1.511,2911,1.908,2912,1.908,2913,1.908,2914,1.908,2915,1.221,2916,5.152,2917,4.657,2918,1.908,2919,1.908,2920,2.752,2921,1.908,2922,1.908,2923,1.908,2924,1.908,2925,1.908,2926,1.908,2927,1.908,2928,1.908,2929,1.908,2930,1.908,2931,1.908,2932,1.908,2933,1.908,2934,1.908,2935,1.908,2936,1.908,2937,1.908,2938,1.908,2939,3.146,2940,1.908,2941,1.908,2942,1.908,2943,3.146,2944,3.146,2945,4.657,2946,5.152,2947,1.669,2948,1.511,2949,1.908,2950,1.669,2951,1.908,2952,3.146,2953,1.908,2954,1.908,2955,1.908,2956,1.908,2957,1.908,2958,1.908,2959,1.908,2960,1.908,2961,1.908,2962,1.908,2963,4.014,2964,3.146,2965,1.908,2966,3.146,2967,1.908,2968,1.908,2969,1.908,2970,3.146,2971,1.908,2972,1.908,2973,1.908,2974,4.657,2975,1.908,2976,1.908,2977,1.908,2978,3.146,2979,1.908,2980,1.908,2981,1.908,2982,1.908,2983,1.908,2984,1.908,2985,1.908,2986,1.908,2987,1.511,2988,1.908,2989,1.908,2990,1.908,2991,1.908,2992,3.146,2993,1.908,2994,1.908,2995,1.908,2996,1.908,2997,1.908,2998,1.908,2999,1.908,3000,1.908,3001,1.908,3002,1.908,3003,3.146,3004,3.146,3005,3.146,3006,1.908,3007,1.908,3008,3.146,3009,1.908,3010,1.908,3011,1.908,3012,1.908,3013,1.908,3014,1.908,3015,1.908,3016,1.908,3017,1.511,3018,1.908,3019,1.908,3020,1.908,3021,1.908,3022,1.908,3023,1.908,3024,1.908,3025,1.908,3026,1.908,3027,1.908,3028,1.908,3029,1.908,3030,1.669,3031,1.908,3032,1.908,3033,3.146,3034,3.146,3035,1.908,3036,1.908,3037,1.908,3038,1.908,3039,1.908]],["title/components/FormActionBarComponent.html",[313,0.157,527,0.962]],["body/components/FormActionBarComponent.html",[0,0.006,3,0.156,4,0.169,5,0.107,8,0.169,11,1.587,13,0.666,14,5.109,16,3.621,20,0.818,23,0.627,25,0.626,26,0.012,27,0.503,28,0.297,29,0.415,30,1.124,33,1.185,36,2.308,43,0.946,44,0.848,45,1.116,52,2.03,53,3.248,56,1.342,57,0.666,64,1.012,65,0.626,71,0.389,79,0.195,81,0.348,82,0.788,84,0.142,87,1.365,89,0.525,99,0.006,100,0.008,101,0.006,147,0.8,204,1.567,209,0.692,218,1.617,235,1.314,246,0.894,269,0.922,295,0.981,313,0.243,380,0.894,407,1.012,416,1.026,423,1.342,466,0.951,467,1.044,468,1.012,469,1.044,472,1.786,473,0.814,474,1.322,476,1.113,478,1.113,481,2.044,493,0.981,494,1.473,495,0.605,496,1.805,497,1.076,498,1.076,499,0.894,500,1.076,501,0.922,502,1.076,503,0.922,504,1.076,505,0.951,506,1.076,507,0.951,508,1.076,509,0.951,510,1.076,511,0.951,512,1.076,513,0.951,514,1.012,515,1.076,516,0.922,517,1.076,518,0.922,519,1.076,520,0.951,521,1.076,522,1.076,523,0.951,524,1.076,525,0.922,526,1.076,527,1.595,528,1.679,529,0.951,530,0.894,531,0.922,532,1.473,533,0.922,534,1.076,535,0.951,536,1.076,537,0.951,538,1.076,539,0.894,540,1.076,541,0.951,542,1.076,543,0.951,544,1.044,545,1.076,546,0.922,547,0.922,548,1.076,549,0.922,550,1.076,551,0.922,552,1.076,553,0.951,554,1.076,555,0.951,556,1.076,557,0.951,558,1.076,559,0.922,560,1.076,561,0.951,562,1.012,563,0.951,564,0.922,565,1.076,566,0.788,567,0.922,568,1.076,569,0.922,570,1.076,571,0.922,572,1.076,573,0.922,574,1.076,575,0.922,576,1.076,577,0.922,578,1.076,579,0.922,580,1.076,581,0.922,582,1.044,583,1.076,587,1.721,588,1.721,595,1.301,596,1.645,598,2.308,599,2.471,630,2.326,642,0.605,931,4.949,933,1.777,934,5.109,943,4.949,945,1.385,949,3.617,1208,1.48,1209,2.025,1210,1.48,1211,2.025,1212,2.025,1213,2.025,1214,1.48,1215,1.48,1216,2.025,1217,2.025,1218,1.48,1219,1.48,1220,1.48,1221,1.48,1222,1.48,1223,2.025,1224,1.959,1225,1.48,1226,2.025,1227,2.025,1228,1.48,1229,2.025,1230,1.48,1231,1.48,1232,1.48,1233,1.48,1234,2.482,1235,1.48,1236,1.48,1237,1.48,1238,1.48,1239,1.48,1240,1.48,1241,1.48,1242,1.48,1243,1.48,1244,1.48,1245,1.48,1246,1.48,1247,1.48,1248,1.48,1249,1.48,1250,1.48,1251,2.025,1252,1.48,1253,1.48,1254,1.48,1255,1.48,1256,1.48,1257,1.48,1258,1.48,1259,1.48,1260,1.48,1261,1.48,1262,1.48,1263,1.48,1264,1.48,1265,2.025,1266,1.48,1267,1.48,1268,1.48,1269,1.48,1270,1.48,1271,1.219,1272,1.48,1273,1.48,1274,1.48,1275,1.48,1276,1.48,1277,1.48,1278,1.48,1279,1.48,3040,6.28,3041,5.791,3042,3.02,3043,4.481,3044,4.481,3045,5.642,3046,5.642,3047,6.353,3048,5.659,3049,4.136,3050,4.136,3051,4.136,3052,4.136,3053,3.617,3054,3.617,3055,4.136,3056,4.136,3057,4.136]],["title/components/FormSubmitBarComponent.html",[313,0.157,529,0.962]],["body/components/FormSubmitBarComponent.html",[0,0.005,2,2.226,3,0.146,4,0.159,5,0.102,8,0.159,11,1.663,13,0.637,14,4.939,16,3.464,20,0.791,23,0.617,26,0.012,27,0.452,28,0.315,30,1.126,33,1.134,36,2.231,43,0.968,44,0.868,45,1.168,52,0.92,53,3.108,56,1.284,57,0.456,64,1.314,65,0.587,71,0.372,79,0.186,81,0.326,82,0.739,84,0.133,87,1.328,99,0.005,100,0.008,101,0.005,106,0.838,136,2.309,147,0.765,162,2.004,187,2.309,204,1.499,209,0.662,210,3.108,218,1.547,235,1.309,246,0.838,269,1.898,295,0.92,297,3.953,306,4.928,313,0.267,380,0.838,385,1.813,386,2.96,407,0.968,416,1.039,423,1.284,466,0.892,467,0.979,468,0.949,469,0.979,472,1.727,473,0.763,474,1.317,476,1.065,478,1.065,481,1.989,493,0.92,494,1.409,495,0.568,496,1.756,497,1.009,498,1.009,499,0.838,500,1.009,501,0.865,502,1.009,503,0.865,504,1.009,505,0.892,506,1.009,507,0.892,508,1.009,509,0.892,510,1.009,511,0.892,512,1.009,513,0.892,514,0.949,515,1.009,516,0.865,517,1.009,518,0.865,519,1.009,520,0.892,521,1.009,522,1.009,523,0.892,524,1.009,525,0.865,526,1.009,527,0.892,528,1.623,529,1.552,530,0.838,531,1.39,532,1.409,533,0.865,534,1.009,535,0.892,536,1.009,537,0.892,538,1.009,539,0.838,540,1.009,541,0.892,542,1.009,543,0.892,544,0.979,545,1.009,546,0.865,547,0.865,548,1.009,549,0.865,550,1.009,551,0.865,552,1.009,553,0.892,554,1.009,555,0.892,556,1.009,557,0.892,558,1.009,559,0.865,560,1.009,561,0.892,562,0.949,563,0.892,564,0.865,565,1.009,566,0.739,567,0.865,568,1.009,569,0.865,570,1.009,571,0.865,572,1.009,573,0.865,574,1.009,575,0.865,576,1.009,577,0.865,578,1.009,579,0.865,580,1.009,581,0.865,582,0.979,583,1.009,587,1.647,588,1.647,595,1.245,596,1.601,598,2.231,599,2.389,630,2.226,642,0.568,688,2.96,698,2.96,744,2.004,823,3.274,933,1.7,934,4.939,1208,1.388,1209,1.937,1210,1.388,1211,1.937,1212,1.937,1213,1.937,1214,1.388,1215,1.388,1216,1.937,1217,1.937,1218,1.388,1219,1.388,1220,1.388,1221,1.388,1222,1.388,1223,1.937,1224,1.874,1225,1.388,1226,1.937,1227,1.937,1228,1.388,1229,1.937,1230,1.388,1231,1.388,1232,1.388,1233,1.388,1234,2.415,1235,1.388,1236,1.388,1237,1.388,1238,1.388,1239,1.388,1240,1.388,1241,1.388,1242,1.388,1243,1.388,1244,1.388,1245,1.388,1246,1.388,1247,1.388,1248,1.388,1249,1.388,1250,1.388,1251,1.937,1252,1.388,1253,1.388,1254,1.388,1255,1.388,1256,1.388,1257,1.388,1258,1.388,1259,1.388,1260,1.388,1261,1.388,1262,1.388,1263,1.388,1264,1.388,1265,1.937,1266,1.388,1267,1.388,1268,1.388,1269,1.388,1270,1.388,1271,1.143,1272,1.388,1273,1.388,1274,1.388,1275,1.388,1276,1.388,1277,1.388,1278,1.388,1279,1.388,1562,3.686,2345,2.96,2676,3.953,3040,6.193,3041,5.71,3042,2.833,3043,4.287,3044,4.287,3045,5.454,3046,5.454,3047,6.209,3053,3.393,3058,6.749,3059,4.287,3060,4.735,3061,5.414,3062,5.414,3063,5.414,3064,5.414,3065,6.236,3066,5.414,3067,3.879,3068,3.879,3069,4.735,3070,3.464,3071,5.345,3072,6.749,3073,5.414,3074,5.414,3075,4.287,3076,5.414,3077,3.879,3078,3.879,3079,3.879]],["title/components/FullNameComponent.html",[313,0.157,530,0.904]],["body/components/FullNameComponent.html",[0,0.005,3,0.123,4,0.134,5,0.09,8,0.134,9,0.587,10,1.784,11,0.975,13,0.565,20,0.721,23,0.665,25,0.86,26,0.012,27,0.586,28,0.334,29,0.57,30,0.915,33,1.006,34,1.839,36,1.174,43,1.056,44,0.982,45,0.831,50,1.747,52,0.778,56,1.139,57,0.736,64,0.858,65,1.115,71,0.569,79,0.229,80,1.452,81,0.276,82,0.625,84,0.195,87,0.945,99,0.005,100,0.007,101,0.005,106,0.709,147,0.463,168,1.793,204,1.33,209,0.587,213,2.126,215,1.508,217,1.508,218,1.372,220,1.291,235,1.294,246,1.228,269,0.731,295,0.778,313,0.25,335,3.264,354,1.905,379,2.126,380,0.709,385,1.608,407,1.015,416,1.015,421,3.125,423,1.139,466,0.754,467,0.828,468,0.802,469,0.828,472,1.573,473,0.645,474,1.305,476,0.945,478,0.945,481,1.843,493,0.778,494,1.25,495,0.48,496,1.627,497,0.854,498,0.854,499,0.709,500,0.854,501,0.731,502,0.854,503,0.731,504,0.854,505,0.754,506,0.854,507,0.754,508,0.854,509,0.754,510,0.854,511,0.754,512,0.854,513,0.754,514,0.802,515,0.854,516,0.731,517,0.854,518,0.731,519,0.854,520,0.754,521,0.854,522,0.854,523,0.754,524,0.854,525,0.731,526,0.854,527,0.754,528,1.478,529,0.754,530,1.592,531,1.601,532,1.25,533,0.731,534,0.854,535,0.754,536,0.854,537,0.754,538,0.854,539,0.709,540,0.854,541,0.754,542,0.854,543,0.754,544,0.828,545,0.854,546,0.731,547,0.731,548,0.854,549,0.731,550,0.854,551,0.731,552,0.854,553,0.754,554,0.854,555,0.754,556,0.854,557,0.754,558,0.854,559,0.731,560,0.854,561,0.754,562,0.802,563,0.754,564,0.731,565,0.854,566,0.625,567,0.731,568,0.854,569,0.731,570,0.854,571,0.731,572,0.854,573,0.731,574,0.854,575,0.731,576,0.854,577,0.731,578,0.854,579,0.731,580,0.854,581,0.731,582,0.828,583,0.854,584,0.549,595,1.104,596,1.347,598,2.032,599,1.256,600,1.903,601,2.723,602,1.483,603,1.03,627,1.03,631,1.104,642,0.48,674,1.966,675,1.135,676,1.966,677,0.967,698,2.625,703,4.257,755,2.254,801,1.777,802,1.777,803,1.135,804,2.164,805,1.777,806,2.303,847,3.27,901,1.662,903,1.174,904,1.099,905,1.064,906,1.174,933,1.508,959,1.974,964,1.905,965,1.905,968,3.635,983,1.974,1050,3.27,1120,3.27,1161,1.099,1162,1.214,1330,1.639,2175,2.099,2551,4.204,2658,3.506,3070,3.073,3080,6.577,3081,6.064,3082,2.597,3083,4.565,3084,4.199,3085,3.803,3086,3.803,3087,3.803,3088,3.868,3089,4.498,3090,4.498,3091,4.498,3092,4.968,3093,5.27,3094,4.148,3095,6.281,3096,6.281,3097,6.281,3098,4.968,3099,4.802,3100,3.28,3101,3.28,3102,3.28,3103,3.28,3104,3.28,3105,3.28,3106,3.28,3107,3.28,3108,3.28,3109,3.28,3110,3.28,3111,3.28,3112,4.148,3113,3.28,3114,3.28,3115,3.28,3116,3.28,3117,4.565,3118,3.803,3119,3.28,3120,3.803,3121,3.073,3122,4.199,3123,3.27,3124,4.199,3125,4.199,3126,4.199,3127,4.199,3128,3.28,3129,3.28,3130,2.868,3131,2.597,3132,4.199,3133,2.597,3134,4.968,3135,2.597,3136,4.968,3137,2.597,3138,4.968,3139,2.395,3140,2.395,3141,2.868,3142,2.868,3143,2.868,3144,2.868,3145,2.868,3146,2.868,3147,2.868,3148,4.968,3149,4.968,3150,2.868,3151,2.868,3152,6.08,3153,6.952]],["title/interfaces/FullNameErrorMsg.html",[584,0.7,3112,3.054]],["body/interfaces/FullNameErrorMsg.html",[0,0.007,3,0.182,4,0.198,5,0.091,8,0.198,9,0.768,10,1.52,20,0.614,26,0.012,27,0.555,28,0.257,29,0.741,30,0.919,34,1.854,36,1.732,43,0.66,44,0.903,45,0.837,50,1.92,65,1.119,71,0.583,79,0.263,80,2.143,81,0.407,82,0.922,84,0.24,87,0.952,99,0.007,100,0.009,101,0.007,168,2.646,204,1.34,209,0.591,213,2.143,215,1.52,217,1.52,218,1.382,220,1.197,235,0.733,246,1.046,313,0.263,335,3.281,354,1.92,379,2.143,385,1.621,416,1.129,421,3.141,472,1.74,474,0.733,476,0.952,478,0.952,481,1.426,530,1.508,531,1.556,584,0.81,586,1.854,595,1.445,596,1.49,598,2.248,599,1.854,600,2.105,601,3.012,602,1.49,603,1.52,631,1.113,642,0.708,674,1.675,675,1.675,676,1.675,677,1.426,698,2.646,703,4.279,755,2.038,802,1.791,803,1.675,804,2.175,805,1.791,806,2.649,847,3.295,959,1.99,968,3.097,983,1.99,1050,3.295,1120,3.295,1330,2.419,2175,3.097,2551,4.22,2658,3.534,3070,3.097,3080,3.832,3081,3.534,3082,3.832,3083,4.589,3084,4.232,3085,3.832,3086,3.832,3087,3.832,3088,3.295,3089,3.832,3090,3.832,3091,3.832,3092,4.232,3093,6.213,3094,3.534,3095,4.232,3096,4.232,3097,4.232,3098,4.232,3112,5.096,3117,4.589,3118,3.832,3120,3.832,3121,3.097,3122,4.232,3123,3.295,3124,4.232,3125,4.232,3126,4.232,3127,4.232,3130,4.232,3131,3.832,3132,5.496,3133,3.832,3134,6.103,3135,3.832,3136,6.103,3137,3.832,3138,6.103,3139,3.534,3140,3.534,3141,4.232,3142,4.232,3143,4.232,3144,4.232,3145,4.232,3146,4.232,3147,4.232,3148,6.103,3149,6.103,3150,4.232,3151,4.232]],["title/interfaces/GeoAddressResult.html",[584,0.7,604,2.401]],["body/interfaces/GeoAddressResult.html",[0,0.007,3,0.192,4,0.209,5,0.096,8,0.209,9,0.795,15,2.352,17,2.775,26,0.012,27,0.37,28,0.318,43,0.697,45,1.126,71,0.593,79,0.268,81,0.429,84,0.224,85,3.09,87,1.005,89,0.956,99,0.007,100,0.009,101,0.007,102,3.557,104,3.731,107,2.793,108,2.262,109,3.09,117,3.735,119,4.582,126,4.751,138,3.397,139,3.09,140,4.164,144,3.269,147,1.065,164,2.793,165,2.352,168,2.793,169,2.352,173,1.446,194,3.73,196,2.492,210,2.933,373,2.262,379,2.881,382,4.092,383,3.924,384,3.269,386,2.793,405,2.1,584,0.855,586,1.957,593,4.583,604,4.11,606,3.397,609,2.667,631,1.175,637,1.747,642,0.952,646,5.038,724,3.479,744,1.891,755,2.322,837,2.793,1013,3.914,1079,3.09,1110,3.09,1111,3.09,1372,3.479,1385,3.479,1403,3.73,1418,3.269,2268,3.09,2276,2.449,2386,3.73,2535,3.269,2701,3.73,3154,4.046,3155,6.808,3156,3.269,3157,4.468,3158,4.468,3159,6.262,3160,4.468,3161,4.468,3162,4.468,3163,4.468,3164,4.468,3165,4.468,3166,4.468,3167,4.468,3168,4.468,3169,4.468,3170,4.468,3171,4.468,3172,4.468,3173,4.468,3174,4.468,3175,4.468,3176,4.468,3177,5.691,3178,4.468,3179,4.468,3180,4.468,3181,4.468,3182,4.468,3183,4.468,3184,4.468,3185,4.468,3186,4.046,3187,4.468,3188,5.691,3189,4.468,3190,4.468,3191,4.468,3192,4.468,3193,4.468,3194,4.468]],["title/injectables/GeocoderService.html",[196,1.602,3156,2.676]],["body/injectables/GeocoderService.html",[0,0.006,3,0.159,4,0.173,5,0.08,8,0.173,9,0.703,13,0.768,15,3.372,17,3.597,20,0.537,23,0.661,25,1.232,26,0.012,27,0.578,28,0.337,29,0.788,30,0.62,43,0.999,44,0.856,45,1.13,57,0.909,71,0.56,78,3.357,79,0.252,81,0.356,84,0.198,85,2.561,87,0.833,89,0.889,99,0.006,100,0.008,101,0.006,102,4.357,104,3.51,106,1.243,107,3.57,108,1.875,109,4.429,110,4.554,111,4.77,112,4.178,113,4.554,116,3.353,117,4.021,119,4.834,121,3.916,122,3.092,123,3.353,124,3.353,125,4.554,126,5.115,128,5.171,129,3.092,130,3.478,131,3.916,132,1.567,133,2.71,134,3.353,135,3.092,136,1.806,137,2.561,138,4.161,139,3.949,140,4.834,142,3.353,143,3.353,144,4.178,145,2.883,146,2.561,147,1.126,148,3.353,149,2.883,150,1.741,151,3.353,152,3.353,153,3.353,154,3.916,156,3.353,164,2.315,165,1.949,168,2.315,169,1.949,173,1.381,194,3.092,196,2.203,198,2.431,210,2.431,373,1.875,379,1.875,382,3.501,383,3.357,384,2.71,386,3.144,395,3.916,405,2.364,584,0.709,593,4.224,604,3.748,606,3.409,609,2.211,631,1.322,637,1.753,642,0.955,646,4.568,724,2.883,744,2.128,755,2.584,837,3.144,1013,4.004,1079,3.478,1110,2.561,1111,2.561,1161,2.53,1372,2.883,1385,2.883,1403,3.092,1418,2.71,1507,3.703,1508,3.703,1509,3.703,1510,3.703,1512,3.703,1513,3.703,2268,2.561,2276,2.03,2386,4.199,2535,2.71,2701,3.092,3154,3.353,3155,5.029,3156,3.68,3157,5.711,3158,5.029,3159,6.757,3160,5.029,3161,3.703,3162,5.029,3163,3.703,3164,3.703,3165,3.703,3166,3.703,3167,3.703,3168,3.703,3169,3.703,3170,3.703,3171,3.703,3172,3.703,3173,3.703,3174,3.703,3175,3.703,3176,5.029,3177,5.711,3178,5.029,3179,5.029,3180,5.029,3181,3.703,3182,3.703,3183,3.703,3184,3.703,3185,3.703,3186,3.353,3187,3.703,3188,5.029,3189,3.703,3190,3.703,3191,3.703,3192,3.703,3193,3.703,3194,3.703,3195,5.751,3196,5.751,3197,4.234,3198,4.234,3199,4.234,3200,4.234,3201,4.234]],["title/components/HeaderComponent.html",[313,0.157,533,0.932]],["body/components/HeaderComponent.html",[0,0.006,3,0.157,4,0.171,5,0.107,8,0.171,9,0.696,11,1.156,13,0.67,20,0.529,21,2.841,22,4.548,23,0.644,25,0.862,26,0.012,27,0.528,28,0.308,29,0.571,30,0.833,33,1.193,43,0.95,44,0.851,52,0.99,56,1.35,57,0.819,64,1.018,65,0.862,71,0.563,77,3.443,78,2,79,0.223,81,0.351,83,2.085,84,0.143,89,0.822,99,0.006,100,0.008,101,0.006,106,0.902,147,0.59,168,2.281,187,1.779,209,0.696,220,1.05,235,1.315,246,0.902,269,0.93,278,4.738,280,5.083,281,4.979,282,4.979,295,0.99,313,0.244,333,2.841,360,2.18,362,3.443,380,0.902,407,1.018,416,0.984,423,1.784,466,0.959,467,1.053,468,1.021,469,1.053,472,1.794,473,0.821,474,1.322,476,1.12,478,1.12,481,2.052,493,0.99,494,1.481,495,0.61,496,1.812,497,1.086,498,1.086,499,0.902,500,1.086,501,0.93,502,1.086,503,0.93,504,1.086,505,0.959,506,1.086,507,0.959,508,1.086,509,0.959,510,1.086,511,0.959,512,1.086,513,0.959,514,1.021,515,1.086,516,0.93,517,1.086,518,0.93,519,1.086,520,0.959,521,1.086,522,1.086,523,0.959,524,1.086,525,0.93,526,1.086,527,0.959,528,1.686,529,0.959,530,0.902,531,0.93,532,1.481,533,1.677,534,1.086,535,0.959,536,1.086,537,0.959,538,1.086,539,0.902,540,1.086,541,0.959,542,1.086,543,0.959,544,1.053,545,1.086,546,0.93,547,0.93,548,1.086,549,0.93,550,1.086,551,0.93,552,1.086,553,0.959,554,1.086,555,0.959,556,1.086,557,0.959,558,1.086,559,0.93,560,1.086,561,0.959,562,1.021,563,0.959,564,0.93,565,1.086,566,0.795,567,0.93,568,1.086,569,0.93,570,1.086,571,0.93,572,1.086,573,0.93,574,1.086,575,0.93,576,1.086,577,0.93,578,1.086,579,0.93,580,1.086,581,0.93,582,1.053,583,1.086,668,1.921,755,2.439,913,2.729,915,3.643,923,2.523,1020,2.841,1080,1.779,1146,2.67,1376,2.281,1429,4.157,1453,2.67,2313,4.979,2399,4.979,2439,2.841,2536,2.841,3202,3.649,3203,5.693,3204,5.693,3205,6.088,3206,4.508,3207,4.508,3208,4.508,3209,3.876,3210,6.962,3211,6.962,3212,5.693,3213,5.693,3214,5.693,3215,5.693,3216,5.693,3217,6.48,3218,6.48,3219,6.962,3220,5.693,3221,6.962,3222,6.48,3223,7.287,3224,6.48,3225,5.693,3226,5.693,3227,4.172,3228,4.172,3229,4.172,3230,4.172,3231,4.172,3232,5.693,3233,4.172,3234,4.172,3235,4.172,3236,4.979,3237,3.649,3238,3.649,3239,3.649,3240,4.172,3241,4.172,3242,4.172,3243,4.172,3244,4.172,3245,4.172,3246,4.172,3247,5.693,3248,4.172,3249,4.172,3250,4.172,3251,4.172,3252,4.172,3253,4.172,3254,4.172]],["title/interfaces/ISpaEnvResponse.html",[584,0.7,3255,3.312]],["body/interfaces/ISpaEnvResponse.html",[0,0.007,3,0.218,4,0.139,5,0.064,8,0.139,9,0.602,11,1,16,3.151,17,2.1,26,0.012,28,0.297,30,0.721,34,1.3,36,1.762,43,0.463,45,1.168,51,2.312,55,2.969,59,1.215,65,0.962,71,0.585,75,2.053,78,1.627,79,0.265,80,1.504,81,0.285,82,0.647,84,0.199,85,2.053,87,1.384,89,0.625,99,0.005,100,0.007,101,0.005,102,2.692,104,3.046,106,0.734,107,1.856,108,1.504,109,2.053,117,2.827,119,4.067,129,3.596,130,2.053,132,2.352,136,1.448,138,3.025,139,2.053,140,3.151,146,3.843,147,1.088,149,2.312,154,4.327,162,2.352,164,1.856,165,1.563,173,0.607,184,2.173,187,1.448,191,1.953,193,2.479,195,2.479,204,1.363,209,0.602,211,6.242,213,2.181,215,1.819,217,1.066,218,1.407,220,1.14,235,0.514,247,2.969,269,1.417,272,2.978,273,1.949,276,1.949,278,2.053,287,2.312,290,5.033,291,5.067,295,1.764,296,5.749,297,2.479,313,0.239,337,1.627,351,2.479,352,1.949,360,2.848,396,1.773,415,3.596,416,1.071,422,2.978,423,0.805,448,1.504,472,1.363,474,0.514,476,0.668,478,0.668,481,1.451,483,2.312,491,1.856,492,1.697,511,1.461,584,0.569,586,1.3,595,1.461,596,1.6,598,2.073,599,1.886,600,1.649,601,2.36,620,2.479,630,1.396,631,0.781,637,1.322,642,1.03,650,2.978,659,3.151,668,2.926,674,1.175,675,1.175,676,1.175,684,1.563,702,2.689,728,1.257,737,1.773,755,1.597,789,3.318,802,1.257,803,1.175,804,1.704,805,1.257,806,1.704,861,4.231,900,2.267,905,1.597,945,1.137,959,1.396,983,1.396,1013,3.689,1014,2.479,1016,3.353,1095,3.596,1120,2.312,1313,2.312,1366,2.312,1372,2.312,1374,3.151,1385,2.312,1392,2.312,1393,2.827,1404,2.689,1418,2.173,1443,3.504,1444,1.949,1445,3.9,1449,2.689,1452,3.9,1453,2.173,1454,2.689,1455,2.479,1456,2.689,1458,2.689,1459,3.9,1460,2.689,1462,2.689,1537,4.641,1696,3.9,2319,2.978,2340,2.969,2439,3.353,2525,2.969,2529,3.9,2535,2.173,2567,2.689,2568,2.969,2569,3.151,2592,3.353,2599,2.969,2641,2.969,2649,2.969,2660,2.689,2662,4.307,2671,4.307,2722,4.307,2723,3.596,2772,2.969,2830,2.969,2845,2.689,2915,4.067,3017,3.9,3088,2.312,3209,3.353,3255,4.588,3256,2.969,3257,2.689,3258,2.969,3259,7.037,3260,7.037,3261,4.924,3262,6.747,3263,6.355,3264,6.355,3265,6.355,3266,6.355,3267,6.355,3268,6.355,3269,6.355,3270,3.395,3271,3.395,3272,3.395,3273,3.395,3274,2.689,3275,3.395,3276,3.395,3277,3.395,3278,3.395,3279,3.395,3280,2.969,3281,3.395,3282,4.924,3283,4.924,3284,4.307,3285,6.355,3286,6.355,3287,4.924,3288,3.9,3289,4.924,3290,4.924,3291,6.747,3292,4.641,3293,4.924,3294,4.924,3295,4.307,3296,4.307,3297,3.9,3298,4.307,3299,4.924,3300,4.924,3301,4.924,3302,6.154,3303,4.924,3304,4.924,3305,4.924,3306,4.924,3307,4.924,3308,4.924,3309,4.924,3310,4.924,3311,4.924,3312,4.924,3313,4.924,3314,4.924,3315,4.924,3316,4.924,3317,4.924,3318,4.307,3319,3.395,3320,3.395,3321,3.395,3322,2.969,3323,3.395,3324,2.969,3325,3.395,3326,3.395,3327,3.395,3328,3.395,3329,4.924,3330,2.969,3331,3.395,3332,3.395,3333,3.395,3334,3.395,3335,4.924,3336,3.395,3337,2.969,3338,2.969,3339,3.395,3340,3.395,3341,3.395,3342,3.395,3343,3.395,3344,3.395,3345,3.395,3346,3.395,3347,3.395,3348,3.395,3349,3.395,3350,3.395,3351,3.395,3352,3.395,3353,2.689,3354,3.395,3355,3.395,3356,2.969,3357,3.395,3358,3.395,3359,3.395,3360,3.395,3361,3.395,3362,3.395,3363,3.395,3364,4.924,3365,3.395,3366,3.395,3367,3.395,3368,3.395,3369,3.395,3370,3.395,3371,3.395,3372,2.689,3373,3.395,3374,3.395,3375,3.395,3376,3.395,3377,3.395,3378,3.395,3379,3.395,3380,3.395,3381,3.395,3382,3.395,3383,3.395,3384,3.395,3385,3.395,3386,4.924,3387,4.924,3388,3.395,3389,3.395,3390,3.395,3391,3.395,3392,3.395,3393,4.924,3394,3.395]],["title/classes/MaskModel.html",[0,0.006,3395,3.054]],["body/classes/MaskModel.html",[0,0.007,2,2.201,3,0.201,4,0.219,5,0.101,8,0.219,9,0.819,10,2.298,13,0.789,20,0.928,23,0.673,25,1.015,26,0.012,27,0.486,28,0.341,29,0.672,30,1.122,33,1.404,43,0.998,44,1.037,45,1.16,50,1.735,57,0.789,65,0.811,71,0.586,79,0.231,81,0.45,84,0.264,87,1.319,89,0.679,99,0.007,100,0.009,101,0.007,173,1.308,220,1.339,300,2.371,326,1.393,364,3.073,396,2.795,407,0.957,416,1.083,595,1.541,596,1.819,602,1.873,627,1.681,631,1.541,642,0.783,677,1.578,715,4.564,748,4.053,901,2.32,903,1.916,904,1.793,905,1.736,906,1.916,933,2.105,1064,3.664,1161,1.793,1162,1.981,1176,3.657,1178,3.507,1282,2.676,1444,3.073,2345,2.927,2447,4.24,2805,4.682,2920,4.682,3121,3.426,3123,4.564,3395,4.894,3396,4.682,3397,4.2,3398,6.399,3399,5.308,3400,6.702,3401,5.354,3402,4.682,3403,5.354,3404,5.308,3405,5.354,3406,5.354,3407,5.354,3408,5.354,3409,5.354,3410,5.354,3411,5.354,3412,5.354,3413,4.682,3414,3.91,3415,5.354]],["title/interfaces/Maxlengths.html",[584,0.7,619,2.848]],["body/interfaces/Maxlengths.html",[0,0.004,3,0.118,4,0.128,5,0.059,8,0.128,9,0.567,10,0.983,20,0.397,26,0.012,27,0.227,28,0.267,29,0.757,30,1.063,34,1.777,36,1.978,43,0.754,44,0.966,45,1.257,47,1.564,59,1.12,65,0.837,71,0.588,74,1.5,79,0.25,81,0.263,82,0.597,84,0.19,87,1.203,89,0.972,90,1.797,99,0.004,100,0.006,101,0.004,132,1.158,136,1.335,169,2.136,173,1.265,177,1.893,187,2.357,191,2.193,203,1.797,204,1.285,209,0.383,217,0.983,218,1.325,235,0.474,239,0.923,259,2.479,273,1.797,300,1.386,302,2.131,310,3.159,313,0.23,326,1.207,336,1.335,337,1.5,354,1.242,364,1.797,373,1.386,378,1.711,382,4.035,383,3.717,385,1.851,395,3.764,396,1.634,401,2.003,405,1.287,416,1.117,421,1.564,472,1.285,474,0.474,476,0.616,478,0.616,481,0.923,499,1.003,531,0.698,547,0.698,584,0.777,585,4.036,586,1.199,587,1.411,588,1.411,589,2.479,590,4.057,591,4.057,592,4.057,593,3.973,594,5.167,595,1.067,596,1.311,597,2.969,598,1.978,599,1.777,600,1.554,601,2.224,602,1.1,603,0.983,604,2.663,605,2.479,606,4.215,607,2.738,608,3.537,609,3.192,610,3.159,611,3.159,612,2.286,613,3.912,614,3.764,615,3.159,616,2.738,617,2.738,618,2.738,619,4.445,620,2.286,621,2.479,622,2.738,623,2.738,624,2.738,625,1.564,626,1.711,627,0.983,628,1.893,629,1.634,630,1.287,631,0.72,632,2.286,633,2.738,634,2.738,635,2.479,636,3.674,637,1.835,638,2.738,639,2.891,640,6.355,641,2.738,642,0.458,643,2.131,644,2.479,645,2.479,646,2.806,647,2.738,648,2.479,649,2.738,650,4.134,651,2.479,652,2.738,653,2.479,654,2.479,655,4.057,656,2.738,657,2.738,658,4.057,659,2.969,660,2.738,661,2.479,662,2.738,663,2.738,664,2.738,665,2.545,666,3.173,667,2.003,668,2.545,669,2.738,670,2.738,671,2.738,672,4.464,673,1.711,674,1.083,675,1.606,676,1.083,677,0.923,678,2.738,679,2.738,680,6.7,681,4.057,682,2.738,683,3.159,684,2.136,685,4.057,686,6.782,687,4.834,688,1.711,689,2.479,690,2.286,691,2.738,692,2.738,693,2.738,694,2.738,695,2.738,696,2.738,697,5.346,698,1.711,699,2.738,700,5.169,701,2.738,702,2.479,703,2.131,704,2.738,705,5.709,706,5.979,707,5.709,708,2.738,709,2.738,710,4.057,711,2.738,712,4.057,713,2.663,714,2.738,715,2.131,716,2.738,717,2.738,718,2.738,719,2.738,720,4.057,721,2.003,722,2.738,723,2.738,724,3.764,725,2.738,726,2.738,727,2.738,728,2.689,729,3.674,730,2.806,731,4.057,732,4.057,733,1.797,734,4.057,735,4.057,736,2.738,737,1.634,738,2.738,739,2.738,740,4.377,741,2.286,742,2.286,743,2.479,744,1.158,745,2.738,746,2.738,747,2.738,748,1.893,749,1.797,750,2.738,751,2.738,752,1.158,753,2.738,754,2.479,755,2.294,756,2.738,757,5.346,758,2.738,759,2.738,760,2.738,761,2.738,762,2.738,763,2.286,764,2.763,765,2.738,766,4.464,767,4.057,768,3.388,769,4.057,770,4.834,771,2.286,772,2.738,773,2.738,774,2.286,775,2.131,776,2.131,777,2.286,778,1.797,779,2.738,780,2.738,781,2.738,782,3.388,783,2.738,784,2.738,785,2.286,786,2.738,787,3.674,788,2.479,789,2.422,790,2.479,791,2.738,792,2.738,793,2.738,794,1.893,795,1.893,796,2.738,797,2.738,798,2.738,799,2.738,800,2.738,801,1.158,802,1.158,803,1.083,804,1.606,805,1.158,806,1.083,807,1.441,808,1.441,809,1.335,810,2.738,811,2.738,812,2.738,813,2.738,814,2.738,815,2.738,816,2.738,817,2.738,818,2.738,819,2.738]],["title/classes/MoHCommonLibraryError.html",[0,0.006,3416,3.054]],["body/classes/MoHCommonLibraryError.html",[0,0.009,2,2.662,3,0.244,4,0.265,5,0.122,20,0.821,23,0.519,25,0.981,26,0.012,27,0.47,28,0.265,29,0.649,71,0.546,84,0.223,99,0.009,100,0.011,101,0.009,137,3.916,147,1.122,631,1.729,1393,3.717,1444,3.717,3416,5.489,3417,6.574,3418,5.663,3419,7.517,3420,6.475,3421,6.475,3422,6.475,3423,7.517,3424,7.517,3425,6.475,3426,6.475,3427,6.475]],["title/components/NameComponent.html",[246,0.904,313,0.157]],["body/components/NameComponent.html",[0,0.005,3,0.132,4,0.144,5,0.095,8,0.144,9,0.617,10,1.855,11,1.025,13,0.594,20,0.64,23,0.673,25,1.137,26,0.012,27,0.589,28,0.337,29,0.778,30,1.073,33,1.058,34,1.934,37,1.394,43,1.024,44,1.023,45,0.874,50,1.532,52,0.834,56,1.198,57,0.883,64,0.902,65,1.189,71,0.551,79,0.203,81,0.295,82,0.67,84,0.121,89,0.749,99,0.005,100,0.007,101,0.005,106,0.76,114,2.324,147,0.497,173,0.628,209,0.617,213,2.236,220,1.216,232,3.438,235,1.301,239,1.488,246,1.396,269,0.784,295,0.834,313,0.222,319,2.466,326,0.915,362,3.053,380,0.76,385,1.691,400,2.953,407,1.056,416,1.006,423,1.198,466,0.808,467,0.887,468,0.86,469,0.887,473,0.691,474,1.31,476,0.993,478,0.993,493,0.834,494,1.314,495,0.514,496,1.681,497,0.915,498,0.915,499,0.76,500,0.915,501,0.784,502,0.915,503,0.784,504,0.915,505,0.808,506,0.915,507,0.808,508,0.915,509,0.808,510,0.915,511,0.808,512,0.915,513,0.808,514,0.86,515,0.915,516,0.784,517,0.915,518,0.784,519,0.915,520,0.808,521,0.915,522,0.915,523,0.808,524,0.915,525,0.784,526,0.915,527,0.808,528,1.538,529,0.808,530,0.76,531,0.784,532,1.314,533,0.784,534,0.915,535,0.808,536,0.915,537,0.808,538,0.915,539,0.76,540,0.915,541,0.808,542,0.915,543,0.808,544,0.887,545,0.915,546,0.784,547,0.784,548,0.915,549,0.784,550,0.915,551,0.784,552,0.915,553,0.808,554,0.915,555,0.808,556,0.915,557,0.808,558,0.915,559,0.784,560,0.915,561,0.808,562,0.86,563,0.808,564,0.784,565,0.915,566,0.67,567,0.784,568,0.915,569,0.784,570,0.915,571,0.784,572,0.915,573,0.784,574,0.915,575,0.784,576,0.915,577,0.784,578,0.915,579,0.784,580,0.915,581,0.784,582,0.887,583,0.915,595,1.359,596,1.74,600,1.979,602,1.532,603,1.104,627,1.104,631,1.161,637,0.943,639,2.86,642,0.739,674,2.045,675,1.747,676,2.045,677,1.036,698,2.76,752,1.869,801,2.187,802,1.301,803,1.747,804,2.464,805,1.301,806,1.747,807,2.324,808,1.618,809,2.153,901,1.747,903,1.258,904,1.177,905,1.14,906,1.258,933,1.585,945,1.979,964,2.344,965,2.344,983,1.445,1044,2.42,1080,2.153,1145,3.687,1161,1.177,1162,1.301,1171,3.418,1172,3.085,1173,3.085,1174,2.76,1175,2.616,1177,2.832,1178,2.832,1179,1.922,1180,3.418,1185,2.153,1193,2.018,1195,2.018,1203,1.922,1205,2.018,1207,2.018,1280,2.42,1281,1.757,1282,1.757,1283,1.685,1284,1.177,1285,1.835,1376,2.76,1428,3.687,2276,1.685,2511,3.687,2512,3.687,2627,4.416,2779,3.231,3086,3.998,3087,3.998,3120,3.998,3121,4.132,3428,3.074,3429,3.998,3430,5.049,3431,5.908,3432,6.458,3433,5.908,3434,5.049,3435,3.515,3436,3.515,3437,5.049,3438,3.515,3439,5.049,3440,3.515,3441,5.049,3442,3.515,3443,3.515,3444,3.515,3445,3.515,3446,3.515,3447,3.515,3448,3.515,3449,3.515,3450,3.515,3451,3.515,3452,3.515,3453,3.515,3454,3.515,3455,3.515,3456,3.515,3457,5.908,3458,3.074,3459,5.049,3460,3.074,3461,3.515,3462,3.515,3463,3.515,3464,3.515,3465,3.515,3466,3.515,3467,5.049,3468,4.132,3469,5.049,3470,5.049,3471,5.049]],["title/components/PageFrameworkComponent.html",[313,0.157,535,0.962]],["body/components/PageFrameworkComponent.html",[0,0.006,3,0.163,4,0.177,5,0.11,8,0.177,11,1.187,13,0.688,23,0.468,26,0.012,27,0.479,28,0.177,33,1.224,43,1.007,44,0.53,52,1.029,56,1.386,57,0.51,64,1.471,65,0.657,79,0.149,81,0.365,84,0.201,99,0.006,100,0.008,101,0.006,106,0.937,147,0.826,162,2.618,209,0.714,215,1.835,235,1.318,246,0.937,269,0.967,295,1.029,306,4.268,313,0.249,352,4.061,354,2.318,380,0.937,407,1.045,416,0.826,423,1.678,466,0.998,467,1.668,468,1.061,469,1.094,472,1.83,473,0.853,474,1.324,476,1.15,478,1.15,481,2.085,493,1.029,494,1.521,495,0.635,496,1.841,497,1.129,498,1.129,499,0.937,500,1.129,501,0.967,502,1.129,503,0.967,504,1.129,505,0.998,506,1.129,507,0.998,508,1.129,509,0.998,510,1.129,511,0.998,512,1.129,513,0.998,514,1.061,515,1.129,516,0.967,517,1.129,518,0.967,519,1.129,520,0.998,521,1.129,522,1.129,523,0.998,524,1.129,525,0.967,526,1.129,527,0.998,528,1.72,529,0.998,530,0.937,531,0.967,532,1.521,533,0.967,534,1.129,535,1.627,536,1.129,537,0.998,538,1.129,539,0.937,540,1.129,541,0.998,542,1.129,543,0.998,544,1.094,545,1.129,546,0.967,547,0.967,548,1.129,549,0.967,550,1.129,551,0.967,552,1.129,553,0.998,554,1.129,555,0.998,556,1.129,557,0.998,558,1.129,559,0.967,560,1.129,561,0.998,562,1.061,563,0.998,564,0.967,565,1.129,566,0.827,567,0.967,568,1.129,569,0.967,570,1.129,571,0.967,572,1.129,573,0.967,574,1.129,575,0.967,576,1.129,577,0.967,578,1.129,579,0.967,580,1.129,581,0.967,582,1.094,583,1.129,587,1.778,588,1.778,698,3.195,954,5.112,1084,4.268,1208,1.552,1209,2.091,1210,1.552,1211,2.091,1212,2.091,1213,2.091,1214,1.552,1215,1.552,1216,2.091,1217,2.091,1218,1.552,1219,1.552,1220,1.552,1221,1.552,1222,1.552,1223,2.091,1224,2.023,1225,1.552,1226,2.091,1227,2.091,1228,1.552,1229,2.091,1230,1.552,1231,1.552,1232,1.552,1233,1.552,1234,2.531,1235,1.552,1236,1.552,1237,1.552,1238,1.552,1239,1.552,1240,1.552,1241,1.552,1242,1.552,1243,1.552,1244,1.552,1245,1.552,1246,1.552,1247,1.552,1248,1.552,1249,1.552,1250,1.552,1251,2.091,1252,1.552,1253,1.552,1254,1.552,1255,1.552,1256,1.552,1257,1.552,1258,1.552,1259,1.552,1260,1.552,1261,1.552,1262,1.552,1263,1.552,1264,1.552,1265,2.091,1266,1.552,1267,1.552,1268,1.552,1269,1.552,1270,1.552,1271,1.279,1272,1.552,1273,1.552,1274,1.552,1275,1.552,1276,1.552,1277,1.552,1278,1.552,1279,1.552,1430,4.629,1446,4.268,1455,4.268,2318,3.74,3071,5.848,3075,5.602,3083,4.268,3206,4.629,3296,5.112,3472,5.235,3473,5.235,3474,3.794,3475,5.112,3476,5.112,3477,5.845,3478,5.845,3479,5.845,3480,5.112,3481,4.268,3482,7.074,3483,5.112,3484,5.112,3485,5.112,3486,5.845,3487,5.845,3488,4.629,3489,4.338,3490,4.338,3491,3.794]],["title/interfaces/PageListInterface.html",[584,0.7,1100,3.054]],["body/interfaces/PageListInterface.html",[0,0.01,3,0.178,4,0.194,5,0.089,8,0.3,9,0.758,15,2.182,17,2.946,20,0.601,22,4.177,23,0.38,26,0.012,28,0.254,30,1.193,44,0.579,45,1.195,57,0.558,64,1.31,65,0.939,71,0.566,74,3.739,78,3.739,79,0.238,81,0.398,83,2.368,84,0.213,87,1.441,89,1.023,94,2.556,99,0.007,100,0.009,101,0.007,106,1.024,108,2.098,162,2.294,173,1.31,196,2.374,197,3.966,199,3.227,201,3.748,202,2.72,209,0.579,213,2.745,214,3.748,220,1.306,221,3.753,222,3.753,223,3.753,224,3.753,239,1.397,272,4.177,273,2.72,309,3.059,326,1.233,360,1.815,362,2.866,385,1.587,409,2.866,448,2.745,584,1.157,586,1.815,637,1.664,713,3.558,744,1.754,755,2.01,764,3.098,777,5.044,778,3.558,823,2.866,830,6.177,913,2.271,1058,3.46,1059,4.909,1060,3.753,1061,4.144,1062,3.753,1063,3.46,1064,2.591,1065,4.144,1066,4.144,1067,4.144,1068,4.144,1069,4.144,1070,3.753,1071,3.753,1072,4.144,1073,4.144,1079,3.748,1080,2.643,1081,3.46,1083,4.144,1084,4.526,1086,3.753,1087,3.227,1088,5.044,1091,4.144,1093,4.144,1094,4.144,1095,3.46,1097,4.144,1098,4.144,1100,5.044,1106,5.421,1107,3.753,1108,5.421,1109,5.421,1110,2.866,1111,2.866,1112,5.421,1113,5.421,1114,6.041,1115,6.65,1116,6.041,1117,5.421,1118,4.909,1119,4.909,1120,4.221,1121,5.421,1122,4.144,1123,4.144,1124,4.144,1125,4.144,1126,3.753,1127,4.144,1128,4.144,1129,4.144,1130,4.144,1131,4.144,1132,4.144,1133,4.144,1134,4.144,1135,4.144,1136,4.144,1368,4.144,3492,4.739]],["title/components/PageSectionComponent.html",[313,0.157,537,0.962]],["body/components/PageSectionComponent.html",[0,0.006,3,0.168,4,0.183,5,0.112,8,0.183,11,1.21,13,0.701,20,0.851,23,0.537,26,0.012,27,0.486,28,0.183,33,1.248,41,3.535,43,0.609,44,0.546,52,1.059,56,1.413,57,0.525,64,1.44,65,0.676,79,0.154,81,0.375,84,0.154,99,0.006,100,0.008,101,0.006,147,0.842,187,1.904,209,0.728,235,1.32,246,0.965,269,0.995,278,2.699,295,1.059,311,2.699,313,0.252,335,2.33,380,0.965,385,1.495,407,1.065,416,0.948,423,1.413,466,1.026,467,1.126,468,1.092,469,1.126,472,1.857,473,0.878,474,1.326,476,1.172,478,1.172,481,2.109,493,1.059,494,1.745,495,0.653,496,1.862,497,1.162,498,1.162,499,0.965,500,1.162,501,0.995,502,1.162,503,0.995,504,1.162,505,1.026,506,1.162,507,1.026,508,1.162,509,1.026,510,1.162,511,1.026,512,1.162,513,1.026,514,1.092,515,1.162,516,0.995,517,1.162,518,0.995,519,1.162,520,1.026,521,1.162,522,1.162,523,1.026,524,1.162,525,0.995,526,1.162,527,1.026,528,1.745,529,1.026,530,0.965,531,0.995,532,1.551,533,0.995,534,1.162,535,1.026,536,1.162,537,1.646,538,1.162,539,0.965,540,1.162,541,1.026,542,1.162,543,1.026,544,1.126,545,1.162,546,0.995,547,0.995,548,1.162,549,0.995,550,1.162,551,0.995,552,1.162,553,1.026,554,1.162,555,1.026,556,1.162,557,1.026,558,1.162,559,0.995,560,1.162,561,1.026,562,1.092,563,1.026,564,0.995,565,1.162,566,0.851,567,0.995,568,1.162,569,0.995,570,1.162,571,0.995,572,1.162,573,0.995,574,1.162,575,0.995,576,1.162,577,0.995,578,1.162,579,0.995,580,1.162,581,0.995,582,1.126,583,1.162,587,1.813,588,1.813,637,1.198,643,3.039,684,2.055,910,3.259,1064,2.44,1208,1.597,1209,2.132,1210,1.597,1211,2.132,1212,2.132,1213,2.132,1214,1.597,1215,1.597,1216,2.132,1217,2.132,1218,1.597,1219,1.597,1220,1.597,1221,1.597,1222,1.597,1223,2.132,1224,2.062,1225,1.597,1226,2.132,1227,2.132,1228,1.597,1229,2.132,1230,1.597,1231,1.597,1232,1.597,1233,1.597,1234,2.561,1235,1.597,1236,1.597,1237,1.597,1238,1.597,1239,1.597,1240,1.597,1241,1.597,1242,1.597,1243,1.597,1244,1.597,1245,1.597,1246,1.597,1247,1.597,1248,1.597,1249,1.597,1250,1.597,1251,2.132,1252,1.597,1253,1.597,1254,1.597,1255,1.597,1256,1.597,1257,1.597,1258,1.597,1259,1.597,1260,1.597,1261,1.597,1262,1.597,1263,1.597,1264,1.597,1265,2.132,1266,1.597,1267,1.597,1268,1.597,1269,1.597,1270,1.597,1271,1.316,1272,1.597,1273,1.597,1274,1.597,1275,1.597,1276,1.597,1277,1.597,1278,1.597,1279,1.597,2265,3.535,2779,2.856,2950,3.904,3071,5.667,3209,4.567,3280,3.904,3472,5.667,3483,6.259,3484,5.211,3485,5.211,3488,4.718,3491,3.904,3493,5.667,3494,3.904,3495,5.958,3496,5.958,3497,5.958,3498,5.958,3499,4.464,3500,4.464,3501,7.456,3502,4.464,3503,4.464,3504,4.464,3505,4.464,3506,4.464,3507,4.464,3508,4.464,3509,4.464]],["title/components/PasswordComponent.html",[313,0.157,539,0.904]],["body/components/PasswordComponent.html",[0,0.004,3,0.102,4,0.111,5,0.078,8,0.111,9,0.508,11,1.028,13,0.489,20,0.642,23,0.663,25,0.86,26,0.012,27,0.488,28,0.332,29,0.57,30,0.946,33,1.06,34,1.037,36,2.193,43,1.076,44,0.97,45,1.06,47,2.078,48,1.977,50,1.534,52,0.642,53,2.387,56,0.986,57,0.721,59,0.969,64,0.743,65,0.86,71,0.572,79,0.195,81,0.227,82,0.516,84,0.174,87,1.117,89,0.527,90,1.554,94,2.102,99,0.004,100,0.006,101,0.004,106,0.899,132,1.002,147,0.715,169,1.246,173,0.743,181,1.246,191,1.074,193,4.147,204,1.151,209,0.508,215,1.59,218,1.188,220,1.246,235,1.275,239,0.798,246,0.585,269,0.604,276,1.554,295,0.642,300,3.157,309,2.242,310,1.843,313,0.262,319,1.924,320,1.977,326,1.595,336,1.155,337,1.298,351,3.036,354,1.649,360,1.593,373,1.199,379,1.841,380,0.585,405,1.113,407,0.905,409,1.637,416,1.075,423,0.986,439,4.498,466,0.623,467,0.683,468,0.662,469,0.683,472,1.402,473,0.533,474,1.289,476,0.818,478,0.818,481,1.674,493,0.642,494,1.082,495,0.608,496,1.478,497,0.704,498,0.704,499,0.585,500,0.704,501,0.604,502,0.704,503,0.604,504,0.704,505,0.623,506,0.704,507,0.623,508,0.704,509,0.623,510,0.704,511,0.623,512,0.704,513,0.623,514,0.662,515,0.704,516,0.604,517,0.704,518,0.604,519,0.704,520,0.623,521,0.704,522,0.704,523,0.623,524,0.704,525,0.604,526,0.704,527,0.623,528,1.317,529,0.623,530,0.585,531,0.604,532,1.082,533,0.604,534,0.704,535,0.623,536,0.704,537,0.623,538,0.704,539,1.398,540,0.704,541,0.623,542,0.704,543,0.623,544,0.683,545,0.704,546,0.604,547,0.604,548,0.704,549,0.604,550,0.704,551,0.604,552,0.704,553,0.623,554,0.704,555,0.623,556,0.704,557,0.623,558,0.704,559,0.604,560,0.704,561,0.623,562,0.662,563,0.623,564,0.604,565,0.704,566,0.516,567,0.604,568,0.704,569,0.604,570,0.704,571,0.604,572,0.704,573,0.604,574,0.704,575,0.604,576,0.704,577,0.604,578,0.704,579,0.604,580,0.704,581,0.604,582,0.683,583,0.704,584,0.696,587,1.265,588,1.265,595,1.306,596,1.534,597,3.239,598,1.811,599,1.939,602,1.347,603,0.85,625,1.353,626,1.48,627,1.306,628,1.637,629,1.413,630,1.709,631,0.956,632,3.696,637,0.727,642,0.608,666,3.26,677,0.798,721,2.661,737,1.413,755,2.517,809,2.159,901,2.121,903,0.969,904,0.907,905,0.878,906,0.969,908,1.48,923,1.637,933,1.306,945,2.167,956,3.293,1080,1.155,1148,3.061,1161,0.907,1162,1.002,1175,2.242,1177,2.426,1185,1.773,1187,1.732,1208,0.969,1209,1.488,1210,0.969,1211,1.488,1212,1.488,1213,1.488,1214,0.969,1215,0.969,1216,1.488,1217,1.488,1218,0.969,1219,0.969,1220,0.969,1221,0.969,1222,0.969,1223,1.488,1224,1.439,1225,0.969,1226,1.488,1227,1.488,1228,0.969,1229,1.488,1230,0.969,1231,0.969,1232,0.969,1233,0.969,1234,2.032,1235,0.969,1236,0.969,1237,0.969,1238,0.969,1239,0.969,1240,0.969,1241,0.969,1242,0.969,1243,0.969,1244,0.969,1245,0.969,1246,0.969,1247,0.969,1248,0.969,1249,0.969,1250,0.969,1251,1.488,1252,0.969,1253,0.969,1254,0.969,1255,0.969,1256,0.969,1257,0.969,1258,0.969,1259,0.969,1260,0.969,1261,0.969,1262,0.969,1263,0.969,1264,0.969,1265,1.488,1266,0.969,1267,0.969,1268,0.969,1269,0.969,1270,0.969,1271,0.798,1272,0.969,1273,0.969,1274,0.969,1275,0.969,1276,0.969,1277,0.969,1278,0.969,1279,0.969,1283,1.298,1330,2.53,1331,1.773,1333,5.005,1393,1.554,1468,1.732,2169,3.634,2191,1.554,2249,1.843,2289,3.636,2291,2.368,2295,3.293,2330,3.636,2342,1.298,2569,3.634,2604,2.144,2655,3.867,2659,1.637,2669,2.831,2723,3.036,2844,1.977,2987,3.293,3088,3.447,3094,3.696,3139,1.977,3140,1.977,3152,3.636,3288,4.498,3297,3.293,3372,2.144,3468,3.921,3510,2.144,3511,5.657,3512,3.636,3513,3.636,3514,3.293,3515,3.636,3516,3.636,3517,3.293,3518,3.636,3519,5.359,3520,3.636,3521,3.636,3522,4.427,3523,4.427,3524,4.427,3525,4.427,3526,5.891,3527,4.427,3528,4.427,3529,4.158,3530,4.427,3531,4.427,3532,4.427,3533,4.427,3534,4.427,3535,4.158,3536,4.475,3537,2.707,3538,2.707,3539,2.707,3540,2.707,3541,3.036,3542,2.707,3543,2.707,3544,3.636,3545,2.707,3546,2.707,3547,2.831,3548,2.707,3549,2.707,3550,2.707,3551,2.707,3552,2.707,3553,2.707,3554,2.707,3555,2.707,3556,3.636,3557,3.636,3558,3.636,3559,3.636,3560,3.636,3561,2.707,3562,2.707,3563,3.636,3564,2.707,3565,2.707,3566,2.707,3567,3.293,3568,3.636,3569,2.707,3570,2.707,3571,2.707,3572,2.707,3573,2.707,3574,2.707,3575,2.707,3576,3.636,3577,4.009,3578,2.368,3579,1.843,3580,2.368,3581,2.368,3582,2.368,3583,2.368,3584,2.368,3585,4.427,3586,4.427,3587,3.636,3588,4.147,3589,2.368,3590,2.368,3591,2.368,3592,2.368,3593,2.368,3594,2.368,3595,2.144,3596,3.636,3597,2.368,3598,3.636,3599,2.368,3600,3.636,3601,2.368,3602,2.368,3603,3.636,3604,3.636,3605,2.368,3606,2.368,3607,2.368,3608,2.144,3609,2.368,3610,2.368,3611,2.368,3612,2.144,3613,2.368,3614,2.368,3615,6.469,3616,5.68,3617,4.158,3618,2.707,3619,4.158,3620,4.158,3621,4.967,3622,4.158,3623,4.158,3624,4.158,3625,4.158,3626,2.707]],["title/interfaces/PasswordErrorMsg.html",[584,0.7,3536,3.054]],["body/interfaces/PasswordErrorMsg.html",[0,0.005,3,0.147,4,0.159,5,0.073,8,0.159,9,0.664,11,1.102,20,0.494,26,0.012,28,0.256,29,0.738,30,0.914,33,0.816,34,2.08,36,2.544,43,0.852,44,0.664,45,1.082,47,2.714,48,2.844,50,1.828,53,2.236,59,1.394,71,0.58,79,0.233,81,0.327,82,0.742,84,0.215,87,1.068,89,0.689,90,2.236,94,2.009,99,0.005,100,0.008,101,0.005,106,0.842,132,1.442,147,0.767,169,1.793,173,0.971,181,1.793,191,1.545,204,1.079,209,0.476,215,1.705,218,1.113,220,1.095,235,0.59,239,1.148,276,2.236,300,2.404,309,2.404,310,2.652,313,0.277,319,1.223,320,2.844,326,1.413,336,1.661,337,1.867,351,2.844,354,1.545,360,1.492,373,1.725,379,1.725,405,1.601,409,3.283,416,1.142,472,1.503,474,0.59,476,0.766,478,0.766,481,1.148,495,0.57,539,1.173,584,0.909,586,1.492,587,1.652,588,1.652,595,1.555,596,1.604,597,3.474,598,1.943,599,2.08,602,1.288,603,1.223,625,1.947,626,2.129,627,1.223,628,2.356,629,2.034,630,1.601,631,0.896,632,2.844,637,1.046,642,0.794,677,1.148,721,2.493,737,2.835,755,2.305,809,1.661,901,1.348,908,2.129,945,2.265,956,3.085,1080,1.661,1148,3.78,1175,1.725,1177,1.867,1185,1.661,1187,2.493,1208,1.394,1209,1.943,1210,1.394,1211,1.943,1212,1.943,1213,1.943,1214,1.394,1215,1.394,1216,1.943,1217,1.943,1218,1.394,1219,1.394,1220,1.394,1221,1.394,1222,1.394,1223,1.943,1224,1.879,1225,1.394,1226,1.943,1227,1.943,1228,1.394,1229,1.943,1230,1.394,1231,1.394,1232,1.394,1233,1.394,1234,2.419,1235,1.394,1236,1.394,1237,1.394,1238,1.394,1239,1.394,1240,1.394,1241,1.394,1242,1.394,1243,1.394,1244,1.394,1245,1.394,1246,1.394,1247,1.394,1248,1.394,1249,1.394,1250,1.394,1251,1.943,1252,1.394,1253,1.394,1254,1.394,1255,1.394,1256,1.394,1257,1.394,1258,1.394,1259,1.394,1260,1.394,1261,1.394,1262,1.394,1263,1.394,1264,1.394,1265,1.943,1266,1.394,1267,1.394,1268,1.394,1269,1.394,1270,1.394,1271,1.148,1272,1.394,1273,1.394,1274,1.394,1275,1.394,1276,1.394,1277,1.394,1278,1.394,1279,1.394,1283,1.867,1330,3.124,1331,1.661,1333,5.033,1393,2.236,1468,2.493,2169,3.474,2191,3.117,2249,2.652,2295,4.3,2342,2.602,2569,3.474,2604,3.085,2659,2.356,2669,2.652,2723,2.844,2844,2.844,2987,3.085,3088,2.652,3094,2.844,3139,2.844,3140,2.844,3288,4.3,3297,3.085,3372,3.085,3468,3.999,3510,3.085,3511,5.913,3512,3.407,3513,3.407,3514,3.085,3515,3.407,3516,3.407,3517,3.085,3518,3.407,3519,4.748,3520,3.407,3521,3.407,3522,3.407,3523,3.407,3524,3.407,3525,3.407,3526,3.407,3527,3.407,3528,3.407,3530,3.407,3531,3.407,3532,3.407,3533,3.407,3534,3.407,3536,4.937,3541,2.844,3544,3.407,3547,2.652,3556,3.407,3557,3.407,3558,3.407,3559,3.407,3560,3.407,3563,3.407,3567,3.085,3568,3.407,3576,4.748,3577,4.95,3578,3.407,3579,2.652,3580,3.407,3581,3.407,3582,3.407,3583,3.407,3584,3.407,3585,5.466,3586,6.439,3587,4.748,3588,5.517,3589,3.407,3590,3.407,3591,3.407,3592,3.407,3593,3.407,3594,3.407,3595,3.085,3596,4.748,3597,3.407,3598,4.748,3599,3.407,3600,4.748,3601,3.407,3602,3.407,3603,4.748,3604,4.748,3605,3.407,3606,3.407,3607,3.407,3608,3.085,3609,3.407,3610,3.407,3611,3.407,3612,3.085,3613,3.407,3614,3.407]],["title/classes/Person.html",[0,0.006,2551,2.529]],["body/classes/Person.html",[0,0.009,2,1.699,3,0.156,4,0.169,5,0.078,8,0.169,9,0.691,13,0.666,23,0.659,25,0.857,26,0.012,27,0.587,28,0.32,29,0.567,30,0.828,43,0.991,44,0.788,57,0.953,65,0.857,71,0.577,79,0.222,84,0.142,87,0.813,89,0.921,99,0.006,100,0.008,101,0.006,104,2.711,106,0.893,114,2.604,160,3.421,162,2.093,173,1.153,191,2.244,220,1.358,238,3.619,326,1.472,335,3.62,354,2.244,407,0.739,448,1.83,531,1.261,602,1.723,627,1.298,631,1.301,637,1.109,642,0.605,665,1.903,666,3.247,684,3.192,703,4.722,713,3.247,728,2.935,743,3.273,744,1.53,752,1.53,764,2.827,794,4.193,821,2.953,822,3.851,823,3.421,853,3.614,877,3.092,897,3.092,898,3.247,899,2.711,900,3.535,901,1.958,903,1.479,904,1.384,905,1.34,906,1.479,1063,3.018,1080,2.412,1086,4.479,1087,3.851,1161,1.384,1162,1.53,1373,3.247,1407,3.97,2177,3.9,2196,4.193,2201,4.193,2239,3.273,2247,4.479,2264,4.169,2348,6.064,2350,5.476,2535,2.645,2536,3.851,2551,4.898,2569,2.645,2859,5.64,3083,4.13,3089,5.107,3090,5.107,3091,5.107,3133,5.491,3135,5.939,3137,4.479,3627,3.614,3628,6.449,3629,7.262,3630,6.934,3631,6.934,3632,6.449,3633,6.449,3634,4.133,3635,4.133,3636,5.656,3637,4.133,3638,4.133,3639,4.133,3640,4.133,3641,4.133,3642,5.656,3643,5.656,3644,6.934,3645,4.133,3646,4.133,3647,4.133,3648,7.262,3649,6.449,3650,4.133,3651,4.133,3652,5.656,3653,4.133,3654,4.133,3655,5.656,3656,5.656,3657,4.133,3658,4.133,3659,3.619,3660,5.656,3661,4.947,3662,3.614,3663,4.133,3664,4.133,3665,4.133,3666,5.656,3667,6.934,3668,6.934,3669,6.934,3670,4.133,3671,4.133,3672,4.133,3673,4.133,3674,7.262,3675,4.133,3676,4.133,3677,4.133,3678,5.656,3679,5.656,3680,4.133,3681,5.656,3682,4.133,3683,3.614,3684,4.133,3685,4.133,3686,4.133,3687,4.133,3688,4.133,3689,4.133]],["title/components/PhnComponent.html",[313,0.157,541,0.962]],["body/components/PhnComponent.html",[0,0.005,3,0.134,4,0.146,5,0.096,8,0.146,9,0.623,10,1.87,11,1.035,13,0.6,20,0.647,23,0.674,25,1.141,26,0.012,27,0.571,28,0.341,29,0.78,30,1.006,33,1.068,37,1.413,43,1.046,44,1.032,45,0.882,50,1.412,52,0.845,56,1.209,57,0.867,63,3.723,64,0.911,65,1.192,71,0.56,79,0.224,81,0.299,82,0.679,84,0.123,89,0.452,99,0.005,100,0.007,101,0.005,114,2.347,147,0.72,162,1.887,209,0.623,220,1.114,235,1.302,246,0.77,269,0.794,295,0.845,313,0.224,319,2.473,326,2.088,380,0.77,400,2.975,407,1.064,416,1.041,423,1.209,466,0.819,467,0.899,468,0.872,469,0.899,473,0.701,474,1.311,476,1.003,478,1.003,493,0.845,494,1.327,495,0.521,496,1.691,497,0.927,498,0.927,499,0.77,500,0.927,501,0.794,502,0.927,503,0.794,504,0.927,505,0.819,506,0.927,507,0.819,508,0.927,509,0.819,510,0.927,511,0.819,512,0.927,513,0.819,514,0.872,515,0.927,516,0.794,517,0.927,518,0.794,519,0.927,520,0.819,521,0.927,522,0.927,523,0.819,524,0.927,525,0.794,526,0.927,527,0.819,528,1.549,529,0.819,530,0.77,531,0.794,532,1.327,533,0.794,534,0.927,535,0.819,536,0.927,537,0.819,538,0.927,539,0.77,540,0.927,541,1.494,542,0.927,543,0.819,544,0.899,545,0.927,546,0.794,547,0.794,548,0.927,549,0.794,550,0.927,551,0.794,552,0.927,553,0.819,554,0.927,555,0.819,556,0.927,557,0.819,558,0.927,559,0.794,560,0.927,561,0.819,562,0.872,563,0.819,564,0.794,565,0.927,566,0.679,567,0.794,568,0.927,569,0.794,570,0.927,571,0.794,572,0.927,573,0.794,574,0.927,575,0.794,576,0.927,577,0.794,578,0.927,579,0.794,580,0.927,581,0.794,582,0.899,583,0.927,595,1.369,596,1.747,600,1.994,602,1.541,603,1.119,627,1.119,631,1.173,637,0.956,639,2.878,642,0.746,674,2.061,675,1.765,676,2.061,677,1.05,684,1.641,752,1.319,801,2.203,802,1.319,803,1.765,804,2.476,805,1.319,806,1.765,807,2.347,808,1.641,809,2.174,871,2.155,901,1.765,903,1.275,904,1.194,905,1.155,906,1.275,933,1.601,945,2.177,964,2.362,965,2.362,983,1.465,1044,2.444,1161,1.194,1162,1.319,1171,3.436,1172,3.108,1173,3.108,1174,2.787,1175,2.637,1176,2.975,1177,2.854,1178,2.854,1179,1.948,1180,3.436,1185,2.174,1193,2.045,1195,2.045,1203,1.948,1205,2.045,1207,2.045,1280,2.444,1281,1.781,1282,1.781,1283,1.708,1284,1.194,1285,1.861,1331,2.174,1401,3.083,1537,3.723,2345,3.255,2566,2.28,2706,3.472,3302,4.459,3397,3.417,3690,3.116,3691,5.378,3692,5.099,3693,5.099,3694,5.099,3695,3.563,3696,3.563,3697,5.099,3698,3.563,3699,3.563,3700,5.099,3701,5.683,3702,3.563,3703,5.099,3704,3.563,3705,3.563,3706,3.563,3707,3.563,3708,3.563,3709,3.563,3710,3.563,3711,3.563,3712,3.563,3713,3.563,3714,3.563,3715,3.563,3716,3.563,3717,2.602,3718,6.876,3719,2.602,3720,2.426,3721,2.822,3722,4.459,3723,4.038]],["title/components/PhoneNumberComponent.html",[313,0.157,543,0.962]],["body/components/PhoneNumberComponent.html",[0,0.005,3,0.131,4,0.143,5,0.095,8,0.143,9,0.614,10,1.576,11,1.019,13,0.591,20,0.746,23,0.672,25,1.075,26,0.012,27,0.553,28,0.34,29,0.712,30,1.039,33,1.052,36,2.105,43,1.056,44,1.007,45,1.018,47,2.509,50,1.809,52,0.827,56,1.191,57,0.836,64,0.897,65,1.134,71,0.567,79,0.221,81,0.293,82,0.957,84,0.173,87,1.341,99,0.005,100,0.007,101,0.005,106,0.754,147,0.493,162,1.858,204,1.782,209,0.614,215,1.576,217,1.576,218,1.838,220,1.295,235,1.3,239,1.028,246,0.754,269,0.777,295,0.827,300,1.544,313,0.221,319,2.395,326,2.11,380,0.754,385,1.168,407,1.051,416,1.003,423,1.191,466,0.802,467,0.88,468,0.853,469,0.88,473,0.686,474,1.31,476,0.988,478,0.988,493,0.827,494,1.306,495,0.51,496,1.674,497,0.907,498,0.907,499,0.754,500,0.907,501,0.777,502,0.907,503,0.777,504,0.907,505,0.802,506,0.907,507,0.802,508,0.907,509,0.802,510,0.907,511,0.802,512,0.907,513,0.802,514,0.853,515,0.907,516,0.777,517,0.907,518,0.777,519,0.907,520,0.802,521,0.907,522,0.907,523,0.802,524,0.907,525,0.777,526,0.907,527,0.802,528,1.531,529,0.802,530,0.754,531,0.777,532,1.306,533,0.777,534,0.907,535,0.802,536,0.907,537,0.802,538,0.907,539,0.754,540,0.907,541,0.802,542,0.907,543,1.722,544,1.925,545,0.907,546,0.777,547,0.777,548,0.907,549,0.777,550,0.907,551,0.777,552,0.907,553,0.802,554,0.907,555,0.802,556,0.907,557,0.802,558,0.907,559,0.777,560,0.907,561,0.802,562,0.853,563,0.802,564,0.777,565,0.907,566,0.665,567,0.777,568,0.907,569,0.777,570,0.907,571,0.777,572,0.907,573,0.777,574,0.907,575,0.777,576,0.907,577,0.777,578,0.907,579,0.777,580,0.907,581,0.777,582,0.88,583,0.907,595,1.154,596,1.526,598,2.44,599,2.253,600,1.97,601,2.819,602,0.827,627,1.095,630,2.064,631,1.154,642,0.51,665,2.311,674,2.036,675,1.207,676,2.036,677,1.028,715,2.374,748,2.109,801,1.858,802,1.858,803,1.207,804,2.227,805,1.858,806,1.737,828,4.295,901,2.36,903,1.248,904,1.168,905,1.131,906,1.248,933,1.576,959,2.064,964,1.991,965,1.991,983,2.064,1064,1.906,1080,2.141,1161,2.555,1162,1.29,1176,2.509,1178,2.406,1185,2.141,2345,3.216,3123,2.374,3395,5.725,3397,3.376,3398,4.39,3399,3.975,3402,3.05,3404,2.761,3717,2.546,3719,2.546,3724,7.092,3725,6.422,3726,3.05,3727,5.02,3728,5.02,3729,5.882,3730,5.02,3731,5.144,3732,5.144,3733,5.882,3734,5.02,3735,3.487,3736,4.39,3737,3.487,3738,5.02,3739,3.487,3740,3.487,3741,3.487,3742,3.487,3743,3.487,3744,3.487,3745,3.487,3746,3.487,3747,3.487,3748,3.487,3749,5.02,3750,3.487,3751,3.487,3752,3.487,3753,3.487,3754,3.487,3755,5.02,3756,5.02,3757,5.02,3758,3.487,3759,3.487,3760,3.487,3761,3.05,3762,3.487,3763,3.487,3764,3.487,3765,3.487,3766,5.02,3767,3.487,3768,3.487,3769,3.487,3770,3.487,3771,3.05]],["title/components/PostalCodeComponent.html",[313,0.157,546,0.932]],["body/components/PostalCodeComponent.html",[0,0.004,3,0.114,4,0.124,5,0.085,8,0.124,9,0.553,10,1.703,11,0.919,13,0.533,20,0.574,23,0.668,25,1.114,26,0.012,27,0.559,28,0.338,29,0.763,30,1.024,33,0.949,37,1.202,43,1.037,44,1.03,45,0.784,50,1.286,52,0.719,56,1.074,57,0.847,64,0.809,65,1.152,71,0.561,79,0.207,81,0.255,82,0.578,84,0.104,87,1.067,88,2.063,89,0.574,99,0.004,100,0.006,101,0.004,114,2.085,147,0.766,173,0.542,181,3.11,209,0.553,220,1.043,235,1.287,246,0.655,269,0.676,295,0.719,300,1.342,309,1.342,313,0.204,319,2.199,326,1.565,380,0.655,400,2.71,407,0.969,416,1.017,423,1.074,466,0.697,467,0.765,468,0.741,469,0.765,473,0.596,474,1.299,476,0.891,478,0.891,493,0.719,494,1.178,495,0.443,496,1.565,497,0.789,498,0.789,499,0.655,500,0.789,501,0.676,502,0.789,503,0.676,504,0.789,505,0.697,506,0.789,507,0.697,508,0.789,509,0.697,510,0.789,511,0.697,512,0.789,513,0.697,514,0.741,515,0.789,516,0.676,517,0.789,518,0.676,519,0.789,520,0.697,521,0.789,522,0.789,523,0.697,524,0.789,525,0.676,526,0.789,527,0.697,528,1.411,529,0.697,530,0.655,531,0.676,532,1.178,533,0.676,534,0.789,535,0.697,536,0.789,537,0.697,538,0.789,539,0.655,540,0.789,541,0.697,542,0.789,543,0.697,544,0.765,545,0.789,546,1.341,547,1.641,548,0.789,549,0.676,550,0.789,551,0.676,552,0.789,553,0.697,554,0.789,555,0.697,556,0.789,557,0.697,558,0.789,559,0.676,560,0.789,561,0.697,562,0.741,563,0.697,564,0.676,565,0.789,566,0.578,567,0.676,568,0.789,569,0.676,570,0.789,571,0.676,572,0.789,573,0.676,574,0.789,575,0.676,576,0.789,577,0.676,578,0.789,579,0.676,580,0.789,581,0.676,582,0.765,583,0.789,587,1.378,588,1.378,594,3.959,595,1.247,596,1.661,600,1.816,602,1.427,603,0.952,627,0.952,631,1.041,637,1.216,639,2.851,642,0.663,668,2.77,673,2.476,674,1.877,675,1.567,676,1.877,677,0.893,684,1.395,715,3.084,728,1.121,752,1.121,801,2.226,802,1.121,803,1.567,804,2.338,805,1.121,806,1.567,807,2.085,808,1.395,809,1.931,871,1.832,901,1.567,903,1.084,904,1.015,905,0.983,906,1.084,933,1.422,945,2.157,964,2.151,965,2.151,983,1.246,1044,2.17,1064,2.476,1161,1.015,1162,1.121,1171,3.218,1172,2.831,1173,3.141,1174,2.476,1175,2.401,1176,3.218,1177,2.599,1178,2.599,1179,1.657,1180,3.218,1185,1.931,1193,1.739,1195,1.739,1203,1.657,1205,1.739,1207,1.739,1208,1.084,1209,1.62,1210,1.084,1211,1.62,1212,1.62,1213,1.62,1214,1.084,1215,1.084,1216,1.62,1217,1.62,1218,1.084,1219,1.084,1220,1.084,1221,1.084,1222,1.084,1223,1.62,1224,1.567,1225,1.084,1226,1.62,1227,1.62,1228,1.084,1229,1.62,1230,1.084,1231,1.084,1232,1.084,1233,1.084,1234,2.152,1235,1.084,1236,1.084,1237,1.084,1238,1.084,1239,1.084,1240,1.084,1241,1.084,1242,1.084,1243,1.084,1244,1.084,1245,1.084,1246,1.084,1247,1.084,1248,1.084,1249,1.084,1250,1.084,1251,1.62,1252,1.084,1253,1.084,1254,1.084,1255,1.084,1256,1.084,1257,1.084,1258,1.084,1259,1.084,1260,1.084,1261,1.084,1262,1.084,1263,1.084,1264,1.084,1265,1.62,1266,1.084,1267,1.084,1268,1.084,1269,1.084,1270,1.084,1271,0.893,1272,1.084,1273,1.084,1274,1.084,1275,1.084,1276,1.084,1277,1.084,1278,1.084,1279,1.084,1280,2.17,1281,1.514,1282,1.514,1283,1.452,1284,1.015,1285,1.582,2345,2.476,2350,3.307,2566,1.939,2673,3.084,3093,2.4,3117,4.933,3121,3.849,3123,3.084,3397,3.112,3399,3.586,3404,3.586,3413,2.65,3458,4.742,3460,2.65,3468,1.939,3547,3.084,3608,2.4,3717,2.213,3719,2.213,3720,2.063,3721,2.4,3731,4.742,3772,6.598,3773,6.598,3774,2.65,3775,4.529,3776,4.529,3777,5.422,3778,4.529,3779,3.03,3780,3.03,3781,3.03,3782,4.529,3783,3.03,3784,3.03,3785,4.529,3786,4.529,3787,3.03,3788,4.529,3789,3.03,3790,3.03,3791,3.03,3792,3.03,3793,3.03,3794,3.03,3795,3.03,3796,3.03,3797,3.03,3798,3.03,3799,3.03,3800,3.03,3801,6.016,3802,6.016,3803,4.529,3804,3.03,3805,3.03,3806,3.03,3807,7.198,3808,3.03,3809,6.016,3810,3.03,3811,3.03]],["title/components/ProvinceComponent.html",[313,0.157,549,0.932]],["body/components/ProvinceComponent.html",[0,0.004,3,0.116,4,0.126,5,0.087,8,0.126,9,0.561,10,1.721,11,0.932,13,0.54,20,0.582,23,0.667,25,1.096,26,0.012,27,0.554,28,0.337,29,0.755,30,1.082,33,0.962,37,1.224,43,1.042,44,1.023,45,1.05,50,1.539,52,0.732,56,1.089,57,0.829,64,0.821,65,1.156,71,0.56,79,0.209,81,0.259,82,0.588,84,0.223,87,0.903,89,0.582,99,0.004,100,0.006,101,0.004,106,1.704,114,2.113,147,0.649,173,0.98,209,0.561,220,1.051,235,1.288,246,0.667,269,0.688,295,0.732,313,0.206,319,2.212,378,2.51,380,0.667,382,3.941,383,3.544,400,2.739,407,0.98,416,1.063,423,1.089,466,0.71,467,0.779,468,0.755,469,0.779,473,0.607,474,1.3,476,0.903,478,0.903,493,0.732,494,1.195,495,0.452,496,1.58,497,0.803,498,0.803,499,0.667,500,0.803,501,0.688,502,0.803,503,0.688,504,0.803,505,0.71,506,0.803,507,0.71,508,0.803,509,0.71,510,0.803,511,0.71,512,0.803,513,0.71,514,0.755,515,0.803,516,0.688,517,0.803,518,0.688,519,0.803,520,0.71,521,0.803,522,0.803,523,0.71,524,0.803,525,0.688,526,0.803,527,0.71,528,1.426,529,0.71,530,0.667,531,0.688,532,1.195,533,0.688,534,0.803,535,0.71,536,0.803,537,0.71,538,0.803,539,0.667,540,0.803,541,0.71,542,0.803,543,0.71,544,0.779,545,0.803,546,0.688,547,0.688,548,0.803,549,1.353,550,0.803,551,0.688,552,0.803,553,0.71,554,0.803,555,0.71,556,0.803,557,0.71,558,0.803,559,0.688,560,0.803,561,0.71,562,0.755,563,0.71,564,0.688,565,0.803,566,0.588,567,0.688,568,0.803,569,0.688,570,0.803,571,0.688,572,0.803,573,0.688,574,0.803,575,0.688,576,0.803,577,0.688,578,0.803,579,0.688,580,0.803,581,0.688,582,0.779,583,0.803,584,0.517,587,1.396,588,1.396,595,1.261,596,1.671,600,1.836,602,1.44,603,0.969,609,4.151,612,2.253,613,4.507,614,2.101,615,3.732,627,0.969,631,1.056,637,0.828,639,2.873,642,0.802,673,2.51,674,1.897,675,1.589,676,1.897,677,0.91,752,2.029,766,3.352,768,2.253,771,2.253,774,2.253,789,2.397,801,2.029,802,1.142,803,1.589,804,2.354,805,1.142,806,1.589,807,2.113,808,1.421,809,1.958,879,5.139,901,1.589,903,1.104,904,1.034,905,1.001,906,1.104,933,1.442,945,2.033,964,2.174,965,2.174,983,1.269,1044,2.2,1161,1.034,1162,1.142,1171,3.243,1172,2.862,1173,2.862,1174,2.51,1175,2.427,1176,2.739,1177,2.627,1178,2.627,1179,1.687,1180,3.243,1185,1.958,1193,1.771,1195,1.771,1203,1.687,1205,1.771,1207,1.771,1208,1.104,1209,1.643,1210,1.104,1211,1.643,1212,1.643,1213,1.643,1214,1.104,1215,1.104,1216,1.643,1217,1.643,1218,1.104,1219,1.104,1220,1.104,1221,1.104,1222,1.104,1223,1.643,1224,1.589,1225,1.104,1226,1.643,1227,1.643,1228,1.104,1229,1.643,1230,1.104,1231,1.104,1232,1.104,1233,1.104,1234,2.172,1235,1.104,1236,1.104,1237,1.104,1238,1.104,1239,1.104,1240,1.104,1241,1.104,1242,1.104,1243,1.104,1244,1.104,1245,1.104,1246,1.643,1247,1.104,1248,1.104,1249,1.104,1250,1.104,1251,1.643,1252,1.104,1253,1.104,1254,1.104,1255,1.104,1256,1.104,1257,1.104,1258,1.104,1259,1.104,1260,1.104,1261,1.104,1262,1.104,1263,1.104,1264,1.104,1265,1.643,1266,1.104,1267,1.104,1268,1.104,1269,1.104,1270,1.104,1271,0.91,1272,1.104,1273,1.104,1274,1.104,1275,1.104,1276,1.104,1277,1.104,1278,1.104,1279,1.104,1280,2.2,1281,1.542,1282,1.542,1283,1.479,1284,1.034,1285,1.611,1575,4.003,1669,2.253,1673,2.101,1778,2.253,2592,3.126,2781,2.444,3812,2.253,3813,4.015,3814,4.015,3815,4.591,3816,3.086,3817,3.086,3818,4.015,3819,3.086,3820,3.086,3821,3.086,3822,3.086,3823,3.086,3824,3.086,3825,4.591,3826,3.086,3827,3.086,3828,3.086,3829,3.086,3830,3.086,3831,3.086,3832,3.086,3833,3.086,3834,3.086,3835,3.086,3836,3.086,3837,3.086,3838,6.38,3839,2.699,3840,2.444,3841,2.699,3842,2.699,3843,2.699,3844,2.699,3845,2.699,3846,2.699,3847,2.699,3848,2.699,3849,2.699,3850,2.699,3851,2.699,3852,2.699,3853,2.699,3854,2.699,3855,2.699,3856,2.699,3857,2.699,3858,2.699,3859,2.699,3860,2.699,3861,2.699,3862,2.699,3863,2.699,3864,2.253,3865,2.699]],["title/interfaces/ProvinceList.html",[584,0.7,613,2.676]],["body/interfaces/ProvinceList.html",[0,0.006,3,0.159,4,0.173,5,0.08,8,0.173,9,0.702,10,1.328,20,0.536,26,0.012,28,0.267,29,0.576,30,1.024,44,0.985,45,0.994,50,1.003,65,1.06,71,0.576,79,0.241,81,0.355,82,0.806,84,0.252,87,0.832,89,0.729,99,0.006,100,0.008,101,0.006,106,1.817,147,0.597,173,1.166,209,0.517,220,0.685,235,0.64,313,0.216,319,1.328,378,2.311,382,4.201,383,3.355,400,2.113,416,1.138,474,0.64,476,0.832,478,0.832,549,0.943,584,0.708,586,1.619,587,1.748,588,1.748,595,1.5,596,1.736,600,1.924,602,1.363,603,1.328,609,4.353,612,3.087,613,4.684,614,2.879,615,3.912,631,0.972,637,1.135,639,3.1,642,0.955,673,2.311,674,1.463,675,1.988,676,1.463,677,1.246,752,2.415,766,4.195,768,3.087,771,3.087,774,3.087,789,2.999,801,1.565,803,1.988,804,2.423,806,1.988,807,1.947,808,1.947,809,1.803,879,5.797,945,2.185,964,1.677,965,1.677,1044,2.753,1171,2.871,1172,2.208,1173,2.208,1175,1.872,1176,2.113,1177,2.026,1178,2.026,1180,2.871,1185,1.803,1208,1.513,1209,2.055,1210,1.513,1211,2.055,1212,2.055,1213,2.055,1214,1.513,1215,1.513,1216,2.055,1217,2.055,1218,1.513,1219,1.513,1220,1.513,1221,1.513,1222,1.513,1223,2.055,1224,1.988,1225,1.513,1226,2.055,1227,2.055,1228,1.513,1229,2.055,1230,1.513,1231,1.513,1232,1.513,1233,1.513,1234,2.505,1235,1.513,1236,1.513,1237,1.513,1238,1.513,1239,1.513,1240,1.513,1241,1.513,1242,1.513,1243,1.513,1244,1.513,1245,1.513,1246,2.055,1247,1.513,1248,1.513,1249,1.513,1250,1.513,1251,2.055,1252,1.513,1253,1.513,1254,1.513,1255,1.513,1256,1.513,1257,1.513,1258,1.513,1259,1.513,1260,1.513,1261,1.513,1262,1.513,1263,1.513,1264,1.513,1265,2.055,1266,1.513,1267,1.513,1268,1.513,1269,1.513,1270,1.513,1271,1.246,1272,1.513,1273,1.513,1274,1.513,1275,1.513,1276,1.513,1277,1.513,1278,1.513,1279,1.513,1280,2.753,1281,2.113,1282,2.113,1283,2.026,1284,1.416,1285,2.208,1575,3.087,1669,3.087,1673,2.879,1778,3.087,2592,2.879,2781,3.348,3812,3.087,3813,3.698,3814,3.698,3818,3.698,3838,6.718,3839,3.698,3840,3.348,3841,3.698,3842,3.698,3843,3.698,3844,3.698,3845,3.698,3846,3.698,3847,3.698,3848,3.698,3849,3.698,3850,3.698,3851,3.698,3852,3.698,3853,3.698,3854,3.698,3855,3.698,3856,3.698,3857,3.698,3858,3.698,3859,3.698,3860,3.698,3861,3.698,3862,3.698,3863,3.698,3864,3.087,3865,3.698]],["title/components/RadioComponent.html",[313,0.157,551,0.932]],["body/components/RadioComponent.html",[0,0.005,3,0.131,4,0.142,5,0.094,8,0.142,9,0.612,10,1.844,11,1.017,13,0.589,20,0.635,23,0.665,25,1.074,26,0.012,27,0.553,28,0.337,29,0.75,30,1.115,33,1.049,34,1.331,37,1.379,43,1.04,44,1.022,45,1.112,50,1.188,51,3.411,52,0.825,56,1.188,57,0.801,64,0.895,65,1.154,71,0.545,79,0.202,81,0.292,82,0.663,84,0.172,99,0.005,100,0.007,101,0.005,106,0.751,147,0.491,162,2.173,209,0.612,215,1.573,220,1.269,235,1.3,239,1.476,246,0.751,269,0.775,274,2.401,295,0.825,302,4.375,313,0.221,319,2.545,326,1.303,380,0.751,407,1.05,416,1.093,423,1.188,466,0.799,467,0.877,468,0.85,469,0.877,473,0.684,474,1.31,476,0.985,478,0.985,493,0.825,494,1.303,495,0.509,496,1.672,497,0.905,498,0.905,499,0.751,500,0.905,501,0.775,502,0.905,503,0.775,504,0.905,505,0.799,506,0.905,507,0.799,508,0.905,509,0.799,510,0.905,511,0.799,512,0.905,513,0.799,514,0.85,515,0.905,516,0.775,517,0.905,518,0.775,519,0.905,520,0.799,521,0.905,522,0.905,523,0.799,524,0.905,525,0.775,526,0.905,527,0.799,528,1.528,529,0.799,530,0.751,531,0.775,532,1.303,533,0.775,534,0.905,535,0.799,536,0.905,537,0.799,538,0.905,539,0.751,540,0.905,541,0.799,542,0.905,543,0.799,544,0.877,545,0.905,546,0.775,547,0.775,548,0.905,549,0.775,550,0.905,551,1.582,552,0.905,553,0.799,554,0.905,555,0.799,556,0.905,557,0.799,558,0.905,559,0.775,560,0.905,561,0.799,562,0.85,563,0.799,564,0.775,565,0.905,566,0.663,567,0.775,568,0.905,569,0.775,570,0.905,571,0.775,572,0.905,573,0.775,574,0.905,575,0.775,576,0.905,577,0.775,578,0.905,579,0.775,580,0.905,581,0.775,582,0.877,583,0.905,595,1.152,596,1.524,600,1.967,602,1.524,603,1.092,627,1.092,631,1.152,642,0.509,659,4.111,666,2.875,674,2.032,675,1.203,676,2.032,677,1.025,684,3.366,733,2.875,737,1.815,749,2.875,801,1.854,802,1.854,803,1.203,804,2.224,805,1.854,806,1.734,807,2.306,808,1.6,809,2.136,901,1.734,903,1.244,904,1.164,905,1.127,906,1.244,910,3.657,914,4.381,933,1.573,960,5.619,964,1.987,965,1.987,967,5.393,968,3.757,983,2.059,1140,5.135,1148,3.029,1161,1.164,1162,1.287,1171,3.404,1174,2.738,1179,1.9,1180,3.404,1203,1.9,1280,2.401,1281,1.737,1483,3.411,2350,3.657,2510,2.753,2588,3.657,2591,5.956,2910,3.967,3206,3.967,3274,3.967,3723,3.967,3771,4.381,3866,3.04,3867,6.924,3868,5.009,3869,4.381,3870,5.009,3871,6.425,3872,4.381,3873,5.009,3874,7.094,3875,5.009,3876,7.094,3877,5.009,3878,5.009,3879,6.81,3880,5.009,3881,5.009,3882,5.009,3883,6.425,3884,5.009,3885,5.009,3886,5.009,3887,5.009,3888,5.009,3889,5.135,3890,5.009,3891,3.476,3892,3.476,3893,4.381,3894,3.476,3895,3.476,3896,3.476,3897,3.476,3898,3.476,3899,3.476,3900,3.476,3901,3.476,3902,3.476,3903,3.476,3904,3.476,3905,5.009,3906,3.476,3907,3.476,3908,3.476,3909,3.476,3910,3.476,3911,3.476,3912,5.009]],["title/guards/RouteGuardService.html",[201,2.529,214,2.529]],["body/guards/RouteGuardService.html",[0,0.006,3,0.163,4,0.177,5,0.082,8,0.177,11,1.436,13,0.832,15,3.042,16,4.525,20,0.55,21,2.951,22,4.6,23,0.567,25,1.071,26,0.012,27,0.513,28,0.289,29,0.709,30,1.113,45,1.224,57,0.778,59,2.09,64,1.36,71,0.455,74,3.39,79,0.243,81,0.364,83,2.166,84,0.149,87,1.149,89,0.965,99,0.006,100,0.008,101,0.006,106,0.937,108,3.547,136,2.491,138,3.855,165,1.996,173,1.044,187,2.491,196,2.238,197,5.18,199,2.951,202,4.366,203,3.353,204,1.618,209,0.53,214,4.895,215,1.835,216,5.109,217,2.388,218,2.02,219,6.652,239,2.085,273,4.366,274,2.8,342,6.185,360,2.238,405,2.402,481,1.722,665,3.042,666,3.793,667,4.867,688,3.194,755,2.293,821,3.05,861,4.266,913,2.8,1020,2.951,1062,4.626,1070,4.626,1071,4.626,1080,1.848,1087,3.978,1088,3.165,1095,4.266,1107,3.432,1110,2.621,1111,2.621,1118,5.233,1126,5.6,1442,4.626,1443,3.533,1485,4.266,2655,4.5,2659,3.996,2778,6.007,2948,4.626,3913,6.457,3914,3.791,3915,5.842,3916,5.842,3917,5.842,3918,5.842,3919,5.842,3920,7.606,3921,8.009,3922,8.009,3923,5.842,3924,5.842,3925,5.842,3926,5.842,3927,4.626,3928,5.842,3929,5.842,3930,5.842,3931,5.842,3932,4.334,3933,5.842,3934,4.334,3935,4.334,3936,4.334,3937,7.773,3938,7.773,3939,4.334,3940,6.608,3941,4.334,3942,4.334,3943,4.334,3944,4.334,3945,5.842,3946,4.334,3947,3.165,3948,4.334,3949,4.334,3950,4.334,3951,4.334]],["title/injectables/ServerPayload.html",[196,1.602,1017,3.054]],["body/injectables/ServerPayload.html",[0,0.009,3,0.2,4,0.218,5,0.1,8,0.218,9,0.816,23,0.613,26,0.012,28,0.313,42,5.743,71,0.6,79,0.263,81,0.447,84,0.23,89,1.02,99,0.007,100,0.009,101,0.007,107,3.99,112,4.67,117,4.189,138,4.199,146,3.22,164,2.911,165,2.451,173,0.952,196,2.795,198,3.056,220,1.182,755,1.726,993,3.407,994,6.242,995,4.216,1001,5.841,1002,6.382,1004,5.779,1005,5.841,1006,6.785,1008,5.841,1009,7.034,1010,6.692,1012,4.656,1013,4.183,1014,3.888,1015,6.382,1016,3.625,1017,4.877,1018,5.367,1019,6.382,1020,3.625,1021,6.382,1022,6.382,1023,5.841,1024,4.656,1025,5.841,1026,6.382,3952,5.324,3953,5.324,3954,5.324,3955,5.324]],["title/modules/SharedCoreModule.html",[1027,2.401,3956,2.676]],["body/modules/SharedCoreModule.html",[0,0.004,3,0.118,4,0.128,5,0.059,26,0.012,36,1.662,52,1.102,79,0.297,81,0.263,82,0.598,83,1.567,84,0.108,99,0.004,100,0.007,101,0.004,173,0.56,203,2.666,217,1.459,246,1.656,269,1.036,300,1.388,311,1.896,378,1.714,380,1.656,421,1.567,466,1.762,491,3.025,492,2.321,493,0.744,499,1.656,501,1.709,503,1.709,507,1.762,509,1.762,511,1.762,513,1.762,516,1.709,518,1.709,520,1.762,523,1.762,525,1.709,527,1.762,529,1.762,530,1.656,533,1.709,535,1.762,537,1.762,539,1.656,541,1.762,543,1.762,546,1.709,549,1.709,551,1.709,553,1.762,555,1.762,557,1.762,559,1.709,561,1.762,563,1.068,564,1.709,567,1.709,569,1.709,571,1.709,573,1.709,575,1.709,577,1.709,579,1.709,581,1.709,744,1.16,789,1.637,899,1.503,908,1.714,951,2.483,1027,1.8,1029,1.896,1030,3.767,1031,4.382,1036,3.678,1037,2.289,1043,2.135,1053,4.062,1056,4.062,1057,2.483,1551,2.483,2314,2.742,2498,2.289,2516,2.483,2524,2.483,3041,3.392,3081,2.289,3257,2.483,3397,1.8,3473,2.483,3493,2.483,3725,2.483,3773,2.483,3956,5.65,3957,2.742,3958,2.742,3959,2.742,3960,2.742,3961,2.742,3962,3.135,3963,3.135,3964,4.645,3965,5.533,3966,4.645,3967,3.135,3968,3.135,3969,3.135,3970,2.483,3971,3.135,3972,3.135,3973,3.135,3974,4.645,3975,3.135,3976,3.135,3977,3.135,3978,3.135,3979,3.135,3980,3.135,3981,3.135,3982,3.135,3983,3.135,3984,3.135,3985,3.135,3986,3.135,3987,4.645,3988,4.645,3989,3.135,3990,3.135,3991,3.135,3992,4.645,3993,2.742,3994,3.135,3995,3.135,3996,3.135,3997,3.135,3998,3.135,3999,3.135,4000,3.135,4001,3.135,4002,3.135,4003,3.135,4004,3.135,4005,3.135,4006,3.135,4007,3.135,4008,3.135,4009,3.135,4010,3.135,4011,3.135,4012,3.135,4013,3.135,4014,3.135,4015,3.135,4016,3.135,4017,3.135,4018,3.135,4019,3.135,4020,2.483,4021,3.135,4022,3.135,4023,2.483,4024,3.135,4025,3.135,4026,3.135,4027,3.135,4028,3.135,4029,3.135,4030,3.135,4031,3.135,4032,3.135,4033,4.839,4034,3.135,4035,3.135,4036,3.135,4037,3.135,4038,3.135]],["title/interfaces/SimpleDate.html",[584,0.7,2177,2.529]],["body/interfaces/SimpleDate.html",[3,0.243,4,0.264,5,0.122,8,0.264,9,0.917,26,0.012,28,0.324,84,0.222,99,0.009,100,0.01,101,0.009,106,1.395,162,2.388,326,2.235,584,1.256,586,2.472,2177,4.537,2196,4.938,2201,4.938,2264,4.687,4039,5.644,4040,5.644,4041,5.644,4042,6.453,4043,6.453,4044,5.644,4045,6.453]],["title/components/SinComponent.html",[313,0.157,553,0.962]],["body/components/SinComponent.html",[0,0.005,3,0.133,4,0.144,5,0.095,8,0.144,9,0.619,10,1.859,11,1.028,13,0.596,20,0.642,23,0.673,25,1.138,26,0.012,27,0.57,28,0.34,29,0.778,30,1.002,33,1.06,37,1.399,43,1.043,44,1.038,45,0.876,50,1.404,52,0.837,56,1.201,57,0.864,63,3.697,64,0.905,65,1.19,71,0.559,79,0.222,81,0.296,82,0.672,84,0.121,89,0.448,99,0.005,100,0.007,101,0.005,114,2.331,147,0.715,162,1.873,181,2.726,209,0.619,220,1.11,235,1.301,246,0.763,269,0.787,295,0.837,313,0.223,319,2.468,326,2.066,380,0.763,400,2.959,407,1.058,416,1.038,423,1.201,466,0.811,467,0.89,468,0.863,469,0.89,473,0.694,474,1.311,476,0.996,478,0.996,493,0.837,494,1.317,495,0.516,496,1.683,497,0.918,498,0.918,499,0.763,500,0.918,501,0.787,502,0.918,503,0.787,504,0.918,505,0.811,506,0.918,507,0.811,508,0.918,509,0.811,510,0.918,511,0.811,512,0.918,513,0.811,514,0.863,515,0.918,516,0.787,517,0.918,518,0.787,519,0.918,520,0.811,521,0.918,522,0.918,523,0.811,524,0.918,525,0.787,526,0.918,527,0.811,528,1.541,529,0.811,530,0.763,531,0.787,532,1.317,533,0.787,534,0.918,535,0.811,536,0.918,537,0.811,538,0.918,539,0.763,540,0.918,541,0.811,542,0.918,543,0.811,544,0.89,545,0.918,546,0.787,547,0.787,548,0.918,549,0.787,550,0.918,551,0.787,552,0.918,553,1.488,554,0.918,555,0.811,556,0.918,557,0.811,558,0.918,559,0.787,560,0.918,561,0.811,562,0.863,563,0.811,564,0.787,565,0.918,566,0.672,567,0.787,568,0.918,569,0.787,570,0.918,571,0.787,572,0.918,573,0.787,574,0.918,575,0.787,576,0.918,577,0.787,578,0.918,579,0.787,580,0.918,581,0.787,582,0.89,583,0.918,595,1.362,596,1.742,600,1.983,602,1.534,603,1.108,627,1.108,631,1.164,637,1.359,639,3.033,642,0.741,674,2.049,675,1.752,676,2.049,677,1.04,684,1.624,752,1.306,801,2.191,802,1.306,803,1.752,804,2.467,805,1.306,806,1.752,807,2.331,808,1.624,809,2.159,871,2.134,901,1.752,903,1.262,904,1.182,905,1.144,906,1.262,933,1.59,945,2.167,964,2.348,965,2.348,983,1.45,1044,2.426,1161,1.182,1162,1.306,1171,3.423,1172,3.091,1173,3.091,1174,2.768,1175,2.622,1176,2.959,1177,2.838,1178,2.838,1179,1.929,1180,3.423,1185,2.159,1193,2.025,1195,2.025,1203,1.929,1205,2.025,1207,2.025,1280,2.426,1281,1.763,1282,1.763,1283,1.691,1284,1.182,1285,1.842,1331,2.159,1401,3.061,2345,3.237,2566,2.258,2706,3.447,3318,4.427,3397,3.398,3701,6.235,3717,2.576,3719,2.576,3720,2.402,3721,2.794,3722,4.427,3723,4.009,4046,3.085,4047,5.815,4048,5.062,4049,5.062,4050,5.062,4051,3.528,4052,5.062,4053,3.528,4054,5.062,4055,3.528,4056,3.528,4057,3.528,4058,5.062,4059,3.528,4060,3.528,4061,3.528,4062,3.528,4063,3.528,4064,3.528,4065,3.528,4066,3.528,4067,3.528,4068,3.528,4069,3.528,4070,3.528,4071,3.528,4072,7.344]],["title/components/StreetComponent.html",[313,0.157,555,0.962]],["body/components/StreetComponent.html",[0,0.004,3,0.108,4,0.117,5,0.082,8,0.117,9,0.531,10,1.647,11,0.882,13,0.511,20,0.551,23,0.672,25,1.137,26,0.012,27,0.574,28,0.339,29,0.772,30,1.006,33,0.91,34,1.099,37,1.138,43,1.024,44,1.012,45,1.013,50,1.031,51,2.959,52,0.68,56,1.031,57,0.884,59,1.877,63,2.094,64,0.777,65,1.198,71,0.56,74,2.083,79,0.236,81,0.241,82,0.547,84,0.099,89,0.742,99,0.009,100,0.006,101,0.008,104,2.083,107,1.568,114,2,130,3.539,132,1.061,138,3.283,147,0.614,165,1.321,166,2.508,168,1.568,181,1.321,183,3.441,209,0.531,220,1.019,235,1.281,246,0.62,269,0.639,295,0.68,300,2.323,313,0.197,319,2.158,336,1.853,373,1.27,380,0.62,388,2.094,395,2.959,400,2.622,401,1.835,407,1.046,410,1.835,411,2.508,415,3.173,416,1.061,423,1.031,466,0.66,467,0.724,468,0.702,469,0.724,472,1.452,473,0.564,474,1.294,476,0.855,478,0.855,481,1.725,491,1.568,492,1.433,493,0.68,494,1.131,495,0.42,496,1.523,497,0.746,498,0.746,499,0.62,500,0.746,501,0.639,502,0.746,503,0.639,504,0.746,505,0.66,506,0.746,507,0.66,508,0.746,509,0.66,510,0.746,511,0.66,512,0.746,513,0.66,514,0.702,515,0.746,516,0.639,517,0.746,518,0.639,519,0.746,520,0.66,521,0.746,522,0.746,523,0.66,524,0.746,525,0.639,526,0.746,527,0.66,528,1.365,529,0.66,530,0.62,531,1.169,532,1.131,533,0.639,534,0.746,535,0.66,536,0.746,537,0.66,538,0.746,539,0.62,540,0.746,541,0.66,542,0.746,543,0.66,544,0.724,545,0.746,546,0.639,547,0.639,548,0.746,549,0.639,550,0.746,551,0.639,552,0.746,553,0.66,554,0.746,555,1.346,556,0.746,557,0.66,558,0.746,559,0.639,560,0.746,561,0.66,562,0.702,563,0.66,564,0.639,565,0.746,566,0.547,567,0.639,568,0.746,569,0.639,570,0.746,571,0.639,572,0.746,573,0.639,574,0.746,575,0.639,576,0.746,577,0.639,578,0.746,579,0.639,580,0.746,581,0.639,582,0.724,583,0.746,587,1.322,588,1.322,595,1.346,596,1.753,600,1.757,602,1.388,603,0.901,604,1.646,605,2.271,606,3.055,627,0.901,631,0.999,637,1.408,639,2.591,642,0.968,646,4.383,661,3.441,673,2.868,674,1.816,675,1.504,676,1.816,677,0.845,744,1.061,752,1.608,755,2.229,775,4.505,778,3.359,787,4.154,790,4.154,801,1.941,802,1.061,803,1.504,804,2.29,805,1.061,806,1.504,807,2,808,1.321,809,1.853,835,3.8,874,5.118,877,1.568,901,1.504,903,1.026,904,0.961,905,0.93,906,1.026,933,1.365,945,2.216,964,2.081,965,2.081,983,1.179,1013,1.568,1044,2.083,1161,0.961,1162,1.061,1171,3.143,1172,2.739,1173,2.739,1174,2.375,1175,2.591,1176,2.622,1177,2.514,1178,2.514,1179,1.568,1180,3.143,1185,1.853,1193,1.646,1195,1.646,1203,1.568,1205,1.646,1207,1.646,1208,1.026,1209,1.555,1210,1.026,1211,1.555,1212,1.555,1213,1.555,1214,1.026,1215,1.026,1216,1.555,1217,1.555,1218,1.026,1219,1.026,1220,1.026,1221,1.026,1222,1.026,1223,1.555,1224,1.504,1225,1.026,1226,1.555,1227,1.555,1228,1.026,1229,1.555,1230,1.026,1231,1.026,1232,1.026,1233,1.026,1234,2.094,1235,1.026,1236,1.026,1237,1.026,1238,1.026,1239,1.026,1240,1.026,1241,1.026,1242,1.026,1243,1.026,1244,1.026,1245,1.026,1246,1.026,1247,1.026,1248,1.026,1249,1.026,1250,1.026,1251,1.555,1252,1.026,1253,1.026,1254,1.026,1255,1.026,1256,1.026,1257,1.026,1258,1.026,1259,1.026,1260,1.026,1261,1.026,1262,1.026,1263,1.026,1264,1.026,1265,1.555,1266,1.026,1267,1.026,1268,1.026,1269,1.026,1270,1.026,1271,0.845,1272,1.026,1273,1.026,1274,1.026,1275,1.026,1276,1.026,1277,1.026,1278,1.026,1279,1.026,1280,2.083,1281,1.433,1282,1.433,1283,1.375,1284,0.961,1285,1.498,1392,1.953,1418,1.835,2206,2.094,2293,4.154,2302,3.8,2536,2.959,2588,2.094,2629,2.508,2673,1.953,2697,2.094,2780,2.271,3030,3.8,3059,2.271,3131,2.271,3156,4.638,3208,2.271,3414,2.094,3595,2.271,4073,2.508,4074,4.345,4075,4.345,4076,5.246,4077,6.288,4078,4.345,4079,4.345,4080,5.246,4081,5.246,4082,4.345,4083,2.868,4084,2.868,4085,4.345,4086,2.868,4087,2.868,4088,2.868,4089,2.868,4090,4.345,4091,2.868,4092,2.868,4093,2.868,4094,2.868,4095,2.868,4096,4.345,4097,2.868,4098,2.868,4099,4.345,4100,2.868,4101,4.345,4102,5.852,4103,2.868,4104,2.868,4105,2.868,4106,2.868,4107,2.868,4108,2.868,4109,2.868,4110,2.868,4111,2.868,4112,6.288,4113,2.868,4114,3.8,4115,2.868,4116,2.868,4117,5.118,4118,2.868,4119,4.345,4120,2.868,4121,2.868,4122,2.868,4123,2.868,4124,2.868,4125,2.868,4126,2.868,4127,2.868,4128,2.868,4129,2.868,4130,2.868,4131,2.868,4132,2.868,4133,2.868,4134,2.868,4135,2.868,4136,2.868,4137,4.345,4138,2.868,4139,2.868,4140,2.868,4141,2.868,4142,4.345,4143,2.868,4144,2.868]],["title/components/ThumbnailComponent.html",[313,0.157,557,0.962]],["body/components/ThumbnailComponent.html",[0,0.006,3,0.155,4,0.169,5,0.106,8,0.169,9,0.691,11,1.147,13,0.665,20,0.524,23,0.649,25,0.856,26,0.012,27,0.526,28,0.32,29,0.567,30,0.827,33,1.184,37,1.637,43,0.771,44,0.691,45,0.978,52,0.979,56,1.34,57,0.815,64,1.01,65,1.049,71,0.284,79,0.222,80,1.828,81,0.347,84,0.142,99,0.006,100,0.008,101,0.006,147,0.798,173,0.738,209,0.691,220,1.044,235,1.314,246,0.892,269,0.92,295,0.979,313,0.242,326,1.47,370,2.81,380,0.892,407,1.01,416,0.911,423,1.34,466,0.949,467,1.041,468,1.01,469,1.041,472,1.784,473,0.812,474,1.321,476,1.112,478,1.112,481,2.043,491,2.256,492,2.062,493,0.979,494,1.47,495,0.604,496,1.803,497,1.074,498,1.074,499,0.892,500,1.074,501,0.92,502,1.074,503,0.92,504,1.074,505,0.949,506,1.074,507,0.949,508,1.074,509,0.949,510,1.074,511,0.949,512,1.074,513,0.949,514,1.01,515,1.074,516,0.92,517,1.074,518,0.92,519,1.074,520,0.949,521,1.074,522,1.074,523,0.949,524,1.074,525,0.92,526,1.074,527,0.949,528,1.677,529,0.949,530,0.892,531,0.92,532,1.47,533,0.92,534,1.074,535,0.949,536,1.074,537,0.949,538,1.074,539,0.892,540,1.074,541,0.949,542,1.074,543,0.949,544,1.041,545,1.074,546,0.92,547,0.92,548,1.074,549,0.92,550,1.074,551,0.92,552,1.074,553,0.949,554,1.074,555,0.949,556,1.074,557,1.594,558,1.074,559,0.92,560,1.074,561,0.949,562,1.01,563,0.949,564,0.92,565,1.074,566,0.787,567,0.92,568,1.074,569,0.92,570,1.074,571,0.92,572,1.074,573,0.92,574,1.074,575,0.92,576,1.074,577,0.92,578,1.074,579,0.92,580,1.074,581,0.92,582,1.041,583,1.074,587,1.719,588,1.719,595,1.299,596,1.644,642,0.604,673,3.789,737,2.95,755,2.089,933,1.774,1208,1.477,1209,2.022,1210,1.477,1211,2.022,1212,2.022,1213,2.022,1214,1.477,1215,1.477,1216,2.022,1217,2.022,1218,1.477,1219,1.477,1220,1.477,1221,1.477,1222,1.477,1223,2.022,1224,1.956,1225,1.477,1226,2.022,1227,2.022,1228,1.477,1229,2.022,1230,1.477,1231,1.477,1232,1.477,1233,1.477,1234,2.48,1235,1.477,1236,1.477,1237,1.477,1238,1.477,1239,1.477,1240,1.477,1241,1.477,1242,1.477,1243,1.477,1244,1.477,1245,1.477,1246,1.477,1247,1.477,1248,1.477,1249,1.477,1250,1.477,1251,2.022,1252,1.477,1253,1.477,1254,1.477,1255,1.477,1256,1.477,1257,1.477,1258,1.477,1259,1.477,1260,1.477,1261,1.477,1262,1.477,1263,1.477,1264,1.477,1265,2.022,1266,1.477,1267,1.477,1268,1.477,1269,1.477,1270,1.477,1271,1.216,1272,1.477,1273,1.477,1274,1.477,1275,1.477,1276,1.477,1277,1.477,1278,1.477,1279,1.477,1286,3.523,2276,1.978,2529,5.103,2541,3.609,2653,3.609,2676,4.126,2729,4.942,2775,3.268,2910,3.268,3017,4.475,3337,4.942,3338,5.635,3356,5.635,4145,3.609,4146,5.651,4147,5.651,4148,6.444,4149,8.096,4150,6.444,4151,6.444,4152,6.444,4153,6.444,4154,5.651,4155,5.651,4156,4.127,4157,4.127,4158,4.127,4159,4.127,4160,4.127,4161,4.127,4162,4.127,4163,4.127,4164,4.127,4165,6.93,4166,4.127,4167,4.127,4168,5.651,4169,4.127,4170,4.127,4171,4.127,4172,5.651,4173,6.93,4174,4.127,4175,5.651,4176,5.651]],["title/components/ToggleComponent.html",[313,0.157,559,0.932]],["body/components/ToggleComponent.html",[0,0.006,3,0.17,4,0.185,5,0.113,8,0.185,9,0.734,11,1.219,13,0.706,20,0.855,23,0.617,26,0.012,27,0.489,28,0.294,30,0.878,33,1.257,43,0.616,44,0.552,52,1.07,56,1.424,57,0.531,64,1.073,65,0.683,71,0.464,79,0.206,81,0.379,84,0.155,99,0.006,100,0.008,101,0.006,147,0.848,191,2.675,209,0.734,220,0.972,235,1.32,246,0.975,269,1.006,295,1.07,313,0.254,319,2.118,380,0.975,407,1.205,416,0.953,423,1.424,466,1.038,467,1.139,468,1.104,469,1.139,472,1.867,473,0.888,474,1.327,476,1.181,478,1.181,481,2.119,493,1.07,494,1.562,495,0.66,496,1.871,497,1.174,498,1.174,499,0.975,500,1.174,501,1.006,502,1.174,503,1.006,504,1.174,505,1.038,506,1.174,507,1.038,508,1.174,509,1.038,510,1.174,511,1.038,512,1.174,513,1.038,514,1.104,515,1.174,516,1.006,517,1.174,518,1.006,519,1.174,520,1.038,521,1.174,522,1.174,523,1.038,524,1.174,525,1.006,526,1.174,527,1.038,528,1.755,529,1.038,530,0.975,531,1.006,532,1.562,533,1.006,534,1.174,535,1.038,536,1.174,537,1.038,538,1.174,539,0.975,540,1.174,541,1.038,542,1.174,543,1.038,544,1.139,545,1.174,546,1.006,547,1.006,548,1.174,549,1.006,550,1.174,551,1.006,552,1.174,553,1.038,554,1.174,555,1.038,556,1.174,557,1.038,558,1.174,559,1.603,560,1.174,561,1.038,562,1.104,563,1.038,564,1.006,565,1.174,566,0.86,567,1.006,568,1.174,569,1.006,570,1.174,571,1.006,572,1.174,573,1.006,574,1.174,575,1.006,576,1.174,577,1.006,578,1.174,579,1.006,580,1.174,581,1.006,582,1.139,583,1.174,587,1.826,588,1.826,595,1.38,596,1.705,602,1.705,603,1.417,627,1.417,631,1.38,642,0.66,677,1.33,901,2.077,903,1.615,904,1.512,905,1.463,906,1.615,933,1.885,958,4.753,969,5.341,1161,1.512,1162,1.67,1208,1.615,1209,2.148,1210,1.615,1211,2.148,1212,2.148,1213,2.148,1214,1.615,1215,1.615,1216,2.148,1217,2.148,1218,1.615,1219,1.615,1220,1.615,1221,1.615,1222,1.615,1223,2.148,1224,2.077,1225,1.615,1226,2.148,1227,2.148,1228,1.615,1229,2.148,1230,1.615,1231,1.615,1232,1.615,1233,1.615,1234,2.572,1235,1.615,1236,1.615,1237,1.615,1238,1.615,1239,1.615,1240,1.615,1241,1.615,1242,1.615,1243,1.615,1244,1.615,1245,1.615,1246,1.615,1247,1.615,1248,1.615,1249,1.615,1250,1.615,1251,2.148,1252,1.615,1253,1.615,1254,1.615,1255,1.615,1256,1.615,1257,1.615,1258,1.615,1259,1.615,1260,1.615,1261,1.615,1262,1.615,1263,1.615,1264,1.615,1265,2.148,1266,1.615,1267,1.615,1268,1.615,1269,1.615,1270,1.615,1271,1.33,1272,1.615,1273,1.615,1274,1.615,1275,1.615,1276,1.615,1277,1.615,1278,1.615,1279,1.615,4177,3.947,4178,6.002,4179,6.002,4180,6.002,4181,4.513,4182,4.513,4183,4.513]],["title/directives/ValidateBcPostalDirective.html",[495,0.612,573,0.932]],["body/directives/ValidateBcPostalDirective.html",[0,0.008,3,0.218,4,0.237,5,0.109,8,0.237,13,0.829,23,0.465,25,0.879,26,0.012,27,0.421,28,0.288,29,0.582,57,0.683,71,0.399,79,0.242,81,0.488,82,1.106,84,0.242,87,1.492,88,3.95,89,0.962,99,0.008,100,0.01,101,0.008,163,3.172,173,1.259,204,1.95,209,0.861,217,2.211,218,2.012,448,2.569,473,1.141,474,1.066,495,1.03,547,1.293,566,1.106,573,1.758,668,2.671,728,2.99,789,3.959,845,6.896,846,6.159,847,3.95,848,5.074,849,5.074,959,2.895,2248,4.146,2342,3.779,2456,4.586,2457,4.586,2463,3.509,2467,4.259,2503,5.501,2505,4.506,3468,3.712,3547,3.95,3588,4.236,3772,5.577,4020,5.577,4184,5.074,4185,6.896,4186,5.802,4187,5.577,4188,5.802,4189,5.074,4190,5.802]],["title/directives/ValidateNameDirective.html",[495,0.612,575,0.932]],["body/directives/ValidateNameDirective.html",[0,0.008,3,0.22,4,0.239,5,0.11,8,0.239,13,0.833,23,0.469,25,0.886,26,0.012,27,0.513,28,0.289,29,0.587,57,0.688,71,0.402,79,0.243,81,0.492,82,1.115,84,0.243,87,1.497,88,3.983,89,0.965,99,0.008,100,0.01,101,0.008,163,3.198,173,1.265,204,1.96,209,0.865,217,2.222,218,2.022,448,2.59,473,1.151,474,1.072,495,1.036,566,1.115,575,1.763,728,2.997,847,3.983,959,2.91,2248,4.16,2342,3.79,2456,4.602,2457,4.602,2463,3.537,2467,4.28,2503,5.514,2505,4.529,3117,5.168,3118,4.632,3468,3.743,3547,4.819,3588,4.271,4187,5.605,4189,5.116,4191,6.19,4192,5.116,4193,6.916,4194,5.849,4195,5.849]],["title/directives/ValidatePhnDirective.html",[495,0.612,577,0.932]],["body/directives/ValidatePhnDirective.html",[0,0.007,3,0.187,4,0.203,5,0.093,8,0.203,13,0.751,23,0.566,25,0.751,26,0.012,27,0.36,28,0.305,29,0.497,30,1.213,33,1.337,34,1.899,43,0.871,44,0.943,45,1.29,57,0.583,71,0.531,79,0.22,81,0.417,82,0.945,84,0.22,87,1.601,89,1.002,94,1.835,99,0.011,100,0.009,101,0.007,163,2.71,169,2.282,173,1.141,177,3.86,181,2.939,187,2.114,204,1.767,209,0.78,217,2.004,218,1.823,294,3.62,385,1.66,386,2.71,416,0.997,448,3.126,473,0.975,474,0.967,495,0.934,566,0.945,577,1.662,728,2.973,752,2.612,877,3.489,959,2.624,1331,3.179,2248,3.859,2276,3.383,2342,3.573,2456,4.269,2457,4.269,2463,2.998,2467,4.269,2503,5.252,2505,4.084,2510,3.926,2511,3.62,2512,3.62,2681,5.865,2718,3.62,3691,5.443,3947,3.62,4196,5.903,4197,3.926,4198,5.903,4199,6.906,4200,6.361,4201,4.958,4202,4.958,4203,4.958,4204,4.958,4205,5.59,4206,4.336,4207,4.958,4208,4.958,4209,5.582,4210,4.958,4211,4.958,4212,4.958,4213,4.958,4214,4.336,4215,4.958,4216,4.336,4217,6.383,4218,4.958,4219,7.454,4220,4.958,4221,4.958,4222,4.958,4223,6.383,4224,4.958,4225,4.958,4226,4.958]],["title/directives/ValidateSinDirective.html",[495,0.612,579,0.932]],["body/directives/ValidateSinDirective.html",[0,0.008,3,0.217,4,0.236,5,0.109,8,0.236,13,0.826,23,0.462,25,0.873,26,0.012,27,0.418,28,0.287,29,0.578,57,0.679,71,0.397,79,0.241,81,0.485,82,1.099,84,0.241,87,1.488,89,0.959,94,2.134,99,0.011,100,0.01,101,0.008,163,3.152,173,1.031,177,3.487,187,2.459,204,1.943,209,0.858,217,2.203,218,2.004,294,4.211,448,2.554,473,1.134,474,1.062,495,1.027,566,1.099,579,1.754,728,2.985,959,2.884,1331,2.459,2248,4.135,2276,3.363,2342,3.772,2456,4.574,2457,4.574,2463,3.487,2467,3.487,2503,5.492,2505,4.49,2673,4.778,2718,4.211,3947,4.211,4047,5.989,4187,5.556,4206,5.043,4216,6.882,4227,6.136,4228,5.043,4229,6.882,4230,5.766,4231,5.766,4232,5.766]],["title/components/WizardProgressBarComponent.html",[313,0.157,561,0.962]],["body/components/WizardProgressBarComponent.html",[0,0.005,3,0.131,4,0.142,5,0.094,8,0.142,9,0.612,11,1.016,13,0.589,20,0.44,21,2.364,22,4.288,23,0.628,25,0.758,26,0.012,27,0.494,28,0.29,29,0.502,33,1.048,37,1.985,43,0.474,44,0.424,52,0.824,53,3.686,56,1.187,57,0.801,64,0.895,65,0.889,68,3.368,74,2.399,76,3.963,78,1.664,79,0.234,80,1.538,81,0.292,83,1.735,84,0.119,89,0.744,94,1.285,99,0.005,100,0.007,101,0.005,106,0.75,132,1.285,135,2.535,147,0.907,165,2.701,168,1.898,173,1.217,209,0.612,220,0.951,235,1.3,246,0.75,269,0.774,280,2.535,295,0.824,313,0.221,326,1.845,335,1.813,336,1.481,354,1.985,380,0.75,407,0.895,416,0.707,422,3.026,423,1.187,466,0.798,467,0.876,468,0.849,469,0.876,472,1.625,473,0.683,474,1.31,476,0.985,478,0.985,481,1.893,491,2.736,492,2.501,493,0.824,494,1.302,495,0.508,496,1.671,497,0.904,498,0.904,499,0.75,500,0.904,501,0.774,502,0.904,503,0.774,504,0.904,505,0.798,506,0.904,507,0.798,508,0.904,509,0.798,510,0.904,511,0.798,512,0.904,513,0.798,514,0.849,515,0.904,516,0.774,517,0.904,518,0.774,519,0.904,520,0.798,521,0.904,522,0.904,523,0.798,524,0.904,525,0.774,526,0.904,527,0.798,528,1.527,529,0.798,530,0.75,531,0.774,532,1.302,533,0.774,534,0.904,535,0.798,536,0.904,537,0.798,538,0.904,539,0.75,540,0.904,541,0.798,542,0.904,543,0.798,544,0.876,545,0.904,546,0.774,547,0.774,548,0.904,549,0.774,550,0.904,551,0.774,552,0.904,553,0.798,554,0.904,555,0.798,556,0.904,557,0.798,558,0.904,559,0.774,560,0.904,561,1.477,562,1.788,563,1.963,564,0.774,565,0.904,566,0.662,567,0.774,568,0.904,569,0.774,570,0.904,571,0.774,572,0.904,573,0.774,574,0.904,575,0.774,576,0.904,577,0.774,578,0.904,579,0.774,580,0.904,581,0.774,582,0.876,583,0.904,587,1.522,588,1.522,637,0.932,643,2.364,665,2.304,744,1.285,752,1.852,755,2.37,859,4.377,897,2.736,899,2.399,923,3.026,946,3.548,1020,2.364,1080,2.502,1187,3.202,1208,1.242,1209,1.791,1210,1.242,1211,1.791,1212,1.791,1213,1.791,1214,1.242,1215,1.242,1216,1.791,1217,1.791,1218,1.242,1219,1.242,1220,1.242,1221,1.242,1222,1.242,1223,1.791,1224,1.732,1225,1.242,1226,1.791,1227,1.791,1228,1.242,1229,1.791,1230,1.242,1231,1.242,1232,1.242,1233,1.242,1234,2.298,1235,1.242,1236,1.242,1237,1.242,1238,1.242,1239,1.242,1240,1.242,1241,1.242,1242,1.242,1243,1.242,1244,1.242,1245,1.242,1246,1.242,1247,1.242,1248,1.242,1249,1.242,1250,1.242,1251,1.791,1252,1.242,1253,1.242,1254,1.242,1255,1.242,1256,1.242,1257,1.242,1258,1.242,1259,1.242,1260,1.242,1261,1.242,1262,1.242,1263,1.242,1264,1.242,1265,1.791,1266,1.242,1267,1.242,1268,1.242,1269,1.242,1270,1.242,1271,1.023,1272,1.242,1273,1.242,1274,1.242,1275,1.242,1276,1.242,1277,1.242,1278,1.242,1279,1.242,1284,1.163,1401,2.1,1443,3.026,1444,1.993,1453,2.222,1465,2.75,1467,2.75,1523,3.026,1527,4.647,1530,3.755,2174,3.995,2175,4.109,2207,2.222,2267,2.535,2273,2.75,2345,3.511,2439,3.408,2535,2.222,2536,2.364,2643,5.953,2658,2.535,2778,3.654,3042,2.535,3043,3.963,3044,3.963,3054,3.037,3085,3.963,3236,5.132,3237,3.037,3238,3.037,3239,3.037,3330,4.377,3720,2.364,3736,4.377,3970,6.269,4044,4.377,4233,6.923,4234,5.868,4235,5.868,4236,5.005,4237,5.868,4238,5.868,4239,5.868,4240,6.422,4241,5.005,4242,6.422,4243,6.422,4244,5.005,4245,3.472,4246,5.005,4247,3.472,4248,3.472,4249,3.472,4250,3.472,4251,5.005,4252,5.005,4253,5.132,4254,4.377,4255,5.005,4256,5.005,4257,3.654,4258,3.472,4259,5.868,4260,5.005,4261,3.472,4262,5.868,4263,5.005,4264,3.472,4265,3.472,4266,3.472,4267,3.472,4268,3.472,4269,3.472,4270,3.472,4271,3.472,4272,3.472,4273,3.472,4274,3.472,4275,3.472,4276,5.868,4277,3.472,4278,3.472,4279,3.472,4280,3.472,4281,3.472,4282,3.472,4283,6.807,4284,3.472,4285,5.005,4286,3.472,4287,3.472,4288,3.472,4289,3.472,4290,3.472,4291,5.005,4292,3.472,4293,3.472,4294,3.472,4295,3.472,4296,3.472,4297,3.472,4298,3.472,4299,3.472,4300,2.75,4301,3.472,4302,3.472,4303,3.472,4304,3.472,4305,3.472,4306,3.472,4307,3.472,4308,3.472,4309,5.005]],["title/interfaces/WizardProgressItem.html",[584,0.7,1530,2.676]],["body/interfaces/WizardProgressItem.html",[0,0.008,3,0.289,4,0.244,5,0.112,8,0.244,9,0.875,17,2.544,26,0.012,28,0.293,59,2.135,65,0.903,71,0.584,74,4.067,79,0.205,83,2.982,84,0.246,89,0.909,99,0.008,100,0.01,101,0.008,150,2.453,162,2.208,236,4.725,305,4.725,364,3.425,483,5.629,562,1.459,563,1.372,584,1.199,586,2.285,602,1.415,684,2.747,763,4.356,764,2.982,1079,4.331,1523,4.331,1524,4.725,1525,5.218,1526,5.218,1527,4.725,1529,5.218,1530,4.911,1532,5.218,1533,5.218,1535,5.218,1536,5.218,1537,5.23,1541,5.218,1542,5.218,1543,5.218,1544,5.218,1545,5.218,1546,5.218,1547,5.218,1548,6.264,1549,5.218]],["title/components/XiconButtonComponent.html",[313,0.157,564,0.932]],["body/components/XiconButtonComponent.html",[0,0.006,3,0.172,4,0.187,5,0.114,8,0.187,11,1.228,13,0.712,20,0.86,23,0.619,26,0.012,27,0.492,28,0.277,33,1.267,34,1.748,50,1.082,52,1.082,56,1.831,57,0.712,64,1.081,65,0.916,71,0.416,79,0.208,81,0.384,84,0.157,99,0.006,100,0.008,101,0.006,145,4.117,147,0.854,150,1.876,173,0.816,209,0.739,232,3.108,235,1.322,239,1.782,246,0.986,269,1.017,295,1.082,313,0.255,319,2.541,352,2.62,380,0.986,397,4.415,407,1.081,416,0.854,423,1.434,466,1.05,467,1.151,468,1.116,469,1.151,472,1.878,473,0.898,474,1.327,476,1.19,478,1.19,481,2.128,488,5.272,493,1.082,494,1.574,495,0.668,496,1.879,497,1.188,498,1.188,499,0.986,500,1.188,501,1.017,502,1.188,503,1.017,504,1.188,505,1.05,506,1.188,507,1.05,508,1.188,509,1.05,510,1.188,511,1.05,512,1.188,513,1.05,514,1.116,515,1.188,516,1.017,517,1.188,518,1.017,519,1.188,520,1.05,521,1.188,522,1.188,523,1.05,524,1.188,525,1.017,526,1.188,527,1.05,528,1.765,529,1.05,530,0.986,531,1.017,532,1.574,533,1.017,534,1.188,535,1.05,536,1.188,537,1.05,538,1.188,539,0.986,540,1.188,541,1.05,542,1.188,543,1.05,544,1.151,545,1.188,546,1.017,547,1.017,548,1.188,549,1.017,550,1.188,551,1.017,552,1.188,553,1.05,554,1.188,555,1.05,556,1.188,557,1.05,558,1.188,559,1.017,560,1.188,561,1.05,562,1.116,563,1.05,564,1.61,565,2.106,566,0.87,567,1.017,568,1.188,569,1.017,570,1.188,571,1.017,572,1.188,573,1.017,574,1.188,575,1.017,576,1.188,577,1.017,578,1.188,579,1.017,580,1.188,581,1.017,582,1.151,583,1.188,595,1.56,596,1.868,642,0.992,650,2.76,698,2.495,737,2.383,913,2.187,929,5.288,930,5.288,933,1.899,953,3.333,1148,2.76,1284,2.025,1437,3.614,3353,4.789,3414,4.415,3416,3.333,4023,6.236,4300,3.614,4310,6.887,4311,3.991,4312,7.22,4313,5.931,4314,6.047,4315,4.564,4316,6.314,4317,4.564,4318,4.564,4319,4.564,4320,4.564,4321,4.564,4322,4.564,4323,4.564,4324,4.564,4325,6.047,4326,4.564,4327,4.564,4328,4.564,4329,4.564,4330,4.564,4331,4.564,4332,4.564]],["title/directives/YearValidateDirective.html",[495,0.612,581,0.932]],["body/directives/YearValidateDirective.html",[0,0.007,3,0.187,4,0.203,5,0.094,8,0.203,13,0.753,23,0.598,25,0.753,26,0.012,27,0.361,28,0.316,29,0.499,33,1.34,34,1.905,44,0.782,57,0.585,71,0.553,79,0.243,81,0.418,82,0.948,84,0.171,87,1.581,89,1.003,99,0.007,100,0.009,101,0.007,147,0.703,163,2.72,173,1.413,181,2.29,204,1.771,209,0.782,217,2.009,218,1.827,309,2.203,326,1.84,337,2.384,367,3.633,416,1.055,448,2.203,473,0.979,474,0.969,495,0.936,566,0.948,581,1.664,582,1.614,598,2.53,728,2.762,795,3.009,877,2.72,900,3.436,913,2.384,922,3.387,959,2.63,1027,2.856,1080,2.728,1087,3.387,1330,2.486,1333,3.009,1373,3.672,1393,2.856,1407,3.497,2184,5.6,2192,3.633,2196,4.514,2201,4.514,2211,3.633,2241,3.633,2242,3.633,2244,3.633,2245,3.633,2248,4.221,2251,3.94,2264,4.614,2275,5.163,2276,3.389,2277,5.163,2342,3.066,2353,5.595,2397,5.911,2456,4.276,2457,4.276,2459,6.184,2463,3.009,2466,4.351,2467,4.276,2468,4.351,3059,3.94,3517,3.94,3683,6.528,4209,4.351,4333,6.753,4334,4.351,4335,7.071,4336,7.071,4337,4.975,4338,4.975,4339,4.975,4340,4.975,4341,4.975,4342,7.071,4343,4.975,4344,4.975,4345,6.397,4346,7.071,4347,4.975,4348,4.975,4349,4.975,4350,4.975]],["title/changelog.html",[4351,2.114,4352,2.114,4353,3.057]],["body/changelog.html",[0,0.003,2,1.035,5,0.091,11,1.109,13,0.296,15,1.159,23,0.202,26,0.008,27,0.455,28,0.103,33,0.527,35,2.202,42,1.714,43,0.895,44,0.308,47,1.965,48,1.839,50,1.147,53,2.256,56,0.932,64,0.864,71,0.376,74,1.207,79,0.135,84,0.166,89,0.319,99,0.004,100,0.006,101,0.004,104,1.884,108,1.115,132,1.455,147,0.356,162,1.79,171,1.839,177,1.523,187,3.478,188,3.113,191,0.999,201,1.523,214,1.523,215,1.234,220,0.637,230,1.839,232,1.714,235,1.293,237,3.438,239,1.425,240,4.901,241,4.887,244,1.839,274,1.207,276,1.445,278,1.523,280,1.839,285,2.202,287,4.277,295,1.147,296,4.693,300,1.115,311,1.523,313,0.278,318,3.531,319,1.972,320,2.87,326,1.023,327,4.327,333,1.714,335,2.052,336,3.042,338,1.994,339,1.839,348,1.994,360,0.964,362,1.523,366,2.202,370,1.714,373,1.115,378,1.377,379,1.115,380,0.544,382,1.258,383,2.318,386,1.377,388,5.209,389,2.202,390,1.994,396,1.315,397,1.839,401,2.515,405,1.616,407,1.173,409,1.523,410,1.611,416,1.008,419,1.994,421,1.258,488,1.839,499,1.467,501,0.876,503,1.218,505,0.579,525,0.561,530,0.544,531,0.876,533,0.561,539,0.85,544,1.379,546,0.561,547,1.218,551,1.4,559,1.078,564,0.561,586,0.964,587,1.196,588,1.196,593,1.377,594,1.839,600,0.843,601,2.318,606,3.908,619,1.714,625,1.965,629,2.525,635,1.994,636,3.829,639,1.115,642,0.867,644,1.994,645,1.994,646,2.377,648,1.994,650,2.377,653,1.994,659,1.611,665,1.159,668,3.021,672,3.99,690,1.839,700,1.994,713,1.445,724,3.293,729,3.113,730,2.924,737,3.094,741,1.839,749,1.445,764,1.258,776,1.714,789,1.315,821,1.315,824,3.438,836,3.438,837,1.377,871,1.523,877,2.149,897,3.587,898,1.445,905,1.568,907,1.445,910,1.839,913,3.588,915,2.515,923,3.304,926,2.202,927,2.202,945,0.843,953,1.839,957,2.202,958,3.829,959,1.035,1018,4.035,1027,1.445,1028,2.515,1043,1.714,1046,3.438,1050,3.293,1084,1.839,1119,1.994,1175,1.115,1176,2.962,1284,1.985,1288,1.523,1326,2.515,1331,1.676,1374,3.094,1375,1.994,1376,2.149,1398,3.829,1402,1.994,1407,2.149,1483,1.714,1485,1.839,1523,1.523,1530,1.611,1553,3.531,1562,2.677,2177,2.377,2191,1.445,2207,1.611,2212,3.99,2269,1.994,2276,2.619,2311,5.183,2318,2.515,2362,1.994,2442,3.438,2447,1.994,2481,3.438,2506,1.714,2511,2.87,2512,2.87,2532,1.839,2534,2.202,2566,4.343,2567,1.994,2569,1.611,2570,1.994,2587,3.438,2588,1.839,2657,3.438,2659,1.523,2676,3.99,2677,2.202,2681,1.839,2685,1.839,2697,2.87,2706,1.714,2709,4.327,2712,4.229,2720,3.438,2728,4.327,2752,1.839,2763,4.779,2775,3.113,2818,2.202,2819,1.994,2841,4.229,2844,5.975,2848,1.839,2860,2.202,2870,2.202,2882,3.113,2915,1.611,2948,3.829,3060,5.183,3070,3.792,3075,1.994,3205,3.438,3207,3.113,3208,3.113,3209,1.714,3292,1.839,3295,2.202,3322,6.356,3324,5.493,3353,1.994,3397,1.445,3429,3.113,3475,2.202,3480,2.202,3541,2.87,3567,1.994,3579,5.028,3621,2.202,3659,1.611,3661,2.202,3691,3.99,3720,1.714,3732,2.202,3761,2.202,3867,6.546,3869,2.202,3872,2.202,3889,2.202,3927,1.994,4047,4.974,4117,2.202,4200,1.994,4257,1.839,4300,3.829,4313,2.202,4316,5.183,4351,1.523,4352,1.523,4353,5.738,4354,2.518,4355,7.438,4356,5.464,4357,5.464,4358,2.518,4359,5.464,4360,2.518,4361,2.518,4362,8.232,4363,2.518,4364,3.931,4365,2.518,4366,2.518,4367,2.518,4368,3.931,4369,2.518,4370,7.653,4371,8.156,4372,2.518,4373,2.518,4374,2.518,4375,5.926,4376,2.518,4377,2.518,4378,2.518,4379,2.518,4380,2.518,4381,2.518,4382,3.931,4383,2.518,4384,2.518,4385,1.714,4386,2.518,4387,2.518,4388,5.464,4389,2.518,4390,2.518,4391,2.518,4392,2.518,4393,3.931,4394,2.518,4395,2.518,4396,2.518,4397,2.518,4398,2.518,4399,2.518,4400,2.518,4401,2.518,4402,2.518,4403,2.518,4404,2.518,4405,2.518,4406,2.518,4407,2.518,4408,2.518,4409,2.518,4410,2.518,4411,2.518,4412,2.518,4413,3.931,4414,2.518,4415,2.518,4416,2.518,4417,2.518,4418,3.931,4419,2.518,4420,2.518,4421,2.518,4422,2.518,4423,2.518,4424,3.931,4425,2.518,4426,2.518,4427,5.464,4428,2.518,4429,2.518,4430,2.518,4431,5.028,4432,2.518,4433,2.518,4434,2.518,4435,2.518,4436,2.518,4437,7.485,4438,2.518,4439,2.518,4440,6.905,4441,4.779,4442,2.518,4443,2.518,4444,2.518,4445,4.835,4446,2.518,4447,2.518,4448,2.518,4449,2.518,4450,2.202,4451,2.518,4452,5.464,4453,2.518,4454,2.518,4455,2.518,4456,2.518,4457,2.518,4458,2.518,4459,2.518,4460,2.518,4461,2.518,4462,2.518,4463,2.518,4464,2.518,4465,2.518,4466,2.518,4467,2.202,4468,2.518,4469,2.518,4470,2.518,4471,1.994,4472,2.518,4473,5.926,4474,2.202,4475,2.518,4476,2.518,4477,2.518,4478,2.518,4479,2.518,4480,2.518,4481,2.202,4482,2.518,4483,2.518,4484,2.518,4485,2.518,4486,2.518,4487,2.518,4488,2.518,4489,4.835,4490,2.518,4491,2.518,4492,2.518,4493,2.518,4494,2.518,4495,2.518,4496,2.518,4497,2.518,4498,2.518,4499,2.518,4500,2.518,4501,2.518,4502,2.518,4503,2.518,4504,2.518,4505,2.518,4506,2.518,4507,1.994,4508,2.518,4509,2.518,4510,3.931,4511,2.518,4512,2.518,4513,2.518,4514,3.931,4515,2.518,4516,2.202,4517,2.518,4518,2.518,4519,2.518,4520,3.931,4521,2.518,4522,2.518,4523,4.327,4524,2.518,4525,2.518,4526,2.518,4527,4.779,4528,2.518,4529,2.518,4530,2.518,4531,2.518,4532,2.518,4533,2.518,4534,2.518,4535,2.518,4536,3.931,4537,2.518,4538,2.518,4539,2.518,4540,2.518,4541,2.518,4542,5.464,4543,2.202,4544,2.202,4545,2.202,4546,2.202,4547,2.518,4548,2.518,4549,2.518,4550,2.518,4551,4.229,4552,2.518,4553,2.518,4554,2.518,4555,2.518,4556,2.518,4557,2.518,4558,5.464,4559,4.229,4560,3.113,4561,2.518,4562,2.518,4563,2.518,4564,2.518,4565,2.518,4566,2.518,4567,2.518,4568,2.518,4569,2.518,4570,2.518,4571,2.518,4572,2.518,4573,2.518,4574,2.518,4575,2.518,4576,2.518,4577,2.518,4578,2.518,4579,2.518,4580,2.518,4581,3.931,4582,2.518,4583,2.518,4584,2.518,4585,2.518,4586,2.518,4587,2.518,4588,2.518,4589,2.518,4590,2.518,4591,2.518,4592,2.518,4593,2.518,4594,2.518,4595,2.518,4596,2.518,4597,2.518,4598,2.518,4599,2.518,4600,2.202,4601,2.518,4602,2.518,4603,2.518,4604,2.518,4605,2.518,4606,2.518,4607,2.518,4608,2.518,4609,2.518,4610,2.518,4611,2.518,4612,2.518,4613,2.518,4614,2.518,4615,2.202,4616,2.518,4617,2.518,4618,2.202,4619,2.518,4620,2.518,4621,2.518,4622,2.202,4623,2.518,4624,2.518,4625,2.202,4626,2.518,4627,2.518,4628,2.518,4629,5.464,4630,2.518,4631,3.438,4632,2.518,4633,2.518,4634,1.839,4635,2.518,4636,2.518,4637,2.518,4638,2.518,4639,2.518,4640,2.518,4641,2.518,4642,2.518,4643,2.202,4644,2.202,4645,2.518,4646,3.931,4647,2.518,4648,2.518,4649,2.518,4650,1.994,4651,2.518,4652,2.202,4653,2.518,4654,2.518,4655,2.202,4656,1.839,4657,2.518,4658,2.518,4659,4.229,4660,2.518,4661,2.518,4662,2.518,4663,2.518,4664,2.518,4665,2.518,4666,2.518,4667,2.518,4668,2.518,4669,2.518,4670,2.518,4671,2.518,4672,2.518,4673,2.202,4674,2.518,4675,2.518,4676,2.518,4677,2.518,4678,1.714,4679,2.202,4680,2.202,4681,2.518,4682,2.202,4683,2.518,4684,2.518,4685,2.518,4686,3.931,4687,2.518,4688,2.518,4689,2.518,4690,2.518,4691,2.518,4692,2.518,4693,3.438,4694,2.518,4695,2.518,4696,2.518,4697,2.518,4698,2.518,4699,2.518,4700,2.518,4701,2.518,4702,2.518,4703,2.518,4704,2.518,4705,2.202,4706,2.518,4707,2.202,4708,2.518,4709,2.518,4710,2.518,4711,2.518,4712,2.518,4713,2.518,4714,2.518]],["title/coverage.html",[4715,4.987]],["body/coverage.html",[0,0.011,1,2.518,5,0.06,6,2.78,7,2.78,26,0.012,28,0.13,52,1.113,94,3.235,99,0.004,100,0.007,101,0.004,102,1.738,103,3.716,104,1.524,105,2.78,193,2.321,196,2.633,197,2.034,199,2.165,200,2.78,201,1.923,214,1.923,230,2.321,231,2.78,232,2.165,233,2.78,246,0.687,269,1.046,272,2.838,313,0.32,326,0.827,380,0.687,421,1.589,466,0.731,470,2.78,495,1.068,499,0.687,501,0.709,503,0.709,505,0.731,507,0.731,509,0.731,511,0.731,513,0.731,516,0.709,518,0.709,520,0.731,523,0.731,525,0.709,527,0.731,529,0.731,530,0.687,533,0.709,535,0.731,537,0.731,539,0.687,541,0.731,543,0.731,546,0.709,549,0.709,551,0.709,553,0.731,555,0.731,557,0.731,559,0.709,561,0.731,563,1.079,564,0.709,567,0.709,569,0.709,571,0.709,573,0.709,575,0.709,577,0.709,579,0.709,581,0.709,584,1.338,585,2.321,589,4.417,602,0.754,604,1.825,606,1.66,608,2.034,609,1.66,610,2.165,611,2.165,613,2.034,614,2.165,615,2.165,619,2.165,642,0.465,672,3.427,740,6.778,752,3.072,789,2.45,820,2.78,895,2.78,900,3.165,904,1.065,909,2.78,950,2.78,951,2.518,952,2.78,993,2.034,994,3.716,995,3.716,1017,2.321,1058,2.321,1059,3.716,1060,3.716,1100,2.321,1137,2.78,1168,2.78,1187,5.029,1286,1.738,1287,3.941,1314,4.204,1323,1.923,1345,1.923,1349,1.825,1366,2.165,1367,4.073,1374,2.034,1393,1.825,1523,1.923,1524,3.716,1530,2.034,1550,2.78,1551,2.518,1552,2.78,1572,5.02,2151,2.321,2154,4.417,2177,1.923,2180,2.165,2264,1.825,2285,2.78,2286,2.78,2310,3.716,2345,1.738,2454,4.104,2455,4.104,2475,2.78,2497,4.417,2498,4.073,2499,4.417,2500,2.518,2507,2.518,2515,2.78,2516,2.518,2517,2.78,2522,2.518,2523,5.746,2524,5.203,2531,2.518,2551,1.923,2556,2.78,2559,2.518,2655,4.473,2659,2.838,2666,2.518,2669,3.195,2673,4.194,2681,2.321,2685,3.427,2697,3.427,2701,4.497,2702,4.104,2709,5.445,2728,2.518,3040,3.716,3041,3.427,3042,4.073,3080,3.716,3081,3.427,3082,3.716,3112,2.321,3121,2.034,3154,3.716,3156,2.034,3202,2.78,3255,2.518,3256,4.104,3257,3.716,3258,4.104,3395,2.321,3396,5.386,3416,2.321,3417,2.78,3418,2.78,3428,2.78,3472,3.716,3473,2.518,3474,2.78,3493,2.518,3494,2.78,3510,4.417,3536,2.321,3541,2.321,3577,2.518,3627,4.104,3690,2.78,3724,2.78,3725,2.518,3726,2.78,3772,4.417,3773,2.518,3774,2.78,3812,4.797,3864,2.321,3866,2.78,3893,2.78,3913,2.78,3914,2.78,3960,2.78,3961,2.78,3970,2.518,4020,3.716,4023,2.518,4033,2.78,4039,2.78,4040,2.78,4046,2.78,4073,2.78,4145,2.78,4177,2.78,4184,4.104,4185,2.78,4191,4.104,4192,4.104,4193,2.78,4196,4.417,4197,4.417,4198,2.518,4205,2.518,4227,4.104,4228,4.104,4229,2.78,4233,2.78,4310,2.78,4311,2.78,4333,4.104,4334,4.104,4431,2.165,4441,4.104,4467,2.78,4481,2.78,4715,2.78,4716,3.179,4717,6.159,4718,2.78,4719,3.179,4720,3.179,4721,3.179,4722,6.57,4723,4.693,4724,3.179,4725,3.179,4726,3.179,4727,3.179,4728,3.179,4729,3.179,4730,3.179,4731,3.179,4732,4.693,4733,6.159,4734,6.159,4735,3.179,4736,8.638,4737,7.859,4738,6.57,4739,3.179,4740,6.57,4741,3.179,4742,3.179,4743,3.179,4744,3.179,4745,3.179,4746,3.179,4747,3.179,4748,3.179,4749,4.693,4750,3.179,4751,4.693,4752,4.693,4753,3.179,4754,3.179,4755,3.179,4756,3.179,4757,3.179,4758,4.693,4759,3.179,4760,3.179,4761,3.179,4762,3.179,4763,3.179,4764,3.179,4765,3.179,4766,3.179,4767,3.179,4768,3.179,4769,3.179,4770,3.179,4771,3.179,4772,3.179,4773,3.179,4774,3.179,4775,3.179,4776,3.179,4777,3.179,4778,3.179,4779,3.179,4780,3.179,4781,3.179,4782,4.878,4783,4.878,4784,2.78,4785,2.321,4786,4.104,4787,2.78,4788,4.104,4789,7.078,4790,3.179,4791,3.179,4792,4.693,4793,3.179,4794,3.179,4795,3.179,4796,3.179,4797,3.179,4798,3.179,4799,3.179,4800,3.179,4801,3.179,4802,3.179,4803,3.179,4804,3.179,4805,6.013,4806,2.78,4807,2.78,4808,2.78,4809,2.78,4810,2.78,4811,2.78,4812,4.878,4813,4.878,4814,2.78,4815,2.78,4816,6.629,4817,6.57,4818,3.179,4819,3.179,4820,3.179,4821,5.746,4822,2.78,4823,2.78,4824,2.78,4825,2.78,4826,2.78,4827,4.693,4828,3.179,4829,3.179,4830,3.179]],["title/dependencies.html",[898,2.006,899,2.41]],["body/dependencies.html",[26,0.012,81,0.526,82,1.193,83,3.129,99,0.009,100,0.01,101,0.009,165,2.883,300,2.773,311,3.787,378,3.423,422,4.457,491,3.423,492,3.684,514,1.532,899,3.001,900,2.883,908,3.423,1014,4.572,1052,6.446,1057,4.959,1288,3.787,2531,4.959,2532,5.382,2558,5.476,2559,4.959,2562,5.476,3397,3.594,3993,5.476,4516,5.476,4831,6.261,4832,8.549,4833,6.261,4834,6.261,4835,6.261,4836,6.261,4837,6.261,4838,6.261,4839,6.261,4840,6.261,4841,5.476,4842,6.261,4843,6.261,4844,6.261,4845,6.261,4846,6.261,4847,6.261,4848,6.261]],["title/miscellaneous/enumerations.html",[4849,2.552,4850,4.398]],["body/miscellaneous/enumerations.html",[3,0.278,8,0.256,26,0.012,43,1.006,44,1.05,99,0.009,100,0.01,101,0.009,147,1.042,274,3.004,346,4.964,349,4.964,665,2.886,666,3.598,667,4.011,1080,2.673,1287,4.011,1301,4.46,1315,4.268,1316,4.268,1317,4.268,1318,4.268,1319,4.011,1320,4.268,1321,4.268,1322,4.268,1367,4.577,1377,4.964,1475,5.841,1917,4.964,2310,4.964,2323,6.45,2344,6.45,2655,4.268,2659,3.791,2663,4.964,2666,4.964,4718,5.482,4849,4.577,4850,5.482,4851,7.376,4852,6.268,4853,6.268,4854,6.268,4855,6.268,4856,6.268,4857,6.268,4858,6.268,4859,6.268,4860,6.268,4861,6.268,4862,6.268,4863,6.268]],["title/miscellaneous/functions.html",[4257,3.672,4849,2.552]],["body/miscellaneous/functions.html",[5,0.136,8,0.187,25,1.3,26,0.012,27,0.625,28,0.334,29,0.861,30,1.196,50,1.085,57,0.987,71,0.417,77,2.767,79,0.157,99,0.006,100,0.008,101,0.006,131,3.115,133,3.876,136,1.951,137,2.767,150,1.881,160,3.663,163,3.311,181,2.106,235,0.693,239,1.348,240,2.626,241,2.626,275,4.124,278,4.546,294,3.341,336,1.951,346,5.723,469,2.079,643,3.115,665,2.106,688,2.501,728,2.513,744,1.693,748,2.767,794,2.767,822,3.115,898,3.477,1432,2.927,1572,3.341,1599,3.623,2151,4.423,2318,4.624,2342,2.193,2386,4.423,2497,3.623,2498,3.341,2499,5.377,2500,4.796,2501,5.938,2505,3.876,2507,4.796,2661,5.297,2780,4.796,2845,3.623,3070,2.927,3186,3.623,3292,3.341,3691,3.341,3812,3.341,3838,3.623,3864,4.423,3947,3.341,4114,4.001,4196,3.623,4197,5.377,4198,4.796,4199,6.32,4200,5.377,4205,4.796,4257,3.341,4634,4.958,4705,5.297,4782,4.001,4783,4.001,4784,5.297,4785,4.423,4786,4.001,4787,5.297,4788,6.32,4789,5.297,4805,4.001,4806,5.297,4807,5.938,4808,5.297,4809,5.297,4810,5.297,4811,5.297,4812,4.001,4813,6.32,4814,5.297,4815,5.297,4816,4.001,4821,4.001,4822,5.297,4823,5.297,4824,5.297,4825,5.297,4826,5.297,4849,3.341,4864,8.296,4865,6.79,4866,6.057,4867,6.057,4868,4.575,4869,4.575,4870,6.057,4871,4.575,4872,6.057,4873,4.575,4874,8,4875,4.575,4876,4.575,4877,4.575,4878,4.575,4879,4.575,4880,4.575,4881,4.575,4882,4.575,4883,4.575,4884,7.518,4885,4.575,4886,6.057,4887,6.057,4888,7.88,4889,4.575,4890,6.057,4891,6.057,4892,6.057,4893,4.575,4894,4.575,4895,4.575,4896,4.575,4897,4.575,4898,4.575,4899,4.001,4900,4.575,4901,6.057,4902,4.575,4903,7.227,4904,4.575,4905,4.575,4906,4.575,4907,4.575,4908,4.575,4909,4.575,4910,4.575,4911,4.001,4912,4.575,4913,4.575,4914,4.575,4915,4.575,4916,6.057]],["title/index.html",[8,0.143,4351,2.114,4352,2.114]],["body/index.html",[26,0.012,79,0.213,99,0.009,100,0.01,101,0.009,132,2.297,144,3.972,202,3.563,203,3.563,210,3.563,217,1.949,235,1.221,240,4.48,241,3.563,269,1.384,390,4.915,407,1.311,683,4.226,897,4.009,911,4.532,1030,4.226,1043,4.226,1553,5.354,2319,4.435,2551,3.754,2592,4.226,2660,4.915,2779,3.972,2848,4.532,3284,6.413,3514,4.915,3612,4.915,3956,4.692,4214,5.428,4254,5.428,4351,3.754,4352,3.754,4431,5.491,4450,6.413,4600,5.428,4656,4.532,4917,6.207,4918,6.207,4919,6.207,4920,7.333,4921,7.333,4922,6.207,4923,6.207,4924,6.207,4925,6.207,4926,7.333,4927,6.207,4928,6.207,4929,6.207,4930,6.207,4931,6.207,4932,6.207,4933,6.207,4934,6.207,4935,6.207]],["title/license.html",[4351,2.114,4352,2.114,4785,2.552]],["body/license.html",[5,0.122,26,0.011,50,1.531,99,0.009,100,0.01,101,0.009,213,2.858,239,1.902,383,3.093,609,3.369,733,3.704,788,5.11,794,3.903,1428,4.712,1673,4.394,2318,4.129,2915,5.075,3414,4.712,3840,5.11,4785,6.198,4899,5.644,4936,6.453,4937,6.453,4938,6.453,4939,6.453,4940,6.453,4941,6.453,4942,6.453,4943,6.453,4944,6.453,4945,6.453,4946,5.644,4947,6.453,4948,7.502,4949,6.453,4950,6.453,4951,6.453,4952,6.453,4953,6.453,4954,6.453,4955,6.453,4956,6.453,4957,6.453,4958,6.453]],["title/modules.html",[1029,3.448]],["body/modules.html",[26,0.011,99,0.009,100,0.011,101,0.009,422,4.657,1028,4.32,1029,4.083,2644,6.734,3956,4.32,4959,7.7,4960,7.7]],["title/overview.html",[4961,4.987]],["body/overview.html",[2,1.697,26,0.012,99,0.006,100,0.008,101,0.006,198,2.369,201,2.496,217,1.296,246,1.659,380,1.659,407,0.738,466,1.765,492,2.062,493,0.979,499,1.659,501,1.711,503,1.711,505,1.765,507,1.765,509,1.765,511,1.765,513,1.765,516,1.711,518,1.711,520,1.765,523,1.765,525,1.711,527,1.765,529,1.765,530,1.659,533,1.711,535,1.765,537,1.765,539,1.659,541,1.765,543,1.765,546,1.711,549,1.711,551,1.711,553,1.765,555,1.765,557,1.765,559,1.711,561,1.765,564,1.711,566,0.787,567,1.711,569,1.711,571,1.711,573,1.711,575,1.711,577,1.711,579,1.711,581,1.711,586,1.581,665,1.9,744,1.527,899,1.978,993,4.123,1027,2.369,1028,4.911,1029,2.496,1030,2.81,1031,3.268,1032,3.609,1033,3.609,1034,3.609,1035,3.609,1036,4.475,1037,3.013,1080,1.76,2663,3.268,2669,2.81,2685,3.013,2706,2.81,3956,5.679,3957,3.609,3958,3.609,3959,3.609,4961,3.609,4962,4.127]],["title/additional-documentation/getting-started.html",[64,0.537,4351,1.816,4352,1.816,4385,2.044]],["body/additional-documentation/getting-started.html",[0,0.007,2,3.36,5,0.096,13,0.596,15,2.98,26,0.012,40,4.727,68,2.909,75,3.065,79,0.29,84,0.245,99,0.007,100,0.009,101,0.007,102,3.9,104,3.103,108,3.328,109,3.065,111,3.451,130,3.065,132,1.876,136,2.161,150,2.083,173,0.906,196,1.941,198,3.716,202,3.716,203,3.716,204,1.792,212,5.661,215,1.591,217,2.033,235,1.298,239,1.494,240,4.907,241,4.314,274,2.429,297,3.701,309,2.244,352,2.909,354,2.01,360,1.941,365,4.432,373,2.244,379,2.244,381,4.432,384,3.243,385,1.697,396,2.646,407,1.388,416,0.716,514,1.24,586,2.479,604,2.909,606,3.724,629,2.646,631,1.165,642,0.742,654,4.013,668,2.333,683,3.451,688,2.771,733,3.716,821,3.38,864,3.701,913,3.103,925,4.013,937,4.013,955,4.432,1018,4.857,1027,3.716,1028,4.142,1030,4.408,1042,4.432,1043,5.118,1044,2.429,1064,2.771,1224,1.754,1286,2.771,1301,3.065,1349,2.909,1376,2.771,1401,3.065,1432,3.243,1447,3.701,1562,3.451,2319,3.065,2324,5.126,2438,4.432,2570,4.013,2609,4.432,2779,3.243,2915,4.142,3070,3.243,3156,4.142,3209,4.408,3274,4.013,3476,4.432,3481,3.701,3488,4.013,3659,3.243,3956,4.809,4253,4.432,4351,3.065,4352,3.065,4431,3.451,4474,4.432,4507,4.013,4543,5.661,4544,6.573,4545,4.432,4546,4.432,4560,4.013,4622,6.573,4644,5.661,4673,6.238,4963,5.068,4964,4.432,4965,4.432,4966,7.766,4967,5.068,4968,5.068,4969,5.068,4970,5.068,4971,5.068,4972,5.068,4973,5.068,4974,5.068,4975,5.068,4976,5.068,4977,5.068,4978,5.068,4979,5.068,4980,5.068,4981,5.068,4982,5.068,4983,5.068,4984,5.068,4985,4.013,4986,5.068,4987,5.068,4988,4.432,4989,5.068,4990,6.474,4991,5.068,4992,5.068]],["title/additional-documentation/local-development.html",[64,0.537,2506,2.044,3659,1.921,4385,2.044]],["body/additional-documentation/local-development.html",[26,0.011,99,0.01,100,0.011,101,0.01,407,1.217,2506,4.636,3659,4.357,4678,4.636]],["title/additional-documentation/local-development/schematics.html",[64,0.625,4385,2.38,4678,2.38]],["body/additional-documentation/local-development/schematics.html",[5,0.093,26,0.012,27,0.511,36,1.766,50,1.171,64,0.882,67,3.361,68,3.653,77,2.985,87,0.971,99,0.007,100,0.009,101,0.007,136,3.174,150,2.896,187,3.004,194,3.604,202,3.653,215,1.55,235,1.215,239,2.076,240,4.787,241,2.833,244,3.604,274,2.366,276,2.833,311,3.849,313,0.186,318,5.434,335,3.323,336,3.174,337,3.051,384,3.158,385,2.132,387,3.909,405,2.029,407,1.138,410,3.158,483,3.361,599,1.891,625,3.181,630,2.029,642,1.127,668,2.93,688,3.851,698,2.698,742,3.604,821,2.577,822,4.797,897,4.528,899,2.366,913,2.366,921,4.317,922,3.361,923,4.501,1029,3.849,1048,4.317,1284,1.653,1376,2.698,1416,3.158,1443,2.985,1483,3.361,1553,3.604,1562,3.361,2174,4.334,2191,2.833,2207,5.202,2208,3.604,2209,3.909,2268,3.849,2318,4.073,2319,2.985,2430,3.909,2439,3.361,2566,3.158,2703,4.317,2718,3.604,2752,5.144,2779,3.158,2819,3.909,2848,3.604,2882,3.909,2947,4.317,3069,4.317,3298,4.317,3429,3.909,3481,4.648,3579,5.067,3927,3.909,4355,4.317,4440,4.317,4471,3.909,4523,3.909,4551,4.317,4559,5.566,4631,4.317,4634,5.434,4643,4.317,4650,5.579,4655,6.161,4656,4.648,4659,4.317,4678,5.821,4679,6.736,4680,6.508,4682,4.317,4707,4.317,4841,5.566,4946,4.317,4965,4.317,4985,6.56,4988,4.317,4993,4.317,4994,4.317,4995,5.566,4996,4.317,4997,4.936,4998,4.936,4999,6.365,5000,4.317,5001,4.936,5002,4.936,5003,4.936,5004,7.442,5005,6.365,5006,4.936,5007,4.936,5008,4.936,5009,4.936,5010,4.936,5011,4.936,5012,4.936,5013,4.936,5014,4.936,5015,4.317,5016,5.566,5017,4.936,5018,4.936,5019,4.936,5020,6.365,5021,4.936,5022,4.936,5023,4.936,5024,4.936,5025,6.365,5026,4.936,5027,4.936,5028,4.936,5029,4.936,5030,4.936,5031,4.936,5032,4.936,5033,4.936,5034,4.936,5035,4.936,5036,4.936,5037,4.936,5038,4.936,5039,4.936,5040,4.936,5041,4.936,5042,4.936,5043,4.936,5044,4.936,5045,4.936,5046,4.936,5047,4.936,5048,4.936,5049,4.936,5050,4.936,5051,4.936,5052,4.936,5053,4.936,5054,4.936,5055,4.936,5056,4.936,5057,4.936,5058,4.936,5059,4.936,5060,4.936,5061,4.317,5062,4.317]],["title/additional-documentation/local-development/components.html",[64,0.625,407,0.625,4385,2.38]],["body/additional-documentation/local-development/components.html",[5,0.094,19,5.066,23,0.399,26,0.012,27,0.464,47,2.486,50,1.18,67,3.387,68,4.432,77,3.009,79,0.22,87,0.979,99,0.007,100,0.009,101,0.007,132,1.841,136,3.293,150,2.63,162,2.367,202,4.059,205,4.351,210,2.856,211,3.94,213,2.833,215,1.562,235,1.292,239,1.466,240,4.82,241,4.722,274,2.384,276,2.856,290,3.94,311,3.869,312,4.351,313,0.187,318,5.45,335,2.597,338,5.066,339,4.671,345,3.94,357,4.351,360,2.957,364,2.856,373,2.833,379,2.203,388,4.671,399,4.351,405,2.045,407,1.143,595,1.471,625,2.486,637,1.335,642,0.728,650,3.009,665,2.945,668,2.29,688,4.221,730,3.009,821,3.34,822,5.545,867,4.351,877,2.72,897,4.497,898,2.856,899,2.384,911,3.633,913,2.384,915,3.183,1029,3.009,1081,3.633,1376,2.72,1429,3.633,1432,3.183,2207,4.525,2319,5.143,2362,5.066,2506,5.082,2532,3.633,2603,4.351,2752,3.633,2778,3.633,2915,3.183,3207,5.066,3292,3.633,3481,3.633,3579,5.474,3659,4.525,3662,4.351,4041,5.595,4431,3.387,4471,3.94,4507,3.94,4523,3.94,4527,4.351,4560,3.94,4615,4.351,4618,5.595,4625,4.351,4634,5.45,4650,5.066,4652,4.351,4656,4.671,4678,5.648,4693,4.351,4911,4.351,4964,4.351,4985,6.568,4993,4.351,4994,5.595,4995,4.351,4996,5.595,5000,4.351,5015,5.595,5016,5.595,5061,4.351,5062,4.351,5063,4.975,5064,4.975,5065,4.975,5066,4.975,5067,6.397,5068,6.397,5069,6.397,5070,4.975,5071,4.975,5072,4.975,5073,4.975,5074,6.397,5075,4.975,5076,4.975,5077,4.975,5078,4.975,5079,4.975,5080,6.397,5081,6.397,5082,7.071,5083,6.397,5084,4.975,5085,7.071,5086,4.975,5087,4.975,5088,4.975,5089,4.975,5090,4.975,5091,4.975,5092,4.975,5093,4.975,5094,4.975,5095,4.975,5096,4.975,5097,4.975,5098,4.975,5099,4.975,5100,4.975]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["0.0.17",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["0.0.31",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["0.0.32",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["0.0.33",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["0.0.34",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":4837,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":2931,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.8.26",{"_index":4848,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":2810,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":4736,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4757,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4722,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4738,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4740,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4717,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4726,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4769,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4725,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4744,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":4659,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["03c1243",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4440,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["07",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4356,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["09ae712",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["09ce95a",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["0ba1d1e",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["0s",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1080,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1',space,'(',number,number,number,')',space,number,number,number",{"_index":3763,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["1.0.0",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":4516,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":4737,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":4748,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":4768,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":4727,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":4742,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4779,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":4730,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":4752,"title":{},"body":{"coverage.html":{}}}],["1/23",{"_index":4735,"title":{},"body":{"coverage.html":{}}}],["1/24",{"_index":4755,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4734,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4751,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4774,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":4723,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":4758,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":4732,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":4728,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2276,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["10.256s",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["10/31",{"_index":4741,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1187,"title":{},"body":{"components/CityComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["1024",{"_index":2900,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":2918,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["10^10",{"_index":3559,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["10th",{"_index":4221,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["11",{"_index":2681,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["111",{"_index":3701,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["1111",{"_index":3700,"title":{},"body":{"components/PhnComponent.html":{}}}],["12",{"_index":2685,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["126d876",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2697,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["14",{"_index":2702,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["15",{"_index":2706,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"overview.html":{}}}],["150",{"_index":4345,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["151f173",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2709,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["17",{"_index":2712,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["18",{"_index":2720,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["180",{"_index":4169,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185148b",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["185px",{"_index":2420,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["18d69c6",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2728,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["19/23",{"_index":4721,"title":{},"body":{"coverage.html":{}}}],["1].iscomplete",{"_index":1128,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["1a1",{"_index":3786,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["1c8242e",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":665,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":4939,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":3480,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["2.0.1",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["2.0.550",{"_index":4845,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":4943,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["2.1.3",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["2.1.4",{"_index":4396,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["2.16.2",{"_index":4835,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["2.20.1",{"_index":4839,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":4843,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["2.5.1",{"_index":4369,"title":{},"body":{"changelog.html":{}}}],["2.5.2",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":4842,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["2/12",{"_index":4759,"title":{},"body":{"coverage.html":{}}}],["2/21",{"_index":4749,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":4747,"title":{},"body":{"coverage.html":{}}}],["2/25",{"_index":4754,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":4765,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":4781,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":4746,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4481,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2017",{"_index":4937,"title":{},"body":{"license.html":{}}}],["2019",{"_index":4355,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":2422,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["22",{"_index":4745,"title":{},"body":{"coverage.html":{}}}],["22710b7",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["238c01d",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4467,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25",{"_index":672,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{},"coverage.html":{}}}],["250",{"_index":673,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{}}}],["255",{"_index":3439,"title":{},"body":{"components/NameComponent.html":{}}}],["26(a",{"_index":3303,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["2600",{"_index":2933,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":4441,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["29",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["2a511e7",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["2c2f322",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["2ddfc23",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":666,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["3.2.0",{"_index":4844,"title":{},"body":{"dependencies.html":{}}}],["3/18",{"_index":4729,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":4719,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4767,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":4771,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2777,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["300",{"_index":4165,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":2212,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"changelog.html":{}}}],["32",{"_index":3541,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["33",{"_index":4733,"title":{},"body":{"coverage.html":{}}}],["3300",{"_index":2936,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["34",{"_index":4962,"title":{},"body":{"overview.html":{}}}],["355945207",{"_index":3583,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["36476f8",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":4777,"title":{},"body":{"coverage.html":{}}}],["3868c50",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["3a06f99",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["3a5677b",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["3a98fb0",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["3ac6d4d",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["3f42b31",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2655,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"guards/RouteGuardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["4.3.1",{"_index":4840,"title":{},"body":{"dependencies.html":{}}}],["4/14",{"_index":4776,"title":{},"body":{"coverage.html":{}}}],["4/24",{"_index":4753,"title":{},"body":{"coverage.html":{}}}],["4/29",{"_index":4750,"title":{},"body":{"coverage.html":{}}}],["4/30",{"_index":4756,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2418,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["4/8",{"_index":4773,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4780,"title":{},"body":{"coverage.html":{}}}],["400/500",{"_index":148,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["41f5609",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":4770,"title":{},"body":{"coverage.html":{}}}],["4295b03",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["46",{"_index":4762,"title":{},"body":{"coverage.html":{}}}],["4766a2b",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["47d614a",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["4d5992a",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2659,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5/10",{"_index":4772,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2701,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["51bfe3b",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["532a3ec",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["53a109b",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":3766,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5555",{"_index":3767,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5a7c37b",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["5b18c5f",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["5b88093",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["5bb54fc",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["5d8f61d",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":2663,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.4.0",{"_index":4846,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":4922,"title":{},"body":{"index.html":{}}}],["6/36",{"_index":4731,"title":{},"body":{"coverage.html":{}}}],["6242bea",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["6254d29",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["65b8144",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":4764,"title":{},"body":{"coverage.html":{}}}],["66f9608",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["6775a4d",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["67c4797",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["6b8cedd",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["6c09982",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["6caf36c",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["6f093d2",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2666,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":4832,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":4775,"title":{},"body":{"coverage.html":{}}}],["7/15",{"_index":4763,"title":{},"body":{"coverage.html":{}}}],["7/25",{"_index":4739,"title":{},"body":{"coverage.html":{}}}],["7226b37",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["7400a64",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":4766,"title":{},"body":{"coverage.html":{}}}],["7d2e7cd",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["7febf6d",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["7ff8510",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2669,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{},"overview.html":{}}}],["8.9.4",{"_index":4919,"title":{},"body":{"index.html":{}}}],["8/21",{"_index":4778,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4761,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["82",{"_index":4720,"title":{},"body":{"coverage.html":{}}}],["8361a0e",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["85eab15",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["867f969",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["88",{"_index":4760,"title":{},"body":{"coverage.html":{}}}],["8a22405",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["8e823c5",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["8f24e2e",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["8f6886f",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2673,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/StreetComponent.html":{},"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["9.0.0",{"_index":4838,"title":{},"body":{"dependencies.html":{}}}],["9/37",{"_index":4743,"title":{},"body":{"coverage.html":{}}}],["9/47",{"_index":4724,"title":{},"body":{"coverage.html":{}}}],["96a58b1",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["978250b",{"_index":4366,"title":{},"body":{"changelog.html":{}}}],["9][a",{"_index":3802,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["9]{1}\\\\d{2",{"_index":3755,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["9f5a04e",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":675,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["_applicationheadermap",{"_index":3344,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["_bypassguards",{"_index":1065,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_context",{"_index":4874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_continue",{"_index":3931,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_continue(pageurl",{"_index":3933,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_headers",{"_index":109,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["_log",{"_index":1487,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_log(message",{"_index":1410,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_logerror",{"_index":1488,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_logerror(errormessage",{"_index":1413,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_name",{"_index":3674,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":3675,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":425,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":674,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["_only_",{"_index":4268,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":676,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["_options",{"_index":4901,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_sendlog",{"_index":1489,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_sendlog(message",{"_index":1434,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_starturl",{"_index":1066,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["a11y",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["a1a",{"_index":3785,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a27faa9",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["a512eb0",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["a702d6d",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["a9aaf59",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["a9cafca",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["aa",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["aad93b5",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":1246,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["abort",{"_index":2684,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":3481,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":15,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["abstractcontrol",{"_index":2503,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{}}}],["abstractform",{"_index":1,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstracthttpservice",{"_index":102,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:11",{"_index":1513,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:16",{"_index":1512,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:22",{"_index":1507,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:30",{"_index":1509,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:38",{"_index":1510,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:59",{"_index":1508,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstractpgcheckservice",{"_index":197,"title":{"injectables/AbstractPgCheckService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["abstractpgservice",{"_index":3919,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["abstracttestpage",{"_index":230,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["abw",{"_index":1627,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ac7406b",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["ac9d61c",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["acbbdc1",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":2946,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":2649,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["accepting",{"_index":4348,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["access",{"_index":40,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessed",{"_index":751,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["accessibility",{"_index":4316,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["accessible",{"_index":2399,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["accessors",{"_index":114,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["accidentally",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["accomplish",{"_index":4349,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["accordion",{"_index":475,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion'},{'name",{"_index":498,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["accordion.component.html",{"_index":479,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion.component.scss",{"_index":477,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordioncommoncomponent",{"_index":466,"title":{"components/AccordionCommonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordioncomponent",{"_index":471,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordionmodule",{"_index":4010,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accordionmodule.forroot",{"_index":4038,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["account",{"_index":3883,"title":{},"body":{"components/RadioComponent.html":{}}}],["accusamus",{"_index":1247,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["acl",{"_index":3393,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["act",{"_index":3309,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["action",{"_index":52,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":3937,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["activeindex",{"_index":4237,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":2438,"title":{},"body":{"components/DatepickerComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":583,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["adam",{"_index":4934,"title":{},"body":{"index.html":{}}}],["add",{"_index":187,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"guards/RouteGuardService.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":1326,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["adding",{"_index":1562,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["additional",{"_index":4385,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"changelog.html":{}}}],["additionaldocumentation",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["addline(line",{"_index":727,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["addpackagejsonscript",{"_index":4822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagejsonscript(tree",{"_index":4871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addpackagetopackagejson",{"_index":4814,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagetopackagejson(host",{"_index":4885,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addr",{"_index":654,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"additional-documentation/getting-started.html":{}}}],["address",{"_index":606,"title":{"classes/Address.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":500,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["address();the",{"_index":4986,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address(val",{"_index":638,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["address.addressline2",{"_index":652,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["address.component.html",{"_index":623,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["address.component.scss",{"_index":624,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["address1",{"_index":590,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["address2",{"_index":591,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["address3",{"_index":592,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["address_url",{"_index":3159,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresschange",{"_index":641,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["addresscomponent",{"_index":499,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addresses",{"_index":792,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["addressline${line",{"_index":746,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["addressline1",{"_index":824,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["addressline2",{"_index":689,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/Maxlengths.html":{}}}],["addressline3",{"_index":825,"title":{},"body":{"classes/Address.html":{}}}],["addressmodel",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["addresss",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["addrlabellist",{"_index":585,"title":{"interfaces/AddrLabelList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"coverage.html":{}}}],["addrlabels",{"_index":660,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["addrlookup",{"_index":745,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["adds",{"_index":643,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["addtag",{"_index":2478,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":2479,"title":{},"body":{"components/DropdownComponent.html":{}}}],["adipisicing",{"_index":1214,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["administer",{"_index":3313,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["advantages",{"_index":916,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ae493e7",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["aee4761",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["af516d0",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["af91989",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["afg",{"_index":1601,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["afghanistan",{"_index":1602,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["africa",{"_index":2057,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["african",{"_index":1698,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["aftercontentinit",{"_index":2525,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["afterviewinit",{"_index":2528,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["again",{"_index":2208,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["against",{"_index":4209,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"directives/YearValidateDirective.html":{}}}],["age",{"_index":3643,"title":{},"body":{"classes/Person.html":{}}}],["ago",{"_index":1614,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["agreecheck",{"_index":3350,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agreeconsentmodal",{"_index":249,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["agreed",{"_index":4945,"title":{},"body":{"license.html":{}}}],["agreelabel",{"_index":3333,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agrees",{"_index":289,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["aia",{"_index":1616,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["aka",{"_index":3275,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ala",{"_index":1603,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["alb",{"_index":1606,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["albania",{"_index":1607,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["alberta",{"_index":3839,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["algeria",{"_index":1609,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["algorithm",{"_index":2711,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["alias",{"_index":1272,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["allmembers",{"_index":3884,"title":{},"body":{"components/RadioComponent.html":{}}}],["allow",{"_index":1485,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["allowed",{"_index":2921,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["allowemptyvalue",{"_index":4199,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"miscellaneous/functions.html":{}}}],["allowextralines",{"_index":653,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["allowing",{"_index":1093,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["alone",{"_index":3332,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["along",{"_index":123,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":1401,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":1318,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":171,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["american",{"_index":1611,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["amet",{"_index":1212,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["amultiples",{"_index":2890,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":2902,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["andorra",{"_index":1613,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["angola",{"_index":1615,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["anguilla",{"_index":1617,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["angular",{"_index":68,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":1465,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["angular.json",{"_index":5061,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular/animations",{"_index":4831,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1057,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":164,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":4833,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":618,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":82,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1014,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1052,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":83,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":908,"title":{},"body":{"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":2630,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["animi",{"_index":1259,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["another",{"_index":63,"title":{},"body":{"classes/AbstractForm.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["answer",{"_index":1009,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["answer.label",{"_index":992,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["antarctica",{"_index":1619,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["antigua",{"_index":1621,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["any)).then((pdfdoc",{"_index":3000,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":2618,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":1311,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["anywhere",{"_index":5010,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":4899,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["aperiam",{"_index":1235,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["api",{"_index":104,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"components/StreetComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":1004,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apiservice",{"_index":4982,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["apostrophe",{"_index":3126,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["apostrophes",{"_index":3471,"title":{},"body":{"components/NameComponent.html":{}}}],["app",{"_index":3261,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["app.component.ts",{"_index":4876,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appcomponentcss",{"_index":4793,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":4794,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":2574,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":5068,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["appears",{"_index":283,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["appendselectortobody",{"_index":2414,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["applicable",{"_index":788,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"license.html":{}}}],["applicant",{"_index":1094,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["applicants",{"_index":1097,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["application",{"_index":360,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":205,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/local-development/components.html":{}}}],["application.information",{"_index":3299,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["applicationbase",{"_index":2553,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":1379,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["applications",{"_index":3762,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["appropriate",{"_index":742,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":2889,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["april",{"_index":2224,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["arab",{"_index":2082,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["arabia",{"_index":2032,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["architecto",{"_index":1221,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aren't",{"_index":1477,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["arg",{"_index":1623,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["argentina",{"_index":1624,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["args",{"_index":2974,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":2716,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":2291,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":3621,"title":{},"body":{"components/PasswordComponent.html":{},"changelog.html":{}}}],["arm",{"_index":1625,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["armenia",{"_index":1626,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["aroud",{"_index":3214,"title":{},"body":{"components/HeaderComponent.html":{}}}],["around",{"_index":3085,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["array",{"_index":2588,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/RadioComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["array(0",{"_index":2589,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["artifacts",{"_index":5085,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aruba",{"_index":1628,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ascension",{"_index":2004,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ask",{"_index":4933,"title":{},"body":{"index.html":{}}}],["asm",{"_index":1610,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["assets",{"_index":5055,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["assets/gov3_bc_logo.png",{"_index":3226,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assistance",{"_index":3315,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["associate",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":332,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["association",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["assuming",{"_index":5093,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":4963,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":259,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["ata",{"_index":1618,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["atf",{"_index":1776,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["atg",{"_index":1620,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["attachmentorder",{"_index":1290,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attr",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":3619,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":397,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["attributes",{"_index":3169,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["audit",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["august",{"_index":2227,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["aus",{"_index":1629,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["australia",{"_index":1630,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["austria",{"_index":1632,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["aut",{"_index":1631,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["autem",{"_index":1241,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["auto",{"_index":629,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocomplete",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["autocomplete=\"false",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["autocorrect",{"_index":2480,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":75,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":2680,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":363,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":436,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["awkward",{"_index":3578,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["aze",{"_index":1633,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["azerbaijan",{"_index":1634,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["b",{"_index":4044,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["b555787",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["b80520f",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["b901868",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":3297,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["backdrop",{"_index":4409,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1459,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["backticks",{"_index":3319,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bad",{"_index":4976,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["baee5ad",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["bahamas",{"_index":1636,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bahrain",{"_index":1638,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bangladesh",{"_index":1640,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bar",{"_index":53,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":528,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["bar.component",{"_index":3965,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":3044,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":3043,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":3042,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":3052,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:12",{"_index":3049,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:13",{"_index":3051,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":3050,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":3048,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":3077,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":3067,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":3053,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":3068,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3078,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":3054,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":4261,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":4264,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:26",{"_index":4258,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":4244,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":3066,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":4249,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":3079,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":4248,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":4245,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":4247,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":4250,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":3041,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":3970,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["barbados",{"_index":1642,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["barbuda",{"_index":1622,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bars",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["barthélemy",{"_index":2001,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["base",{"_index":602,"title":{"classes/Base.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["base.component",{"_index":2547,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":2555,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.service.ts",{"_index":1060,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["base.service.ts:10",{"_index":3492,"title":{},"body":{"interfaces/PageListInterface.html":{}}}],["base.service.ts:101",{"_index":1078,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:105",{"_index":1089,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:26",{"_index":1101,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:28",{"_index":1099,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:29",{"_index":1074,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:33",{"_index":1103,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:37",{"_index":1105,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:41",{"_index":1075,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:45",{"_index":1076,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:50",{"_index":1090,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:57",{"_index":1096,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:72",{"_index":1092,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:82",{"_index":1085,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:93",{"_index":1082,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base64",{"_index":5057,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":1162,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":3157,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":2546,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":302,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{}}}],["basic",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["basis",{"_index":4949,"title":{},"body":{"license.html":{}}}],["bc",{"_index":789,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["bclogobase64",{"_index":4798,"title":{},"body":{"coverage.html":{}}}],["bdi",{"_index":1685,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["beatae",{"_index":1265,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["befc319",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2268,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["begin",{"_index":3120,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["beginning",{"_index":3278,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["behavior",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{}}}],["behaviour",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":1370,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["bel",{"_index":1645,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["belarus",{"_index":1644,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["belgium",{"_index":1646,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["belize",{"_index":1648,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["below",{"_index":3274,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/RadioComponent.html":{},"additional-documentation/getting-started.html":{}}}],["ben",{"_index":1649,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["beneficial",{"_index":3507,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["benefits",{"_index":3312,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["benin",{"_index":1650,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bermuda",{"_index":1652,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bes",{"_index":1657,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["best",{"_index":3210,"title":{},"body":{"components/HeaderComponent.html":{}}}],["better",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4327,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["bf3cf23",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["bfa",{"_index":1682,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bg",{"_index":3615,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bgd",{"_index":1639,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bgr",{"_index":1680,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bhr",{"_index":1637,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bhs",{"_index":1635,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bhutan",{"_index":1653,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["big",{"_index":2958,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bih",{"_index":1662,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bind",{"_index":1144,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["bindings",{"_index":2607,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":651,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{}}}],["birth",{"_index":3644,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":3636,"title":{},"body":{"classes/Person.html":{}}}],["bissau",{"_index":1807,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["blanditiis",{"_index":1250,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blank",{"_index":698,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blm",{"_index":1999,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["blob",{"_index":2704,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":2881,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":3876,"title":{},"body":{"components/RadioComponent.html":{}}}],["blr",{"_index":1643,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["blue",{"_index":3204,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blueimp",{"_index":2562,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["blurevent",{"_index":1177,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["blz",{"_index":1647,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bmu",{"_index":1651,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["body",{"_index":154,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["body).subscribe",{"_index":1450,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["boilerplate",{"_index":3279,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bol",{"_index":1654,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bolivarian",{"_index":2132,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bolivia",{"_index":1655,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bonaire",{"_index":1658,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":492,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":4011,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bosnia",{"_index":1663,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["both",{"_index":244,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CheckboxComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["botswana",{"_index":1666,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bottom",{"_index":371,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["bound",{"_index":4929,"title":{},"body":{"index.html":{}}}],["bouvet",{"_index":1668,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["box",{"_index":310,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["bps",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["bra",{"_index":1670,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["brazil",{"_index":1671,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["brb",{"_index":1641,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bread",{"_index":1525,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":1554,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":515,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["breadcrumb.component",{"_index":3963,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":1569,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":1568,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts",{"_index":1552,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":1570,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":1571,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":1551,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":3295,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["breaking",{"_index":4300,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["breaks",{"_index":3422,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["british",{"_index":1673,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["british_columbia",{"_index":614,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["brn",{"_index":1677,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["broken",{"_index":5066,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":3020,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":2644,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":2578,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":2743,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":422,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":2665,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":446,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":429,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0,0",{"_index":460,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":368,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":426,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.need",{"_index":3293,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["browsermodule",{"_index":1051,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["brunei",{"_index":1678,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["brunswick",{"_index":3843,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["btn",{"_index":948,"title":{},"body":{"components/ButtonComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["btnclick",{"_index":934,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":2844,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["buiding",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3579,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":5008,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["building",{"_index":4994,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":4996,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":4818,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3207,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["bulgaria",{"_index":1681,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["burkina",{"_index":1683,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["burundi",{"_index":1686,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["button",{"_index":56,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":502,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component",{"_index":4024,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["button.component.html",{"_index":930,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.scss",{"_index":929,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.ts",{"_index":4311,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:15",{"_index":4315,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4317,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4314,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:24",{"_index":4318,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":4319,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button/xicon",{"_index":4023,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":501,"title":{"components/ButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttongroup",{"_index":963,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["buttongroupcomponent",{"_index":503,"title":{"components/ButtonGroupComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":914,"title":{},"body":{"components/ButtonComponent.html":{},"components/RadioComponent.html":{}}}],["buttontype",{"_index":932,"title":{},"body":{"components/ButtonComponent.html":{}}}],["bvt",{"_index":1667,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bwa",{"_index":1665,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["bypass",{"_index":1106,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bypassguards",{"_index":1073,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bytes",{"_index":1342,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c",{"_index":3304,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["c04b81d",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["c054ca5",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["c122a2a",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["c2fd959",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["c347c39",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["c580225",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["c8fb31b",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["caf",{"_index":1696,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["caicos",{"_index":2112,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["calculateprogresspercentage",{"_index":4240,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":3642,"title":{},"body":{"classes/Person.html":{}}}],["caledonia",{"_index":1943,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["call",{"_index":1443,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":2987,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":2975,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":2845,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"miscellaneous/functions.html":{}}}],["caller",{"_index":2198,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["calling",{"_index":351,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callout",{"_index":3363,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["calls",{"_index":5052,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cambodia",{"_index":1688,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cameroon",{"_index":1690,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["can't",{"_index":2606,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canactivate",{"_index":3921,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivate(route",{"_index":3936,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild",{"_index":3922,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild(next",{"_index":3941,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canada",{"_index":609,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"license.html":{}}}],["canbypassguards",{"_index":221,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cancel",{"_index":2733,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":14,"title":{},"body":{"classes/AbstractForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["cannotopen",{"_index":1320,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":1322,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":2596,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":2996,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":2879,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cape",{"_index":1692,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["captcha",{"_index":1018,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":506,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["captcha.component",{"_index":1054,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":1025,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":4851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":505,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":993,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":1028,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":3022,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":2580,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":2745,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":1445,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["careful",{"_index":4255,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":364,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":1064,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/MaskModel.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":4308,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":166,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/StreetComponent.html":{}}}],["catcherror(err",{"_index":4128,"title":{},"body":{"components/StreetComponent.html":{}}}],["categories",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":2949,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cayman",{"_index":1695,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cb65dc6",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["cck",{"_index":1708,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cd",{"_index":2174,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["center",{"_index":1559,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["central",{"_index":1697,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["chaange",{"_index":4269,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["chad",{"_index":1701,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["chain",{"_index":3424,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["chanfges",{"_index":5099,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["change",{"_index":1284,"title":{},"body":{"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":2841,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["changedetection",{"_index":4235,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":4266,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4236,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":2175,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":4353,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":923,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changes.password",{"_index":3602,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['countrylist",{"_index":722,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["changes['countrylist'].currentvalue",{"_index":723,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["changes['images",{"_index":2636,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":2637,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":2639,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":2638,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['provincelist",{"_index":725,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["changes['provincelist'].currentvalue",{"_index":726,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["changing",{"_index":2451,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["character",{"_index":3127,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["characters",{"_index":3468,"title":{},"body":{"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["che",{"_index":2078,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["check",{"_index":309,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["check.directive",{"_index":4030,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["check.directive.ts",{"_index":2499,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["check.directive.ts:35",{"_index":2502,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.directive.ts:37",{"_index":2504,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.service",{"_index":1107,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["check.service.ts",{"_index":200,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["check.service.ts:24",{"_index":225,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:25",{"_index":228,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:26",{"_index":229,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:27",{"_index":226,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check/duplicate",{"_index":2498,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkbox",{"_index":287,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["checkbox'},{'name",{"_index":508,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["checkbox.component.html",{"_index":1139,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1138,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":507,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcompletebaseservice",{"_index":1058,"title":{"injectables/CheckCompleteBaseService.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["checkconsentmodal",{"_index":250,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checkdigit",{"_index":4219,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["checked",{"_index":1140,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["checkforduplicates",{"_index":2507,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkforduplicates(control",{"_index":4893,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkimagedimensions(file",{"_index":3038,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":2619,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checking",{"_index":1108,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["checks",{"_index":294,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"miscellaneous/functions.html":{}}}],["checksum",{"_index":1344,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["child",{"_index":3280,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{}}}],["chile",{"_index":1703,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["china",{"_index":1705,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["chl",{"_index":1702,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["chn",{"_index":1704,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["choice",{"_index":412,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["christmas",{"_index":1707,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["circle",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["city",{"_index":593,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["city'},{'name",{"_index":510,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["city.component.html",{"_index":1170,"title":{},"body":{"components/CityComponent.html":{}}}],["city.component.scss",{"_index":1169,"title":{},"body":{"components/CityComponent.html":{}}}],["city/country/province",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["city_",{"_index":1184,"title":{},"body":{"components/CityComponent.html":{}}}],["citycomponent",{"_index":509,"title":{"components/CityComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cityindex",{"_index":3188,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["civ",{"_index":1724,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["classval",{"_index":303,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clean",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":741,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["clearable",{"_index":2481,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["clearbutton",{"_index":2332,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleardate",{"_index":2326,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cleared",{"_index":2404,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cli",{"_index":5028,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":488,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["click)=\"showfullsizeview",{"_index":4175,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":251,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(classval",{"_index":299,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":252,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(refnameval",{"_index":307,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickconsentmodalcontinue",{"_index":253,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickevent",{"_index":4313,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["clicking",{"_index":271,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink",{"_index":254,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink(label",{"_index":316,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":60,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":255,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":149,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["clito",{"_index":5031,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["close",{"_index":3291,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["closes",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["cluster_captchamodule",{"_index":1032,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":1033,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":1034,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":1035,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":3957,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":3958,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":3959,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cmr",{"_index":1689,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["coard",{"_index":4935,"title":{},"body":{"index.html":{}}}],["cocos",{"_index":1709,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cod",{"_index":1717,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["code",{"_index":668,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":548,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["code.component",{"_index":3989,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":3776,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":3775,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":3774,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:104",{"_index":3796,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:14",{"_index":3781,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:15",{"_index":3780,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:16",{"_index":3784,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":3787,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":3783,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":3779,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:22",{"_index":3788,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:28",{"_index":3806,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:33",{"_index":3790,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:34",{"_index":3789,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:36",{"_index":3805,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:37",{"_index":3800,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:38",{"_index":3804,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:40",{"_index":3798,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:41",{"_index":3778,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:43",{"_index":3799,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:52",{"_index":3792,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:62",{"_index":3791,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:80",{"_index":3797,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:88",{"_index":3793,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:93",{"_index":3794,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:97",{"_index":3795,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":3773,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["code/validate",{"_index":4020,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["cog",{"_index":1715,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cok",{"_index":1719,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["col",{"_index":1711,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["collected",{"_index":3300,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["collection",{"_index":290,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["colombia",{"_index":1712,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["colour",{"_index":927,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["colours",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["columbia",{"_index":3840,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["column",{"_index":3482,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["com",{"_index":1713,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["come",{"_index":3296,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["comes",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":4650,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":3187,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["committed",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":4618,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":235,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commondatefieldformat",{"_index":2287,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":568,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commondayvalidation][ngmodel",{"_index":2458,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["commondayvalidation][ngmodel]'},{'name",{"_index":570,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatecheck",{"_index":2500,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonduplicatecheck(duplist",{"_index":4894,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonduplicatecheck]'},{'name",{"_index":572,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatesin",{"_index":2513,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["commonformactionbar",{"_index":3478,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["commonimage",{"_index":1286,"title":{"classes/CommonImage.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":1301,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":2786,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":2791,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":3011,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":2783,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":1323,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":2981,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":2832,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":2923,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":1345,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":1349,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":2756,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogger",{"_index":1374,"title":{"injectables/CommonLogger.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":1366,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["commonmodule",{"_index":1056,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonvalidatebcpostal",{"_index":4185,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["commonvalidatebcpostal]'},{'name",{"_index":574,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatename",{"_index":4193,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["commonvalidatename]'},{'name",{"_index":576,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephn",{"_index":4198,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonvalidatephn(isbcphn",{"_index":4895,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonvalidatephn]'},{'name",{"_index":578,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatesin",{"_index":4229,"title":{},"body":{"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["commonvalidatesin]'},{'name",{"_index":580,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonyearvalidate",{"_index":4335,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["commonyearvalidate][ngmodel",{"_index":582,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["comoros",{"_index":1714,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["compare",{"_index":4220,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["comparing",{"_index":4350,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["compat",{"_index":2952,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compatible",{"_index":4450,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compilation",{"_index":5036,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":4559,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":5005,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":2616,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":4999,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":272,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["completed",{"_index":1088,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["completeness",{"_index":1109,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["complex",{"_index":1556,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":4940,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":3246,"title":{},"body":{"components/HeaderComponent.html":{}}}],["compodoccrc.json",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":313,"title":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component's",{"_index":3351,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["component_template",{"_index":497,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["componentlist",{"_index":4033,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["components",{"_index":407,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/accordion/accordion.component",{"_index":4012,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address/address.component",{"_index":3995,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button",{"_index":4000,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button/button.component",{"_index":4002,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":4003,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/city.component",{"_index":3998,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/consent",{"_index":4004,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":3962,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/country/country.component",{"_index":3996,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":3978,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":3975,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/day",{"_index":3976,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/year",{"_index":3980,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":3982,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":3991,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/duplicate",{"_index":4029,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/error",{"_index":4031,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":3984,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":3964,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/full",{"_index":4017,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/header/header.component",{"_index":4019,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":4042,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/name/name.component",{"_index":4006,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/name/validate",{"_index":4013,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/page",{"_index":3966,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":3968,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/phn.component",{"_index":4016,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/validate",{"_index":4027,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phone",{"_index":4007,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":3988,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/province/province.component",{"_index":3997,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/radio/radio.component",{"_index":4009,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/sin.component",{"_index":4015,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/validate",{"_index":4025,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/street.component",{"_index":3999,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":3986,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":3994,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":3969,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/xicon",{"_index":4022,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":5051,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["computer",{"_index":3286,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["concatenate",{"_index":4373,"title":{},"body":{"changelog.html":{}}}],["concatenates",{"_index":3655,"title":{},"body":{"classes/Person.html":{}}}],["conditions",{"_index":4951,"title":{},"body":{"license.html":{}}}],["config",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":4813,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configurable",{"_index":5049,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":1560,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":1442,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{}}}],["configured",{"_index":1046,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configures",{"_index":4908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":5092,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["confirm",{"_index":2510,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/RadioComponent.html":{},"directives/ValidatePhnDirective.html":{}}}],["congo",{"_index":1716,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["connectivity",{"_index":1419,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["consectetur",{"_index":1213,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["consent",{"_index":295,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["consentmodal",{"_index":3324,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["consentmodalcomponent",{"_index":511,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["considered",{"_index":857,"title":{},"body":{"classes/Address.html":{}}}],["consistency",{"_index":917,"title":{},"body":{"components/ButtonComponent.html":{}}}],["consistent",{"_index":1430,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PageFrameworkComponent.html":{}}}],["console",{"_index":188,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["console.error('an",{"_index":1457,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error('geocoder",{"_index":3193,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error('mspmaintenanceservice",{"_index":3369,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(`backend",{"_index":1461,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error(`mspmaintenanceservice",{"_index":3370,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(msg",{"_index":1440,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log",{"_index":181,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["console.log(\"error",{"_index":3015,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":2736,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":2794,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":2772,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["console.log('file",{"_index":2919,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":2751,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('fileuploader",{"_index":2635,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('handleerror",{"_index":3368,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log('http",{"_index":192,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":2855,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":2965,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":3033,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":1451,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log('scaled",{"_index":4172,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('start",{"_index":2871,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('taplog",{"_index":4127,"title":{},"body":{"components/StreetComponent.html":{}}}],["console.log('this",{"_index":2977,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":2622,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":2905,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":2867,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":3006,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":2625,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":3036,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(event",{"_index":1164,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["console.log(response",{"_index":3035,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(this.spaenvres",{"_index":3384,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log(var1",{"_index":2796,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["const",{"_index":173,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":359,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["constructor(controldir",{"_index":1179,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["constructor(errorcode",{"_index":1356,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(form",{"_index":2173,"title":{},"body":{"components/DateComponent.html":{}}}],["constructor(http",{"_index":116,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":999,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(message",{"_index":3419,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["constructor(private",{"_index":1020,"title":{},"body":{"injectables/CaptchaDataService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":85,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["constructor(public",{"_index":1337,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":21,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":4154,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":1350,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":5098,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contact",{"_index":3317,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["contain",{"_index":2692,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["container",{"_index":1523,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/ErrorContainerComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["container'},{'name",{"_index":524,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["container.component",{"_index":4032,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["container.component.html",{"_index":2519,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.scss",{"_index":2518,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.ts",{"_index":2517,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:10",{"_index":2521,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.length",{"_index":4298,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container/error",{"_index":2516,"title":{},"body":{"components/ErrorContainerComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["container[0].scrollleft",{"_index":4305,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["contains",{"_index":3568,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["content",{"_index":278,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["contentchild",{"_index":2526,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":2585,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contents",{"_index":3250,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contenttype",{"_index":1291,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["context",{"_index":4828,"title":{},"body":{"coverage.html":{}}}],["continue",{"_index":16,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{}}}],["continuebutton",{"_index":247,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["contrast",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["contributing",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["contributing.md",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":2342,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["control.value",{"_index":2467,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{}}}],["controlcontainer",{"_index":599,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controldir",{"_index":1171,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["controldir.valueaccessor",{"_index":1281,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["controlvalueaccessor",{"_index":600,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["convert",{"_index":2191,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":2327,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":2371,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["converted",{"_index":714,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["convertroutetotitle",{"_index":1528,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":1533,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":1535,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":2328,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":2373,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cook",{"_index":1720,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["copied",{"_index":389,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copies",{"_index":4898,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copy",{"_index":794,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["copy(object",{"_index":853,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copying",{"_index":3320,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["copylicense",{"_index":4784,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copylicense(_options",{"_index":4897,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copyright",{"_index":4936,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":4823,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copyversionfile(options",{"_index":4873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":514,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":3961,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["corebreadcrumb",{"_index":1557,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":513,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["corporis",{"_index":1261,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["correct",{"_index":4707,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correctly",{"_index":3924,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["correspond",{"_index":245,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":353,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":399,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["costa",{"_index":1722,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["could've",{"_index":2717,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["counter",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["countlength",{"_index":256,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countlength(refnameval",{"_index":323,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countries",{"_index":1598,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["country",{"_index":382,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{}}}],["country'},{'name",{"_index":517,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["country.component.html",{"_index":1574,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["country.component.scss",{"_index":1573,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["country/country.component",{"_index":612,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["country/prov",{"_index":4381,"title":{},"body":{"changelog.html":{}}}],["country_",{"_index":1580,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["country_list",{"_index":611,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"coverage.html":{}}}],["country_list.find",{"_index":2152,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["countrycode",{"_index":1599,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"miscellaneous/functions.html":{}}}],["countrycomponent",{"_index":516,"title":{"components/CountryComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrylist",{"_index":608,"title":{"interfaces/CountryList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"coverage.html":{}}}],["countryobj",{"_index":782,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{}}}],["countryobj.countrycode",{"_index":786,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["countryobj.description",{"_index":2153,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["counts",{"_index":325,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["coverage",{"_index":4715,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpv",{"_index":1691,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["create",{"_index":913,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["created",{"_index":2603,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":4806,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createifmissing(host",{"_index":4902,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":5020,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["creating",{"_index":1061,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cri",{"_index":1721,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["criteria",{"_index":3588,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["criteria.test",{"_index":4189,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["criteriamsg",{"_index":3522,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["croatia",{"_index":1728,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["crumbs",{"_index":1526,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":2995,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cub",{"_index":1729,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cuba",{"_index":1730,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cunha",{"_index":2007,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cupiditate",{"_index":1269,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["curaçao",{"_index":1732,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["curr",{"_index":2945,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["current",{"_index":2251,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["currently",{"_index":297,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":2992,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currentyear",{"_index":4342,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["custom",{"_index":409,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["customize",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["cutoffdate",{"_index":3339,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["cuw",{"_index":1731,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cxr",{"_index":1706,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cycles",{"_index":2441,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["cym",{"_index":1694,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cyp",{"_index":1733,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cyprus",{"_index":1734,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["cze",{"_index":1735,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["czech",{"_index":1736,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["côte",{"_index":1725,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["d",{"_index":2920,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["d.ts",{"_index":5012,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d4f0e3b",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["d5bf00b",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["d[abceghj",{"_index":848,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["d\\'ivoire",{"_index":1726,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["d]+/.test",{"_index":2305,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["da",{"_index":2006,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["danger",{"_index":439,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/PasswordComponent.html":{}}}],["darken",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["darussalam",{"_index":1679,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dashboard",{"_index":1564,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["data",{"_index":191,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["data.city",{"_index":798,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["data.country",{"_index":800,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["data.province",{"_index":799,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["data.service",{"_index":1055,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":995,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":3952,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":3955,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":3953,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":1000,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":1007,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":1011,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":1003,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":3954,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.street",{"_index":797,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["datachange",{"_index":969,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/ToggleComponent.html":{}}}],["dataservice",{"_index":2598,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":2668,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":1407,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["date'},{'name",{"_index":519,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["date(date.year",{"_index":2406,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.component.html",{"_index":2156,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.scss",{"_index":2155,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["date.component.ts",{"_index":4045,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["date.day",{"_index":2408,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getdate",{"_index":2403,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":2401,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":2402,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.interface",{"_index":2239,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{}}}],["date.interface.ts",{"_index":4040,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":2407,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date.year",{"_index":2405,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["date/date.component",{"_index":2398,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datechange",{"_index":2172,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":518,"title":{"components/DateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":2180,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":567,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":2333,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":1406,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["dateofbirth",{"_index":3628,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":3632,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":2311,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":521,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["datepicker.component.html",{"_index":2321,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":2320,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":520,"title":{"components/DatepickerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":2322,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":2323,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":2366,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":2416,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["dates",{"_index":2353,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["datetime",{"_index":2393,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["day",{"_index":2196,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{}}}],["day_",{"_index":2214,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["dayinmonth",{"_index":2474,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["daylabelforid",{"_index":2157,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["dayoutofrange",{"_index":2240,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dayref",{"_index":2158,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["days",{"_index":2211,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["daysinmonth",{"_index":2470,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["dayvalidationdirective",{"_index":569,"title":{"directives/DayValidationDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dbb94e1",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["dd29a60",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":5050,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":3131,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/StreetComponent.html":{}}}],["debouncetime(500",{"_index":4123,"title":{},"body":{"components/StreetComponent.html":{}}}],["december",{"_index":2231,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["declarations",{"_index":1030,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decorators",{"_index":37,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":4973,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":43,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["defaultcolor",{"_index":3045,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["defaultcountry",{"_index":633,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["defaulted",{"_index":658,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["defaultprovince",{"_index":634,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["defaults",{"_index":724,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":2433,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["delay",{"_index":2539,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":3017,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["delete(evt",{"_index":4159,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage",{"_index":4153,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":3026,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delivery",{"_index":664,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["democratic",{"_index":1718,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["denmark",{"_index":1738,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["denominator",{"_index":4283,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":899,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":5060,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["depending",{"_index":738,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["deployed",{"_index":1047,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deployurl",{"_index":3247,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deprecate",{"_index":3761,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["deprecated",{"_index":953,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["description",{"_index":106,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["descriptions",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["deserunt",{"_index":1277,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":587,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["designed",{"_index":3276,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["designs",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["detailed",{"_index":4969,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["detect",{"_index":2632,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["detection",{"_index":2440,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["detector",{"_index":2631,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["determine",{"_index":861,"title":{},"body":{"classes/Address.html":{},"directives/DayValidationDirective.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{}}}],["determines",{"_index":55,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["deu",{"_index":1785,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dev",{"_index":1120,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{}}}],["development",{"_index":3659,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["device",{"_index":3285,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["devkit/schematics",{"_index":5030,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df26aa1",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["df678e6",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["diff",{"_index":3683,"title":{},"body":{"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["differ",{"_index":5095,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["different",{"_index":5074,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["digit",{"_index":4222,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["directive",{"_index":495,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["directive's",{"_index":3352,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["directives",{"_index":566,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"overview.html":{}}}],["directly",{"_index":867,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disablebefore",{"_index":2363,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disabled",{"_index":10,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["disablegeocoder",{"_index":635,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["disables",{"_index":32,"title":{},"body":{"classes/AbstractForm.html":{}}}],["disablesince",{"_index":2334,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":2335,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["disabling",{"_index":3273,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["disiplay",{"_index":4135,"title":{},"body":{"components/StreetComponent.html":{}}}],["display",{"_index":684,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["display=\"table",{"_index":3870,"title":{},"body":{"components/RadioComponent.html":{}}}],["display='inline",{"_index":3875,"title":{},"body":{"components/RadioComponent.html":{}}}],["displayed",{"_index":298,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["displayerr",{"_index":3459,"title":{},"body":{"components/NameComponent.html":{}}}],["displayerror",{"_index":2520,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["displayerrors",{"_index":3432,"title":{},"body":{"components/NameComponent.html":{}}}],["displaying",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["displaymask",{"_index":3731,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["dist",{"_index":2532,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/common",{"_index":5091,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distinctio",{"_index":1240,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["distinctuntilchanged",{"_index":4119,"title":{},"body":{"components/StreetComponent.html":{}}}],["distributed",{"_index":4948,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4213,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["divisible",{"_index":4232,"title":{},"body":{"directives/ValidateSinDirective.html":{}}}],["divs",{"_index":3504,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["dji",{"_index":1739,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["djibouti",{"_index":1740,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dma",{"_index":1741,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dnk",{"_index":1737,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dob",{"_index":3648,"title":{},"body":{"classes/Person.html":{}}}],["dobdt",{"_index":3681,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":3629,"title":{},"body":{"classes/Person.html":{}}}],["docinitparams",{"_index":2997,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":3322,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["document",{"_index":3429,"title":{},"body":{"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":430,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":2993,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":2968,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":4296,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":3534,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":3552,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":4431,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":2594,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["doing",{"_index":956,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dolor",{"_index":1210,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dom",{"_index":468,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dominica",{"_index":1742,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dominican",{"_index":1743,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["don't",{"_index":1146,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{}}}],["don'ts",{"_index":4971,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":2718,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["don’t",{"_index":3289,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["dos",{"_index":4970,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":3488,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":370,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["drag",{"_index":2645,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":2732,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":2730,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":2734,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":2653,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["dropdown",{"_index":327,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":522,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dropdown.component.html",{"_index":2477,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2476,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":380,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":2647,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":2738,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":2740,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":2576,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ducimus",{"_index":1264,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["due",{"_index":1468,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dummy",{"_index":3660,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":333,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["duplicatecheckdirective",{"_index":571,"title":{"directives/DuplicateCheckDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duplist",{"_index":2501,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"miscellaneous/functions.html":{}}}],["duplist.find",{"_index":2509,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.length",{"_index":2508,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["dutch",{"_index":2046,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["dynamic",{"_index":4834,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":739,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["dza",{"_index":1608,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["d{3",{"_index":3756,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["d{4",{"_index":3757,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["e",{"_index":3305,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["e.g",{"_index":150,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e2271b7",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":237,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e35f16b",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["e458627",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["e485f67",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["e762fc1",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["e81927b",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":2725,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":821,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":2719,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":924,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["easily",{"_index":2707,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":3076,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ebb6998",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["ecu",{"_index":1744,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ecuador",{"_index":1745,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["edf0b2e",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["edward",{"_index":3853,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["egy",{"_index":1746,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["egypt",{"_index":1747,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["eib",{"_index":2895,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["el",{"_index":1749,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["element",{"_index":423,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["element's",{"_index":2674,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":268,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":277,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('common",{"_index":457,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('div[class=\"modal",{"_index":455,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click",{"_index":454,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":449,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":445,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":440,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":443,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class*=\"${classval",{"_index":451,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(label",{"_index":463,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":434,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.css(`input[ng",{"_index":461,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":432,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":946,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":41,"title":{},"body":{"classes/AbstractForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageSectionComponent.html":{}}}],["eligibility",{"_index":3310,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["elit",{"_index":1215,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["embedded",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["emirates",{"_index":2119,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["emit",{"_index":2447,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/MaskModel.html":{},"changelog.html":{}}}],["emits",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":877,"title":{},"body":{"classes/Address.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"components/StreetComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["enabled",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["enables",{"_index":647,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["encapsulation",{"_index":3484,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["enclose",{"_index":3063,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":5058,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":2957,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":355,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":1010,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":5081,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["ensure",{"_index":1446,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":415,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{}}}],["entered",{"_index":3288,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":4134,"title":{},"body":{"components/StreetComponent.html":{}}}],["entries",{"_index":2617,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":4545,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":2550,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":1312,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":4850,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":4991,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["env",{"_index":3260,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["environment",{"_index":1121,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["equation",{"_index":2809,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equatorial",{"_index":1752,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["equivalent",{"_index":2361,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["eri",{"_index":1754,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["eritrea",{"_index":1755,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["erorr",{"_index":3374,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["err",{"_index":4098,"title":{},"body":{"components/StreetComponent.html":{}}}],["errmsg",{"_index":3088,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":3625,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":3624,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.pattern",{"_index":3153,"title":{},"body":{"components/FullNameComponent.html":{}}}],["errmsg.required",{"_index":3152,"title":{},"body":{"components/FullNameComponent.html":{},"components/PasswordComponent.html":{}}}],["error",{"_index":147,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('common",{"_index":4324,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["error('this",{"_index":2980,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":1452,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.error.message",{"_index":1458,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.errorcode",{"_index":2782,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":2793,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":2785,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":2788,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":1422,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.name",{"_index":1424,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.rawimagefile",{"_index":2787,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":2789,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":1462,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.statustext",{"_index":1426,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error_fetch_img",{"_index":4860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":4863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":1338,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errorcontainercomponent",{"_index":523,"title":{"components/ErrorContainerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errordescription",{"_index":1339,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":1327,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":2597,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":1454,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["errormessage",{"_index":1396,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errormessagerequired",{"_index":967,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/RadioComponent.html":{}}}],["errormessages",{"_index":2169,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errormessages.dayoutofrange",{"_index":2279,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":2284,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":2283,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":2282,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":2278,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":2281,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":2280,"title":{},"body":{"components/DateComponent.html":{},"components/DatepickerComponent.html":{}}}],["errorname",{"_index":1423,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errorr",{"_index":4321,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["errorr.ts",{"_index":3418,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["errorr.ts:1",{"_index":3420,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["errorreason",{"_index":2989,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":1416,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":2943,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":2956,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":2955,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["esh",{"_index":2142,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["esp",{"_index":2062,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["especially",{"_index":3283,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["esse",{"_index":1233,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["est",{"_index":1756,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["estonia",{"_index":1757,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["et",{"_index":1252,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["etc",{"_index":384,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["eth",{"_index":1758,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ethiopia",{"_index":1759,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["eum",{"_index":1244,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["eustatius",{"_index":1660,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ev",{"_index":3239,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":4274,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":2430,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":4288,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":945,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["event.datatransfer.files",{"_index":2742,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":4142,"title":{},"body":{"components/StreetComponent.html":{}}}],["event.item.street",{"_index":4143,"title":{},"body":{"components/StreetComponent.html":{}}}],["event.jsdate",{"_index":2446,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":4137,"title":{},"body":{"components/StreetComponent.html":{}}}],["event.preventdefault",{"_index":2741,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":3057,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":2299,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target.value",{"_index":3458,"title":{},"body":{"components/NameComponent.html":{},"components/PostalCodeComponent.html":{}}}],["event.target['files",{"_index":2748,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":596,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["eventemitter(false",{"_index":2296,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":4133,"title":{},"body":{"components/StreetComponent.html":{}}}],["everything",{"_index":1403,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":2910,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/RadioComponent.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":2804,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":2737,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":2912,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["exactly",{"_index":2764,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":215,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example.component.ts",{"_index":3928,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":5096,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["examples",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["exampletodo",{"_index":5033,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":2688,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":1428,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/NameComponent.html":{},"license.html":{}}}],["exception",{"_index":3477,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["exclusive",{"_index":4857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":4304,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exercitationem",{"_index":1257,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":1081,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"additional-documentation/local-development/components.html":{}}}],["existing",{"_index":4900,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exists",{"_index":2246,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["expand",{"_index":489,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expandtext",{"_index":480,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expect",{"_index":4989,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":1019,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":1031,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":4953,"title":{},"body":{"license.html":{}}}],["extend",{"_index":823,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["extends",{"_index":631,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/getting-started.html":{}}}],["extra",{"_index":836,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["extract",{"_index":2690,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":3591,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f103e7c",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["f334faf",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["f603e99",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":3590,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["facere",{"_index":1228,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["facets",{"_index":5075,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["facing",{"_index":3373,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["failed",{"_index":143,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":2615,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["falkland",{"_index":1761,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["false",{"_index":45,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePhnDirective.html":{}}}],["family",{"_index":3722,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["faroe",{"_index":1764,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["faso",{"_index":1684,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["favicon_base64",{"_index":4796,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":4270,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["fbc012d",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["fc7fe65",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["feature.properties",{"_index":3183,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":4362,"title":{},"body":{"changelog.html":{}}}],["february",{"_index":2222,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["februrary",{"_index":2213,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["federated",{"_index":1916,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["federation",{"_index":1996,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["feedback",{"_index":3612,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":996,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":1001,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":997,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":1005,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":4858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["field",{"_index":421,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"coverage.html":{}}}],["fieldmaxlenghts",{"_index":671,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["fields",{"_index":837,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["fieldset",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["fiji",{"_index":1766,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":2667,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":2626,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":3039,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":2822,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":1292,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["filecontrol",{"_index":2610,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":2816,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":2754,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":2661,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/functions.html":{}}}],["fileobservable",{"_index":2850,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":2854,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":2752,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":2753,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":2739,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":2749,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":2885,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":2886,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadbrowse",{"_index":2612,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":4673,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":525,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":2759,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":2522,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["filled",{"_index":856,"title":{},"body":{"classes/Address.html":{}}}],["fills",{"_index":2210,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["filter",{"_index":2536,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"classes/Person.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter((mspimage",{"_index":2767,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":3238,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":2750,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":763,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/WizardProgressItem.html":{}}}],["fin",{"_index":1767,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["final",{"_index":2713,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finaldigit",{"_index":4223,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["finally",{"_index":2721,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":683,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["findcountrycode",{"_index":781,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["findprovincedescription(prov",{"_index":773,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["fine",{"_index":1409,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["finish",{"_index":3290,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["finishes",{"_index":2672,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finland",{"_index":1768,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["firefox",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":335,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["first/middle/last",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":3089,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["firstnamelabel",{"_index":3095,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["fix",{"_index":2566,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4371,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":2954,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fji",{"_index":1765,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["flag",{"_index":3372,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["flags",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["flatmap",{"_index":2537,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flex",{"_index":3501,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["flk",{"_index":1760,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["flow",{"_index":3916,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["fluid",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":804,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["focus",{"_index":871,"title":{},"body":{"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["focusable",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":4985,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":4652,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["followed",{"_index":3122,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["following",{"_index":4041,"title":{},"body":{"interfaces/SimpleDate.html":{},"additional-documentation/local-development/components.html":{}}}],["fonts",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["footer\"]')).element(by.css('button[type=\"submit\"]')).click",{"_index":456,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["force",{"_index":2206,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["forceoverwrite",{"_index":4887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forcerender",{"_index":2633,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":1448,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["form",{"_index":11,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["form.ts",{"_index":7,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["form.ts:10",{"_index":39,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:13",{"_index":31,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:15",{"_index":46,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:17",{"_index":24,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:30",{"_index":54,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:36",{"_index":72,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:44",{"_index":66,"title":{},"body":{"classes/AbstractForm.html":{}}}],["formactionbar",{"_index":3060,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{}}}],["formactionbarcomponent",{"_index":527,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":2350,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{}}}],["format.directive",{"_index":3979,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":2286,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":2294,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":2290,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatdateofbirth",{"_index":3633,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":3176,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formcontrol",{"_index":2397,"title":{},"body":{"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["former",{"_index":1888,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["formerrors",{"_index":257,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["forms",{"_index":2512,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/NameComponent.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["formsmodule",{"_index":1053,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmitbar",{"_index":3058,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":529,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":1039,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":598,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"directives/YearValidateDirective.html":{}}}],["found",{"_index":212,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":4981,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":4551,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":3475,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["fra",{"_index":1769,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["framework",{"_index":3075,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["framework'},{'name",{"_index":536,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["framework.component",{"_index":3967,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":3487,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":3486,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":3474,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:29",{"_index":3489,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:31",{"_index":3490,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":3473,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["france",{"_index":1770,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["free",{"_index":912,"title":{},"body":{"components/ButtonComponent.html":{}}}],["freedom",{"_index":3306,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["french",{"_index":1772,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["friendly",{"_index":2705,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fro",{"_index":1763,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["fromevent",{"_index":2533,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":2744,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":2746,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":2731,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":2799,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":2801,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":2802,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fsm",{"_index":1914,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["fugiat",{"_index":1236,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["full",{"_index":531,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["fulladdress",{"_index":3155,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":3661,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["fullname.split",{"_index":3676,"title":{},"body":{"classes/Person.html":{}}}],["fullnamecomponent",{"_index":530,"title":{"components/FullNameComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fullnameerrormsg",{"_index":3112,"title":{"interfaces/FullNameErrorMsg.html":{}},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["fullsizeviewmodal",{"_index":3338,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["function",{"_index":752,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["functionality",{"_index":236,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functiong",{"_index":3721,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["functions",{"_index":4257,"title":{"miscellaneous/functions.html":{}},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["futuna",{"_index":2141,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["future",{"_index":922,"title":{},"body":{"components/ButtonComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":5025,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["gab",{"_index":1779,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gabon",{"_index":1780,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gambia",{"_index":1782,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gbr",{"_index":2120,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["general",{"_index":663,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["generally",{"_index":61,"title":{},"body":{"classes/AbstractForm.html":{}}}],["generate",{"_index":4693,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generated",{"_index":4877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generateskiptocontentlink",{"_index":3219,"title":{},"body":{"components/HeaderComponent.html":{}}}],["generation",{"_index":4631,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["geo",{"_index":1783,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["geoaddressresult",{"_index":604,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":787,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{}}}],["geocoderservice",{"_index":3156,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/StreetComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["georgia",{"_index":1784,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["germany",{"_index":1786,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["get(url",{"_index":124,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":4241,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":4246,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":3630,"title":{},"body":{"classes/Person.html":{}}}],["getapplicationid",{"_index":1514,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getcontinuebutton",{"_index":258,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getcountrydescription",{"_index":2151,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcountrydescription(countrycode",{"_index":4913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getdateofbirthshort",{"_index":3646,"title":{},"body":{"classes/Person.html":{}}}],["getformatdateofbirth",{"_index":3650,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":158,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{}}}],["getisbconly",{"_index":872,"title":{},"body":{"classes/Address.html":{}}}],["getmaxlenasnumber",{"_index":3455,"title":{},"body":{"components/NameComponent.html":{}}}],["getname",{"_index":3653,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":242,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":330,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":243,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":343,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnumericvalue",{"_index":2164,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["getnumericvalue(value",{"_index":2189,"title":{},"body":{"components/DateComponent.html":{}}}],["getpackageversionfrompackagejson",{"_index":4815,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpackageversionfrompackagejson(tree",{"_index":4889,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpasswordstrength",{"_index":3528,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":3554,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getprogramname",{"_index":1518,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getprovincedescription",{"_index":3864,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getprovincedescription(provincecode",{"_index":4914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":4114,"title":{},"body":{"components/StreetComponent.html":{},"miscellaneous/functions.html":{}}}],["getstarturl",{"_index":222,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["getting",{"_index":4351,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["geturlindex",{"_index":1068,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["geturlindex(url",{"_index":1077,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["getvalue",{"_index":1205,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["ggy",{"_index":1803,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gha",{"_index":1787,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ghana",{"_index":1788,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gib",{"_index":1789,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["gibraltar",{"_index":1790,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gif",{"_index":2652,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":2774,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gin",{"_index":1805,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["git",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["gitcommit",{"_index":4819,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":390,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{}}}],["give",{"_index":2857,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["given",{"_index":346,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["gives",{"_index":1328,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["glp",{"_index":1797,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gmb",{"_index":1781,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gnb",{"_index":1806,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gnq",{"_index":1751,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["go",{"_index":352,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":5094,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":2961,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":3476,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["gov",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["governing",{"_index":4956,"title":{},"body":{"license.html":{}}}],["grab",{"_index":334,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["grc",{"_index":1791,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["grd",{"_index":1795,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["greece",{"_index":1792,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["greenland",{"_index":1794,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["grenada",{"_index":1796,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["grenadines",{"_index":2021,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["grl",{"_index":1793,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["group",{"_index":960,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/RadioComponent.html":{}}}],["group'},{'name",{"_index":504,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["group.component",{"_index":4001,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["group.component.html",{"_index":962,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.scss",{"_index":961,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":952,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:38",{"_index":971,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:39",{"_index":975,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:40",{"_index":976,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:41",{"_index":972,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:42",{"_index":973,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:43",{"_index":974,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:44",{"_index":977,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:45",{"_index":987,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:47",{"_index":985,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:48",{"_index":970,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:55",{"_index":982,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:61",{"_index":978,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:66",{"_index":979,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:70",{"_index":980,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:74",{"_index":984,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group/button",{"_index":951,"title":{},"body":{"components/ButtonGroupComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["growing",{"_index":4930,"title":{},"body":{"index.html":{}}}],["gtm",{"_index":1801,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guadeloupe",{"_index":1798,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guam",{"_index":1800,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guard",{"_index":201,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service.ts",{"_index":3914,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:52",{"_index":3932,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:58",{"_index":3939,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:66",{"_index":3942,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:73",{"_index":3934,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guards",{"_index":1118,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["guatemala",{"_index":1802,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guernsey",{"_index":1804,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guessable",{"_index":3556,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":3558,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guf",{"_index":1771,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guiana",{"_index":1773,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guide",{"_index":4925,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":588,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["guinea",{"_index":1753,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["gum",{"_index":1799,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guy",{"_index":1808,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["guyana",{"_index":1809,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["haiti",{"_index":1811,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["half",{"_index":4289,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":4291,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":4303,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":2658,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["handleerror",{"_index":111,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":139,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["handlers",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":142,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["handling",{"_index":172,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happens",{"_index":58,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":356,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["harum",{"_index":1275,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["hash",{"_index":2710,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasn't",{"_index":758,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["hasvalue",{"_index":826,"title":{},"body":{"classes/Address.html":{}}}],["having",{"_index":3506,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["header",{"_index":3205,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["header'},{'name",{"_index":534,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["header.component.html",{"_index":3216,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":3215,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":533,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":3379,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["headers",{"_index":121,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["health",{"_index":3302,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{}}}],["heard",{"_index":1813,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["height",{"_index":2677,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["heightfactor",{"_index":1347,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["helena",{"_index":2003,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["help",{"_index":4993,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":5009,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["helpers/library",{"_index":4320,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["here",{"_index":1444,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"components/WizardProgressBarComponent.html":{}}}],["herzegovina",{"_index":1664,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hfactor",{"_index":1351,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":2664,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":48,"title":{},"body":{"classes/AbstractForm.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["hidefullsizeview",{"_index":4150,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":3523,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":5034,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":447,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["hkg",{"_index":1820,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hmd",{"_index":1812,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hnd",{"_index":1818,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["holy",{"_index":1816,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["homepage",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["honduras",{"_index":1819,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hong",{"_index":1821,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hood",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["hooks",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":3873,"title":{},"body":{"components/RadioComponent.html":{}}}],["horizontally",{"_index":4252,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["host",{"_index":4888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hostlistener",{"_index":2295,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":2297,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":2289,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hrv",{"_index":1727,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hti",{"_index":1810,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["html",{"_index":494,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["html5",{"_index":2656,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":2876,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":2836,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":2300,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":107,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{}}}],["http://full",{"_index":3248,"title":{},"body":{"components/HeaderComponent.html":{}}}],["http://www.apache.org/licenses/license",{"_index":4942,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":1384,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpclient",{"_index":117,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":621,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{}}}],["httperrorresponse",{"_index":140,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpheaders",{"_index":119,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpoptions",{"_index":115,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpopts",{"_index":174,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":176,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":126,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":1012,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":4917,"title":{},"body":{"index.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":3158,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://geocoder.api.gov.bc.ca/addresses.json?minscore=50&maxresults=5&echo=false&brief=true&autocomplete=true&addressstring=784+hock",{"_index":3161,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/angular/angular/issues/24818",{"_index":3143,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":3560,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":3581,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":2315,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["human",{"_index":304,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hun",{"_index":1823,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hungary",{"_index":1824,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["hyphen",{"_index":3124,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["hyphens",{"_index":3469,"title":{},"body":{"components/NameComponent.html":{}}}],["iceland",{"_index":1826,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["icon",{"_index":645,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["id",{"_index":1271,"title":{},"body":{"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["id='content",{"_index":3212,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":393,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":2765,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":904,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["idn",{"_index":1829,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ids",{"_index":896,"title":{},"body":{"classes/Base.html":{}}}],["idx",{"_index":1115,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ie",{"_index":3720,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ie10",{"_index":4323,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["ignore",{"_index":3411,"title":{},"body":{"classes/MaskModel.html":{}}}],["ignored",{"_index":2843,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":1288,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{}}}],["image.id",{"_index":2839,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":2824,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":2866,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":2864,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":2873,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image/jpeg",{"_index":2869,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":2758,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":2837,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":2840,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":2620,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":2621,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":2623,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":4151,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":4176,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":2798,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":2582,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":2831,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":2982,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":2587,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["images.length",{"_index":2820,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":2823,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":2590,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":2768,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":2922,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":2925,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":2924,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":2834,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":2967,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":2976,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":2973,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":2969,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":2994,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":3018,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imn",{"_index":1838,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["implement",{"_index":2948,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["implementation",{"_index":2317,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["implemented",{"_index":35,"title":{},"body":{"classes/AbstractForm.html":{},"changelog.html":{}}}],["implementing",{"_index":3918,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["implements",{"_index":209,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["implied",{"_index":4954,"title":{},"body":{"license.html":{}}}],["import",{"_index":79,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["importable",{"_index":5063,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":2209,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["importantly",{"_index":3502,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imported",{"_index":338,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":4966,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":1043,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":2654,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":2860,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["improvement",{"_index":3500,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imydate",{"_index":2356,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["incidunt",{"_index":1274,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["include",{"_index":1376,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":379,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":2726,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incomplete",{"_index":1083,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages",{"_index":1129,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages.length",{"_index":1132,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incorrect",{"_index":365,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":3065,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["ind",{"_index":1827,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":5002,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":1368,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/PageListInterface.html":{}}}],["india",{"_index":1828,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["indian",{"_index":1674,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["indicates",{"_index":1086,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["individual",{"_index":3084,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["indonesia",{"_index":1830,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/enumerations.html":{}}}],["infocolectionnoticecomponent",{"_index":292,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["information",{"_index":211,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":2388,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["inherited",{"_index":1161,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["init",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":3664,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":3353,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["initinvalid",{"_index":3467,"title":{},"body":{"components/NameComponent.html":{}}}],["inject",{"_index":3270,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["injectable",{"_index":196,"title":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":198,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["injectiontoken",{"_index":3943,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["injector",{"_index":3944,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["inline",{"_index":3874,"title":{},"body":{"components/RadioComponent.html":{}}}],["inmaintenance",{"_index":3378,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["input",{"_index":416,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["input(event",{"_index":2292,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.getattribute",{"_index":2301,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":2306,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":2304,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input[type='file",{"_index":2605,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input_name",{"_index":2611,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":33,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["inside",{"_index":306,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["install",{"_index":4656,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":4923,"title":{},"body":{"index.html":{}}}],["installed",{"_index":4965,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":4807,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1453,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["instead",{"_index":410,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":2686,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instruction",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":2591,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/RadioComponent.html":{}}}],["insurance",{"_index":3318,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["integration",{"_index":4988,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["intentional",{"_index":4326,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["interface",{"_index":584,"title":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":586,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":1427,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["internet",{"_index":152,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["introduced",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":1331,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{}}}],["invalidbcpostal",{"_index":4190,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["invalidchar",{"_index":4195,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["invalidimagehanlder",{"_index":2962,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":2983,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":2245,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["invisible",{"_index":2339,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["invocation",{"_index":753,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["iot",{"_index":1672,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ipsam",{"_index":1218,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ipsum",{"_index":1209,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["iran",{"_index":1832,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["iraq",{"_index":1835,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ireland",{"_index":1837,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["irl",{"_index":1836,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["irn",{"_index":1831,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["irq",{"_index":1834,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["irrelevant",{"_index":3178,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":1566,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["isbconly",{"_index":832,"title":{},"body":{"classes/Address.html":{}}}],["isbcphn",{"_index":4200,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["iscanada",{"_index":718,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["iscanadausa",{"_index":719,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["iscomplete",{"_index":830,"title":{},"body":{"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isdate",{"_index":2329,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":2375,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":809,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["isdobempty",{"_index":3631,"title":{},"body":{"classes/Person.html":{}}}],["isl",{"_index":1825,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["islamic",{"_index":1833,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["island",{"_index":1669,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["islands",{"_index":1605,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["isle",{"_index":1839,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["isloading",{"_index":3046,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["isn't",{"_index":2608,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isnan",{"_index":2277,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["isopen",{"_index":482,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["ispaenvresponse",{"_index":3255,"title":{"interfaces/ISpaEnvResponse.html":{}},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["ispagecomplete",{"_index":223,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispagecomplete(url",{"_index":227,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{}}}],["ispagelistempty",{"_index":1069,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispdf",{"_index":2852,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isprerequisitecomplete",{"_index":224,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isr",{"_index":1841,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["israel",{"_index":1842,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["isrequired",{"_index":632,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["issue",{"_index":2848,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":1050,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{}}}],["iste",{"_index":1229,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["isundermaintenance",{"_index":3329,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isvalid",{"_index":827,"title":{},"body":{"classes/Address.html":{}}}],["it'll",{"_index":2435,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["it's",{"_index":337,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ita",{"_index":1843,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["italy",{"_index":1844,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["item",{"_index":777,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{}}}],["item.iscomplete",{"_index":1124,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["items",{"_index":1079,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["iterate",{"_index":4141,"title":{},"body":{"components/StreetComponent.html":{}}}],["jam",{"_index":1845,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jamaica",{"_index":1846,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jan",{"_index":2072,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["january",{"_index":2221,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["japan",{"_index":1848,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["javascript",{"_index":860,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["jersey",{"_index":1850,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jey",{"_index":1849,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jor",{"_index":1851,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jordan",{"_index":1852,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["jpeg",{"_index":2699,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":2651,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpn",{"_index":1847,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["js",{"_index":4841,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":4817,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":4821,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["jsdate",{"_index":2431,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1470,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["json.stringify(error",{"_index":2830,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["july",{"_index":2226,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["june",{"_index":2225,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["kaz",{"_index":1853,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kazakhstan",{"_index":1854,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["keeling",{"_index":1710,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["keep",{"_index":905,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["ken",{"_index":1855,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kenya",{"_index":1856,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["key",{"_index":448,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{}}}],["keyboard",{"_index":4132,"title":{},"body":{"components/StreetComponent.html":{}}}],["keyboardevent",{"_index":2293,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["keys",{"_index":4892,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyup",{"_index":2800,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kgz",{"_index":1865,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["khm",{"_index":1687,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kib",{"_index":2891,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":4952,"title":{},"body":{"license.html":{}}}],["kingdom",{"_index":2121,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kir",{"_index":1857,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kiribati",{"_index":1858,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kitts",{"_index":2009,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kna",{"_index":2008,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["know",{"_index":955,"title":{},"body":{"components/ButtonGroupComponent.html":{},"additional-documentation/getting-started.html":{}}}],["known",{"_index":1049,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["kong",{"_index":1822,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kor",{"_index":1862,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["korea",{"_index":1860,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kuwait",{"_index":1864,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kwt",{"_index":1863,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["kyrgyzstan",{"_index":1866,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["label",{"_index":319,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DropdownComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["label.getattribute('for",{"_index":435,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelforid",{"_index":400,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["labelid",{"_index":398,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelledby=\"mylargemodallabel\"]')).isdisplayed",{"_index":459,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":340,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":433,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labels",{"_index":636,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["labeltext",{"_index":2336,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["labrador",{"_index":3846,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["land",{"_index":1604,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["language",{"_index":4955,"title":{},"body":{"license.html":{}}}],["lanka",{"_index":2066,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lao",{"_index":1867,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["largely",{"_index":2312,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["last",{"_index":703,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{}}}],["lastname",{"_index":3090,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastnamelabel",{"_index":3096,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["later",{"_index":2662,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["latvia",{"_index":1869,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["law",{"_index":4944,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3071,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["lbn",{"_index":1870,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lbr",{"_index":1874,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lby",{"_index":1876,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lca",{"_index":2011,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["leads",{"_index":361,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["leave",{"_index":702,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{}}}],["lebanon",{"_index":1871,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["left",{"_index":1558,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["left/right",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":493,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":2569,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"changelog.html":{}}}],["lengths",{"_index":670,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["leone",{"_index":2041,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lesotho",{"_index":1873,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["less",{"_index":919,"title":{},"body":{"components/ButtonComponent.html":{}}}],["leste",{"_index":2094,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["letter",{"_index":3121,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":3123,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["level",{"_index":1432,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":5011,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["lib",{"_index":241,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":1042,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":4990,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":4992,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":4644,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":4622,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":4980,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":4977,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["liberia",{"_index":1875,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["libif",{"_index":5079,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":2319,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":3582,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libsetup",{"_index":4924,"title":{},"body":{"index.html":{}}}],["libya",{"_index":1877,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["license",{"_index":4785,"title":{"license.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["license/index.ts",{"_index":4783,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["licensed",{"_index":4938,"title":{},"body":{"license.html":{}}}],["lie",{"_index":1878,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["liechtenstein",{"_index":1879,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["likes",{"_index":4975,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitations",{"_index":4958,"title":{},"body":{"license.html":{}}}],["line",{"_index":650,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["line:max",{"_index":3343,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lines",{"_index":729,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["link",{"_index":318,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":5016,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":5090,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":357,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":778,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/StreetComponent.html":{}}}],["listed",{"_index":4972,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":163,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["literals",{"_index":1484,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lithuania",{"_index":1881,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["live",{"_index":5071,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lka",{"_index":2064,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["load",{"_index":2558,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["loaded",{"_index":759,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["loadimage",{"_index":2556,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":2561,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":12,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["local",{"_index":2506,"title":{"additional-documentation/local-development.html":{}},"body":{"directives/DuplicateCheckDirective.html":{},"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality,street,block,intersection",{"_index":3172,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["locally",{"_index":3298,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":2727,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":5037,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":1392,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{}}}],["log(message",{"_index":1498,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logentry",{"_index":2548,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":1395,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logerror(errormessage",{"_index":1500,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logged",{"_index":1371,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logger",{"_index":1375,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logging",{"_index":189,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["logging/log",{"_index":2549,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror",{"_index":1490,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["loghttperror(error",{"_index":1421,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["loghttprequeststoconsole",{"_index":110,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["logic",{"_index":1062,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["logo",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["logosrc",{"_index":3222,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":1398,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logservice",{"_index":2599,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["logsource",{"_index":1382,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["long",{"_index":208,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["look",{"_index":5078,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":3186,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["lookup",{"_index":395,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{}}}],["lookup(address",{"_index":3162,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lorem",{"_index":1208,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["losing",{"_index":1417,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lost",{"_index":151,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["lower",{"_index":1536,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["lso",{"_index":1872,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ltu",{"_index":1880,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lucia",{"_index":2012,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lux",{"_index":1882,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["luxembourg",{"_index":1883,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["lva",{"_index":1868,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["maarten",{"_index":2045,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mac",{"_index":1884,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["macao",{"_index":1885,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["macedonia",{"_index":1887,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["machine",{"_index":5029,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["madagascar",{"_index":1891,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["made",{"_index":4625,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maf",{"_index":2013,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["magnam",{"_index":1217,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["main",{"_index":915,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maintenance",{"_index":3262,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenanceflag",{"_index":3335,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenancemessage",{"_index":3341,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["majorly",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":136,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"guards/RouteGuardService.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":129,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["making",{"_index":921,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["malawi",{"_index":1893,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["malaysia",{"_index":1895,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["maldives",{"_index":1897,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["malformed",{"_index":2942,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mali",{"_index":1899,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["malta",{"_index":1901,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["malvinas",{"_index":1762,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["man",{"_index":1840,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["manage",{"_index":2708,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manitoba",{"_index":3841,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["manually",{"_index":2439,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["many",{"_index":3877,"title":{},"body":{"components/RadioComponent.html":{}}}],["map",{"_index":2535,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":4273,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":2806,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map([['acl",{"_index":3345,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["map(prov",{"_index":761,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["map(x",{"_index":1543,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":5013,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":2355,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["mar",{"_index":1928,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["march",{"_index":2223,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["margins",{"_index":3073,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["mariana",{"_index":1958,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["marino",{"_index":2025,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["markallinputstouched",{"_index":18,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markastouched",{"_index":69,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markdown",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["markup",{"_index":920,"title":{},"body":{"components/ButtonComponent.html":{}}}],["marshall",{"_index":1903,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["martin",{"_index":2014,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["martinique",{"_index":1905,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mask",{"_index":3397,"title":{},"body":{"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["maskmodel",{"_index":3395,"title":{"classes/MaskModel.html":{}},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["maskmodel:11",{"_index":3744,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:12",{"_index":3746,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:14",{"_index":3742,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:15",{"_index":3743,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:17",{"_index":3759,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:18",{"_index":3760,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:27",{"_index":3753,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["maskmodel:34",{"_index":3752,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["match",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":3179,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":4306,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil",{"_index":3682,"title":{},"body":{"classes/Person.html":{}}}],["math.ceil(math.random()*100",{"_index":2861,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":4292,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["mauritania",{"_index":1907,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mauritius",{"_index":1909,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["max",{"_index":2916,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxheight",{"_index":2935,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":2689,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":1175,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["maxlenasnumber",{"_index":3433,"title":{},"body":{"components/NameComponent.html":{}}}],["maxlength",{"_index":2302,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/StreetComponent.html":{}}}],["maxlengths",{"_index":619,"title":{"interfaces/Maxlengths.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{},"coverage.html":{}}}],["maxretry",{"_index":2940,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":1325,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":2917,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":2932,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mayen",{"_index":2073,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mayotte",{"_index":1911,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mb",{"_index":2781,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["mcdonald",{"_index":1814,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mco",{"_index":1920,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mda",{"_index":1918,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mdg",{"_index":1890,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mdv",{"_index":1896,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["means",{"_index":288,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{}}}],["meant",{"_index":3061,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["meet",{"_index":3589,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["member",{"_index":3723,"title":{},"body":{"components/PhnComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["members",{"_index":3882,"title":{},"body":{"components/RadioComponent.html":{}}}],["menu",{"_index":4979,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":2534,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":2747,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["message",{"_index":1393,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["messages",{"_index":1330,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["meta",{"_index":1399,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":473,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["method",{"_index":184,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["mex",{"_index":1912,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mexico",{"_index":1913,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mhl",{"_index":1902,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mib",{"_index":2892,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["micronesia",{"_index":1915,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["middle",{"_index":3083,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":3091,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["middlenamelabel",{"_index":3097,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["mime",{"_index":2650,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mini",{"_index":2344,"title":{},"body":{"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":2443,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["minimum",{"_index":3512,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ministry",{"_index":3301,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["minlen",{"_index":3531,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":3586,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":3524,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":3525,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":391,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["miquelon",{"_index":2018,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mirror",{"_index":394,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":4849,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missing",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["mistakes",{"_index":4926,"title":{},"body":{"index.html":{}}}],["mkd",{"_index":1886,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mli",{"_index":1898,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mlt",{"_index":1900,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mm').daysinmonth",{"_index":2473,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["mmr",{"_index":1932,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mne",{"_index":1924,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mng",{"_index":1922,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mnp",{"_index":1956,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mobile",{"_index":3736,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mod",{"_index":4218,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["modal",{"_index":296,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["modal')).element(by.css('div[aria",{"_index":458,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["modal'},{'name",{"_index":512,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["modal.component",{"_index":4005,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modal.component.html",{"_index":1313,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["modal.component.scss",{"_index":3327,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["modal.component.ts",{"_index":3258,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["modal/consent",{"_index":3257,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modaldirective",{"_index":2529,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":3972,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":4036,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":2324,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":2554,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":2552,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":4544,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["models/address.model",{"_index":607,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["models/base",{"_index":603,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["models/container",{"_index":4267,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/images.model",{"_index":2541,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["models/mask.model",{"_index":3717,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["models/person.model",{"_index":3130,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["models/simple",{"_index":2238,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["modified",{"_index":4360,"title":{},"body":{"changelog.html":{}}}],["modifyjson",{"_index":4787,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyjson(host",{"_index":4915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":1027,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":1029,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":1041,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":240,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohcommmonlibraryerror",{"_index":4322,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror",{"_index":3416,"title":{"classes/MoHCommonLibraryError.html":{}},"body":{"classes/MoHCommonLibraryError.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["mohcommonlibraryerror(msg",{"_index":4330,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohstart",{"_index":4808,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mohstart(_options",{"_index":4904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["moldova",{"_index":1919,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["molestiae",{"_index":1273,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["molestias",{"_index":1232,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mollitia",{"_index":1230,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["moment",{"_index":900,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().date",{"_index":2255,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().get",{"_index":4343,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["moment().month",{"_index":2253,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment().toisostring",{"_index":1473,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["moment().year",{"_index":2257,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["moment(str",{"_index":2471,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["moment_",{"_index":1373,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"directives/YearValidateDirective.html":{}}}],["momentjs",{"_index":5059,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["monaco",{"_index":1921,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mongolia",{"_index":1923,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["montenegro",{"_index":1925,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["month",{"_index":2201,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{}}}],["month_",{"_index":2219,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthlabelforid",{"_index":2159,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthlist",{"_index":2160,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["monthref",{"_index":2161,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["montserrat",{"_index":1927,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["more",{"_index":210,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["morocco",{"_index":1929,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mouse",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":4643,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moz",{"_index":1930,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mozambique",{"_index":1931,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mrt",{"_index":1906,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["msg",{"_index":1437,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/XiconButtonComponent.html":{}}}],["msp",{"_index":659,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["msp/api/env",{"_index":3336,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["mspdataservice",{"_index":2544,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":3014,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":3013,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":2757,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":2862,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":2868,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":3010,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":2911,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":2913,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":2856,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":2865,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":2863,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":2880,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":2907,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":2904,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":3029,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":3012,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":2813,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":2542,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msr",{"_index":1926,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mtq",{"_index":1904,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["multi",{"_index":959,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhoneNumberComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["multiple",{"_index":1483,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/RadioComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":2888,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["multiply",{"_index":4208,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["mus",{"_index":1908,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mutually",{"_index":4856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwi",{"_index":1892,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["myanmar",{"_index":1933,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["mydatepicker",{"_index":2314,"title":{},"body":{"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":4791,"title":{},"body":{"coverage.html":{}}}],["mys",{"_index":1894,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["myself",{"_index":3880,"title":{},"body":{"components/RadioComponent.html":{}}}],["myselfonly",{"_index":3881,"title":{},"body":{"components/RadioComponent.html":{}}}],["myt",{"_index":1910,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["n",{"_index":2646,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nam",{"_index":1934,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name'},{'name",{"_index":532,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["name.component",{"_index":4018,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.component.html",{"_index":3087,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.scss",{"_index":3086,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.ts",{"_index":3082,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["name.component.ts:113",{"_index":3108,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:117",{"_index":3109,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:121",{"_index":3110,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:36",{"_index":3104,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:37",{"_index":3106,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:38",{"_index":3105,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:39",{"_index":3101,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:40",{"_index":3103,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:41",{"_index":3102,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:42",{"_index":3100,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:45",{"_index":3114,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:46",{"_index":3116,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:47",{"_index":3115,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:49",{"_index":3119,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:51",{"_index":3113,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:53",{"_index":3129,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:54",{"_index":3128,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:56",{"_index":3111,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:57",{"_index":3099,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:63",{"_index":3107,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.directive",{"_index":4014,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.directive.ts",{"_index":4192,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:26",{"_index":4194,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["name/full",{"_index":3081,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["name=\"${refnameval}\"]`)).click",{"_index":453,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":5032,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name^=\"${refnameval",{"_index":465,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).first().sendkeys(text",{"_index":462,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).sendkeys(text",{"_index":450,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name_",{"_index":3437,"title":{},"body":{"components/NameComponent.html":{}}}],["namecomponent",{"_index":246,"title":{"components/NameComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameregex",{"_index":3092,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["names",{"_index":2859,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{}}}],["names.length",{"_index":3678,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":3677,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":3679,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":3680,"title":{},"body":{"classes/Person.html":{}}}],["namestr",{"_index":3431,"title":{},"body":{"components/NameComponent.html":{}}}],["namibia",{"_index":1935,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["napprox",{"_index":2899,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":2903,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":2901,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":859,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":2675,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":1293,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":1294,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["natus",{"_index":1220,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nauru",{"_index":1937,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["navigate",{"_index":19,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":70,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigates",{"_index":73,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigateto",{"_index":260,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":62,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigationend",{"_index":3236,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nb",{"_index":3842,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nbytes",{"_index":2884,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ncl",{"_index":1942,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nec",{"_index":3430,"title":{},"body":{"components/NameComponent.html":{}}}],["necessary",{"_index":276,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":385,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PhoneNumberComponent.html":{},"directives/ValidatePhnDirective.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["negative",{"_index":3072,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nemo",{"_index":1242,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nepal",{"_index":1939,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ner",{"_index":1948,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nesciunt",{"_index":1279,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nested",{"_index":3069,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":1408,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["netherlands",{"_index":1941,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["network",{"_index":1418,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{}}}],["never",{"_index":1447,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["nevis",{"_index":2010,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["new",{"_index":642,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["new.target.prototype",{"_index":3426,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["newfoundland",{"_index":3845,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["newurl",{"_index":1391,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["next",{"_index":273,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["nextpagenumber",{"_index":2838,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nfk",{"_index":1954,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ng",{"_index":311,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":2457,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{}}}],["ng_value_accessor",{"_index":601,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["nga",{"_index":1950,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ngaftercontentinit",{"_index":2797,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngafterviewinit",{"_index":3142,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["ngcontrol",{"_index":1180,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["ngform",{"_index":36,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":5045,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":1145,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/NameComponent.html":{}}}],["ngmodelchange",{"_index":2288,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":203,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngmodules",{"_index":3923,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["ngonchanges",{"_index":2330,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{}}}],["ngonchanges(changes",{"_index":721,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ngondestroy",{"_index":4242,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ngoninit",{"_index":481,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["ngselect",{"_index":406,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":3992,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":3062,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":491,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":2325,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":2394,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":3983,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":4035,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":2527,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nic",{"_index":1946,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nicaragua",{"_index":1947,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["niger",{"_index":1949,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nigeria",{"_index":1951,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nisi",{"_index":1227,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["niu",{"_index":1952,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["niue",{"_index":1953,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nl",{"_index":3844,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nld",{"_index":1940,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nmultiple",{"_index":2898,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nobis",{"_index":1256,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["node",{"_index":4918,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":5069,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":5040,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":2244,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["noidimage",{"_index":2573,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1224,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":1006,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":2340,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["nopastdatesallowed",{"_index":2243,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["norfolk",{"_index":1955,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["northern",{"_index":1957,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["northwest",{"_index":3859,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["norway",{"_index":1959,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["nostrum",{"_index":1266,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["note",{"_index":354,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nothing",{"_index":4140,"title":{},"body":{"components/StreetComponent.html":{}}}],["notice",{"_index":291,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["notify",{"_index":2197,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":3498,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["nova",{"_index":3848,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["november",{"_index":2230,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["now",{"_index":388,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["npl",{"_index":1938,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["npm",{"_index":897,"title":{},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["nprstv",{"_index":845,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["nru",{"_index":1936,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ns",{"_index":3847,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nt",{"_index":3858,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nu",{"_index":3860,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["null",{"_index":728,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["null/undefined",{"_index":743,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{}}}],["nulls",{"_index":3665,"title":{},"body":{"classes/Person.html":{}}}],["num",{"_index":4211,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["number",{"_index":326,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["number'},{'name",{"_index":545,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["number(phn.substring(9",{"_index":4224,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["number,number,number,number",{"_index":3764,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component",{"_index":4008,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.component.html",{"_index":3728,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.scss",{"_index":3727,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts",{"_index":3726,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["number.component.ts:38",{"_index":3758,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:39",{"_index":3735,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:40",{"_index":3741,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:41",{"_index":3737,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:42",{"_index":3740,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:45",{"_index":3739,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:46",{"_index":3745,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:48",{"_index":3754,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:49",{"_index":3734,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:59",{"_index":3750,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:66",{"_index":3747,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:70",{"_index":3748,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:74",{"_index":3751,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.parseint",{"_index":3465,"title":{},"body":{"components/NameComponent.html":{}}}],["number/phone",{"_index":3725,"title":{},"body":{"components/PhoneNumberComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["numerator",{"_index":4285,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numeric",{"_index":2192,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["numpages",{"_index":3001,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["numquam",{"_index":1267,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nunavut",{"_index":3861,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nzl",{"_index":1944,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["o",{"_index":2773,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obcaecati",{"_index":1262,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["obj",{"_index":2386,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["obj.features.map(feature",{"_index":3181,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["object",{"_index":160,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{}}}],["object.addressline1",{"_index":886,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline2",{"_index":888,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline3",{"_index":890,"title":{},"body":{"classes/Address.html":{}}}],["object.city",{"_index":891,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":892,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth.day",{"_index":3688,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.month",{"_index":3687,"title":{},"body":{"classes/Person.html":{}}}],["object.dateofbirth.year",{"_index":3689,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":3684,"title":{},"body":{"classes/Person.html":{}}}],["object.keys",{"_index":3671,"title":{},"body":{"classes/Person.html":{}}}],["object.keys(this.fieldmaxlenghts).map",{"_index":817,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.keys(this.labels).map",{"_index":812,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["object.lastname",{"_index":3686,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":3685,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":893,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":894,"title":{},"body":{"classes/Address.html":{}}}],["object.setprototypeof(this",{"_index":3425,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["object.street",{"_index":885,"title":{},"body":{"classes/Address.html":{}}}],["objectid",{"_index":901,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":5064,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":138,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":185,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":190,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observe",{"_index":1022,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":170,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":2846,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":2833,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":2926,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":2929,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":4941,"title":{},"body":{"license.html":{}}}],["occupied",{"_index":1968,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["occured",{"_index":1456,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["ocean",{"_index":1675,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["october",{"_index":2229,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["ocurrence",{"_index":420,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["odit",{"_index":1270,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["of(error",{"_index":3377,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["of30",{"_index":2812,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":5088,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["older",{"_index":4920,"title":{},"body":{"index.html":{}}}],["oman",{"_index":1961,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["omit",{"_index":868,"title":{},"body":{"classes/Address.html":{}}}],["omn",{"_index":1960,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["onblur",{"_index":3608,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["onblurevent",{"_index":1172,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["onblurevent(event",{"_index":1193,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["onbtnclick",{"_index":4312,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["once",{"_index":2703,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchange",{"_index":3733,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["onchanges",{"_index":597,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onclick",{"_index":931,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":943,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":2331,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":2380,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":4234,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["one",{"_index":274,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror",{"_index":4078,"title":{},"body":{"components/StreetComponent.html":{}}}],["onerror(err",{"_index":4096,"title":{},"body":{"components/StreetComponent.html":{}}}],["ongoing",{"_index":2724,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":472,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["oninput",{"_index":2298,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":3529,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":3563,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup",{"_index":4079,"title":{},"body":{"components/StreetComponent.html":{}}}],["onkeyup(event",{"_index":4099,"title":{},"body":{"components/StreetComponent.html":{}}}],["onload",{"_index":2971,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onlyfuturedates",{"_index":2337,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["onpaste",{"_index":3611,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect",{"_index":4080,"title":{},"body":{"components/StreetComponent.html":{}}}],["onselect(event",{"_index":4101,"title":{},"body":{"components/StreetComponent.html":{}}}],["onstatuschange",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["ontario",{"_index":3850,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["onupdate",{"_index":3398,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{}}}],["onupdate(value",{"_index":3402,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{}}}],["onvaluechange",{"_index":1173,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["onvaluechange(value",{"_index":1195,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["open",{"_index":2657,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["opened/read",{"_index":2978,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openmodal",{"_index":3325,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["opens",{"_index":442,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["openshift",{"_index":1048,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":5072,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":2693,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opt",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":4271,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["optio",{"_index":1234,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":401,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["optional()@self",{"_index":1203,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["optionally",{"_index":186,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":133,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["optiontext",{"_index":375,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":444,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":730,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["organize",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["orient",{"_index":2691,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":2938,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":381,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":2267,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":744,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["outlying",{"_index":2123,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["output",{"_index":595,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":933,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["outside",{"_index":4256,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":2780,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{},"miscellaneous/functions.html":{}}}],["override",{"_index":348,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["overridesscss",{"_index":4800,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":4961,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":275,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/functions.html":{}}}],["overwritefile",{"_index":4809,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["overwritefile(host",{"_index":4905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overwritten",{"_index":285,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["pa",{"_index":3348,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["package",{"_index":898,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":4634,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":5021,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":64,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":1548,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":233,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":404,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":414,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:122",{"_index":301,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":270,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:130",{"_index":308,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:138",{"_index":286,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:146",{"_index":315,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:153",{"_index":293,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:160",{"_index":372,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:169",{"_index":418,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:178",{"_index":317,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":279,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:186",{"_index":324,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":347,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":322,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":329,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":369,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":321,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":331,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":344,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":328,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":376,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pagechecklist",{"_index":1067,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["pageframework",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":535,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagelistinterface",{"_index":1100,"title":{"interfaces/PageListInterface.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["pagenumber",{"_index":2827,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":1541,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":1547,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":1084,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["pagesectioncomponent",{"_index":537,"title":{"components/PageSectionComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pageurl",{"_index":3935,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["pains",{"_index":4931,"title":{},"body":{"index.html":{}}}],["pak",{"_index":1962,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pakistan",{"_index":1963,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["palau",{"_index":1965,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["palestinian",{"_index":1967,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pan",{"_index":1969,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["panama",{"_index":1970,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["papua",{"_index":1972,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["paraguay",{"_index":1974,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["param",{"_index":169,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidatePhnDirective.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":194,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":3175,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":626,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["parents",{"_index":627,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["pariatur",{"_index":1258,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["parsed",{"_index":2274,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["parseint",{"_index":2275,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["parseint(scaledwidthstring",{"_index":4174,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parsing",{"_index":1466,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["part",{"_index":2015,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["parts",{"_index":3662,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":367,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"directives/YearValidateDirective.html":{}}}],["passed",{"_index":51,"title":{},"body":{"classes/AbstractForm.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/RadioComponent.html":{},"components/StreetComponent.html":{}}}],["passes",{"_index":3567,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["passing",{"_index":3584,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passtest",{"_index":3809,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["password",{"_index":1333,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["password'},{'name",{"_index":540,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["password.component.html",{"_index":3521,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":3520,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":3544,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":3519,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":539,"title":{"components/PasswordComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":3536,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":2184,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["pasting",{"_index":3610,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["path",{"_index":3927,"title":{},"body":{"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["paths",{"_index":4560,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["pattern",{"_index":3093,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["payload",{"_index":1015,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":1024,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcformat",{"_index":3777,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["pcn",{"_index":1979,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pdf",{"_index":1332,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["pdf.good",{"_index":1334,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":3002,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":2988,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":2825,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":2531,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":2991,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":2990,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":2999,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":2565,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":2530,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":1321,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":2986,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pe",{"_index":3851,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["people\\'s",{"_index":1861,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["per",{"_index":1975,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["performance",{"_index":754,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{}}}],["period",{"_index":3125,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["periods",{"_index":3470,"title":{},"body":{"components/NameComponent.html":{}}}],["permissions",{"_index":4957,"title":{},"body":{"license.html":{}}}],["persisted",{"_index":691,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["person",{"_index":2551,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":3663,"title":{},"body":{"classes/Person.html":{}}}],["person.model.ts",{"_index":4043,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":1537,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["personchange",{"_index":3098,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["peru",{"_index":1976,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pg",{"_index":199,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["pharmacare's",{"_index":870,"title":{},"body":{"classes/Address.html":{}}}],["philippines",{"_index":1978,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["phl",{"_index":1977,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["phn",{"_index":3691,"title":{},"body":{"components/PhnComponent.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["phn'},{'name",{"_index":542,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["phn.component.html",{"_index":3693,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.component.scss",{"_index":3692,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.directive",{"_index":4028,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["phn.directive.ts",{"_index":4197,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["phn.directive.ts:104",{"_index":4202,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn.directive.ts:105",{"_index":4201,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn.directive.ts:107",{"_index":4203,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn.trim().length",{"_index":4207,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["phn_",{"_index":3697,"title":{},"body":{"components/PhnComponent.html":{}}}],["phncomponent",{"_index":541,"title":{"components/PhnComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":544,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["phone_",{"_index":3738,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumber",{"_index":3732,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["phonenumbercomponent",{"_index":543,"title":{"components/PhoneNumberComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumberregex",{"_index":3729,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["pib",{"_index":2894,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pierre",{"_index":2017,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pipe",{"_index":2805,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/MaskModel.html":{}}}],["pipe(filter((evt",{"_index":2803,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":2849,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pitcairn",{"_index":1980,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pixel",{"_index":2695,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pkg",{"_index":4886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["place",{"_index":206,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["placeholder",{"_index":1176,"title":{},"body":{"components/CityComponent.html":{},"components/DropdownComponent.html":{},"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["please",{"_index":2592,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"index.html":{}}}],["plurinational",{"_index":1656,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["plus",{"_index":644,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["plw",{"_index":1964,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["png",{"_index":1971,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["po",{"_index":662,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["point",{"_index":349,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["points",{"_index":4546,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["pol",{"_index":1981,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["poland",{"_index":1982,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pollyfills.ts",{"_index":5047,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["polynesia",{"_index":1775,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["poor",{"_index":2316,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["populated",{"_index":2972,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":2998,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["portugal",{"_index":1984,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["post",{"_index":112,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":153,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":547,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["postal.directive",{"_index":4021,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postal.directive.ts",{"_index":4184,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["postal.directive.ts:25",{"_index":4186,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["postalcode",{"_index":594,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["postalcode_",{"_index":3782,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["postalcodebcregex",{"_index":829,"title":{},"body":{"classes/Address.html":{}}}],["postalcodecomponent",{"_index":546,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["potential",{"_index":2847,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":5014,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":2811,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["pr#13",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":3211,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pre",{"_index":3947,"title":{},"body":{"guards/RouteGuardService.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"miscellaneous/functions.html":{}}}],["preceding",{"_index":2766,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["premium",{"_index":3314,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prerequisites",{"_index":1091,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["present",{"_index":3517,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/YearValidateDirective.html":{}}}],["preservesymlinks",{"_index":4471,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["prevent",{"_index":3609,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":5048,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previous",{"_index":1126,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["previously",{"_index":2870,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pri",{"_index":1985,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["primarily",{"_index":4251,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":936,"title":{},"body":{"components/ButtonComponent.html":{}}}],["prime",{"_index":339,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["prince",{"_index":3852,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["principe",{"_index":2029,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["print",{"_index":865,"title":{},"body":{"classes/Address.html":{}}}],["printed",{"_index":862,"title":{},"body":{"classes/Address.html":{}}}],["prior",{"_index":5015,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":5035,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["privacy",{"_index":3308,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["private",{"_index":755,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["prk",{"_index":1859,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["probably",{"_index":2979,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["problem",{"_index":3509,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["proceed",{"_index":1095,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["process",{"_index":2468,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["processing",{"_index":2642,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processname",{"_index":3328,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["processresponse",{"_index":3195,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":3180,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":1377,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":1388,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["progress",{"_index":563,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["progressbarmodule",{"_index":3971,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":4034,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":2964,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":2963,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":1527,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":822,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["project>architect>build>options",{"_index":5097,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":5062,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":4852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../country.component.ts",{"_index":4868,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../datepicker.component.ts",{"_index":4854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../duplicate",{"_index":4866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../images.model.ts",{"_index":4853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../index.ts",{"_index":4864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../json.ts",{"_index":4870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../logger.service.ts",{"_index":4855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../package",{"_index":4865,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../province.component.ts",{"_index":4869,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../validate",{"_index":4867,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/common/captcha/src/captcha",{"_index":994,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":4718,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":1038,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":1040,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":231,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/helpers/library",{"_index":3417,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts",{"_index":470,"title":{},"body":{"components/AccordionCommonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:21",{"_index":486,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:22",{"_index":485,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:24",{"_index":490,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:25",{"_index":487,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:26",{"_index":484,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":589,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"coverage.html":{}}}],["projects/common/lib/components/button",{"_index":950,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts",{"_index":909,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts:36",{"_index":938,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:37",{"_index":939,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:38",{"_index":940,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:39",{"_index":941,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:40",{"_index":935,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:44",{"_index":942,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:47",{"_index":944,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts",{"_index":1137,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:37",{"_index":1143,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:38",{"_index":1151,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:39",{"_index":1147,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:40",{"_index":1150,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:41",{"_index":1149,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:42",{"_index":1142,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:43",{"_index":1152,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:44",{"_index":1153,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:45",{"_index":1160,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:48",{"_index":1158,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:49",{"_index":1141,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:63",{"_index":1154,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:67",{"_index":1155,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:71",{"_index":1156,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:75",{"_index":1157,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts",{"_index":1168,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/city/city.component.ts:12",{"_index":1183,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:13",{"_index":1188,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:14",{"_index":1186,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:15",{"_index":1182,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:16",{"_index":1189,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:19",{"_index":1190,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:24",{"_index":1206,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:28",{"_index":1192,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:29",{"_index":1191,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:31",{"_index":1202,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:33",{"_index":1201,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:34",{"_index":1181,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:36",{"_index":1204,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:43",{"_index":1196,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:48",{"_index":1194,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:53",{"_index":1200,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:60",{"_index":1197,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:65",{"_index":1198,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:69",{"_index":1199,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/consent",{"_index":3256,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":1550,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts",{"_index":1572,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/country/country.component.ts:279",{"_index":1579,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:280",{"_index":1577,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:281",{"_index":1581,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:282",{"_index":1578,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:283",{"_index":1583,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:284",{"_index":1584,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:285",{"_index":1582,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:288",{"_index":1585,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:293",{"_index":1597,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:297",{"_index":1587,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:298",{"_index":1586,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:300",{"_index":1596,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:302",{"_index":1594,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:303",{"_index":1576,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:305",{"_index":1595,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:312",{"_index":1589,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:320",{"_index":1588,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:325",{"_index":1593,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:332",{"_index":1590,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:337",{"_index":1591,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/country/country.component.ts:341",{"_index":1592,"title":{},"body":{"components/CountryComponent.html":{}}}],["projects/common/lib/components/date/date",{"_index":2285,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":2154,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts:108",{"_index":2203,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:123",{"_index":2205,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:134",{"_index":2190,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:34",{"_index":2234,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:35",{"_index":2217,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:36",{"_index":2237,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:38",{"_index":2187,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:39",{"_index":2183,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:40",{"_index":2179,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:41",{"_index":2182,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:42",{"_index":2178,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:44",{"_index":2185,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:45",{"_index":2181,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:47",{"_index":2188,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:49",{"_index":2232,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:54",{"_index":2220,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:55",{"_index":2215,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:56",{"_index":2176,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:58",{"_index":2218,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:63",{"_index":2193,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:85",{"_index":2200,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/date.component.ts:97",{"_index":2195,"title":{},"body":{"components/DateComponent.html":{}}}],["projects/common/lib/components/date/day",{"_index":2454,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/year",{"_index":4333,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":2310,"title":{},"body":{"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":2374,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":2376,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:116",{"_index":2379,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:167",{"_index":2378,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:177",{"_index":2381,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:186",{"_index":2370,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:194",{"_index":2382,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:198",{"_index":2383,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":2385,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:36",{"_index":2367,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:37",{"_index":2347,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:38",{"_index":2369,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:39",{"_index":2351,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:40",{"_index":2359,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:42",{"_index":2365,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:46",{"_index":2357,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:49",{"_index":2352,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:52",{"_index":2360,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":2341,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:72",{"_index":2349,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":2358,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:78",{"_index":2392,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:81",{"_index":2391,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:83",{"_index":2396,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:86",{"_index":2389,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:88",{"_index":2387,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:89",{"_index":2338,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:95",{"_index":2372,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":2475,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:18",{"_index":2496,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":2487,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:21",{"_index":2488,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":2489,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":2485,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:24",{"_index":2483,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":2484,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:26",{"_index":2490,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:27",{"_index":2486,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:29",{"_index":2495,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:30",{"_index":2482,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:38",{"_index":2491,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:41",{"_index":2494,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:45",{"_index":2492,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:49",{"_index":2493,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/duplicate",{"_index":2497,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/error",{"_index":2515,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/file",{"_index":2523,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":3040,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/full",{"_index":3080,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts",{"_index":3202,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts:20",{"_index":3228,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:21",{"_index":3229,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:22",{"_index":3227,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:24",{"_index":3235,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:25",{"_index":3225,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:30",{"_index":3231,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:39",{"_index":3233,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:43",{"_index":3234,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:51",{"_index":3230,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts",{"_index":3428,"title":{},"body":{"components/NameComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/name/name.component.ts:21",{"_index":3435,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:22",{"_index":3436,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:23",{"_index":3440,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:24",{"_index":3438,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:27",{"_index":3441,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:32",{"_index":3454,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:36",{"_index":3443,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:37",{"_index":3442,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:39",{"_index":3453,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:41",{"_index":3451,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:42",{"_index":3434,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:44",{"_index":3452,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:51",{"_index":3446,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:56",{"_index":3445,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:61",{"_index":3450,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:68",{"_index":3447,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:73",{"_index":3448,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:77",{"_index":3449,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:81",{"_index":3444,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:87",{"_index":3456,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/validate",{"_index":4191,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":3472,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":3510,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:118",{"_index":3561,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":3566,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:135",{"_index":3564,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:142",{"_index":3553,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:157",{"_index":3555,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":3540,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":3539,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":3538,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":3546,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":3548,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":3543,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:64",{"_index":3542,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:65",{"_index":3537,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:66",{"_index":3549,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":3545,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":3551,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":3550,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":3570,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:76",{"_index":3573,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:77",{"_index":3575,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":3569,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:82",{"_index":3574,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:83",{"_index":3571,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:84",{"_index":3572,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:85",{"_index":3535,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:92",{"_index":3562,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts",{"_index":3690,"title":{},"body":{"components/PhnComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:13",{"_index":3696,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:14",{"_index":3699,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:15",{"_index":3702,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:16",{"_index":3698,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:17",{"_index":3695,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:21",{"_index":3703,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:26",{"_index":3716,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:30",{"_index":3705,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:31",{"_index":3704,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:33",{"_index":3715,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:34",{"_index":3714,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:36",{"_index":3712,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:37",{"_index":3694,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:39",{"_index":3713,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:49",{"_index":3707,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:58",{"_index":3706,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:63",{"_index":3711,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:70",{"_index":3708,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:75",{"_index":3709,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:79",{"_index":3710,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/validate",{"_index":4196,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/phone",{"_index":3724,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/postal",{"_index":3772,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts",{"_index":3812,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/province/province.component.ts:100",{"_index":3831,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:104",{"_index":3832,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:41",{"_index":3817,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:42",{"_index":3822,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:43",{"_index":3819,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:44",{"_index":3816,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:45",{"_index":3823,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:46",{"_index":3821,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:47",{"_index":3820,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:48",{"_index":3824,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:51",{"_index":3825,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:56",{"_index":3837,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:60",{"_index":3827,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:61",{"_index":3826,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:63",{"_index":3836,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:65",{"_index":3834,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:66",{"_index":3815,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:68",{"_index":3835,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:75",{"_index":3829,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:83",{"_index":3828,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:88",{"_index":3833,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:95",{"_index":3830,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts",{"_index":3866,"title":{},"body":{"components/RadioComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:49",{"_index":3898,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:50",{"_index":3891,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:51",{"_index":3892,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:52",{"_index":3897,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:53",{"_index":3900,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:54",{"_index":3899,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:55",{"_index":3895,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:56",{"_index":3894,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:57",{"_index":3896,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:58",{"_index":3901,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:60",{"_index":3908,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:61",{"_index":3890,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:63",{"_index":3909,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:70",{"_index":3906,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:77",{"_index":3902,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:81",{"_index":3903,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:85",{"_index":3907,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:89",{"_index":3904,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts",{"_index":4046,"title":{},"body":{"components/SinComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:13",{"_index":4053,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:14",{"_index":4056,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:15",{"_index":4057,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:16",{"_index":4055,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:17",{"_index":4051,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:20",{"_index":4058,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:28",{"_index":4071,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:33",{"_index":4060,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:34",{"_index":4059,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:36",{"_index":4070,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:37",{"_index":4069,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:39",{"_index":4067,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:40",{"_index":4050,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:42",{"_index":4068,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:52",{"_index":4062,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:61",{"_index":4061,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:66",{"_index":4066,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:73",{"_index":4063,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:78",{"_index":4064,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:82",{"_index":4065,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/validate",{"_index":4227,"title":{},"body":{"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/street/street.component.ts",{"_index":4073,"title":{},"body":{"components/StreetComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/street/street.component.ts:104",{"_index":4106,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:108",{"_index":4107,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:113",{"_index":4100,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:128",{"_index":4097,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:133",{"_index":4103,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:16",{"_index":4084,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:17",{"_index":4087,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:20",{"_index":4086,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:21",{"_index":4083,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:22",{"_index":4089,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:23",{"_index":4088,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:26",{"_index":4090,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:31",{"_index":4118,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:35",{"_index":4093,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:36",{"_index":4091,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:37",{"_index":4092,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:39",{"_index":4115,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:45",{"_index":4116,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:48",{"_index":4111,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:50",{"_index":4113,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:52",{"_index":4109,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:53",{"_index":4082,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:55",{"_index":4110,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:63",{"_index":4094,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:78",{"_index":4104,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:87",{"_index":4095,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:92",{"_index":4108,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts:99",{"_index":4105,"title":{},"body":{"components/StreetComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":4145,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:12",{"_index":4156,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":4157,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":4158,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":4164,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:17",{"_index":4155,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:22",{"_index":4166,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":4162,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:41",{"_index":4160,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:47",{"_index":4163,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:52",{"_index":4161,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":4177,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":4181,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":4182,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":4180,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":4183,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/wizard",{"_index":4233,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/xicon",{"_index":4310,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts",{"_index":820,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts:10",{"_index":852,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:13",{"_index":833,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:15",{"_index":834,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:17",{"_index":838,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:18",{"_index":843,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:19",{"_index":840,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:20",{"_index":851,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:21",{"_index":839,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:22",{"_index":841,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:23",{"_index":842,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:33",{"_index":858,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:46",{"_index":855,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:52",{"_index":873,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:63",{"_index":854,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:7",{"_index":850,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/base.ts",{"_index":895,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/lib/models/base.ts:11",{"_index":902,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/lib/models/container.ts",{"_index":1524,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/lib/models/container.ts:12",{"_index":1531,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:18",{"_index":1534,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:22",{"_index":1540,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/images.model.ts",{"_index":1287,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/models/images.model.ts:16",{"_index":1358,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:17",{"_index":1360,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:18",{"_index":1357,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:20",{"_index":1359,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:29",{"_index":1298,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:35",{"_index":1303,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:36",{"_index":1300,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:38",{"_index":1308,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:39",{"_index":1310,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:40",{"_index":1309,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:41",{"_index":1306,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:42",{"_index":1307,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:43",{"_index":1305,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:46",{"_index":1304,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:48",{"_index":1302,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:49",{"_index":1299,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:56",{"_index":1362,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/lib/models/images.model.ts:60",{"_index":1364,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:61",{"_index":1363,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:68",{"_index":1365,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/mask.model.ts",{"_index":3396,"title":{},"body":{"classes/MaskModel.html":{},"coverage.html":{}}}],["projects/common/lib/models/mask.model.ts:11",{"_index":3408,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:12",{"_index":3409,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:14",{"_index":3406,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:15",{"_index":3407,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:17",{"_index":3401,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:18",{"_index":3400,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:27",{"_index":3405,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/mask.model.ts:34",{"_index":3403,"title":{},"body":{"classes/MaskModel.html":{}}}],["projects/common/lib/models/person.model.ts",{"_index":3627,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/lib/models/person.model.ts:14",{"_index":3637,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:15",{"_index":3639,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:16",{"_index":3638,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:19",{"_index":3635,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:22",{"_index":3634,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:25",{"_index":3647,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:35",{"_index":3651,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:45",{"_index":3645,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:53",{"_index":3654,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:71",{"_index":3658,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:85",{"_index":3641,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:91",{"_index":3640,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/simple",{"_index":4039,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/lib/services/abstract",{"_index":103,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["projects/common/lib/services/check",{"_index":1059,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts",{"_index":3154,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts:22",{"_index":3200,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:23",{"_index":3201,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:24",{"_index":3196,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:31",{"_index":3198,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:52",{"_index":3199,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:73",{"_index":3197,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/logger.service.ts",{"_index":1367,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/services/logger.service.ts:110",{"_index":1496,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:129",{"_index":1497,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:147",{"_index":1522,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:154",{"_index":1505,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:158",{"_index":1503,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:166",{"_index":1504,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:179",{"_index":1369,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/lib/services/logger.service.ts:23",{"_index":1511,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:29",{"_index":1493,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:35",{"_index":1517,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:39",{"_index":1515,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:43",{"_index":1521,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:47",{"_index":1519,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:51",{"_index":1506,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:55",{"_index":1499,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:59",{"_index":1501,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:79",{"_index":1494,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:84",{"_index":1495,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:93",{"_index":1502,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/route",{"_index":3913,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":3960,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":5076,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":5004,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":5077,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":4782,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":4786,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/moh",{"_index":4789,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/version",{"_index":4816,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/src/public_api.ts",{"_index":5100,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":4827,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":4820,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":342,"title":{},"body":{"classes/AbstractTestPage.html":{},"guards/RouteGuardService.html":{}}}],["proper",{"_index":1329,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":3070,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":1486,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["property",{"_index":1402,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["props",{"_index":3182,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress",{"_index":3192,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.indexof",{"_index":3189,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":3190,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.localityname",{"_index":3184,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.provincecode",{"_index":3191,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["protection",{"_index":3307,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prototype",{"_index":3423,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["protractor",{"_index":424,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["prov",{"_index":700,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["prov.country",{"_index":762,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["provide",{"_index":204,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":320,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":1110,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["provident",{"_index":1225,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["providers",{"_index":217,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":234,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":383,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"license.html":{}}}],["province'},{'name",{"_index":550,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["province.component.html",{"_index":3814,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province.component.scss",{"_index":3813,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province/country",{"_index":869,"title":{},"body":{"classes/Address.html":{}}}],["province/province.component",{"_index":616,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["province_",{"_index":3818,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province_list",{"_index":615,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["province_list.find",{"_index":3865,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecode",{"_index":3838,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"miscellaneous/functions.html":{}}}],["provincecomponent",{"_index":549,"title":{"components/ProvinceComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["provincelist",{"_index":613,"title":{"interfaces/ProvinceList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["provincial",{"_index":3311,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["provision",{"_index":1565,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["provlist",{"_index":655,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["provobj",{"_index":766,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provobj.description",{"_index":774,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provobj.provincecode",{"_index":772,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["prt",{"_index":1983,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pry",{"_index":1973,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pse",{"_index":1966,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pswdfeedback",{"_index":3613,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":3614,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":3526,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":220,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["publish",{"_index":5086,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":4995,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["puerto",{"_index":1986,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["pull",{"_index":4927,"title":{},"body":{"index.html":{}}}],["pure",{"_index":4987,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":3652,"title":{},"body":{"classes/Person.html":{}}}],["pushes",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3213,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pwdcriteria",{"_index":3532,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pyf",{"_index":1774,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["qat",{"_index":1988,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["qatar",{"_index":1989,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["qc",{"_index":3854,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["quality",{"_index":2700,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["quam",{"_index":1251,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quasi",{"_index":1219,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quebec",{"_index":3855,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["querylist",{"_index":4262,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":125,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":3064,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["questions",{"_index":3316,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["quia",{"_index":1226,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quidem",{"_index":1268,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quis",{"_index":1248,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quisquam",{"_index":1239,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["radio",{"_index":3867,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["radio's",{"_index":3878,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio'},{'name",{"_index":552,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["radio.component.html",{"_index":3887,"title":{},"body":{"components/RadioComponent.html":{}}}],["radio.component.scss",{"_index":3886,"title":{},"body":{"components/RadioComponent.html":{}}}],["radiocomponent",{"_index":551,"title":{"components/RadioComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["radiolabels",{"_index":3879,"title":{},"body":{"components/RadioComponent.html":{}}}],["radios",{"_index":3868,"title":{},"body":{"components/RadioComponent.html":{}}}],["ran",{"_index":5065,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":3037,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rapid",{"_index":3364,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rapidresponsecode",{"_index":3367,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ratio",{"_index":2696,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratione",{"_index":1263,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["rawimagefile",{"_index":1324,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["re",{"_index":625,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":2959,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reactive",{"_index":2511,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/NameComponent.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["read",{"_index":2660,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["readable",{"_index":305,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":2853,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":2909,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":2930,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":2984,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":2970,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":282,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["readme",{"_index":4527,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readpdf(pdffile",{"_index":2985,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reason",{"_index":2629,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["receiving",{"_index":1420,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["recommend",{"_index":3518,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":341,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["reduced",{"_index":2368,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ref",{"_index":2874,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":2442,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{}}}],["refactored",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":4615,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":312,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["refnameval",{"_index":314,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["regex",{"_index":882,"title":{},"body":{"classes/Address.html":{}}}],["regex.test(this.postal",{"_index":884,"title":{},"body":{"classes/Address.html":{}}}],["regexp",{"_index":3547,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["regexp('^[vv]\\\\d[abceghj",{"_index":4188,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["regexp(address.postalcodebcregex",{"_index":883,"title":{},"body":{"classes/Address.html":{}}}],["register",{"_index":1044,"title":{},"body":{"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"additional-documentation/getting-started.html":{}}}],["registered",{"_index":622,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["registeronchange",{"_index":964,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registeronchange(fn",{"_index":802,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registerontouched",{"_index":965,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registerontouched(fn",{"_index":805,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["registration",{"_index":3925,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["registration.module.ts",{"_index":216,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["registrationservice",{"_index":219,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["reject",{"_index":4347,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["related",{"_index":4474,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["relates",{"_index":5067,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["release",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":4997,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remainder",{"_index":4215,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["remove",{"_index":737,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"components/ThumbnailComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["removed",{"_index":2763,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["removeline(line",{"_index":736,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["removing",{"_index":2951,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rename",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":3321,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rendering",{"_index":2628,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reorganize",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["repellat",{"_index":1238,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["replace",{"_index":3595,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{}}}],["repo",{"_index":4882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo=https://github.com/bcgov/prime",{"_index":4883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reprehenderit",{"_index":1254,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["republic",{"_index":1699,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["repudiandae",{"_index":1260,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["repurpose",{"_index":1479,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["req",{"_index":4206,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{}}}],["request",{"_index":130,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/StreetComponent.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":1381,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["requests",{"_index":144,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":4829,"title":{},"body":{"coverage.html":{}}}],["require('blueimp",{"_index":2557,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":2564,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":2560,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":50,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":3094,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requirements",{"_index":3514,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["requires",{"_index":620,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{}}}],["requisite",{"_index":3948,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["rerum",{"_index":1222,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["reset",{"_index":1037,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":3019,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":2851,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":2687,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":2715,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":5044,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["respective",{"_index":134,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":1469,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["response",{"_index":1013,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{}}}],["responsetype",{"_index":1464,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["rest",{"_index":3034,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restore",{"_index":3427,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["restrictdate",{"_index":2170,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["result",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":2694,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrieve",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["retry",{"_index":2939,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":2941,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":2540,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{}}}],["returned",{"_index":1016,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["returns",{"_index":57,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"miscellaneous/functions.html":{}}}],["reu",{"_index":1990,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["reverts",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["reviewmode",{"_index":4152,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["rica",{"_index":1723,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["rico",{"_index":1987,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["right",{"_index":387,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":3557,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role=\"progressbar",{"_index":3617,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":438,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["romania",{"_index":1993,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["root",{"_index":1111,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["rotate",{"_index":2679,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rou",{"_index":1992,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["route",{"_index":74,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["routeguard",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["routeguardservice",{"_index":214,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{}}}],["routeisactive",{"_index":3220,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeisactive(url",{"_index":3232,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routepath",{"_index":1538,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":1542,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":22,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":4238,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":3974,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routerstatesnapshot",{"_index":3938,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routes",{"_index":3920,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing.modle.ts",{"_index":3926,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing=true",{"_index":5023,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":3871,"title":{},"body":{"components/RadioComponent.html":{}}}],["rule",{"_index":4884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rules",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":2207,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":4655,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":67,"title":{},"body":{"classes/AbstractForm.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["rural",{"_index":661,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{}}}],["rus",{"_index":1994,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["russian",{"_index":1995,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["rwa",{"_index":1997,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["rwanda",{"_index":1998,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["rxjs",{"_index":165,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":168,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["réunion",{"_index":1991,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["s",{"_index":2883,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["saba",{"_index":1661,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["safe",{"_index":4301,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["sahara",{"_index":2144,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["saint",{"_index":2000,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["salvador",{"_index":1750,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["same",{"_index":405,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["samoa",{"_index":1612,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["san",{"_index":2024,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sandwich",{"_index":2059,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sao",{"_index":2027,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sapiente",{"_index":1216,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["saskatchewan",{"_index":3857,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["satisfy",{"_index":2436,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["sau",{"_index":2030,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["saudi",{"_index":2031,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["save",{"_index":4214,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"index.html":{}}}],["saved",{"_index":2722,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["saving",{"_index":2953,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scale",{"_index":1355,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":2906,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":2872,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":1361,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":1348,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":4148,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":4168,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":2814,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":2937,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":2815,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":2934,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":2776,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":2538,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":2944,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":4279,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schematic",{"_index":4680,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":5027,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":4678,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":5026,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":5003,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["school",{"_index":3287,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["scotia",{"_index":3849,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["screen",{"_index":281,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["screenreader",{"_index":4407,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":4705,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["scriptname",{"_index":4872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scripts",{"_index":4523,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":4297,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrolldown",{"_index":261,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolls",{"_index":76,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":4243,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrollup",{"_index":262,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scss",{"_index":5054,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["sdn",{"_index":2067,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["search",{"_index":775,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{}}}],["searchtext",{"_index":4076,"title":{},"body":{"components/StreetComponent.html":{}}}],["second",{"_index":649,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["secondary",{"_index":937,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":3209,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":538,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["section.component",{"_index":3990,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":3496,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":3495,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":3494,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:17",{"_index":3497,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:21",{"_index":3499,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":3493,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":3282,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["security",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":213,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["select",{"_index":378,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["select/ng",{"_index":3993,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":441,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["select[ng",{"_index":464,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectedday",{"_index":4336,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["selectedmonth",{"_index":2459,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["selectedyear",{"_index":2460,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["selectevent",{"_index":4081,"title":{},"body":{"components/StreetComponent.html":{}}}],["selectfilelabelref",{"_index":2584,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":411,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/StreetComponent.html":{}}}],["selections",{"_index":2354,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":263,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":374,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":474,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["selects",{"_index":377,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["self",{"_index":1280,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["self.dataservice.getmspuuid",{"_index":2821,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":2877,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":2927,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":2878,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sen",{"_index":2033,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["send",{"_index":122,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["sends",{"_index":408,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["sendspaenvserver(rapidresponsecode",{"_index":3365,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["senegal",{"_index":2034,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["september",{"_index":2228,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["sequence",{"_index":1098,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["sequentially",{"_index":3917,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["sequi",{"_index":1278,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["serbia",{"_index":2036,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["server",{"_index":146,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":1017,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["service",{"_index":108,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":105,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:11",{"_index":118,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:16",{"_index":120,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:22",{"_index":127,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:30",{"_index":155,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:38",{"_index":157,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:52",{"_index":159,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:59",{"_index":141,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":2543,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":2545,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["servicename",{"_index":3223,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services",{"_index":4543,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["services/abstract",{"_index":3272,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["services/geocoder.service",{"_index":605,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{}}}],["services/logger.service",{"_index":3271,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sessionid",{"_index":1380,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["set",{"_index":637,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["set('addressstring",{"_index":3173,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('autocomplete",{"_index":3170,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('brief",{"_index":3166,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":3165,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('matchprecisionnot",{"_index":3171,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":3164,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":3163,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setaddress(data",{"_index":796,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["setapplicationid(id",{"_index":1516,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setbuttongrpval",{"_index":966,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbuttongrpval(val",{"_index":981,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbypassguards(bypass",{"_index":1104,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setcheckboxval(event",{"_index":1163,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcity(value",{"_index":711,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["setcountry(value",{"_index":699,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["setday",{"_index":2165,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setday(value",{"_index":2194,"title":{},"body":{"components/DateComponent.html":{}}}],["setdefaultcountryasoption",{"_index":779,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["setdefaultprovinceasoption(country",{"_index":765,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["setdisabledstate",{"_index":1174,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":807,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["setfirstname(value",{"_index":3147,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setlabels",{"_index":810,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["setlastname(value",{"_index":3151,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmaxlengths",{"_index":815,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["setmiddlename(value",{"_index":3150,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmonth",{"_index":2166,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setmonth(value",{"_index":2199,"title":{},"body":{"components/DateComponent.html":{}}}],["setname(fullname",{"_index":3657,"title":{},"body":{"classes/Person.html":{}}}],["setpagecomplete",{"_index":1070,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpageincomplete",{"_index":1071,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpassword",{"_index":3530,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":3565,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setphonenumber",{"_index":3730,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setphonenumber(value",{"_index":3749,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setpostalcode(value",{"_index":716,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["setprogramname(name",{"_index":1520,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setprogresssteps",{"_index":1529,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":1539,"title":{},"body":{"classes/Container.html":{}}}],["setprovince(value",{"_index":708,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["sets",{"_index":713,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"changelog.html":{}}}],["setseverity",{"_index":1491,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setseverity(severity",{"_index":1474,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setstarturl(url",{"_index":1102,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setstatus",{"_index":3888,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstatus(evt",{"_index":3905,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstreetaddress(value",{"_index":709,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["settags",{"_index":1492,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["settags(message",{"_index":1480,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["settimeout",{"_index":2270,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["settimestamp",{"_index":1471,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setting",{"_index":2362,"title":{},"body":{"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["settings",{"_index":4909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":202,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["setuprequest",{"_index":113,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":156,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":1439,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["seturl(newurl",{"_index":1389,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setvalue(val",{"_index":1207,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["setyear",{"_index":2167,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["setyear(value",{"_index":2202,"title":{},"body":{"components/DateComponent.html":{}}}],["severity",{"_index":1431,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["severitylevels",{"_index":1475,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["seychelles",{"_index":2038,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sgp",{"_index":2042,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sgs",{"_index":2058,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sha1",{"_index":2559,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":2914,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":2563,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":2624,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shared",{"_index":3284,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["sharedcoremodule",{"_index":3956,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":358,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["shn",{"_index":2002,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["shouldn't",{"_index":3375,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["show",{"_index":47,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":968,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/RadioComponent.html":{}}}],["showfullsizeview",{"_index":3356,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["showline${line",{"_index":734,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["showline2",{"_index":656,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["showline3",{"_index":657,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["shown",{"_index":3277,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["showpasswordstrength",{"_index":3533,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["shows",{"_index":3872,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["side",{"_index":1455,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["sierra",{"_index":2040,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sign",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":3059,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/StreetComponent.html":{},"directives/YearValidateDirective.html":{}}}],["simple",{"_index":1063,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["simplechanges",{"_index":2377,"title":{},"body":{"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["simpledate",{"_index":2177,"title":{"interfaces/SimpleDate.html":{}},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":5053,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simplicity",{"_index":918,"title":{},"body":{"components/ButtonComponent.html":{}}}],["simply",{"_index":2950,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageSectionComponent.html":{}}}],["simulates",{"_index":4139,"title":{},"body":{"components/StreetComponent.html":{}}}],["sin",{"_index":4047,"title":{},"body":{"components/SinComponent.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{}}}],["sin'},{'name",{"_index":554,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["sin.component.html",{"_index":4049,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.component.scss",{"_index":4048,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.directive",{"_index":4026,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["sin.directive.ts",{"_index":4228,"title":{},"body":{"directives/ValidateSinDirective.html":{},"coverage.html":{}}}],["sin.directive.ts:74",{"_index":4230,"title":{},"body":{"directives/ValidateSinDirective.html":{}}}],["sin.length",{"_index":4231,"title":{},"body":{"directives/ValidateSinDirective.html":{}}}],["sin_",{"_index":4054,"title":{},"body":{"components/SinComponent.html":{}}}],["sincomponent",{"_index":553,"title":{"components/SinComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singapore",{"_index":2043,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["single",{"_index":3206,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageFrameworkComponent.html":{},"components/RadioComponent.html":{}}}],["sint",{"_index":1659,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sit",{"_index":1211,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["site",{"_index":1567,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["sitereg",{"_index":3505,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["size",{"_index":1295,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["sizetxt",{"_index":1296,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":1297,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sjm",{"_index":2070,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sk",{"_index":3856,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["skiblibcheck",{"_index":4912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":280,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["skip_content_hash",{"_index":3217,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiplibcheck",{"_index":5041,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["skiplinkpath",{"_index":3218,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiptocontentbutton",{"_index":248,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slb",{"_index":2051,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sle",{"_index":2039,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["slightly",{"_index":3245,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slot",{"_index":1561,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":1555,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slovakia",{"_index":2048,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["slovenia",{"_index":2050,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["slv",{"_index":1748,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["small",{"_index":2714,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["smooth",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{}}}],["smr",{"_index":2023,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["social",{"_index":4052,"title":{},"body":{"components/SinComponent.html":{}}}],["software",{"_index":4947,"title":{},"body":{"license.html":{}}}],["solomon",{"_index":2052,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["solve",{"_index":2808,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["som",{"_index":2053,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["somalia",{"_index":2054,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["something",{"_index":866,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":4788,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortobjectbykeys(obj",{"_index":4890,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sorts",{"_index":4891,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["south",{"_index":2056,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["southern",{"_index":1777,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["soutput",{"_index":2887,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["spa",{"_index":3259,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag",{"_index":3263,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_message",{"_index":3264,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_acl_maintenance_flag\":\"\",\"spa_env_msp_acl_maintenance_message",{"_index":3346,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag",{"_index":3265,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag\":\"\",\"spa_env_msp_maintenance_message",{"_index":3347,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_message",{"_index":3266,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_name",{"_index":3366,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_now",{"_index":3267,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_end",{"_index":3268,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start",{"_index":3269,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end\":\"\",\"spa_env_now",{"_index":3349,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["space",{"_index":2345,"title":{},"body":{"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"classes/MaskModel.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":5082,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["spaces",{"_index":3415,"title":{},"body":{"classes/MaskModel.html":{}}}],["spaenvres",{"_index":3340,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spain",{"_index":2063,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["special",{"_index":2627,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{}}}],["specific",{"_index":733,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":4911,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["specificmember",{"_index":3885,"title":{},"body":{"components/RadioComponent.html":{}}}],["specified",{"_index":131,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["spinner",{"_index":49,"title":{},"body":{"classes/AbstractForm.html":{}}}],["split",{"_index":2819,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splits",{"_index":3167,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["splunk",{"_index":1335,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["spm",{"_index":2016,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["srb",{"_index":2035,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["src/version.js",{"_index":4881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sri",{"_index":2065,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ssd",{"_index":2060,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["stable",{"_index":3185,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["stack",{"_index":4328,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["standard",{"_index":863,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":4679,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":4290,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":4792,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":4795,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":4797,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":4790,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":4799,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":4801,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":4803,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":4805,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start/package",{"_index":4812,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":4352,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":4967,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["starts",{"_index":2828,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["starturl",{"_index":1072,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["state",{"_index":667,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":4716,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1917,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":828,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["status",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["statuschange",{"_index":3889,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["statustext",{"_index":1425,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["step",{"_index":2778,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":4309,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":4239,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":1532,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["stepper/wizard",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["stepper/wizardprogress",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["steps",{"_index":2643,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["still",{"_index":2779,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PageSectionComponent.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["store",{"_index":835,"title":{},"body":{"classes/Address.html":{},"components/StreetComponent.html":{}}}],["stored",{"_index":750,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["stp",{"_index":2026,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["str",{"_index":2469,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["street",{"_index":646,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["street'},{'name",{"_index":556,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["street.component.html",{"_index":4075,"title":{},"body":{"components/StreetComponent.html":{}}}],["street.component.scss",{"_index":4074,"title":{},"body":{"components/StreetComponent.html":{}}}],["street_",{"_index":4085,"title":{},"body":{"components/StreetComponent.html":{}}}],["streetcomponent",{"_index":555,"title":{"components/StreetComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["strength",{"_index":3511,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":3527,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":71,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":795,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"directives/YearValidateDirective.html":{}}}],["style",{"_index":910,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageSectionComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["style.width]='strengthpercentage",{"_index":3618,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":3626,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":5022,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styled",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1553,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":5089,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":5084,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common",{"_index":5083,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":5019,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["stylesscss",{"_index":4802,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":476,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["styling",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["stylings",{"_index":928,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stylized",{"_index":3203,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sub",{"_index":3168,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["subclasses",{"_index":1482,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["subfolder",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":4112,"title":{},"body":{"components/StreetComponent.html":{}}}],["submission",{"_index":1405,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["submit",{"_index":269,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitbar",{"_index":3479,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["submitlabel",{"_index":3047,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["submitted",{"_index":682,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["subscribe",{"_index":1400,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["subscribe(evt",{"_index":2735,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(response",{"_index":3382,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["subscribe(this.updateskipcontentlink.bind(this",{"_index":3240,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(url",{"_index":4275,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscription",{"_index":4259,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["success",{"_index":193,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"coverage.html":{}}}],["success_fetch_img",{"_index":4859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":4862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":2818,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":925,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"additional-documentation/getting-started.html":{}}}],["sudan",{"_index":2061,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["suggestion",{"_index":3508,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["sum",{"_index":4216,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{}}}],["sumofremainders",{"_index":4217,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["sunhighlight",{"_index":2413,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["super",{"_index":677,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":1385,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["super(message",{"_index":3421,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["supply",{"_index":4325,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["support",{"_index":4959,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":2068,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sure",{"_index":688,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"guards/RouteGuardService.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["suriname",{"_index":2069,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["svalbard",{"_index":2071,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["svg",{"_index":4960,"title":{},"body":{"modules.html":{}}}],["svk",{"_index":2047,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["svn",{"_index":2049,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["swaziland",{"_index":2075,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["swe",{"_index":2076,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sweden",{"_index":2077,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["switch",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":4287,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":4120,"title":{},"body":{"components/StreetComponent.html":{}}}],["switchmap(searchphrase",{"_index":4124,"title":{},"body":{"components/StreetComponent.html":{}}}],["switzerland",{"_index":2079,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["swz",{"_index":2074,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["sxm",{"_index":2044,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["syc",{"_index":2037,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["symlink",{"_index":5024,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["syr",{"_index":2080,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["syrian",{"_index":2081,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["system",{"_index":2641,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["t",{"_index":128,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":3208,"title":{},"body":{"components/HeaderComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["tabbed",{"_index":284,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["table",{"_index":3893,"title":{},"body":{"components/RadioComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4830,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":2966,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1478,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["taiwan",{"_index":2084,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tajikistan",{"_index":2086,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["take",{"_index":3294,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["takes",{"_index":161,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{}}}],["taking",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["tanzania",{"_index":2088,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tap",{"_index":167,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["tap(log",{"_index":4126,"title":{},"body":{"components/StreetComponent.html":{}}}],["target",{"_index":135,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["targetpath",{"_index":4903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tca",{"_index":2110,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tcd",{"_index":1700,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tell",{"_index":5018,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":467,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["templates",{"_index":5056,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":478,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["temporary",{"_index":2858,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["temporibus",{"_index":1237,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["tenetur",{"_index":1243,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["territories",{"_index":1778,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["territory",{"_index":1676,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["test",{"_index":232,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/NameComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["test(var1",{"_index":2795,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":350,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["tests",{"_index":238,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Person.html":{}}}],["text",{"_index":300,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"components/StreetComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["text)).click",{"_index":452,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["text.touppercase",{"_index":3413,"title":{},"body":{"classes/MaskModel.html":{},"components/PostalCodeComponent.html":{}}}],["textmaskmodule",{"_index":3987,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["tgo",{"_index":2095,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tha",{"_index":2090,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["thailand",{"_index":2091,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["thanks",{"_index":4600,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that's",{"_index":1429,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["then((data",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{}}}],["there's",{"_index":2437,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["therefore",{"_index":793,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["theyt",{"_index":2960,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":3515,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this._applicationheadermap.get(this.processname",{"_index":3380,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._bypassguards",{"_index":1113,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._continue(state.url",{"_index":3945,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this._headers",{"_index":195,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this._headers.get",{"_index":1387,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set",{"_index":1386,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('severity",{"_index":1476,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('tags",{"_index":1481,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('timestamp",{"_index":1472,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._log",{"_index":1394,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._logerror",{"_index":1397,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._onchange",{"_index":803,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this._onchange(event",{"_index":1166,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":2449,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._onchange(evt",{"_index":3910,"title":{},"body":{"components/RadioComponent.html":{}}}],["this._onchange(null",{"_index":2445,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this._onchange(this.addr",{"_index":705,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this._onchange(this.person",{"_index":3149,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._onchange(true",{"_index":3362,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._onchange(val",{"_index":989,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this._onchange(value",{"_index":3770,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._onchange(values",{"_index":3146,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._ontouched",{"_index":806,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this._ontouched(this.addr",{"_index":707,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this._sendlog(errormessage",{"_index":1415,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._sendlog(message",{"_index":1412,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._starturl",{"_index":1112,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.accept.emit(fn",{"_index":3394,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.accept.emit(true",{"_index":3359,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.activeindex",{"_index":4276,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.addline(2",{"_index":694,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addline(3",{"_index":696,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addr",{"_index":640,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addr.addressline2",{"_index":693,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addr.addressline3",{"_index":695,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addr.city",{"_index":712,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addr.country",{"_index":680,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addr.postal",{"_index":717,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addr.province",{"_index":686,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addr.street",{"_index":710,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.address[addrlookup",{"_index":747,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addresschange.emit(this.addr",{"_index":706,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.addressline1",{"_index":876,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline2",{"_index":887,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline3",{"_index":889,"title":{},"body":{"classes/Address.html":{}}}],["this.addrlabels[x",{"_index":813,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.allowemptyvalue",{"_index":4226,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["this.allowextralines",{"_index":692,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.application",{"_index":2601,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.base_url}/addresses.json",{"_index":3160,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.blurevent.emit",{"_index":1283,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.browsefileref.nativeelement",{"_index":3021,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":2807,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":3024,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":949,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["this.buttongroup.nativeelement.focus",{"_index":990,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.cancontinue",{"_index":3056,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":3023,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":3025,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":4281,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":2273,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.checkbox.nativeelement.focus",{"_index":1167,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":2769,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":875,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{}}}],["this.cleardate",{"_index":2444,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.click.emit",{"_index":4332,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.clickevent.emit",{"_index":4331,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.close.emit",{"_index":3361,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.commonyearvalidate",{"_index":4346,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["this.componentlabel",{"_index":3585,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.consentmodal.showfullsizeview",{"_index":3326,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.continuebutton",{"_index":428,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":427,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":2614,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.controldir",{"_index":3460,"title":{},"body":{"components/NameComponent.html":{},"components/PostalCodeComponent.html":{}}}],["this.controldir.control.seterrors",{"_index":3811,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.controldir.dirty",{"_index":3462,"title":{},"body":{"components/NameComponent.html":{}}}],["this.controldir.disabled",{"_index":3461,"title":{},"body":{"components/NameComponent.html":{}}}],["this.controldir.errors",{"_index":3464,"title":{},"body":{"components/NameComponent.html":{}}}],["this.controldir.touched",{"_index":3463,"title":{},"body":{"components/NameComponent.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":2425,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":2429,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":1549,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":878,"title":{},"body":{"classes/Address.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["this.countrylist",{"_index":783,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.countrylist.find",{"_index":784,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.criteriamsg",{"_index":3594,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.cutoffdate.emit(this.spaenvres",{"_index":3392,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.data",{"_index":991,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["this.datachange.emit(this.data",{"_index":1165,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.datachange.emit(val",{"_index":988,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.dataservice.getmspuuid",{"_index":3005,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":2260,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.date.day",{"_index":2254,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.month",{"_index":2252,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.date.year",{"_index":2256,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit",{"_index":2262,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":2448,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":2412,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":3672,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.day",{"_index":3669,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.month",{"_index":3668,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth.year",{"_index":3667,"title":{},"body":{"classes/Person.html":{}}}],["this.dateofbirth[key",{"_index":3673,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":2411,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":2424,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":2427,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":2419,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":2421,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.dayref",{"_index":2263,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.defaultcountry",{"_index":780,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.defaultprovince",{"_index":769,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.disabled",{"_index":808,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.disablegeocoder",{"_index":791,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.displaymask",{"_index":3808,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.dobformat",{"_index":3670,"title":{},"body":{"classes/Person.html":{}}}],["this.duplist",{"_index":2514,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["this.errmsg",{"_index":3139,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":3601,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":3599,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":3597,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":3016,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessages",{"_index":2249,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":3600,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":3598,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":3596,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.fieldmaxlenghts[x",{"_index":819,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.findcountrycode",{"_index":685,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.findprovincedescription",{"_index":704,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.firstname",{"_index":3133,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.form",{"_index":628,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.form.controls[this.daylabelforid",{"_index":2271,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.controls[this.daylabelforid].updatevalueandvalidity",{"_index":2272,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.form.form.get(x).markastouched",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.form.valuechanges.pipe(debouncetime(0)).subscribe((values",{"_index":3144,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.fullsizeviewmodal.config.keyboard",{"_index":3357,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.hide",{"_index":3360,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.show",{"_index":3358,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.generateskiptocontentlink",{"_index":3244,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":4125,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.get",{"_index":4983,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":3174,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":4280,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":4277,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":2602,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":437,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getnumericvalue",{"_index":2258,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.getpasswordstrength",{"_index":3605,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.geturlindex",{"_index":1116,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":2761,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":2790,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":2792,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":2784,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":2770,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":2771,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.heightfactor",{"_index":1354,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(url",{"_index":178,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":1026,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":182,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":1021,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":175,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":2613,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":4171,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":4170,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":2760,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":3027,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":3032,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":3007,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":3008,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.inmaintenance",{"_index":3355,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.isbcphn",{"_index":4225,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["this.iscanada",{"_index":720,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.isdate(this.disablesince",{"_index":2423,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":2426,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.isdobempty",{"_index":3666,"title":{},"body":{"classes/Person.html":{}}}],["this.isloading",{"_index":3055,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.ispagelistempty",{"_index":1114,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.isundermaintenance",{"_index":3354,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.label",{"_index":1148,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"components/XiconButtonComponent.html":{}}}],["this.labels",{"_index":811,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.labels[x",{"_index":814,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.labeltext",{"_index":2410,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":3135,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":180,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":3003,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":1404,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({event",{"_index":3371,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({name",{"_index":2817,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.maintenanceflag",{"_index":3386,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.maintenancemessage",{"_index":3387,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.mask",{"_index":3719,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.maxlen",{"_index":3466,"title":{},"body":{"components/NameComponent.html":{}}}],["this.maxlengths",{"_index":816,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.maxlengths[x",{"_index":818,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.middlename",{"_index":3137,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.minlen",{"_index":3587,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":3592,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":3593,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":2434,"title":{},"body":{"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.monthref",{"_index":2259,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.namestr",{"_index":3457,"title":{},"body":{"components/NameComponent.html":{}}}],["this.ngmodelchange.emit",{"_index":2309,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":2450,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":2453,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":2640,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":1185,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.observablefromfiles(filelist",{"_index":2755,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onchange.emit(this.person",{"_index":3148,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onchange.emit(this.phonenumber",{"_index":3769,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.onchange.emit(values",{"_index":3145,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onerror(err",{"_index":4129,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.onlyfuturedates",{"_index":2428,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.pagechecklist",{"_index":1122,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.filter",{"_index":1130,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.findindex",{"_index":1133,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.length",{"_index":1136,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.map((item",{"_index":1123,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx",{"_index":1127,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx].iscomplete",{"_index":1125,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.password",{"_index":3603,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":3607,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.pattern",{"_index":3141,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.pcformat.test",{"_index":3810,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.person",{"_index":3132,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.firstname",{"_index":3134,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.lastname",{"_index":3136,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.middlename",{"_index":3138,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.phn",{"_index":3718,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phonenumber",{"_index":3768,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.placeholder",{"_index":3765,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.post()these",{"_index":4984,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":1449,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.postal",{"_index":880,"title":{},"body":{"classes/Address.html":{}}}],["this.postal.length",{"_index":881,"title":{},"body":{"classes/Address.html":{}}}],["this.postalcode",{"_index":3807,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.progresssteps",{"_index":1546,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":4293,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":4284,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":879,"title":{},"body":{"classes/Address.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.provincelist",{"_index":757,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.provincelist.find",{"_index":767,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.provlist",{"_index":760,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.pswdstrength",{"_index":3604,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":2835,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.required",{"_index":3031,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":3140,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":2762,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":2826,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":2842,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":86,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.events.pipe",{"_index":3237,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([this.service.getstarturl",{"_index":3950,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.router.navigate([url",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.url",{"_index":1117,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.router.url.includes(url",{"_index":3242,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url}#content",{"_index":3254,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.routerevents",{"_index":4272,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":4282,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.scaledwidth",{"_index":4173,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":4278,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.search",{"_index":4131,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.searchtext$.next(this.search",{"_index":4138,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.searchtext$.pipe",{"_index":4122,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.selectedday",{"_index":4341,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["this.selectedmonth",{"_index":2466,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/YearValidateDirective.html":{}}}],["this.selectedyear",{"_index":2465,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["this.selectevent.emit",{"_index":4144,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.sendspaenvserver(headername",{"_index":3381,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.service.canbypassguards",{"_index":3946,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.ispagecomplete(pageurl",{"_index":3951,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.isprerequisitecomplete",{"_index":3949,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setdefaultcountryasoption",{"_index":681,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.setdefaultprovinceasoption",{"_index":701,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.setdefaultprovinceasoption(this.addr.country",{"_index":687,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.setlabels",{"_index":678,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.setmaxlengths",{"_index":679,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.setpagecomplete",{"_index":3930,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpageincomplete",{"_index":3929,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setseverity(severitylevels.error",{"_index":1414,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setseverity(severitylevels.info",{"_index":1411,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settags(message.event",{"_index":1436,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settimestamp",{"_index":1435,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setuprequest(observable",{"_index":179,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":3009,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.showline2",{"_index":731,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.showline3",{"_index":732,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.sin",{"_index":4072,"title":{},"body":{"components/SinComponent.html":{}}}],["this.size",{"_index":2415,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["this.skiplinkpath",{"_index":3243,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":431,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.spaenvres",{"_index":3383,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_flag",{"_index":3385,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_message",{"_index":3388,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_flag",{"_index":3389,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_message",{"_index":3390,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_start",{"_index":3391,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.statuschange.emit(evt",{"_index":3911,"title":{},"body":{"components/RadioComponent.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":4295,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.street",{"_index":874,"title":{},"body":{"classes/Address.html":{},"components/StreetComponent.html":{}}}],["this.strengthpercentage",{"_index":3606,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.triggerdayvalidation",{"_index":2261,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.typeaheadlist",{"_index":4121,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.updateprovlist",{"_index":697,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this.updateskipcontentlink",{"_index":3241,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.url",{"_index":1390,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.usecurrentdate",{"_index":2250,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["this.usegeocoder",{"_index":4130,"title":{},"body":{"components/StreetComponent.html":{}}}],["this.uuid",{"_index":1340,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.value",{"_index":3771,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{}}}],["this.valuechange.emit",{"_index":1282,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["this.viewcontainerref",{"_index":4167,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":1352,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.zone.run",{"_index":2634,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this[lookup",{"_index":735,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["this_expr",{"_index":617,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["those",{"_index":4968,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":2875,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["through",{"_index":3376,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["throw",{"_index":145,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/XiconButtonComponent.html":{}}}],["throwerror",{"_index":1372,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["throwerror('geocoder",{"_index":3194,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":1463,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["throwerror(msg",{"_index":1441,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["thumbnail",{"_index":2729,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["thumbnail'},{'name",{"_index":558,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["thumbnail.html",{"_index":4147,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":4146,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":557,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":2893,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tiff",{"_index":2683,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tihs",{"_index":3074,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":2882,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["timeout",{"_index":2266,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["times",{"_index":2775,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["timor",{"_index":2093,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tip",{"_index":1045,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":3483,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":483,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tjk",{"_index":2085,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tkl",{"_index":2097,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tkm",{"_index":2108,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tls",{"_index":2092,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tobago",{"_index":2103,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["today",{"_index":2186,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["todo",{"_index":34,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"components/StreetComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{}}}],["together",{"_index":3656,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":958,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":560,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["toggle.component.html",{"_index":4179,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":4178,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":559,"title":{"components/ToggleComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["togo",{"_index":2096,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tohse",{"_index":5087,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["tokelau",{"_index":2098,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["told",{"_index":2648,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tome",{"_index":2028,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tomorrow",{"_index":2364,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["ton",{"_index":2099,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tonga",{"_index":2100,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["toobig",{"_index":1317,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":3580,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":1316,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":77,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["tostring",{"_index":831,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":1433,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["touched",{"_index":1285,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["trace",{"_index":4329,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["track",{"_index":906,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":1336,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transclusion",{"_index":3281,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["transformed",{"_index":2908,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["transformfn",{"_index":4916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translation",{"_index":1002,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["treated",{"_index":4204,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["tree",{"_index":469,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["trigger",{"_index":183,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/DatepickerComponent.html":{},"components/StreetComponent.html":{}}}],["triggerdayvalidation",{"_index":2168,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["triggers",{"_index":3030,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/StreetComponent.html":{}}}],["trimmed",{"_index":2303,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":2307,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":2308,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":3177,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["trinidad",{"_index":2102,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tristan",{"_index":2005,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["true",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["truncate",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":3330,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["try/catch",{"_index":4302,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ts",{"_index":5001,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":4682,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsconfig.json",{"_index":4910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tsdoc",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["tslint",{"_index":2567,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["tslint:disable",{"_index":3342,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["tslint:disable:max",{"_index":2568,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["tto",{"_index":2101,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tun",{"_index":2104,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tunisia",{"_index":2105,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tur",{"_index":2106,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["turkey",{"_index":2107,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["turkmenistan",{"_index":2109,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["turks",{"_index":2111,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["turn",{"_index":2698,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turned",{"_index":1119,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["tuv",{"_index":2113,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tuvalu",{"_index":2114,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["tweaks",{"_index":392,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["twn",{"_index":2083,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["two",{"_index":5073,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeahead",{"_index":4117,"title":{},"body":{"components/StreetComponent.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":4077,"title":{},"body":{"components/StreetComponent.html":{}}}],["typeaheadmatch",{"_index":4102,"title":{},"body":{"components/StreetComponent.html":{}}}],["typeaheadmodule",{"_index":3973,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":4037,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeof",{"_index":2400,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["typeoption",{"_index":264,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":403,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":5039,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":419,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["types/pdfjs",{"_index":4836,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4507,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["typetext",{"_index":265,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(refnameval",{"_index":413,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence",{"_index":266,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence(refnameval",{"_index":417,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typical",{"_index":3915,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["typo",{"_index":366,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tza",{"_index":2087,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["u.s",{"_index":2138,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["uga",{"_index":2115,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["uganda",{"_index":2116,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ui",{"_index":4136,"title":{},"body":{"components/StreetComponent.html":{}}}],["ukr",{"_index":2117,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ukraine",{"_index":2118,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["umi",{"_index":2122,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["unable",{"_index":1438,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["unchecked",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["uncomment",{"_index":5046,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["unde",{"_index":1223,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["undefined",{"_index":177,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"changelog.html":{}}}],["under",{"_index":2915,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["underlying",{"_index":4932,"title":{},"body":{"index.html":{}}}],["understand",{"_index":3334,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["uniqness",{"_index":1343,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":2247,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"classes/Person.html":{}}}],["united",{"_index":2089,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["united_states",{"_index":610,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"coverage.html":{}}}],["unknown",{"_index":1319,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":954,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["unreleased",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["unsuccessful",{"_index":1460,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unsure",{"_index":2947,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":2671,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["up",{"_index":373,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["upcoming",{"_index":5043,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":336,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":4810,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateangularjson(host",{"_index":4906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateappcomponentts",{"_index":4824,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateappcomponentts(tree",{"_index":4875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updated",{"_index":2269,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"changelog.html":{}}}],["updatepackagejson",{"_index":4825,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatepackagejson(tree",{"_index":4878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateprovlist",{"_index":756,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["updates",{"_index":748,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"miscellaneous/functions.html":{}}}],["updateskipcontentlink",{"_index":3221,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatetsconfig",{"_index":4811,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatetsconfig(host",{"_index":4907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updating",{"_index":926,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["upload",{"_index":2593,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploaded",{"_index":1289,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":2570,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":526,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["uploader.component",{"_index":3985,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":2571,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":2572,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":1314,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":2524,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":2928,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":3004,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":2586,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["upper",{"_index":715,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["uppercase",{"_index":3412,"title":{},"body":{"classes/MaskModel.html":{}}}],["uppercasepipe",{"_index":3399,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":3404,"title":{},"body":{"classes/MaskModel.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["url",{"_index":78,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/WizardProgressBarComponent.html":{}}}],["url.com/fpcare/example#content",{"_index":3249,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.includes",{"_index":1134,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["url.includes(x.route",{"_index":4294,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["urlbasename",{"_index":3224,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urltree",{"_index":3940,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["uruguay",{"_index":2125,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ury",{"_index":2124,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["usa",{"_index":1600,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["usable",{"_index":4978,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":1563,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["use",{"_index":239,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["usecurrentdate",{"_index":2171,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["used",{"_index":162,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["usedropdownlist",{"_index":1575,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["useexisting",{"_index":218,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{}}}],["useful",{"_index":2346,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["usegeocoder",{"_index":790,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/StreetComponent.html":{}}}],["user",{"_index":59,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"components/StreetComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["user's",{"_index":2723,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":3516,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["users",{"_index":648,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["uses",{"_index":776,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["using",{"_index":132,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/StreetComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["ut",{"_index":1253,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uuid",{"_index":907,"title":{},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":1341,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["uuid.uuid().tostring",{"_index":903,"title":{},"body":{"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ToggleComponent.html":{}}}],["uzb",{"_index":2126,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["uzbekistan",{"_index":2127,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["val",{"_index":639,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"changelog.html":{}}}],["val.country",{"_index":771,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["val.countrycode",{"_index":785,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{}}}],["val.description",{"_index":770,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["val.label",{"_index":3912,"title":{},"body":{"components/RadioComponent.html":{}}}],["val.provincecode",{"_index":768,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["valid",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"components/DatepickerComponent.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["validate",{"_index":2248,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validate(control",{"_index":2463,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validate.directive",{"_index":3981,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validate.directive.ts",{"_index":4334,"title":{},"body":{"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["validate.directive.ts:16",{"_index":4337,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:17",{"_index":4338,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:18",{"_index":4339,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validate.directive.ts:20",{"_index":4340,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["validatebcpostaldirective",{"_index":573,"title":{"directives/ValidateBcPostalDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatenamedirective",{"_index":575,"title":{"directives/ValidateNameDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatephn",{"_index":4205,"title":{},"body":{"directives/ValidatePhnDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatephn(phn",{"_index":4896,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatephndirective",{"_index":577,"title":{"directives/ValidatePhnDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatesindirective",{"_index":579,"title":{"directives/ValidateSinDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateSinDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validation",{"_index":42,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CaptchaDataService.html":{},"components/DatepickerComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validation.directive",{"_index":3977,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["validation.directive.ts",{"_index":2455,"title":{},"body":{"directives/DayValidationDirective.html":{},"coverage.html":{}}}],["validation.directive.ts:14",{"_index":2461,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validation.directive.ts:15",{"_index":2462,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validation.directive.ts:17",{"_index":2464,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["validationerrors",{"_index":4187,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidateSinDirective.html":{}}}],["validations",{"_index":3513,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["validator",{"_index":2456,"title":{},"body":{"directives/DayValidationDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"directives/YearValidateDirective.html":{}}}],["validatorfn",{"_index":2505,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePhnDirective.html":{},"directives/ValidateSinDirective.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":44,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePhnDirective.html":{},"components/WizardProgressBarComponent.html":{},"directives/YearValidateDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["valuechange",{"_index":1178,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"classes/MaskModel.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["valuemax=\"100",{"_index":3623,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":3622,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":3620,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":749,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["vanuatu",{"_index":2129,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["var",{"_index":496,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["variable",{"_index":740,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"coverage.html":{}}}],["variablescss",{"_index":4804,"title":{},"body":{"coverage.html":{}}}],["vat",{"_index":1815,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["vatican",{"_index":1817,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["vct",{"_index":2019,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["ven",{"_index":2130,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["venezuela",{"_index":2131,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["verde",{"_index":1693,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["verify/captcha",{"_index":1023,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":998,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":1008,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":4861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":2318,"title":{},"body":{"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["version.js",{"_index":4880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versionjs",{"_index":4826,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["versionjs(options",{"_index":4879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versions",{"_index":4921,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":3869,"title":{},"body":{"components/RadioComponent.html":{},"changelog.html":{}}}],["very",{"_index":4254,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["vgb",{"_index":2135,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["via",{"_index":396,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["viet",{"_index":2134,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["view",{"_index":4253,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewchild",{"_index":80,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":2577,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('button",{"_index":947,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('buttongroup",{"_index":986,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["viewchild('canvas",{"_index":2595,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":2579,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('checkbox",{"_index":1159,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["viewchild('consentmodal",{"_index":3323,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["viewchild('dayref",{"_index":2216,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('dp",{"_index":2395,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":2575,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":38,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":3337,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":2581,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('monthref",{"_index":2233,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchild('selectfilelabel",{"_index":2583,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":4260,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchild('yearref",{"_index":2236,"title":{},"body":{"components/DateComponent.html":{}}}],["viewchildren",{"_index":4265,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":4263,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":4149,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":3491,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["viewencapsulation.none",{"_index":3485,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["viewproviders",{"_index":630,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["vincent",{"_index":2020,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["vir",{"_index":2137,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["virgin",{"_index":2136,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["visibility",{"_index":2343,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["visible",{"_index":690,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"changelog.html":{}}}],["vitae",{"_index":1255,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vnm",{"_index":2133,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["void",{"_index":65,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MaskModel.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["voluptatem",{"_index":1231,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptates",{"_index":1276,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatibus",{"_index":1245,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatum",{"_index":1249,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vs",{"_index":4974,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["vut",{"_index":2128,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["vv]\\\\d[abceghj",{"_index":844,"title":{},"body":{"classes/Address.html":{}}}],["w",{"_index":5006,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":2670,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wallis",{"_index":2140,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["want",{"_index":402,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":3616,"title":{},"body":{"components/PasswordComponent.html":{}}}],["warranties",{"_index":4950,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5042,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":5007,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":864,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/getting-started.html":{}}}],["waze",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["we'll",{"_index":2452,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["we're",{"_index":4299,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":4286,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":3292,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":267,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["weight",{"_index":4210,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["weights[i",{"_index":4212,"title":{},"body":{"directives/ValidatePhnDirective.html":{}}}],["well",{"_index":5080,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["western",{"_index":2143,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["wfactor",{"_index":1353,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whatever",{"_index":207,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["whether",{"_index":1087,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"directives/YearValidateDirective.html":{}}}],["whole",{"_index":5070,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":1378,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["width",{"_index":2676,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["width/height",{"_index":2417,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":1346,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["widthoption",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["widthoptions",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3331,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["window.location.hostname",{"_index":1383,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["window.location.href",{"_index":3252,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.href.indexof(this.skip_content_hash",{"_index":3251,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.origin}/${this.urlbasename",{"_index":3253,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.outerwidth",{"_index":4307,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["window.scrollto",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{}}}],["winds",{"_index":2432,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wip",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":4998,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":345,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":3414,"title":{},"body":{"classes/MaskModel.html":{},"components/StreetComponent.html":{},"components/XiconButtonComponent.html":{},"license.html":{}}}],["wizard",{"_index":562,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["wizardprogressbar",{"_index":5038,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":561,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":1530,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["wlf",{"_index":2139,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["won't",{"_index":1467,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["work",{"_index":362,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["workaround",{"_index":2604,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["working",{"_index":2609,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":386,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"directives/ValidatePhnDirective.html":{},"changelog.html":{}}}],["wrap",{"_index":2265,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/PageSectionComponent.html":{}}}],["wrapped",{"_index":2390,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":2313,"title":{},"body":{"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper/row",{"_index":3503,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["write",{"_index":5000,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":801,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["writevalue(obj",{"_index":2384,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":983,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{}}}],["writing",{"_index":4946,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":2682,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":1315,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["wsm",{"_index":2022,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["x",{"_index":764,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["x.getdate",{"_index":2409,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["x.iscomplete",{"_index":1131,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.route",{"_index":1135,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.slice(1)).join",{"_index":1545,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":3028,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":1544,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xicon",{"_index":565,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["xiconbutton",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["xiconbuttoncomponent",{"_index":564,"title":{"components/XiconButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["xiff",{"_index":2678,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["y",{"_index":4344,"title":{},"body":{"directives/YearValidateDirective.html":{}}}],["year",{"_index":2264,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DayValidationDirective.html":{},"classes/Person.html":{},"interfaces/SimpleDate.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{}}}],["year_",{"_index":2235,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yeardistantfuture",{"_index":2242,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yeardistantpast",{"_index":2241,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/YearValidateDirective.html":{}}}],["yearlabelforid",{"_index":2162,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yearref",{"_index":2163,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yearvalidatedirective",{"_index":581,"title":{"directives/YearValidateDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/CountryComponent.html":{},"components/DateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/StreetComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"directives/YearValidateDirective.html":{},"coverage.html":{},"overview.html":{}}}],["yem",{"_index":2145,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["yemen",{"_index":2146,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["yera",{"_index":2204,"title":{},"body":{"components/DateComponent.html":{},"interfaces/DateErrorMsg.html":{}}}],["yes",{"_index":137,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImageProcessingError.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"classes/MoHCommonLibraryError.html":{},"miscellaneous/functions.html":{}}}],["yes/no",{"_index":957,"title":{},"body":{"components/ButtonGroupComponent.html":{},"changelog.html":{}}}],["yib",{"_index":2897,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":5017,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":911,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":4964,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":4928,"title":{},"body":{"index.html":{}}}],["yt",{"_index":3862,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yugoslav",{"_index":1889,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["yukon",{"_index":3863,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yyyy",{"_index":2472,"title":{},"body":{"directives/DayValidationDirective.html":{}}}],["yyyy/mm/dd",{"_index":2348,"title":{},"body":{"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":3649,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":847,"title":{},"body":{"classes/Address.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{}}}],["z]/i",{"_index":3410,"title":{},"body":{"classes/MaskModel.html":{}}}],["z][0",{"_index":3801,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["z][a",{"_index":3118,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateNameDirective.html":{}}}],["z]\\\\d",{"_index":849,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["z]\\s?[0",{"_index":3803,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["za",{"_index":3117,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidateNameDirective.html":{}}}],["zabceghj",{"_index":846,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["zaf",{"_index":2055,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zambia",{"_index":2148,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zealand",{"_index":1945,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zero",{"_index":2829,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zeros",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["zib",{"_index":2896,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zimbabwe",{"_index":2150,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zip",{"_index":669,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{}}}],["zmb",{"_index":2147,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zone",{"_index":2600,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":4847,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1036,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["zwe",{"_index":2149,"title":{},"body":{"components/CountryComponent.html":{},"interfaces/CountryList.html":{}}}],["zxcvbn",{"_index":3577,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":3576,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-form.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:13\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:10\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:15\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:30\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:17\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:44\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:36\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n/**\n *\n */\nexport abstract class AbstractForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string) {\n    this.router.navigate([url])\n      .then((data) => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/abstract-api-service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:16\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:59\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:52\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPgCheckService.html":{"url":"injectables/AbstractPgCheckService.html","title":"injectable - AbstractPgCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPgCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-pg-check.service.ts\n        \n\n            \n                Description\n            \n            \n                The abstract class for our route guard service.  You MUST setup the NgModule\nto provide your application's service in place of AbstractPgCheckService.\nYour application's route guard service can do whatever it wants as long as it\nimplements these methods.\nMore information on setup can be found in @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            //registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                getStartUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPageComplete\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPrerequisiteComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractPgCheckService.\n *\n * Your application's route guard service can do whatever it wants as long as it\n * implements these methods.\n * \n * More information on setup can be found in @see RouteGuardService.\n *\n *  @example\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPgCheckService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract isPageComplete( url: string ): boolean;\n  public abstract isPrerequisiteComplete(): boolean;\n  public abstract getStartUrl(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreeConsentModal\n                            \n                            \n                                checkConsentModal\n                            \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickConsentModalContinue\n                            \n                            \n                                clickLink\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                countLength\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                scrollUp\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                            \n                                typeTextFirstOccurrence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreeConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \nagreeConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:138\n                \n            \n\n\n            \n                \n                    Clicks the checkbox which means the user agrees with the info collection notice.\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \ncheckConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:153\n                \n            \n\n\n            \n                \n                    Checks if the consent modal is currently displayed or not\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(classVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:122\n                \n            \n\n\n            \n                \n                    Clicks the button based on the text specified\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    classVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable class value for a button\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text inside the button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:130\n                \n            \n\n\n            \n                \n                    Clicks the check box based on the ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickConsentModalContinue\n                        \n                        \n                    \n                \n            \n            \n                \nclickConsentModalContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:146\n                \n            \n\n\n            \n                \n                    Clicks continue inside the modal\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLink\n                        \n                        \n                    \n                \n            \n            \n                \nclickLink(label: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:178\n                \n            \n\n\n            \n                \n                    Clicks the link based from the label and text provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countLength\n                        \n                        \n                    \n                \n            \n            \n                \ncountLength(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:186\n                \n            \n\n\n            \n                \n                    Counts the number of options inside a dropdown box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollUp\n                        \n                        \n                    \n                \n            \n            \n                \nscrollUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:160\n                \n            \n\n\n            \n                \n                    Scrolls up to the top of the page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeTextFirstOccurrence\n                        \n                        \n                    \n                \n            \n            \n                \ntypeTextFirstOccurrence(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:169\n                \n            \n\n\n            \n                \n                    Types the text inside the first ocurrence of input field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeText(refNameVal: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).sendKeys(text);\n  }\n\n  /**\n   * Clicks the button based on the text specified\n   * @param classVal Human readable class value for a button\n   * @param text Text inside the button\n   */\n  clickButton(classVal: string, text: string) {\n    element(by.cssContainingText(`button[class*=\"${classVal}\"]`, text)).click();\n  }\n\n  /**\n   * Clicks the check box based on the ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   */\n  clickCheckBox(refNameVal: string) {\n    element(by.css(`input[ng-reflect-name=\"${refNameVal}\"]`)).click();\n  }\n\n  /**\n   * Clicks the checkbox which means the user agrees with the info collection notice.\n   * InfoColectionNoticeComponent \n   */\n  agreeConsentModal() {\n    element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click();\n  }\n\n  /**\n   * Clicks continue inside the modal\n   * InfoColectionNoticeComponent \n   */\n  clickConsentModalContinue() {\n    element(by.css('div[class=\"modal-footer\"]')).element(by.css('button[type=\"submit\"]')).click();\n  }\n\n  /**\n   * Checks if the consent modal is currently displayed or not\n   */\n  checkConsentModal() {\n    return element(by.css('common-consent-modal')).element(by.css('div[aria-labelledby=\"myLargeModalLabel\"]')).isDisplayed();\n  }\n\n  /**\n   * Scrolls up to the top of the page\n   */\n  scrollUp() {\n      browser.executeScript('window.scrollTo(0,0)');\n  }\n\n  /**\n   * Types the text inside the first ocurrence of input field\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeTextFirstOccurrence(refNameVal: string, text: string) {\n      element.all(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).first().sendKeys(text);\n  }\n\n  /**\n   * Clicks the link based from the label and text provided\n   * @param label\n   * @param text\n   */\n  clickLink(label: string, text: string) {\n      element(by.cssContainingText(label, text)).click();\n  }\n\n  /**\n   * Counts the number of options inside a dropdown box\n   * @param refNameVal\n   */\n  countLength(refNameVal: string){\n      return $$(`select[ng-reflect-name^=\"${refNameVal}\"] option`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionCommonComponent.html":{"url":"components/AccordionCommonComponent.html","title":"component - AccordionCommonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionCommonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        AccordionComponent is a\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-accordion\n            \n\n            \n                styleUrls\n                ./accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/accordion/accordion.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/accordion/accordion.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(click to expand)'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AccordionComponent } from 'ngx-bootstrap';\n/**\n * AccordionComponent is a\n *\n * @example\n *       \t\n  *       \n * @export\n */\n\n@Component({\n  selector: 'common-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionCommonComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() isOpen: boolean = false;\n\n  public expandText: string =  '(click to expand)';\n  ngOnInit() {\n  }\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n    \n        \n          {{title}} \n          \n          {{expandText}}\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{title}}                     {{expandText}}                    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionCommonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddrLabelList.html":{"url":"interfaces/AddrLabelList.html","title":"interface - AddrLabelList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddrLabelList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address1\n                                \n                                \n                                            Optional\n                                        address2\n                                \n                                \n                                            Optional\n                                        address3\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address3\n                                    \n                                \n                                \n                                    \n                                        address3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO Box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or ZIP'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    this.setLabels();\n    this.setMaxlengths();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    const prov = this.addr.province;\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n\n    // leave last value for province if no default\n    if ( !this.addr.province ) {\n      this.addr.province = this.findProvinceDescription( prov );\n    }\n    this.addr.country = value;\n    this.updateProvList();\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.street = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  isCanadaUSA(): boolean {\n    return (this.addr && UNITED_STATES === this.addr.country) || this.isCanada();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n    \n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : null);\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.street = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressLine1\n                            \n                            \n                                    Public\n                                addressLine2\n                            \n                            \n                                    Public\n                                addressLine3\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                isValid\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Static\n                                PostalCodeBCRegEx\n                            \n                            \n                                    Public\n                                province\n                            \n                            \n                                    Public\n                                street\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isBCOnly\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:13\n                            \n                        \n\n                \n                    \n                        Same as street, your application should use one or the other. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:15\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:17\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PostalCodeBCRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:10\n                            \n                        \n\n                \n                    \n                        Same as addressLine1, your application should use one or the other. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:46\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:33\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isBCOnly\n                    \n                \n\n                \n                    \n                        getisBCOnly()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:52\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Address {\n\n  static PostalCodeBCRegEx = '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$';\n\n  /** Same as addressLine1, your application should use one or the other. */\n  public street: string;\n\n  /** Same as street, your application should use one or the other. */\n  public addressLine1: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine2: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine3: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n  public hasValue: boolean;\n  public isValid: boolean;\n\n\n\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.street}, ${this.city}`;\n  }\n\n  /*{\n    return (this.addressLine1 != null);\n  }*/\n\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.street && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  get isBCOnly(): boolean {\n    let isValid = false;\n    if (this.postal &&\n      this.postal.length > 0) {\n      const regEx = new RegExp(Address.PostalCodeBCRegEx);\n      isValid = regEx.test(this.postal);\n    }\n    return isValid;\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.street = object.street;\n    this.addressLine1 = object.addressLine1;\n    this.addressLine2 = object.addressLine2;\n    this.addressLine3 = object.addressLine3;\n\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID().toString();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Button Component is a button which can be used across the application to have\nsame button style.\nYou're free to create custom (bootstrap) buttons as your application\nrequires. The main advantages to this component are:\n\nconsistency\nsimplicity (less markup)\nmaking future changes easier, such as automatically updating any changes\nto button colour stylings.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"secondary\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, ViewChild, EventEmitter, Input, Output, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Button Component is a button which can be used across the application to have\n * same button style.\n *\n * You're free to create custom (bootstrap) buttons as your application\n * requires. The main advantages to this component are:\n *\n *  - consistency\n *  - simplicity (less markup)\n *  - making future changes easier, such as automatically updating any changes\n * to button colour stylings.\n *\n *\n * @example\n *        \n *        \n * @export\n */\n@Component({\n  selector: 'common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class ButtonComponent implements OnInit {\n\n  // Can pass the Style class of a button e.g. For primary, btn btn-primary. Default, btn btn-default. Error, btn btn-danger\n  @Input() buttonType: 'default' | 'primary' | 'secondary' = 'default';\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Button';\n  @Output() btnClick: EventEmitter = new EventEmitter();\n  @ViewChild('button') button: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    this.btnClick.emit($event);\n  }\n}\n\n    \n\n    \n        \n\t\t\t{{label}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonGroupComponent.html":{"url":"components/ButtonGroupComponent.html","title":"component - ButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button-group/button-group.component.ts\n\n\n    \n        Description\n    \n    \n        BUTTONGROUPCOMPONENT IS DEPRECATED!  DO NOT USE UNLESS YOU KNOW WHAT YOU'RE\nDOING.\nIf you need a Yes/No toggle, @see RadioComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent) }\n                \n            \n\n\n            \n                selector\n                common-button-group\n            \n\n            \n                styleUrls\n                ./button-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-group.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                buttonGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setButtonGrpVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setButtonGrpVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetButtonGrpVal(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('buttonGroup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * BUTTONGROUPCOMPONENT IS **DEPRECATED**!  **DO NOT USE** UNLESS YOU KNOW WHAT YOU'RE\n * DOING.\n *\n * If you need a Yes/No toggle, @see RadioComponent\n * @deprecated\n *\n *\n *\n *\n * @example\n *       \n *         \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent )}\n  ]\n})\nexport class ButtonGroupComponent implements ControlValueAccessor {\n\n  @Input() data: boolean;\n  @Input() required: boolean = true;\n  @Input() showError: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() errorMessageRequired: string = 'Field is required.';\n  @Input() label: string = 'Default Checkbox';\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('buttonGroup') buttonGroup: ElementRef;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n\n  }\n\n\n  setButtonGrpVal(val: any) {\n    this.dataChange.emit(val);\n    this._onChange(val);\n    this._onTouched();\n  }\n\n  focus() {\n    this.buttonGroup.nativeElement.focus();\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n     {{answer.label}} \n    \n  \n  \n    {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}       {{answer.label}}             {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Design Guidelines\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckCompleteBaseService.html":{"url":"injectables/CheckCompleteBaseService.html","title":"injectable - CheckCompleteBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckCompleteBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Extend this class when creating a service to create your custom Route Guard\nlogic.  This class should work as-is for simple use-cases.  For Route Guard\nsetup @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                            \n                                    Private\n                                _startUrl\n                            \n                            \n                                    Public\n                                pageCheckList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                getStartUrl\n                            \n                            \n                                    Protected\n                                getUrlIndex\n                            \n                            \n                                    Public\n                                isComplete\n                            \n                            \n                                    Public\n                                isPageComplete\n                            \n                            \n                                    Protected\n                                isPageListEmpty\n                            \n                            \n                                    Public\n                                isPrerequisiteComplete\n                            \n                            \n                                    Public\n                                setPageComplete\n                            \n                            \n                                    Public\n                                setPageIncomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    startUrl\n                                \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUrlIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:101\n                \n            \n\n\n            \n                \n                    Index of URL in the items list, -1 if not exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:93\n                \n            \n\n\n            \n                \n                    Check for incomplete pages\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:82\n                \n            \n\n\n            \n                \n                    Indicates whether page has been completed or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isPageListEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageListEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:50\n                \n            \n\n\n            \n                \n                    Any prerequisites that need list of pages \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:72\n                \n            \n\n\n            \n                \n                    Sets the page to completed, allowing applicant to proceed to next page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageIncomplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:57\n                \n            \n\n\n            \n                \n                    Sets page to not be completed, so applicants cannot complete application out of sequence\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCheckList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageListInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        startUrl\n                    \n                \n\n\n                \n                    \n                        setstartUrl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:37\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox component is a input checkbox\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => CheckboxComponent) }\n                \n            \n\n\n            \n                selector\n                common-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:37\n                            \n                        \n                \n                    \n                        You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.label + 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:43\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('checkbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * Checkbox component is a input checkbox\n *\n * @example\n *       \n *       \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => CheckboxComponent )}\n  ]\n})\n\nexport class CheckboxComponent extends Base implements  ControlValueAccessor {\n\n  /**\n   * You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n   */\n  @Input() data: boolean = false;\n  @Input() required: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Default Checkbox';\n  @Input() errorMessageRequired: string = this.label + 'Field is required.';\n  @Input() checked: boolean =  false ;\n  @Input() showError: boolean;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('checkbox') checkbox: ElementRef;\n\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n\n  constructor() { super(); }\n\n\n  /*setCheckboxVal(event: boolean) {\n    console.log(event);\n    this.data = event;\n    this.dataChange.emit(this.data);\n    this._onChange(event);\n    this._onTouched();\n  }*/\n\n  focus() {\n    this.checkbox.nativeElement.focus();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n\n\n}\n\n    \n\n    \n        \n\n{{label}}\n\n\n    {{errorMessageRequired}}\n\n\t\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}    {{errorMessageRequired}}\t'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/city/city.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-city\n            \n\n            \n                styleUrls\n                ./city.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                city\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/city/city.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'city_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:24\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.scss']\n})\nexport class CityComponent extends Base implements ControlValueAccessor  {\n\n  @Input() label: string = 'City';\n  @Input() maxlen: string = '100';\n  @Input() labelforId: string = 'city_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() placeholder: string = 'City Name';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.city = val;\n    }\n  }\n  get value() {\n    return this.city;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  city: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.city = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n \n\n  \n    {{label}} is required.\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       {{label}} is required.  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:179\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonLogger.html":{"url":"injectables/CommonLogger.html","title":"injectable - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                url\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _log\n                            \n                            \n                                    Protected\n                                _logError\n                            \n                            \n                                    Private\n                                _sendLog\n                            \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                logError\n                            \n                            \n                                    Public\n                                logHttpError\n                            \n                            \n                                    Private\n                                setSeverity\n                            \n                            \n                                    Private\n                                setTags\n                            \n                            \n                                    Private\n                                setTimestamp\n                            \n                            \n                                setURL\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    applicationId\n                                \n                                \n                                    programName\n                                \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _log(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:79\n                \n            \n\n\n            \n                \n                    Log a message to Splunk. This is the main way to send logs and\nautomatically includes meta-data. You do not need to subscribe to the\nresponse, as the service already does that. The input object must have an\n'event' property set, everything else is optional.\nExample:\nthis.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object, nesting is fine, with event property\nset.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _logError(errorMessage: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _sendLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _sendLog(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:110\n                \n            \n\n\n            \n                \n                    Internal method to send logs to Splunk, includes meta-data except that's\nconsistent across all requests, but not specific values like severity\nlevel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object or anything that can be toString()'d,\nlike Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(errorMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logHttpError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logHttpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:93\n                \n            \n\n\n            \n                \n                    Log HTTP errors, e.g. when losing network connectivity or receiving an\nerror response code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSeverity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSeverity(severity: SeverityLevels)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    severity\n                                    \n                                                SeverityLevels\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTags(message: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:166\n                \n            \n\n\n            \n                \n                    The headers are easier to search in splunk, and we aren't using tags, so\nrepurpose it to event type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setURL\n                        \n                        \n                    \n                \n            \n            \n                \nsetURL(newURL: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  })\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:23\n                            \n                        \n\n                \n                    \n                        The HTTP Headers which go with each request.  These MUST be set if you are\nusing the logger.  Fields include:\n\nprogram (REQUIRED, the application wide code)\napplicationId (REQUIRED, like sessionId)\nrequest_method (REQUIRED, 'POST')\nlogsource: (REQUIRED, window.location.hostname)\nhttp_x_forwarded_host (REQUIRED, window.location.hostname)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        applicationId\n                    \n                \n\n                \n                    \n                        getapplicationId()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:39\n                                \n                            \n\n                \n                    \n                        setapplicationId(id: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        programName\n                    \n                \n\n                \n                    \n                        getprogramName()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:47\n                                \n                            \n\n                \n                    \n                        setprogramName(name: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:147\n                                \n                            \n                    \n                        \n                                Overwrite the inherited httpOptions so we can set responseType to text.\nThis updates Angular's parsing, and it won't error out due to the server\nnot responding with JSON.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: 'error',\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n            \n                Description\n            \n            \n                Base functionality for container that is used to display bread crumbs \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:12\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:18\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountryComponent.html":{"url":"components/CountryComponent.html","title":"component - CountryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CountryComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/country/country.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-country\n            \n\n            \n                styleUrls\n                ./country.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./country.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                country\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                countryList\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/country/country.component.ts:303\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        countryList\n                    \n                \n                \n                    \n                        Type :         CountryList[]\n\n                    \n                \n                \n                    \n                        Default value : COUNTRY_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:280\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:282\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Country'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:279\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'country_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:281\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:285\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:283\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:284\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:288\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:298\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:297\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:320\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:312\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:332\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:337\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:341\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/country/country.component.ts:325\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:302\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:303\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:305\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/country/country.component.ts:300\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/country/country.component.ts:293\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/country/country.component.ts:288\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\nexport function getCountryDescription( countryCode: string ) {\n  const countryObj = COUNTRY_LIST.find( val => countryCode === val.countryCode );\n  return countryObj ? countryObj.description : countryCode;\n}\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n  \n\n\n\n\n  \n    {{label}} is required.\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{label}} is required.    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CountryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/country/country.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\nexport function getCountryDescription( countryCode: string ) {\n  const countryObj = COUNTRY_LIST.find( val => countryCode === val.countryCode );\n  return countryObj ? countryObj.description : countryCode;\n}\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateComponent.html":{"url":"components/DateComponent.html","title":"component - DateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DateComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/date/date.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-date\n            \n\n            \n                styleUrls\n                ./date.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dayLabelforId\n                            \n                            \n                                dayRef\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                monthLabelforId\n                            \n                            \n                                    Public\n                                monthList\n                            \n                            \n                                monthRef\n                            \n                            \n                                yearLabelforId\n                            \n                            \n                                yearRef\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getNumericValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDay\n                            \n                            \n                                setMonth\n                            \n                            \n                                setYear\n                            \n                            \n                                    Private\n                                triggerDayValidation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessages\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                restrictDate\n                            \n                            \n                                useCurrentDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(form: NgForm, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/date/date.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                        NgForm\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         SimpleDate\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Date'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        restrictDate\n                    \n                \n                \n                    \n                        Type :     \"future\" | \"past\" | \"any\"\n\n                    \n                \n                \n                    \n                        Default value : 'any'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:44\n                            \n                        \n                \n                    \n                        Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useCurrentDate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getNumericValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumericValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:134\n                \n            \n\n\n            \n                \n                    Convert string to numeric value or null if not \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDay\n                        \n                        \n                    \n                \n            \n            \n                \nsetDay(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:97\n                \n            \n\n\n            \n                \n                    Set the day and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMonth\n                        \n                        \n                    \n                \n            \n            \n                \nsetMonth(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:85\n                \n            \n\n\n            \n                \n                    Set the month and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setYear\n                        \n                        \n                    \n                \n            \n            \n                \nsetYear(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:108\n                \n            \n\n\n            \n                \n                    Set the yera and notify caller of change \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            triggerDayValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    triggerDayValidation()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date.component.ts:123\n                \n            \n\n\n            \n                \n                    Force the day input to run it's directives again. Important in cases\nwhere user fills fields out of order, e.g. sets days to 31 then month to\nFebrurary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'day_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dayRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'month_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            monthList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('monthRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearLabelforId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'year_' + this.objectId\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yearRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('yearRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { SimpleDate } from '../../models/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n */\n\nexport interface DateErrorMsg {\n  required: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  monthLabelforId: string = 'month_' + this.objectId;\n  dayLabelforId: string = 'day_' + this.objectId;\n  yearLabelforId: string = 'year_' + this.objectId;\n\n  constructor( public form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n    if ( !this.errorMessages ) {\n      // Use default messages\n      this.errorMessages = {\n        required: this.label + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.label + '.',\n        yearDistantPast: 'Invalid ' + this.label + '.',\n        yearDistantFuture: 'Invalid ' + this.label + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.label + '.',\n        invalidValue: 'Invalid ' + this.label + '.'\n      };\n    }\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the yera and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.dayLabelforId] ) {\n        this.form.controls[this.dayLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n\n    Month\n    \n      \n      \n      {{month}}\n    \n\n    Day\n    \n\n    Year\n    \n\n  \n\n\n\n\n  \n      {{errorMessages.required}}\n  \n  \n      {{errorMessages.dayOutOfRange}}\n  \n  \n      {{errorMessages.yearDistantPast}}\n  \n  \n      {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n  \n      {{errorMessages.noFutureDatesAllowed}}\n  \n  \n  \n      {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}      Month                      {{month}}        Day        Year              {{errorMessages.required}}          {{errorMessages.dayOutOfRange}}          {{errorMessages.yearDistantPast}}          {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}          {{errorMessages.noFutureDatesAllowed}}            {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { SimpleDate } from '../../models/simple-date.interface';\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n */\n\nexport interface DateErrorMsg {\n  required: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n@Component({\n  selector: 'common-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class DateComponent extends Base implements OnInit {\n  // Exists for unit testing to validate errors set\n  @ViewChild( 'monthRef' ) monthRef: NgModel;\n  @ViewChild( 'dayRef' ) dayRef: NgModel;\n  @ViewChild( 'yearRef') yearRef: NgModel;\n\n  @Input() useCurrentDate: boolean = false;\n  @Input() required: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Date';\n  @Input() date: SimpleDate;\n  /** Can be one of: \"future\", \"past\". \"future\" includes today, \"past\" does not. */\n  @Input() restrictDate: 'future' | 'past' | 'any' = 'any';\n  @Input() errorMessages: DateErrorMsg;\n\n  @Output() dateChange: EventEmitter = new EventEmitter();\n\n  public monthList: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  monthLabelforId: string = 'month_' + this.objectId;\n  dayLabelforId: string = 'day_' + this.objectId;\n  yearLabelforId: string = 'year_' + this.objectId;\n\n  constructor( public form: NgForm,\n               private cd: ChangeDetectorRef ) {\n    super();\n  }\n\n  ngOnInit() {\n    if ( !this.errorMessages ) {\n      // Use default messages\n      this.errorMessages = {\n        required: this.label + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.label + '.',\n        yearDistantPast: 'Invalid ' + this.label + '.',\n        yearDistantFuture: 'Invalid ' + this.label + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.label + '.',\n        invalidValue: 'Invalid ' + this.label + '.'\n      };\n    }\n\n    if ( this.useCurrentDate ) {\n      // Set date to current date\n      this.date.month = moment().month();\n      this.date.day = moment().date();\n      this.date.year = moment().year();\n    }\n  }\n\n  /** Set the month and notify caller of change */\n  setMonth( value: string ): void {\n    const month = this.getNumericValue( value );\n\n    // console.log( 'monthRef: ', this.monthRef );\n    if ( this.date ) {\n      this.date.month = month;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the day and notify caller of change */\n  setDay( value: string ): void {\n    const day = this.getNumericValue( value );\n\n    // console.log(  'dayRef: ', this.dayRef );\n    if ( this.date ) {\n      this.date.day = day;\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /** Set the yera and notify caller of change */\n  setYear( value: string ): void {\n    const year = this.getNumericValue( value );\n\n    if ( this.date ) {\n      this.date.year = year;\n      this.triggerDayValidation();\n      this.dateChange.emit( this.date );\n    }\n  }\n\n  /**\n   * Force the `day` input to run it's directives again. Important in cases\n   * where user fills fields out of order, e.g. sets days to 31 then month to\n   * Februrary.\n   */\n  private triggerDayValidation() {\n    // We have to wrap this in a timeout, otherwise it runs before Angular has updated the values\n    setTimeout( () => {\n      if ( this.form.controls[this.dayLabelforId] ) {\n        this.form.controls[this.dayLabelforId].updateValueAndValidity();\n        this.cd.detectChanges();\n      }\n    }, 0);\n  }\n\n  /** Convert string to numeric value or null if not */\n  private getNumericValue( value: string ): number | null {\n    const parsed = parseInt( value, 10 );\n    return ( isNaN( parsed ) ? null : parsed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:72\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:49\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:46\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:52\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:36\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:86\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:78\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DateErrorMsg } from '../date/date.component';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n\n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n\n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                         {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DayValidationDirective.html":{"url":"directives/DayValidationDirective.html","title":"directive - DayValidationDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DayValidationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/day-validation.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDayValidation][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedMonth\n                            \n                            \n                                selectedYear\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedMonth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/day-validation.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedYear\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/day-validation.directive.ts:15\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/day-validation.directive.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Directive({\n  selector: '[commonDayValidation][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => DayValidationDirective), multi: true}\n  ]\n})\nexport class DayValidationDirective implements Validator {\n\n  @Input() selectedMonth: string;\n  @Input() selectedYear: string;\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const year: number = parseInt( this.selectedYear, 10 );\n    const month: number = parseInt( this.selectedMonth, 10 );\n\n    if ( !control.value ) {\n      return null; // empty value\n    }\n\n    const day: number = parseInt( control.value, 10 );\n    console.log( 'day: ', day );\n\n    if ( !isNaN( day ) ) {\n\n      // console.log( 'parent: ', date );\n      // Only process of value is numeric\n      if ( !isNaN( month )  && !isNaN( year ) ) {\n\n        // Determine days in month\n        const str = `${year}-${month}`;\n        let daysInMonth: number = moment(str, 'YYYY-MM').daysInMonth();\n        console.log( 'str: ', str + ', dayInMonth: ', daysInMonth );\n\n        if ( isNaN( daysInMonth ) ) {\n          daysInMonth = 31;\n        }\n\n        // Validate days\n        if ( day > daysInMonth || day \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DropdownComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                clearable\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:30\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clearable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DropdownComponent)\n    }\n  ]\n})\nexport class DropdownComponent extends Base implements OnInit, ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n  @Input() clearable: boolean = true;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n\n\n  constructor() {\n    super();\n   }\n\n  ngOnInit() {\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DuplicateCheckDirective.html":{"url":"directives/DuplicateCheckDirective.html","title":"directive - DuplicateCheckDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DuplicateCheckDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDuplicateCheck]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dupList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dupList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// Local function\nfunction checkForDuplicates( control: AbstractControl,\n                             dupList: string[] ): { [key: string]: boolean } | null {\n  // Duplicate check\n  if ( dupList && dupList.length ) {\n\n  const duplicate = dupList.find( x => x === control.value );\n  return (duplicate ? { 'duplicate': true } : null);\n  }\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonDuplicateCheck( dupList: string[] ): ValidatorFn {\n\n  console.log( 'function commonDuplicateSin: param = ', dupList );\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    console.log( 'Control value = ', control.value );\n    return checkForDuplicates( control, dupList );\n  };\n}\n\n@Directive({\n  selector: '[commonDuplicateCheck]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true}\n    ]\n})\nexport class DuplicateCheckDirective implements Validator {\n\n  @Input() dupList: string[];\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n  return checkForDuplicates( control, this.dupList );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorContainerComponent.html":{"url":"components/ErrorContainerComponent.html","title":"component - ErrorContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/error-container/error-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-error-container\n            \n\n            \n                styleUrls\n                ./error-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'common-error-container',\n  templateUrl: './error-container.component.html',\n  styleUrls: ['./error-container.component.scss']\n})\nexport class ErrorContainerComponent {\n\n  @Input() displayError: boolean = false;\n\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ModalDirective} from 'ngx-bootstrap';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../models/images.model';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../models/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        console.log('fileuploader onChanges', changes['images']);\n        // if (changes['images'] && (changes['images'].currentValue.length === 0 &&\n        //   changes['images'].previousValue.length > 0)) {\n        if (changes['images'] && (\n            changes['images'].currentValue.length === 0\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullNameComponent.html":{"url":"components/FullNameComponent.html","title":"component - FullNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/full-name/full-name.component.ts\n\n\n    \n        Description\n    \n    \n        FullNameComponent includes a first, middle, and last name field.  If you only\nneed an individual field, @see NameComponent.\nNote This component is in dev, there are issues around \"required\"\nTODO - Properly handle \"required\"\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent) }\n                \n            \n\n\n            \n                selector\n                common-full-name\n            \n\n            \n                styleUrls\n                ./full-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Public\n                                NameRegEx\n                            \n                            \n                                    Private\n                                pattern\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                firstNamelabel\n                            \n                            \n                                lastNamelabel\n                            \n                            \n                                middleNamelabel\n                            \n                            \n                                person\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                personChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'First Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Last Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        middleNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Middle Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        person\n                    \n                \n                \n                    \n                        Type :         Person\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        personChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FullNameErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            NameRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'is required'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n    \n        \n    \n                 \n\n\n\n    \n\n\n\n    \n\n\n\n\n    \n        \n            {{firstNamelabel}}\n            \n            \n                {{firstNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{middleNamelabel}}\n            \n            \n                {{middleNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{lastNamelabel}}\n            \n            \n                {{lastNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n\n        \n    \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     {{firstNamelabel}}                                        {{firstNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{middleNamelabel}}                                        {{middleNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{lastNamelabel}}                                        {{lastNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                         -->'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FullNameErrorMsg.html":{"url":"interfaces/FullNameErrorMsg.html","title":"interface - FullNameErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FullNameErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/full-name/full-name.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    private BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    private ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET,BLOCK,INTERSECTION')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    private processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = 'CAN'; // Default to Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                ADDRESS_URL\n                            \n                            \n                                    Private\n                                BASE_URL\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Private\n                                processResponse\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:52\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:22\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:59\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:30\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:16\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:11\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    private BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    private ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET,BLOCK,INTERSECTION')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    private processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = 'CAN'; // Default to Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        HeaderComponent is the stylized blue header at the top of every single\napplication.  It has a built-in \"Skip to Content\" tab-accessible section\nthat's best practice for screen readers.  You must create an element with\nid='content' for this to work!  Best practice is to put this \"content\"\nelement as a wrapper aroud your \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SKIP_CONTENT_HASH\n                            \n                            \n                                    Public\n                                skipLinkPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateSkipToContentLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                routeIsActive\n                            \n                            \n                                updateSkipContentLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                logoSrc\n                            \n                            \n                                serviceName\n                            \n                            \n                                urlBaseName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        logoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/gov3_bc_logo.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        urlBaseName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateSkipToContentLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSkipToContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeIsActive\n                        \n                        \n                    \n                \n            \n            \n                \nrouteIsActive(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSkipContentLink\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSkipContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKIP_CONTENT_HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipLinkPath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n/**\n * HeaderComponent is the stylized blue header at the top of every single\n * application.  It has a built-in \"Skip to Content\" tab-accessible section\n * that's best practice for screen readers.  **You must create an element with\n * `id='content'` for this to work!**  Best practice is to put this \"content\"\n * element as a wrapper aroud your ``\n *\n */\n@Component({\n  selector: 'common-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() serviceName: string = '';\n  @Input() urlBaseName: string = '';\n  @Input() logoSrc: string = 'assets/gov3_bc_logo.png';\n\n  public skipLinkPath;\n  private SKIP_CONTENT_HASH = '#content';\n\n  constructor(private router: Router ) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n    ).subscribe(this.updateSkipContentLink.bind(this));\n\n    this.updateSkipContentLink();\n  }\n\n  routeIsActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  updateSkipContentLink() {\n    this.skipLinkPath = this.generateSkipToContentLink();\n  }\n\n  // Slightly complicated because we have to include the deployUrl in manually.\n  // If deployUrl changes this code must too.\n  //\n  // \"http://full-url.com/fpcare/example#content\"\n  private generateSkipToContentLink(): string {\n    // don't add duplicate #contents\n    if (window.location.href.indexOf(this.SKIP_CONTENT_HASH) !== -1) {\n      return window.location.href;\n    }\n\n    return `${window.location.origin}/${this.urlBaseName + this.router.url}#content`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{serviceName}}\n      Skip to main content\n    \n\n      \n        \n      \n      \n        \n      \n      \n        \n      \n  \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{serviceName}}      Skip to main content                                                                  -->  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpaEnvResponse.html":{"url":"interfaces/ISpaEnvResponse.html","title":"interface - ISpaEnvResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISpaEnvResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/consent-modal/consent-modal.component.ts\n        \n\n            \n                Description\n            \n            \n                Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\nthen proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\nmaintenance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_NOW\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_NOW\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_NOW:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { forwardRef, Component, EventEmitter, Input, Output, ViewChild, Inject, OnInit} from '@angular/core';\nimport * as moment from 'moment';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { CommonLogger, CommonLogMessage } from '../../services/logger.service';\n// import { }\nimport { AbstractHttpService } from '../../services/abstract-api-service';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n/**\n * Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\n * then proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\n * maintenance.\n *\n *\n * @example\n*       \t\n*           \n * @export\n */\n\nexport interface ISpaEnvResponse {\n  SPA_ENV_MSP_MAINTENANCE_FLAG: string;\n  SPA_ENV_MSP_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_ACL_MAINTENANCE_FLAG: string;\n  SPA_ENV_ACL_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_START: string;\n  SPA_ENV_NOW: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_END: string;\n}\n\n// Disabling tslint for @example below.\n// tslint:disable:max-line-length\n\n/**\n * ConsentModalComponent, aka the \"Information Collection Notice\", is a modal\n * designed to be shown at the beginning of an application. It is a boilerplate\n * checkbox to consent to information collection.\n *\n * Currently this component requires the body to be manually set as a child\n * element (via transclusion)\n *\n * TODO - Set default body if none is passed in.\n *\n * @example\n *       \n *                      Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC . \n *       \n *\n *\n *        // Component code - Remove backticks when copying (necessary to render docs)\n *        `@ViewChild('consentModal') consentModal: ConsentModalComponent`\n *        ...\n *        openModal(){\n *          this.consentModal.showFullSizeView();\n *        }\n */\n@Component({\n  selector: 'common-consent-modal',\n  templateUrl: './consent-modal.component.html',\n  styleUrls: ['./consent-modal.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ConsentModalComponent )}\n  ]\n})\n\nexport class ConsentModalComponent extends AbstractHttpService implements ControlValueAccessor, OnInit  {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    @Input() processName: string;\n\n    /**\n     * If `isUnderMaintenance` is true, then this will automatically try and\n     * make a request to the SPA ENV server to determine if it's in a\n     * maintenance window.  If your application determines this manually, leave\n     * this alone.\n     */\n    @Input() isUnderMaintenance: boolean = false;\n    @Input() title: string;\n    @Input() body: string; // = 'Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .';\n    @Input() agreeLabel: string = 'I have read and understand this info';\n    @Input() continueButton: string = 'Continue';\n    @Input() maintenanceFlag: string = 'false';\n    @Input() url: string = '/msp/api/env';\n    @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n    @Output() close = new EventEmitter();\n    @Output() cutOffDate: EventEmitter = new EventEmitter();\n    @Output() accept = new EventEmitter();\n\n    public spaEnvRes: ISpaEnvResponse = {} as any;\n    public maintenanceMessage: string;\n    \n    // public maintenanceFlag: string ;\n   \n\n    // tslint:disable-next-line:max-line-length\n    private _applicationHeaderMap: Map = new Map([['ACL', '{\"SPA_ENV_MSP_ACL_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_ACL_MAINTENANCE_MESSAGE\":\"\"}'], ['MSP', '{\"SPA_ENV_MSP_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_MAINTENANCE_MESSAGE\":\"\"}'], ['PA', '{\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\"}']]);\n    agreeCheck: boolean = false;\n\n    public _onChange = (_: any) => {};\n    public _onTouched = () => {};\n\n\n    constructor(protected http: HttpClient,  private logService: CommonLogger) {\n        super(http);\n    }\n\n\n\n    ngOnInit(): void {\n      // Called after ngOnInit when the component's or directive's content has been initialized.\n      // Add 'implements AfterContentInit' to the class.\n      if (this.isUnderMaintenance) {\n        this.inMaintenance();\n      }\n\n    }\n\n    /**\n     * Call this method to display the modal.\n     */\n    showFullSizeView() {\n        this.fullSizeViewModal.config.keyboard = false;\n        this.fullSizeViewModal.show();\n    }\n\n    continue() {\n        this.accept.emit(true);\n        this.fullSizeViewModal.hide();\n        this.close.emit();\n        this._onChange(true);\n        this._onTouched();\n    }\n\n    // Api callout to get the message from the Rapid code\n    sendSpaEnvServer(rapidResponseCode: string): Observable {\n        this._headers = new HttpHeaders({\n            'SPA_ENV_NAME': rapidResponseCode\n        });\n        return this.post(this.url, null);\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n      console.log('handleError', JSON.stringify(error));\n      if (error.error instanceof ErrorEvent) {\n          // Client-side / network error occured\n          console.error('MspMaintenanceService error: ', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code\n          console.error(`MspMaintenanceService Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n      }\n      // this.logService.log({event: 'error', key: 'Cannot get maintenance flag from spa-env-server'});\n\n      // A user facing erorr message /could/ go here; we shouldn't log dev info through the throwError observable\n      return of(error);\n  }\n\n\n  inMaintenance() {\n        const headerName = this._applicationHeaderMap.get(this.processName);\n\n        this.sendSpaEnvServer(headerName)\n                .subscribe(response => {\n                    this.spaEnvRes =  response;\n                    console.log(this.spaEnvRes);\n                    if (this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage =  this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_MESSAGE;\n                    }\n                    if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_START) {\n                        this.cutOffDate.emit(this.spaEnvRes);\n                    }\n\n            }, (error: Response | any) => {\n                console.log('Error when calling the MSP Maintenance: ' + error);\n                this.logService.log({\n                  event: 'ACL - SPA Env System Error',\n                  success: false,\n                  errMsg: 'ACL - SPA Env Rapid Response Error' + error\n                });\n        }\n\n      );\n  }\n\n  registerOnChange(fn: any): void {\n    this.accept.emit(fn) ;\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n\n    //\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MaskModel.html":{"url":"classes/MaskModel.html","title":"class - MaskModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MaskModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/mask.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/mask.model.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/mask.model.ts:34\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/mask.model.ts:27\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/mask.model.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import {EventEmitter, Input, Output} from '@angular/core';\nimport { Base } from './base';\n\nexport const LETTER = /[A-Z]/i; // Ignore case here, then upperCase it via pipe.\nexport const NUMBER = /\\d/;\nexport const SPACE = ' ';\n\nexport class MaskModel extends Base {\n\n  @Input() value: string;\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = true;\n\n  public mask: any;\n  public placeholder: string;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  /**\n   * Updates the value\n   */\n  onUpdate( value: string ) {\n\n    // Emit value without spaces\n    this.valueChange.emit( value );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Maxlengths.html":{"url":"interfaces/Maxlengths.html","title":"interface - Maxlengths","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Maxlengths\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO Box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or ZIP'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    this.setLabels();\n    this.setMaxlengths();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    const prov = this.addr.province;\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n\n    // leave last value for province if no default\n    if ( !this.addr.province ) {\n      this.addr.province = this.findProvinceDescription( prov );\n    }\n    this.addr.country = value;\n    this.updateProvList();\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.street = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  isCanadaUSA(): boolean {\n    return (this.addr && UNITED_STATES === this.addr.country) || this.isCanada();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n    \n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : null);\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.street = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoHCommonLibraryError.html":{"url":"classes/MoHCommonLibraryError.html","title":"class - MoHCommonLibraryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoHCommonLibraryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/helpers/library-errorr.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/helpers/library-errorr.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MoHCommonLibraryError extends Error {\n    constructor(message?: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameComponent.html":{"url":"components/NameComponent.html","title":"component - NameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/name/name.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-name\n            \n\n            \n                styleUrls\n                ./name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                nameStr\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrors\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayErrors\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:32\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:87\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.scss']\n})\nexport class NameComponent extends Base implements ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Name';\n  @Input() maxlen: string = '255';\n  @Input() labelforId: string = 'name_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.nameStr = val;\n    }\n  }\n  get value() {\n    return this.nameStr;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  public nameStr: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.nameStr = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  displayErrors(): boolean {\n    const displayErr = this.controlDir && !this.controlDir.disabled &&\n    ( this.controlDir.dirty || this.controlDir.touched ) && !!this.controlDir.errors;\n    return displayErr;\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlen, 10 );\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{label}} is required.\n  \n  \n     1; else initInvalid;\">\n        {{label}} must begin with a letter and cannot include special characters except hyphens,\n        periods, apostrophes and blank characters.\n    \n  \n\n\n\n  {{label}} must be with a letter.\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{label}} is required.         1; else initInvalid;\">        {{label}} must begin with a letter and cannot include special characters except hyphens,        periods, apostrophes and blank characters.        {{label}} must be with a letter.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It should be used on every page unless there is a good\nexception.\nNote: CommonFormActionBar (and SubmitBar) must come AFTER this element, not\ninside in version 2.0.0 and above.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It should be used on every page unless there is a good\n * exception.\n *\n * Note: CommonFormActionBar (and SubmitBar) must come *AFTER* this element, not\n * inside in version 2.0.0 and above.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageListInterface.html":{"url":"interfaces/PageListInterface.html","title":"interface - PageListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for used when checking completeness of item\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isComplete\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:10\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n// IMPROVEMENT: Add a 'flex' @Input(), that adds display flex.  Importantly, it\n// must set flex on the wrapper/row divs in the html.  There are some cases\n// (like SiteReg) where having flex layout is beneficial.  My first suggestion\n// was to simply style the , but the problem is that we\n// need flex on the child elements of page-section (that still wrap ng-content).\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:142\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:157\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                TODO:  Convert to custom form control - remove ngForm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                            \n                                isDobEmpty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SimpleDate\n\n                        \n                    \n                    \n                        \n                            Default value : { year: null, month: null, day: null }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YYYY/MM/DD'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:19\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:85\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDobEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisDobEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:45\n                \n            \n\n\n            \n                \n                    Indicates whether or not the date of birth is empty \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:71\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import * as moment_ from 'moment';\nimport { Base } from './base';\nimport { SimpleDate } from './simple-date.interface';\nconst moment = moment_;\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'YYYY/MM/DD';\n\n  // Initialize dob to nulls\n  public dateOfBirth: SimpleDate = { year: null, month: null, day: null };\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( 'YYYYMMDD' );\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.isDobEmpty() ? null :\n        moment( {\n          year: this.dateOfBirth.year,\n          month: this.dateOfBirth.month - 1,\n          day: this.dateOfBirth.day\n        }).format( this.dobFormat );\n  }\n\n  /** Indicates whether or not the date of birth is empty */\n  isDobEmpty(): boolean {\n    return Object.keys( this.dateOfBirth )\n        .map( key => this.dateOfBirth[key] )\n        .filter( x => x ) // Filter out null/undefined\n        .length !== 3;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): Number {\n    const dobDt = new Date( this.dateOfBirth.year, this.dateOfBirth.month, this.dateOfBirth.day );\n    return Math.ceil( moment( ).diff( dobDt, 'year', true ) );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth.month = object.dateOfBirth.month;\n    this.dateOfBirth.day = object.dateOfBirth.day;\n    this.dateOfBirth.year = object.dateOfBirth.year;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhnComponent.html":{"url":"components/PhnComponent.html","title":"component - PhnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phn/phn.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phn\n            \n\n            \n                styleUrls\n                ./phn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                phn\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Personal Health Number (PHN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phn_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:26\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { NUMBER, SPACE } from '../../models/mask.model';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-phn',\n  templateUrl: './phn.component.html',\n  styleUrls: ['./phn.component.scss']\n})\nexport class PhnComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Personal Health Number (PHN)';\n  @Input() maxlen: string = '15';\n  @Input() placeholder: string = '1111 111 111';\n  @Input() labelforId: string = 'phn_' + this.objectId;\n  @Input() disabled: boolean = false;\n\n\n  @Input()\n  set value( val: string ) {\n    if ( val) {\n      this.phn = val;\n    }\n  }\n  get value() {\n    return this.phn;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  phn: string = '';\n  mask: any;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.phn ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.phn = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.phn = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      {{label}} is invalid.\n    \n    \n      {{label}} was already used for another family member.\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{label}} is required.              {{label}} is invalid.              {{label}} was already used for another family member.      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneNumberComponent.html":{"url":"components/PhoneNumberComponent.html","title":"component - PhoneNumberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhoneNumberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phone-number/phone-number.component.ts\n\n\n    \n        Description\n    \n    \n        PhoneNumberComponent is a used to show the Phone number.\n\n    \n\n    \n        Extends\n    \n    \n                MaskModel\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => PhoneNumberComponent) }\n                \n            \n\n\n            \n                selector\n                common-phone-number\n            \n\n            \n                styleUrls\n                ./phone-number.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-number.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Static\n                                PhoneNumberRegEx\n                            \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setPhoneNumber\n                            \n                            \n                                writeValue\n                            \n                            \n                                onUpdate\n                            \n                            \n                                upperCasePipe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                objectID\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                required\n                            \n                            \n                                disabled\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phone-number/phone-number.component.ts:49\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mobile'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phone_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        phoneNumber\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:14\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:11\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:12\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetPhoneNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdate(value: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:34\n\n                \n            \n\n\n            \n                \n                    Updates the value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         MaskModel\n\n                \n            \n            \n                \n                        Defined in         MaskModel:27\n\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PhoneNumberRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MaskModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         MaskModel:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { MaskModel, NUMBER, SPACE } from '../../models/mask.model';\n\nimport {  ControlValueAccessor,  NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * PhoneNumberComponent is a used to show the Phone number.\n *\n * @example\n *       \t\n*         \n\n * @export\n */\n\n\n@Component({\n  selector: 'common-phone-number',\n  templateUrl: './phone-number.component.html',\n  styleUrls: ['./phone-number.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => PhoneNumberComponent )}\n  ]\n})\n\nexport class PhoneNumberComponent extends MaskModel implements ControlValueAccessor {\n  \n  static PhoneNumberRegEx = '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$';\n  @Input() displayMask: boolean = true;\n  @Input() required: boolean = false;\n  @Input() label: string = 'Mobile';\n  @Input() phoneNumber: string;\n\n  /** @deprecate - Do we have any applications that need to use this? */\n  @Input() objectID: string = 'phone_' + this.objectId;\n  @Output() onChange = new EventEmitter();\n  // public mask = ['+','1',SPACE,'(',NUMBER,NUMBER,NUMBER,')',SPACE,NUMBER,NUMBER,NUMBER,'-',NUMBER,NUMBER,NUMBER,NUMBER];\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n  \n  \n  constructor() {\n    super();\n    this.placeholder = '+1 (555) 555-5555';\n    this.mask = ['+', '1', SPACE, '(', NUMBER, NUMBER, NUMBER, ')', SPACE, NUMBER, NUMBER, NUMBER, '-', NUMBER, NUMBER, NUMBER, NUMBER];\n  }\n\n\n  setPhoneNumber(value: string) {\n    this.phoneNumber = value;\n    this.onChange.emit(this.phoneNumber);\n    this._onChange(value);\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n  \n  \n  \n    \n      {{label}} is required.\n    \n  \n\n\n\n  \n          \n  \n    \n      {{label}} is required.\n     \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} is required.                              {{label}} is required.       '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhoneNumberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                pcFormat\n                            \n                            \n                                postalCode\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                upperCasePipe\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postalCode_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'A1A 1A1'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:104\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pcFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:28\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { LETTER, NUMBER, SPACE } from '../../models/mask.model';\nimport { Base } from '../../models/base';\n\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss']\n})\nexport class PostalCodeComponent extends Base implements ControlValueAccessor  {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() placeholder: string = 'A1A 1A1';\n  @Input() labelforId: string = 'postalCode_' + this.objectId;\n  @Input() disabled: boolean = false;\n\n  @Input()\n  set value( val: string ) {\n    // console.log( 'set value: ', val );\n    if (val) {\n      this.postalCode = val;\n    }\n  }\n  get value() {\n    // console.log( 'get value: ', this.postalCode );\n    return this.postalCode;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  postalCode: string = '';\n  mask: any;\n  pcFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n    // console.log( 'onValueChange: ', value, this.postalCode );\n\n    if ( value !== this.postalCode ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.postalCode = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n\n    // console.log( 'onblur: ', event );\n\n    if ( this.displayMask && event.target.value ) {\n      // Check for valid characters\n\n      const passTest = this.pcFormat.test( event.target.value );\n      if ( this.controlDir ) {\n        this.controlDir.control.setErrors( (passTest ? null : { 'pattern': true } ) );\n      }\n     // console.log( 'passTest: ', passTest, event.target.value );\n    }\n\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    // console.log( 'writeValue: ', value, this.postalCode );\n    if ( value ) {\n      this.postalCode = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      Must be in the format {{placeholder}}.\n    \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} is required.              Must be in the format {{placeholder}}.        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProvinceComponent.html":{"url":"components/ProvinceComponent.html","title":"component - ProvinceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProvinceComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/province/province.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-province\n            \n\n            \n                styleUrls\n                ./province.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./province.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                province\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                provinceList\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/province/province.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'province_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please select a province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        provinceList\n                    \n                \n                \n                    \n                        Type :         ProvinceList[]\n\n                    \n                \n                \n                    \n                        Default value : PROVINCE_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:51\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:60\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:56\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:51\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlen: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.province = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n\n\n\n  \n    {{label}} is required.\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{label}} is required.    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProvinceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/province/province.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlen: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.province = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioComponent.html":{"url":"components/RadioComponent.html","title":"component - RadioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/radio/radio.component.ts\n\n\n    \n        Description\n    \n    \n        RadioComponent is a single radio which can be used to have multiple radios\nbased on the radio label values.\nTo display radio in a vertical style use display=\"table-row-group\" by default\nit shows in horizontal or inline display, display='inline-block' You can\nhave many radio's and the number is based on the Radio label Value. For 3\nradio buttons, radioLabels value should be passed in the below format\n  [\n         {\n           \"label\": \"Myself only\",\n           \"value\": \"MyselfOnly\"\n         },\n         {\n           \"label\": \"All members on my MSP account\",\n           \"value\": \"AllMembers\"\n         },\n         {\n           \"label\": \"One specific member on my MSP account\",\n           \"value\": \"SpecificMember\"\n         }\n  ];\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-radio\n            \n\n            \n                styleUrls\n                ./radio.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                setStatus\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                disabled\n                            \n                            \n                                display\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                instructionText\n                            \n                            \n                                label\n                            \n                            \n                                radioLabels\n                            \n                            \n                                showError\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                statusChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/radio/radio.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :     \"table-row-group\" | \"inline-block\"\n\n                    \n                \n                \n                    \n                        Default value : 'inline-block'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.label + ' is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instructionText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioLabels\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:53\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        statusChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:58\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(evt: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport {Base} from '../../models/base';\nimport {ControlValueAccessor, NgControl} from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value should be passed in the below format\n *\n *\n *      [\n *             {\n *               \"label\": \"Myself only\",\n *               \"value\": \"MyselfOnly\"\n *             },\n *             {\n *               \"label\": \"All members on my MSP account\",\n *               \"value\": \"AllMembers\"\n *             },\n *             {\n *               \"label\": \"One specific member on my MSP account\",\n *               \"value\": \"SpecificMember\"\n *             }\n *      ];\n *\n * @example\n *        \n *        \n *\n * @export\n *\n */\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends Base implements ControlValueAccessor {\n\n\n  @Input() radioLabels: Array ;\n  @Input() checked: boolean = false; // TODO: Remove after confirm not used\n  @Input() disabled: boolean = false;\n  @Input() label: string ;\n  @Input() value: string ;\n  @Input() showError: boolean;\n  @Input() errorMessageRequired: string = this.label + ' is required.';\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n  @Output() statusChange: EventEmitter = new EventEmitter();\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  setStatus(evt: string) {\n    // this.value = evt;\n    this._onChange(evt);\n    this.statusChange.emit(evt);\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  {{instructionText}}\n  \n     \n      \n      \n      {{val.label}}\n      \n    \n  \n\n\n  \n      {{errorMessageRequired}}\n  \n\n\n\n\n  \n    \n  \n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}  {{instructionText}}                         {{val.label}}                    {{errorMessageRequired}}              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardService.html":{"url":"guards/RouteGuardService.html","title":"guard - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/route-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Use this service to implement Route Guards in your application. This is for a\ntypical form flow, where the user must proceed sequentially from one page to\nthe next.\nTo setup, you must:\n\nCreate a service implementing the abstract methods in AbstractPgService (\"RegistrationService\")\nSetup AbstractPgCheckService in NgModule providers, to useExisting the service from previous step.\nAdd this RouteGuardService to same providers from previous step.\nConfigure routes to use RouteGuardService - canActivate or canActivateChild\nHave each \"page\" in the form call setPageIncomplete() or setPageComplete() (from the \"RegistrationService\")\n\nYou must make sure to setup AbstractPgCheckService in NgModules correctly.\n\n                \n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [RouteGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.setPageIncomplete(); }\ncontinue() { this.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPgCheckService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/route-guard.service.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPgCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:73\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\n\n/**\n * Use this service to implement Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPgService` (\"RegistrationService\")\n * 2. Setup AbstractPgCheckService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this RouteGuardService to same providers from previous step.\n * 4. Configure routes to use RouteGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"RegistrationService\")\n *\n *\n * You must make sure to setup AbstractPgCheckService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [RouteGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.setPageIncomplete(); }\n *                continue() { this.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router,\n    private service: AbstractPgCheckService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Pre-requisite has not be completed\n     */\n    if (false === this.service.isPrerequisiteComplete()) {\n      this.router.navigate([this.service.getStartUrl()]);\n      return false;\n    }\n\n    if (false === this.service.isPageComplete(pageUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePhnDirective\n\nValidatePhnDirective\n\nSharedCoreModule -->\n\nValidatePhnDirective->SharedCoreModule\n\n\n\n\n\nValidateSinDirective\n\nValidateSinDirective\n\nSharedCoreModule -->\n\nValidateSinDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePhnDirective \n\nValidatePhnDirective \n\nValidatePhnDirective  -->\n\nSharedCoreModule->ValidatePhnDirective \n\n\n\n\n\nValidateSinDirective \n\nValidateSinDirective \n\nValidateSinDirective  -->\n\nSharedCoreModule->ValidateSinDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePhnDirective\n                        \n                        \n                            ValidateSinDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DayValidationDirective\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePhnDirective\n                        \n                        \n                            ValidateSinDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                        \n                            YearValidateDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { ProgressbarModule, ModalModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DayValidationDirective } from './components/date/day-validation.directive';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\nimport { YearValidateDirective } from './components/date/year-validate.directive';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { CountryComponent } from './components/country/country.component';\nimport { ProvinceComponent } from './components/province/province.component';\nimport { CityComponent } from './components/city/city.component';\nimport { StreetComponent } from './components/street/street.component';\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ConsentModalComponent } from './components/consent-modal/consent-modal.component';\nimport { NameComponent } from './components/name/name.component';\nimport { PhoneNumberComponent } from './components/phone-number/phone-number.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AccordionCommonComponent } from './components/accordion/accordion.component';\nimport { ValidateNameDirective } from './components/name/validate-name.directive';\nimport { SinComponent } from './components/sin/sin.component';\nimport { PhnComponent } from './components/phn/phn.component';\nimport { FullNameComponent } from './components/full-name/full-name.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ValidateBcPostalDirective } from './components/postal-code/validate-bc-postal.directive';\nimport { XiconButtonComponent } from './components/xicon-button/xicon-button.component';\nimport { ValidateSinDirective } from './components/sin/validate-sin.directive';\nimport { ValidatePhnDirective } from './components/phn/validate-phn.directive';\nimport { DuplicateCheckDirective } from './components/duplicate-check/duplicate-check.directive';\nimport { ErrorContainerComponent } from './components/error-container/error-container.component';\n\nconst componentList = [\n  CoreBreadcrumbComponent,\n  FormActionBarComponent,\n  PageFrameworkComponent,\n  PasswordComponent,\n  WizardProgressBarComponent,\n  DateComponent,\n  DayValidationDirective,\n  DateFieldFormatDirective,\n  YearValidateDirective,\n  DatepickerComponent,\n  FileUploaderComponent,\n  ThumbnailComponent,\n  FormSubmitBarComponent,\n  PostalCodeComponent,\n  PageSectionComponent,\n  DropdownComponent,\n  ToggleComponent,\n  AddressComponent,\n  CountryComponent,\n  ProvinceComponent,\n  CityComponent,\n  StreetComponent,\n  ButtonGroupComponent,\n  ButtonComponent,\n  CheckboxComponent,\n  ConsentModalComponent,\n  NameComponent,\n  FullNameComponent,\n  PhoneNumberComponent,\n  RadioComponent,\n  AccordionCommonComponent,\n  ValidateNameDirective,\n  SinComponent,\n  PhnComponent,\n  HeaderComponent,\n  ValidateBcPostalDirective,\n  XiconButtonComponent,\n  ValidateSinDirective,\n  ValidatePhnDirective,\n  DuplicateCheckDirective,\n  ErrorContainerComponent\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  declarations: [\n    componentList\n  ],\n  exports: [\n    componentList\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SinComponent.html":{"url":"components/SinComponent.html","title":"component - SinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sin/sin.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sin\n            \n\n            \n                styleUrls\n                ./sin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                sin\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sin/sin.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Social Insurance Number (SIN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sin_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:28\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { NUMBER, SPACE } from '../../models/mask.model';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'common-sin',\n  templateUrl: './sin.component.html',\n  styleUrls: ['./sin.component.scss']\n})\nexport class SinComponent extends Base implements ControlValueAccessor {\n\n  @Input() label: string = 'Social Insurance Number (SIN)';\n  @Input() maxlen: string = '15';\n  @Input() placeholder: string = '111 111 111';\n  @Input() labelforId: string = 'sin_' + this.objectId;\n  @Input() disabled: boolean = false;\n\n  @Input()\n  set value( val: string ) {\n    console.log( 'set value: ', val );\n    if ( val ) {\n      this.sin = val;\n\n      console.log( 'value: ', this.sin );\n    }\n  }\n  get value() {\n    console.log( 'get value: ', this.sin );\n    return this.sin;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  sin: string = '';\n  mask: any;\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.sin ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.sin = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.sin = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{label}} is required.\n    \n    \n      {{label}} is invalid.\n    \n    \n      {{label}} was already used for another family member.\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{label}} is required.              {{label}} is invalid.              {{label}} was already used for another family member.      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StreetComponent.html":{"url":"components/StreetComponent.html","title":"component - StreetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StreetComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/street/street.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-street\n            \n\n            \n                styleUrls\n                ./street.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./street.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                street\n                            \n                            \n                                typeaheadList$\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onError\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                onSelect\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                useGeoCoder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                selectEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl, geocoderService: GeocoderService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/street/street.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geocoderService\n                                                  \n                                                        \n                                                                        GeocoderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Full street address or rural route'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'street_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Street Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useGeoCoder\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(err: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: TypeaheadMatch)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TypeaheadMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/street.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:48\n                            \n                        \n\n                \n                    \n                        Search string to store result from GeoCoder request \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:50\n                            \n                        \n\n                \n                    \n                        The subject that triggers on user text input and gets typeaheadList$ to update.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeaheadList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/street/street.component.ts:45\n                            \n                        \n\n                \n                    \n                        The list of results, from API, that is passed to the typeahead list\nResult from GeoCoderService address lookup\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/street/street.component.ts:31\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/street/street.component.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Observable, Subject, of } from 'rxjs';\nimport { GeoAddressResult, GeocoderService } from '../../services/geocoder.service';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'common-street',\n  templateUrl: './street.component.html',\n  styleUrls: ['./street.component.scss']\n})\nexport class StreetComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Full street address or rural route';\n  @Input() maxlen: string = '250';\n  // TODO - Replace maxlen with maxlength across this and all other components\n  // @Input() maxlength: string = '250';\n  @Input() labelforId: string = 'street_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() useGeoCoder: boolean = false;\n  @Input() placeholder: string = 'Street Name';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.street = val;\n    }\n  }\n  get value() {\n    return this.street;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n  @Output() selectEvent: EventEmitter = new EventEmitter();\n\n  street: string = '';\n\n  /**\n   * The list of results, from API, that is passed to the typeahead list\n   * Result from GeoCoderService address lookup\n   */\n  typeaheadList$: Observable;\n\n  /** Search string to store result from GeoCoder request */\n  private search: string;\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl,\n               private geocoderService: GeocoderService ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n\n    // Set up for using GeoCoder\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => {\n        return this.geocoderService.lookup(searchPhrase);\n      }),\n      // tap(log => console.log('taplog', log)),\n      catchError(err => this.onError(err))\n    );\n  }\n\n  onValueChange( value: any ) {\n    if ( this.useGeoCoder ) {\n      // set the search string\n      this.search = value;\n    }\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n        this.street = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n\n  onKeyUp(event: KeyboardEvent): void {\n    /**\n     * Filter out 'enter' and other similar keyboard events that can trigger\n     * when user is selecting a typeahead option instead of entering new text.\n     * Without this filter, we do another HTTP request + force disiplay the UI\n     * for now reason\n     */\n    if (event.keyCode === 13 || event.keyCode === 9) {\n      // enter & tab\n      return;\n    }\n\n    this.searchText$.next(this.search);\n  }\n\n  onError(err: any): Observable {\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n    console.log( 'onSelect: ', event.item );\n    this.street = event.item.street;\n    this.selectEvent.emit( event.item );\n  }\n}\n\n    \n\n    \n        {{label}}\n\n    \n\n\n\n\n  \n    {{label}} is required.\n  \n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}          {{label}} is required.    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'StreetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { CommonImage } from '../../models/images.model';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss']\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID().toString()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateBcPostalDirective.html":{"url":"directives/ValidateBcPostalDirective.html","title":"directive - ValidateBcPostalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateBcPostalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateBcPostal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-bc-postal.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateBcPostal: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for BC postal code\n  */\n const criteria: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$');\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidBCPostal': true };\n  }\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateBcPostal]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true}\n  ]\n})\nexport class ValidateBcPostalDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateBcPostal( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateNameDirective.html":{"url":"directives/ValidateNameDirective.html","title":"directive - ValidateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/name/validate-name.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/validate-name.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateName: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n   /**\n   * Valid characters for name\n   */\n  const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n};\n\n\n@Directive({\n  selector: '[commonValidateName]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true}\n  ]\n})\nexport class ValidateNameDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateName( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePhnDirective.html":{"url":"directives/ValidatePhnDirective.html","title":"directive - ValidatePhnDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePhnDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/phn/validate-phn.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePhnDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePhn]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowEmptyValue\n                            \n                            \n                                isBCPhn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowEmptyValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/validate-phn.directive.ts:105\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCPhn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/validate-phn.directive.ts:104\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/validate-phn.directive.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\n\n// Empty value (null, undefined, empty string) are treated as invalid.\n function validatePHN ( phn: string,\n                        isBCPhn: boolean = true,\n                        allowEmptyValue: boolean = false ): { [key: string]: boolean } | null {\n  // pre req checks\n  if (phn === null || phn === undefined || phn.trim().length  0) {\n    // multiply the value against the weight\n    result = num * weights[i];\n\n    // divide by 11 and save the remainder\n    result = result % 11;\n\n    // add it to our sum\n    sumOfRemainders += result;\n    }\n  }\n\n  // mod by 11\n  const checkDigit = 11 - (sumOfRemainders % 11);\n\n  // if the result is 10 or 11, it is an invalid PHN\n  if (checkDigit === 10 || checkDigit === 11) {\n    return { 'invalid': true };\n  }\n\n  // Compare against 10th digit\n  const finalDigit = Number(phn.substring(9, 10));\n  if (checkDigit !== finalDigit) {\n   return { 'invalid': true };\n  }\n\n  // All done!\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonValidatePhn( isBCPhn: boolean = true,\n                                   allowEmptyValue: boolean = false): ValidatorFn {\n\n  console.log( 'function commonValidatePhn: param = ', isBCPhn );\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    console.log( 'Control value = ', control.value );\n    return validatePHN( control.value, isBCPhn, allowEmptyValue );\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePhn]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePhnDirective, multi: true}\n  ]\n})\nexport class ValidatePhnDirective implements Validator {\n\n  @Input() isBCPhn: boolean = true;\n  @Input() allowEmptyValue: boolean = false;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePHN( control.value, this.isBCPhn, this.allowEmptyValue );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateSinDirective.html":{"url":"directives/ValidateSinDirective.html","title":"directive - ValidateSinDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateSinDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sin/validate-sin.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateSinDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateSin]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/validate-sin.directive.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateSin: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  let sin = control.value;\n\n  // pre req checks\n  if (sin === null || sin === undefined || sin.length  9) {\n      result = result - 9;\n    }\n\n    // add it to our sum\n    sum += result;\n  }\n\n  // The sum must be divisible by 10\n  if (sum % 10 !== 0) {\n    return { 'invalid': true };\n  }\n\n  // All done!\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateSin]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateSinDirective, multi: true}\n  ]\n})\nexport class ValidateSinDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateSin( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../models/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): Number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.includes(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XiconButtonComponent.html":{"url":"components/XiconButtonComponent.html","title":"component - XiconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  XiconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/xicon-button/xicon-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-xicon-button\n            \n\n            \n                styleUrls\n                ./xicon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xicon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n                \n                    \n                        Label to use for accessibility.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBtnClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBtnClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MoHCommonLibraryError } from '../../../helpers/library-errorr';\n\n@Component({\n  selector: 'common-xicon-button',\n  templateUrl: './xicon-button.component.html',\n  styleUrls: ['./xicon-button.component.scss']\n})\nexport class XiconButtonComponent implements OnInit {\n\n  /**\n   * Label to use for accessibility.\n   * @required\n   */\n  @Input() label: string;\n  /**\n   * @deprecated - Remove at breaking change and go to (click)\n   */\n  @Output() clickEvent: EventEmitter = new EventEmitter();\n  @Output() click: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.label) {\n      // todo - change to MohCommmonLibraryError -> test in IE10\n      // throw Error('common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.');\n      const msg = `common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.\n      e.g. \n`; // Intentional to create a blank line between our error and stack trace.\n      throw new MoHCommonLibraryError(msg);\n    }\n  }\n\n  onBtnClick() {\n    this.clickEvent.emit();\n    this.click.emit();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DayValidationDirective', 'selector': '[commonDayValidation][ngModel]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePhnDirective', 'selector': '[commonValidatePhn]'},{'name': 'ValidateSinDirective', 'selector': '[commonValidateSin]'},{'name': 'YearValidateDirective', 'selector': '[commonYearValidate][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'XiconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/YearValidateDirective.html":{"url":"directives/YearValidateDirective.html","title":"directive - YearValidateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  YearValidateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/year-validate.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonYearValidate][ngModel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonYearValidate\n                            \n                            \n                                selectedDay\n                            \n                            \n                                selectedMonth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonYearValidate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDay\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedMonth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/year-validate.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/year-validate.directive.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n// TODO:  Create a message structure to pass in error messages similar to password module.\n\n@Directive({\n  selector: '[commonYearValidate][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => YearValidateDirective), multi: true}\n  ]\n})\nexport class YearValidateDirective implements Validator  {\n\n  @Input() commonYearValidate: string;\n  @Input() selectedDay: string;\n  @Input() selectedMonth: string;\n\n  validate( control: FormControl ): {[key: string]: any} | null {\n    const day: number = parseInt( this.selectedDay, 10 );\n    const month: number = parseInt( this.selectedMonth, 10 );\n\n    // console.log( 'validate year: ', control.value );\n\n    if ( !control.value ) {\n      return null; // empty value\n    }\n\n    const year: number = parseInt( control.value, 10 );\n\n    // Only process if value is numeric\n    if ( !isNaN(  year ) ) {\n      const currentYear = moment().get( 'y' );\n\n      if ( currentYear - year > 150 ) {\n        return { 'yearDistantPast': true };\n      }\n\n      if ( year - currentYear > 150 ) {\n        return { 'yearDistantFuture': true} ;\n      }\n\n      // Check whether dates can be present or past\n      if ( this.commonYearValidate && this.commonYearValidate !== 'any' &&\n           !isNaN( day )  && !isNaN( month ) ) {\n\n        const diff = moment( { year: year, month: month, day: day } )\n          .diff( moment(), 'days', true );\n\n         /**\n          * Validate current date as if it's a future date, and reject it when only\n          * accepting past dates.  We accomplish this by comparing diff against 1.\n          */\n          if ( diff = -1 && this.commonYearValidate === 'past' ) {\n            return { 'noFutureDatesAllowed': true };\n          }\n      }\n\n      return null;\n    }\n\n    return { 'invalidValue': true };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nUnreleased \"moh-common-lib\" (2019-08-09)\n2.6.0 \"moh-common-lib\" (2019-08-09)\nCode Refactoring\n\nModified address to used MSP label and length defaults (5bb54fc)\n\nFeatures\n\nfunctions to retrieve country, prov descriptions,  maxlengths input for addresss (978250b)\n\n2.5.2 \"moh-common-lib\" (2019-08-02)\n2.5.1 \"moh-common-lib\" (2019-07-31)\nBug Fixes\n\nremoved plus sign used to concatenate string for aria-label (#32) (3a5677b), closes #32\n\n2.5.0 \"moh-common-lib\" (2019-07-31)\nFeatures\n\nAddress: added input to address component to allow users to change default labels on fields. (#31) (ebb6998), closes #31\n\n2.4.0 \"moh-common-lib\" (2019-07-29)\n2.3.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Now has default country/prov behaviour built in (8361a0e)\n\n2.2.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Additional lines must be removed in order (ac9d61c)\nAddress: Now can show 2 extra address lines (previously only one) (af91989)\n\nStyles\n\nXIconButton: Change icon from 'times' to 'times-circle' (aad93b5)\n\n2.1.5 \"moh-common-lib\" (2019-07-18)\nAccessibility\n\nRadio: Hide radio for FireFox but keep tab-focusable. (8f6886f)\nXIconButton: Add label (867f969)\n\n2.1.4 \"moh-common-lib\" (2019-07-16)\nAccessibility\n\nPhone: Fix association of labels for phone component (c122a2a)\n\n2.1.3 \"moh-common-lib\" (2019-07-11)\nAccessibility\n\nRadio: Convert radio to use fieldset. (2c2f322)\nRadio: New focus style for RadioComponent, styled better for mouse (c2fd959)\n\n2.1.2 \"moh-common-lib\" (2019-07-10)\nAccessibility\n\nRadio: Radio is now focusable via tab / screenreader (126d876)\n\nStyles\n\nConsentModal: Backdrop enabled when modal is open. (b901868)\n\n2.1.1 \"moh-common-lib\" (2019-07-09)\nBug Fixes\n\nAddress: Implement allowExtralines to opt-in to new multi-line (5a7c37b)\n\nBREAKING CHANGES\n\nAddress: This reverts an accidentally introduced breaking change in 2.1.0 where all address components would use the new line behaviour.  Now, it is opt-in.\n\n2.1.0 \"moh-common-lib\" (2019-07-09)\nAccessibility\n\nStepper/Wizard: Darken link text by 5% to get AA colour contrast (a27faa9)\n\nBug Fixes\n\nRadio: Fix empty label for RadioComponent for a11y (Waze) (7400a64)\n\nBuild\n\nAdd \"a11y\" type to changelog and commit types (edf0b2e)\n\nCode Refactoring\n\nAddressComponent: Reorganize order of inputs, add AddressLine1 (5d8f61d)\n\nDocumentation\n\nAddressModel: Add TSDOC descriptions on street and addressLine1 (6f093d2)\n\nFeatures\n\nAddressComponent: Add 'disableGeocoder' @Input (a512eb0)\n\n2.0.1 \"moh-common-lib\" (2019-07-04)\nBug Fixes\n\nPhoneNumber: Required @Input works properly (5b18c5f)\n\nCode Refactoring\n\nXIconButton: Add (click) event, @deprecate (clickEvent) (baee5ad)\n\n2.0.0 \"moh-common-lib\" (2019-06-28)\nBug Fixes\n\nDate: Remove console logs. (a9aaf59)\nPHN: Remove console logs when setting values. (d4f0e3b)\nStepper/WizardProgress: Add vertical padding (b555787)\n\nFeatures\n\nFormActionBar: Change to full-width,  remove widthOptions (6254d29)\nName, Postal: Update validators to be compatible with reactive forms (e35f16b)\n\nStyles\n\nPageFramework:  Full height page framework, pushes form bar down (6b8cedd)\n\nBREAKING CHANGES\n\nPageFramework: Shows an error when a FormActionBar is embedded\nFormActionBar: Width changes may break designs, @Input removed\n\n1.8.0 \"moh-common-lib\" (2019-06-25)\nBug Fixes\n\nDropdown: Add visible form label to input (2a511e7)\nProvince: Add placeholder when not using dropdown (8e823c5)\nProvince: Init val = undefined (was empty string); fix placeholder. (09ae712)\n\nFeatures\n\nCity: Add placeholder @Input with default (f103e7c)\nDropdown: Add 'clearable' property from ng-select (8f24e2e)\nProvince: Field is clearable when not required (47d614a)\nStreet: Add placeholder @Input with default (ae493e7)\n\n1.7.0 \"moh-common-lib\" (2019-06-24)\nBug Fixes\n\nCheckbox: Checkbox component now defaults to unchecked. (6775a4d)\n\nDocumentation\n\nAdditionalDocumentation:  preserveSymlinks in for npm link (e458627)\nRouteGuard: Document RouteGuardService and related classes. (fc7fe65)\nRouteGuard: Fix instruction examples for RouteGuard. (3a06f99)\n\nFeatures\n\nXIconButton: Add XIconButtonComponent. Include fixes to RadioComponent. (0ba1d1e)\n\n1.6.2 \"moh-common-lib\" (2019-06-20)\nBug Fixes\n\nCheckbox: Fix labels for checkbox to properly associate (af516d0)\n\n1.6.1 \"moh-common-lib\" (2019-06-19)\nBug Fixes\n\naddress and component - defaults now displaying (6c09982)\n\nFeatures\n\nroute guard implemented (befc319)\n\n1.6.0 \"moh-common-lib\" (2019-06-19)\nDocumentation\n\nContributing: Update contributing to show WIP option (3f42b31)\n\nFeatures\n\nPageFramework: Add 15px left/right padding, to counter taking padding from .container-fluid (7febf6d)\n\n1.5.0 \"moh-common-lib\" (2019-06-18)\nBug Fixes\n\nSIN, Address, RouteGuard: SIN all 0s fix, add RouteGuard service, and default address data. (4295b03)\nToggle: Switch order of Yes/No, so that 'No' comes first. (e485f67)\n\n1.4.0 \"moh-common-lib\" (2019-06-13)\nFeatures\n\ne2e: Add new methods in abstract-test-page (#19) (a702d6d), closes #19\n\n1.3.0 \"moh-common-lib\" (2019-06-13)\nDocumentation\n\nConsentModal: Add example typescript code to open modal. (7ff8510)\nConsentModal: Document consent modal with example (fbc012d)\n\nFeatures\n\nFormActionBar: Add 'extra-width' option to widthOption for all bps (5b88093)\n\n1.2.0 \"moh-common-lib\" (2019-06-10)\nFeatures\n\nFormActionBar: Add \"widthOption\" to for custom CSS width override (36476f8)\n\n1.1.1 \"moh-common-lib\" (2019-06-07)\nFeatures\n\nHeader: Logo image path can be overwritten (03c1243)\n\n1.1.0 \"moh-common-lib\" (2019-06-07)\nBug Fixes\n\nSIN string all zeros - invalid (96a58b1)\nSIN, PHN: SIN string all zeros is invalid, added isBCPHn to PHN. (51bfe3b)\n\nBuild\n\nnpm-scripts: Update what is committed after auto-buiding (c8fb31b)\n\nDocumentation\n\nReadme: Update to readme and docs homepage (f334faf)\n\nFeatures\n\nHeader: Create HeaderComponent with built-in \"Skip To Content\" (3868c50)\n\n1.0.2 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nToggle: Properly emit value changes. Had a typo. (e2271b7)\n\n1.0.1 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nRadio: Removed the default status label and changed the name of radio (#17) (acbbdc1), closes #17\n\nCode Refactoring\n\nSecurity: up to date in 10.256s (ac7406b)\nToggle: ToggleComponent now uses RadioComponent under the hood (e81927b)\n\n1.0.0 \"moh-common-lib\" (2019-06-05)\nBug Fixes\n\nImports: Merge /services, /models, /images entry points into main (151f173)\n\nFeatures\n\nFullName: Create FullNameComponent for first/middle/last (41f5609)\n\n0.0.34 \"moh-common-lib\" (2019-06-05)\nFeatures\n\nPHN, SIN components from FPC. Name majorly refactored. (c04b81d)\n\n0.0.33 \"moh-common-lib\" (2019-06-04)\nBug Fixes\n\nConsentModal:  ConsentModal passes TSLint rules (66f9608)\nConsentModal: Fixed multiple compile time issues with import paths (09ce95a)\nRadioComponent: Changed onStatusChange to statusChange (185148b)\n\nDocumentation\n\nButtonComponent: Updated documentation for ButtonComponent. (4d5992a)\nButtonGroupComponent: ButtonGroupComponent is DEPRECATED (c580225)\nRadioComponent: Re-organize docs for radio component (b80520f)\n\nFeatures\n\nCreate Button, Checkbox, Consent Modal, Radio, Name, Phone Number components (dd29a60)\nCreate Button, Checkbox, Consent Modal, radio, Name, Phone Number Components  (53a109b), closes PR#13\n\n0.0.32 \"moh-common-lib\" (2019-05-15)\nBug Fixes\n\nautocomplete turned off, fixed bug in postal to work with fpcare (1c8242e)\nDatepicker: Remove the IE provided 'X' to clear input (2ddfc23)\n\nDocumentation\n\nBasic styling to use BC Gov colours and fonts (7226b37)\nCreate design guidelines markdown file for each component (9f5a04e)\n\nFeatures\n\nButtonGroupComponent: Create ButtonGroupComponent with ControlValueAccessor (22710b7)\nDocumentation: Customize tabs in docs, adding \"Design Guidelines\" (df678e6)\n\n0.0.31 \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\nCaptchaComponent: Add autocomplete=\"false\" to CAPTCHA (18d69c6)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nAddressComponent: Split AddressComponent into City/Country/Province Components (3a98fb0)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (c347c39)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input) (67c4797)\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                projects/common/helpers/library-errorr.ts\n            \n            class\n            MoHCommonLibraryError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/accordion/accordion.component.ts\n            \n            component\n            AccordionCommonComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                19 %\n                (9/47)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            AddrLabelList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            Maxlengths\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button-group/button-group.component.ts\n            \n            component\n            ButtonGroupComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/city.component.ts\n            \n            component\n            CityComponent\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            component\n            ConsentModalComponent\n            \n                16 %\n                (6/36)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            interface\n            ISpaEnvResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            component\n            CountryComponent\n            \n                4 %\n                (1/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            function\n            getCountryDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            CANADA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            COUNTRY_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            UNITED_STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                28 %\n                (7/25)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            directive\n            DayValidationDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/day-validation.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            directive\n            YearValidateDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/year-validate.directive.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            directive\n            DuplicateCheckDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            checkForDuplicates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            commonDuplicateCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/error-container/error-container.component.ts\n            \n            component\n            ErrorContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                24 %\n                (9/37)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            component\n            FullNameComponent\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            interface\n            FullNameErrorMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/name.component.ts\n            \n            component\n            NameComponent\n            \n                9 %\n                (2/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            directive\n            ValidateNameDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            variable\n            commonValidateName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/phn.component.ts\n            \n            component\n            PhnComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/validate-phn.directive.ts\n            \n            directive\n            ValidatePhnDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/validate-phn.directive.ts\n            \n            function\n            commonValidatePhn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/validate-phn.directive.ts\n            \n            function\n            validatePHN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/phone-number.component.ts\n            \n            component\n            PhoneNumberComponent\n            \n                16 %\n                (4/24)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                8 %\n                (2/25)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            directive\n            ValidateBcPostalDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            variable\n            commonValidateBcPostal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            component\n            ProvinceComponent\n            \n                4 %\n                (1/24)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            function\n            getProvinceDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            BRITISH_COLUMBIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            PROVINCE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            component\n            RadioComponent\n            \n                9 %\n                (2/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/sin.component.ts\n            \n            component\n            SinComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/validate-sin.directive.ts\n            \n            directive\n            ValidateSinDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/validate-sin.directive.ts\n            \n            variable\n            commonValidateSin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/street.component.ts\n            \n            component\n            StreetComponent\n            \n                13 %\n                (4/30)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/xicon-button/xicon-button.component.ts\n            \n            component\n            XiconButtonComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/common/lib/models/address.model.ts\n            \n            class\n            Address\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                projects/common/lib/models/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            class\n            Container\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImage\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            class\n            MaskModel\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.model.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            class\n            Person\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-pg-check.service.ts\n            \n            injectable\n            AbstractPgCheckService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            injectable\n            CheckCompleteBaseService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            interface\n            PageListInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/route-guard.service.ts\n            \n            guard\n            RouteGuardService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/common/lib/shared-core.module.ts\n            \n            variable\n            componentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^3.2.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.model.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/lib/models/images.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n    projects/common/lib/services/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addPackageJsonScript   (projects/.../index.ts)\n                        \n                        \n                            addPackageToPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            checkForDuplicates   (projects/.../duplicate-check.directive.ts)\n                        \n                        \n                            commonDuplicateCheck   (projects/.../duplicate-check.directive.ts)\n                        \n                        \n                            commonValidatePhn   (projects/.../validate-phn.directive.ts)\n                        \n                        \n                            copyLicense   (projects/.../index.ts)\n                        \n                        \n                            copyVersionFile   (projects/.../index.ts)\n                        \n                        \n                            createIfMissing   (projects/.../index.ts)\n                        \n                        \n                            getCountryDescription   (projects/.../country.component.ts)\n                        \n                        \n                            getPackageVersionFromPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            getProvinceDescription   (projects/.../province.component.ts)\n                        \n                        \n                            installPackageJsonDependencies   (projects/.../index.ts)\n                        \n                        \n                            modifyJSON   (projects/.../json.ts)\n                        \n                        \n                            mohStart   (projects/.../index.ts)\n                        \n                        \n                            overwriteFile   (projects/.../index.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../package-config.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../json.ts)\n                        \n                        \n                            updateAngularJson   (projects/.../index.ts)\n                        \n                        \n                            updateAppComponentTs   (projects/.../index.ts)\n                        \n                        \n                            updatePackageJson   (projects/.../index.ts)\n                        \n                        \n                            updateTsConfig   (projects/.../index.ts)\n                        \n                        \n                            validatePHN   (projects/.../validate-phn.directive.ts)\n                        \n                        \n                            versionJS   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/schematics/src/version-js/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageJsonScript\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageJsonScript(tree, scriptName, script)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scriptName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    script\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyVersionFile\n                        \n                        \n                    \n                \n            \n            \n                \ncopyVersionFile(options: any, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAppComponentTs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAppComponentTs(tree, _context)\n                \n            \n\n\n\n\n            \n                \n                    Updates app.component.ts to console.log out the generated version file \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePackageJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePackageJson(tree, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            versionJS\n                        \n                        \n                    \n                \n            \n            \n                \nversionJS(options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copy over version.js to src/version.js, and update the package.json.\nMust be called with repo, e.g. --repo=https://github.com/bcgov/prime-web/\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/package-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageToPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageToPackageJson(host, pkg, version, forceOverwrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Adds a package to the package.json in the given host tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pkg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forceOverwrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPackageVersionFromPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \ngetPackageVersionFromPackageJson(tree, name)\n                \n            \n\n\n\n\n            \n                \n                    Gets the version of the specified package by looking at the package.json in the given tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            checkForDuplicates\n                        \n                        \n                    \n                \n            \n            \n                \ncheckForDuplicates(control, dupList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dupList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commonDuplicateCheck\n                        \n                        \n                    \n                \n            \n            \n                \ncommonDuplicateCheck(dupList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dupList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/lib/components/phn/validate-phn.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            commonValidatePhn\n                        \n                        \n                    \n                \n            \n            \n                \ncommonValidatePhn(isBCPhn: boolean, allowEmptyValue: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isBCPhn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    allowEmptyValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validatePHN\n                        \n                        \n                    \n                \n            \n            \n                \nvalidatePHN(phn, isBCPhn: boolean, allowEmptyValue: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phn\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isBCPhn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    allowEmptyValue\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/copy-license/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            copyLicense\n                        \n                        \n                    \n                \n            \n            \n                \ncopyLicense(_options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copies over an APACHE-2 License to the top level of a project.  This rule\nwill overwrite any pre-existing LICENSE file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createIfMissing\n                        \n                        \n                    \n                \n            \n            \n                \ncreateIfMissing(host, targetPath, content: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ninstallPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mohStart\n                        \n                        \n                    \n                \n            \n            \n                \nmohStart(_options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            overwriteFile\n                        \n                        \n                    \n                \n            \n            \n                \noverwriteFile(host, targetPath, content)\n                \n            \n\n\n\n\n            \n                \n                    Use a string to overwrite a file. Checks to make sure file does not have content. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAngularJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAngularJson(host)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTsConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTsConfig(host, _context)\n                \n            \n\n\n\n\n            \n                \n                    Configures settings in tsconfig.json that are required to properly import\nfrom moh-common-lib\nSpecifically, skibLibCheck\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/lib/components/country/country.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getCountryDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetCountryDescription(countryCode)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    countryCode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/components/province/province.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getProvinceDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetProvinceDescription(provinceCode)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provinceCode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/helpers/json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            modifyJSON\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyJSON(host, fileName, transformFn)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transformFn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation - https://bcgov.github.io/moh-common-styles/\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains.\nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. Or if you're able you can ask me in person.  Thanks\n- Adam Coard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDayValidationDirective\n\nDayValidationDirective\n\nSharedCoreModule -->\n\nDayValidationDirective->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePhnDirective\n\nValidatePhnDirective\n\nSharedCoreModule -->\n\nValidatePhnDirective->SharedCoreModule\n\n\n\n\n\nValidateSinDirective\n\nValidateSinDirective\n\nSharedCoreModule -->\n\nValidateSinDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nYearValidateDirective\n\nYearValidateDirective\n\nSharedCoreModule -->\n\nYearValidateDirective->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDayValidationDirective \n\nDayValidationDirective \n\nDayValidationDirective  -->\n\nSharedCoreModule->DayValidationDirective \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePhnDirective \n\nValidatePhnDirective \n\nValidatePhnDirective  -->\n\nSharedCoreModule->ValidatePhnDirective \n\n\n\n\n\nValidateSinDirective \n\nValidateSinDirective \n\nValidateSinDirective  -->\n\nSharedCoreModule->ValidateSinDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\nYearValidateDirective \n\nYearValidateDirective \n\nYearValidateDirective  -->\n\nSharedCoreModule->YearValidateDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    34 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocal Development\n\ncomponents\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n ~~*High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:*~~ [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/common\nIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nYou must make sure to set \"preserveSymlinks\": true in angular.json under the project>architect>build>options.\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nTypeScript\nimport { example } from 'moh-common-lib'\nIf you've made any chanfges to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
