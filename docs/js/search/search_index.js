var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractForm.html",[0,0.017,1,3.381]],["body/classes/AbstractForm.html",[0,0.019,1,5.105,2,2.085,3,0.171,4,0.201,5,0.1,6,6.624,7,4.345,8,0.923,9,2.171,10,2.289,11,0.846,12,2.848,13,1.627,14,1.468,15,5.987,16,1.964,17,3.13,18,3.922,19,0.201,20,0.736,21,2.695,22,6.202,23,0.846,24,5.987,25,5.321,26,2.677,27,7.529,28,4.715,29,0.907,30,3.401,31,4.969,32,0.72,33,6.419,34,1.059,35,0.012,36,0.514,37,0.316,38,0.658,39,1.278,40,4.957,41,6.419,42,1.721,43,5.627,44,2.62,45,1.884,46,6.419,47,4.957,48,4.715,49,5.105,50,3.728,51,0.675,52,0.653,53,1.126,54,4.957,55,3.259,56,4.403,57,6.419,58,1.555,59,4.144,60,1.824,61,4.373,62,4.957,63,5.627,64,1.772,65,0.993,66,5.627,67,2.218,68,5.105,69,6.419,70,6.419,71,4.715,72,1.402,73,1.171,74,4.957,75,5.105,76,3.922,77,6.419,78,6.419,79,0.471,80,5.728,81,5.165,82,4.957,83,6.419,84,3.13,85,3.728,86,5.105,87,4.135,88,2.417,89,2.626,90,0.267,91,2.159,92,0.415,93,0.951,94,2.517,95,0.171,96,3.029,97,4.957,98,0.98,99,2.517,100,0.61,101,2.879,102,4.957,103,4.957,104,4.957,105,1.767,106,4.957,107,4.957,108,4.957,109,4.957,110,0.006,111,0.008,112,0.006]],["title/classes/AbstractFormControl.html",[0,0.017,113,2.073]],["body/classes/AbstractFormControl.html",[0,0.023,2,1.844,3,0.151,4,0.178,5,0.088,6,6.722,8,0.816,12,2.861,13,1.574,19,0.178,20,0.678,21,2.315,23,0.78,26,2.586,32,0.745,34,1.236,35,0.012,36,0.6,37,0.333,38,0.809,39,1.198,42,1.353,51,1.093,52,1.039,53,1.038,58,1.434,65,1.005,73,1.245,79,0.443,90,0.269,92,0.367,93,0.841,95,0.151,110,0.006,111,0.008,112,0.006,113,2.886,114,3.843,115,1.277,116,1.712,117,0.754,118,1.404,119,2.671,120,3.549,121,2.177,122,2.245,123,0.917,124,2.045,125,1.547,126,2.722,127,2.722,128,3.891,129,3.549,130,3.8,131,2.389,132,3.26,133,2.293,134,4.384,135,4.384,136,4.384,137,1.342,138,1.469,139,1.614,140,1.469,141,1.342,142,1.425,143,1.563,144,1.07,145,4.384,146,1.469,147,4.384,148,2.671,149,1.469,150,4.384,151,2.546,152,3.1,153,3.364,154,4.384,155,3.384,156,2.943,157,4.149,158,2.578,159,2.262,160,1.98,161,4.384,162,2.817,163,4.384,164,1.722,165,4.384,166,4.384,167,4.384,168,4.384,169,4.347,170,0.658,171,2.226,172,1.054,173,3.843,174,1.425,175,4.384,176,2.776,177,2.056,178,0.266,179,3.008,180,2.428,181,3.008,182,4.384,183,2.25,184,5.187,185,2.489,186,3.486,187,1.425,188,2.831,189,1.425,190,3.008,191,2.05,192,2.679,193,2.831,194,2.428,195,3.008,196,3.008,197,4.384,198,1.038,199,5.918,200,3.008,201,4.384,202,1.91,203,3.486,204,3.486,205,2.578,206,6.699,207,3.486,208,2.679,209,3.486,210,4.384,211,2.776,212,0.638,213,3.008,214,2.428,215,2.546,216,4.384,217,3.008,218,3.843,219,3.843,220,4.384,221,5.918,222,4.384,223,4.384,224,4.384]],["title/classes/AbstractHttpService.html",[0,0.017,225,2.355]],["body/classes/AbstractHttpService.html",[0,0.026,2,1.896,3,0.156,4,0.183,5,0.091,8,1.123,10,2.15,12,2.945,19,0.183,20,0.691,23,0.956,26,2.915,29,0.574,32,0.714,34,1.332,35,0.012,36,0.605,37,0.335,38,0.775,39,0.965,51,0.614,52,0.594,53,1.058,65,0.991,76,3.685,80,5.555,81,3.093,88,3.875,89,2.389,90,0.272,95,0.156,96,2.755,100,0.93,110,0.006,111,0.008,112,0.006,137,1.38,158,1.964,159,1.422,170,1.228,174,1.96,198,1.192,211,2.115,217,4.137,225,3.341,226,6.57,227,4.028,228,3.953,229,4.53,230,3.277,231,4.152,232,5.404,233,5.329,234,4.662,235,5.131,236,4.796,237,2.627,238,6.014,239,3.586,240,4.214,241,6.031,242,4.684,243,4.509,244,5.338,245,4.43,246,4.796,247,4.509,248,4.796,249,5.555,250,4.509,251,5.404,252,4.997,253,4.977,254,2.293,255,3.503,256,4.796,257,4.43,258,4.534,259,3.685,260,4.684,261,4.509,262,4.43,263,5.404,264,4.883,265,4.137,266,3.685,267,4.796,268,4.137,269,2.536,270,4.796,271,4.796,272,4.796,273,5.188,274,4.509,275,4.796,276,4.509,277,3.953,278,4.509,279,3.503,280,4.796,281,2.498,282,2.498,283,2.115,284,3.953,285,3.953,286,2.498,287,3.764,288,2.389,289,3.953,290,2.755,291,4.509,292,6.031,293,6.031,294,4.509,295,2.037,296,4.509,297,6.031,298,6.031,299,2.389,300,4.509,301,3.093,302,4.509,303,4.509,304,1.832,305,3.586,306,4.796,307,4.509,308,2.15,309,5.287,310,2.755,311,3.312,312,3.586,313,4.509,314,3.953,315,3.953]],["title/injectables/AbstractPgCheckService.html",[316,1.67,317,2.745]],["body/injectables/AbstractPgCheckService.html",[0,0.029,3,0.193,4,0.227,5,0.113,8,1.043,12,3.116,19,0.227,23,1.037,32,0.687,34,0.924,35,0.012,36,0.448,37,0.227,38,0.574,39,1.318,65,1.002,79,0.535,84,3.838,88,3.381,90,0.21,92,0.468,95,0.193,110,0.007,111,0.009,112,0.007,117,0.883,123,1.341,226,6.434,230,3.724,316,2.724,317,5.322,318,3.252,319,5.55,320,4.908,321,4.81,322,4.572,323,3.841,324,2.409,325,6.9,326,6.934,327,6.934,328,6.934,329,3.673,330,5.514,331,6.078,332,2.916,333,4.81,334,2.122,335,6.078,336,2.323,337,2.186,338,6.078,339,6.26,340,6.26,341,5.99,342,6.26,343,5.599,344,5.599,345,4.908,346,5.599,347,5.599]],["title/classes/AbstractTestPage.html",[0,0.017,348,3.123]],["body/classes/AbstractTestPage.html",[0,0.025,2,1.194,3,0.181,4,0.115,5,0.105,8,1.362,9,1.92,10,1.544,12,2.092,13,0.806,16,1.325,19,0.115,20,0.496,23,0.57,25,4.298,28,3.18,32,0.722,34,1.23,35,0.012,36,0.677,37,0.321,38,0.765,51,0.799,52,1.013,61,3.408,64,1.755,65,1.062,67,1.496,68,5.931,72,1.389,73,1.169,79,0.575,86,4.667,87,2.515,88,2.861,90,0.106,95,0.098,100,0.878,110,0.004,111,0.006,112,0.004,123,1.032,133,2.394,144,0.782,172,1.005,178,0.276,194,3.687,198,0.498,202,1.886,211,3.752,253,2.97,255,2.515,269,1.821,308,2.092,329,2.293,334,1.796,348,4.31,349,7.281,350,4.859,351,2.49,352,3.795,353,1.005,354,3.443,355,5.144,356,4.361,357,1.596,358,2.398,359,2.398,360,6.657,361,5.868,362,3.18,363,4.33,364,1.656,365,4.599,366,5.247,367,5.868,368,5.868,369,4.33,370,4.33,371,5.868,372,4.33,373,5.868,374,4.33,375,5.868,376,5.868,377,4.889,378,6.657,379,5.868,380,5.868,381,4.33,382,4.33,383,4.33,384,4.33,385,6.317,386,4.33,387,1.342,388,2.84,389,4.33,390,2.646,391,2.398,392,3.25,393,2.97,394,3.408,395,4.33,396,3.586,397,2.84,398,3.18,399,3.795,400,3.795,401,4.33,402,4.33,403,3.795,404,2.84,405,2.97,406,3.443,407,4.33,408,3.443,409,3.795,410,5.868,411,2.84,412,3.795,413,1.271,414,4.026,415,2.795,416,3.443,417,4.33,418,4.035,419,2.84,420,4.33,421,6.255,422,5.294,423,4.895,424,4.33,425,2.84,426,2.031,427,3.586,428,4.699,429,6.894,430,7.136,431,2.84,432,4.33,433,2.84,434,3.18,435,3.854,436,2.84,437,2.84,438,4.33,439,2.84,440,4.33,441,1.286,442,4.667,443,2.84,444,2.84,445,4.33,446,2.84,447,4.33,448,2.646,449,4.33,450,2.98,451,2.556,452,2.98,453,4.667,454,4.334,455,5.868,456,4.33,457,5.144,458,4.33,459,2.84,460,3.18,461,4.667,462,2.84,463,3.443,464,3.443,465,3.795,466,3.18,467,2.515,468,4.33,469,1.593,470,4.33,471,4.33,472,3.795,473,4.33,474,5.868,475,1.701,476,3.443,477,2.515,478,4.33,479,2.515,480,3.795,481,3.795,482,3.18,483,2.84,484,2.84,485,2.795,486,4.33,487,2.84,488,1.886,489,4.33,490,5.868,491,2.84,492,5.247,493,2.98,494,2.111,495,0.962,496,3.795,497,2.111,498,2.031,499,2.795,500,3.408,501,3.443,502,3.18,503,3.795,504,3.18,505,3.443,506,4.33,507,3.795,508,4.33,509,2.795,510,3.109,511,3.18,512,5.868,513,5.144,514,3.109,515,3.866,516,4.026,517,4.33,518,2.84,519,1.886,520,4.33,521,4.33,522,2.293,523,2.795,524,3.795,525,4.33,526,4.33,527,2.84,528,5.085,529,4.33,530,2.84,531,3.443,532,4.33,533,1.735,534,0.668,535,4.33,536,2.84,537,2.84,538,2.84,539,2.84,540,2.84,541,2.84,542,2.84,543,2.84,544,2.84,545,2.84,546,2.84,547,2.84,548,2.84,549,2.84,550,2.259,551,4.33,552,4.33,553,3.795,554,2.84,555,2.84,556,2.84,557,2.84,558,2.259,559,1.283,560,4.33,561,2.84,562,2.84,563,4.33,564,2.84,565,2.84,566,2.84,567,2.84,568,2.84,569,2.84,570,2.84,571,2.84,572,2.84,573,2.84,574,2.84,575,2.84,576,2.84]],["title/components/AccordionCommonComponent.html",[178,0.147,577,1]],["body/components/AccordionCommonComponent.html",[0,0.019,3,0.168,4,0.197,5,0.128,8,0.907,13,1.182,14,1.113,19,0.197,20,0.727,23,0.836,29,0.899,32,0.677,35,0.011,36,0.565,37,0.286,39,1.015,42,1.451,51,0.864,52,0.836,53,1.113,60,1.18,64,1.493,65,0.62,72,1.182,73,0.731,79,0.494,90,0.238,91,2.122,92,0.407,95,0.219,110,0.006,111,0.008,112,0.006,117,0.808,118,1.479,123,1.094,125,1.613,144,1.147,170,0.731,172,0.994,178,0.243,212,0.708,334,1.942,353,1.254,364,1.082,387,1.113,413,1.18,495,1.082,534,1.493,577,1.76,578,1.214,579,1.25,580,4.269,581,7.058,582,0.991,583,1.3,584,6.346,585,1.182,586,6.346,587,1.182,588,6.346,589,7.755,590,7.058,591,4.739,592,4.871,593,4.871,594,4.871,595,4.871,596,4.353,597,6.346,598,4.871,599,2.375,600,2.284,601,1.18,602,1.582,603,1.976,604,1.287,605,1.287,606,1.051,607,1.287,608,1.113,609,1.287,610,1.113,611,1.287,612,1.146,613,1.287,614,1.146,615,1.287,616,1.146,617,1.287,618,1.146,619,1.214,620,1.287,621,1.146,622,1.677,623,1.146,624,1.214,625,1.287,626,1.146,627,1.287,628,1.146,629,1.287,630,1.113,631,1.287,632,1.287,633,1.113,634,1.287,635,1.146,636,1.287,637,1.113,638,1.287,639,1.146,640,1.865,641,1.146,642,1.082,643,1.082,644,1.677,645,1.146,646,1.18,647,1.287,648,1.113,649,1.287,650,1.146,651,1.287,652,1.146,653,1.287,654,1.082,655,1.287,656,1.113,657,1.287,658,1.146,659,1.25,660,1.287,661,1.113,662,1.051,663,1.287,664,1.113,665,1.287,666,1.082,667,1.287,668,1.113,669,1.214,670,1.146,671,1.287,672,1.18,673,1.287,674,1.146,675,1.287,676,1.113,677,1.287,678,1.146,679,1.214,680,1.146,681,1.113,682,1.25,683,0.934,684,1.113,685,1.287,686,1.113,687,1.287,688,1.113,689,1.287,690,1.113,691,1.287,692,1.113,693,1.287,694,1.113,695,1.287,696,1.113,697,1.287,698,1.113,699,1.214,700,1.287]],["title/interfaces/AddrLabelList.html",[11,0.56,701,2.916]],["body/interfaces/AddrLabelList.html",[0,0.012,3,0.105,4,0.124,5,0.061,9,1.321,10,1.091,11,0.723,16,1.679,19,0.124,20,0.525,21,1.057,29,0.39,35,0.012,36,0.245,37,0.287,38,0.818,39,1.286,44,2.02,51,0.624,52,1.041,53,1.399,55,1.553,67,1.057,73,0.824,79,0.575,84,1.491,90,0.266,92,0.256,93,0.587,95,0.21,98,1.204,100,0.935,101,1.777,110,0.004,111,0.006,112,0.004,115,0.66,116,1.047,117,0.39,118,0.959,119,1.633,121,0.994,122,1.025,125,0.66,131,1.091,141,0.936,146,1.025,148,1.488,149,1.025,159,0.964,160,1.382,162,1.286,172,1.132,178,0.21,179,3.141,180,2.536,185,1.925,187,0.994,189,0.994,190,3.141,192,3.354,194,1.694,196,2.098,198,1.201,202,1.332,205,2.842,211,2.148,254,1.163,295,1.382,299,1.62,304,2.23,308,1.957,323,1.694,324,1.401,336,1.025,337,1.444,353,0.431,357,0.832,377,2.247,391,1.694,418,1.435,427,2.798,441,1.36,451,1.332,452,1.553,469,1.126,479,1.777,488,1.332,493,1.553,497,4.021,498,3.706,509,3.543,510,1.62,515,1.777,519,1.332,583,0.445,585,0.57,587,0.57,606,0.988,643,0.679,646,1.109,662,0.988,701,4.18,702,1.057,703,1.534,704,1.534,705,2.247,706,4.792,707,5.189,708,5.189,709,4.027,710,4.819,711,1.078,712,1.368,713,2.536,714,2.156,715,1.799,716,2.148,717,1.057,718,2.536,719,2.247,720,4.141,721,2.247,722,3.543,723,3.181,724,2.098,725,3.141,726,1.975,727,3.723,728,3.354,729,2.956,730,2.247,731,3.934,732,4.476,733,2.098,734,2.247,735,2.433,736,2.433,737,2.433,738,1.491,739,1.777,740,1.869,741,1.62,742,1.332,743,2.426,744,3.641,745,2.798,746,2.098,747,2.433,748,2.433,749,2.247,750,1.975,751,1.659,752,2.433,753,2.48,754,5.646,755,2.247,756,0.489,757,1.975,758,2.247,759,2.247,760,2.66,761,2.433,762,2.247,763,2.433,764,3.977,765,2.247,766,2.433,767,2.247,768,2.098,769,3.641,770,2.433,771,2.433,772,3.641,773,2.956,774,2.433,775,2.433,776,2.433,777,2.433,778,2.433,779,2.156,780,2.574,781,1.975,782,2.842,783,2.433,784,2.433,785,2.433,786,4.18,787,1.777,788,0.857,789,2.247,790,2.433,791,2.433,792,3.641,793,6.045,794,3.641,795,2.956,796,2.23,797,3.641,798,5.936,799,4.364,800,1.553,801,2.247,802,1.975,803,2.433,804,2.433,805,2.433,806,2.433,807,2.433,808,2.433,809,4.846,810,1.286,811,2.433,812,2.433,813,3.641,814,2.798,815,1.62,816,3.641,817,5.189,818,5.446,819,5.189,820,2.433,821,2.433,822,3.641,823,2.433,824,3.641,825,2.798,826,2.433,827,2.247,828,2.433,829,2.433,830,1.694,831,2.433,832,2.433,833,3.543,834,2.433,835,2.433,836,2.433,837,2.378,838,3.363,839,2.956,840,3.641,841,3.641,842,3.641,843,3.641,844,2.433,845,1.126,846,2.433,847,2.433,848,3.765,849,2.098,850,2.433,851,1.202,852,2.433,853,2.433,854,2.433,855,1.975,856,1.694,857,2.433,858,2.433,859,2.433,860,2.098,861,2.234,862,2.433,863,4.846,864,2.433,865,2.433,866,2.433,867,2.433,868,2.433,869,4.031,870,2.098,871,2.433,872,4.18,873,3.641,874,3.141,875,3.641,876,4.364,877,2.098,878,2.433,879,2.433,880,2.098,881,1.869,882,1.869,883,2.098,884,1.694,885,2.433,886,2.433,887,2.433,888,3.363,889,2.433,890,2.433,891,2.247,892,2.433,893,2.247,894,2.068,895,2.433,896,2.433,897,2.247,898,2.433,899,1.777,900,2.433,901,2.247,902,2.247,903,2.433,904,2.433,905,2.433,906,2.433,907,2.433,908,2.433,909,2.433,910,2.433,911,2.433,912,2.433,913,2.433,914,2.433,915,2.433,916,2.098,917,2.433,918,3.641,919,2.433,920,2.433]],["title/classes/Address.html",[0,0.017,720,2.159]],["body/classes/Address.html",[0,0.026,2,1.899,3,0.156,4,0.183,5,0.091,8,0.841,9,1.741,16,2.221,19,0.183,20,0.832,23,0.795,32,0.747,34,0.996,35,0.012,36,0.483,37,0.34,38,0.798,39,1.271,48,4.434,51,0.615,52,0.595,53,0.792,65,0.924,73,0.907,79,0.571,95,0.156,100,0.893,105,1.61,110,0.006,111,0.008,112,0.006,123,1.36,158,2.63,159,1.424,174,2.625,177,2.118,180,3.344,183,2.295,198,0.792,237,2.63,279,4.617,308,1.61,352,5.292,357,1.229,390,3.689,393,4.142,497,3.316,498,3.19,523,3.898,662,1.467,709,3.603,720,4.329,743,4.211,751,1.094,753,2.585,756,0.722,760,4.751,801,4.995,845,2.222,851,2.852,894,2.727,899,3.95,921,3.959,922,3.098,923,2.76,924,6.968,925,6.801,926,5.961,927,6.824,928,4.995,929,6.801,930,5.773,931,7.785,932,6.801,933,4.516,934,4.516,935,7.26,936,6.364,937,4.516,938,4.516,939,4.516,940,4.516,941,4.516,942,4.516,943,6.037,944,6.424,945,6.364,946,3.689,947,4.801,948,4.801,949,4.516,950,4.516,951,5.292,952,4.516,953,4.516,954,6.037,955,6.037,956,4.516,957,5.292,958,4.801,959,4.434,960,6.037,961,6.037,962,4.434,963,6.037,964,6.037,965,5.292,966,6.037,967,6.037,968,6.037,969,3.689,970,4.516,971,4.516,972,4.516,973,4.516,974,4.516,975,4.516,976,3.507,977,4.516,978,4.516,979,4.516,980,7.566,981,5.961,982,2.916,983,5.292,984,4.801,985,6.801,986,4.516,987,4.516,988,4.516,989,4.516,990,4.516,991,4.516,992,4.516,993,4.516,994,4.516,995,4.516,996,4.516,997,4.516,998,4.516]],["title/classes/Base.html",[0,0.017,116,0.972]],["body/classes/Base.html",[0,0.033,2,2.658,3,0.218,4,0.256,5,0.127,8,1.177,19,0.256,20,0.855,29,1.011,32,0.651,35,0.011,37,0.256,51,0.861,52,0.833,79,0.493,90,0.237,95,0.218,110,0.008,111,0.01,112,0.008,116,1.875,123,1.23,124,2.743,137,2.283,140,2.5,141,2.283,142,2.424,143,2.66,144,1.482,279,4.333,287,4.133,288,3.348,923,4.559,999,5.54,1000,7.461,1001,4.133,1002,4.333,1003,3.638,1004,4.133,1005,7.461]],["title/components/ButtonComponent.html",[178,0.147,608,0.972]],["body/components/ButtonComponent.html",[0,0.023,3,0.147,4,0.172,5,0.117,8,0.793,13,1.081,14,0.974,17,2.83,19,0.172,20,0.665,21,2.281,23,0.765,29,0.841,32,0.696,34,0.703,35,0.012,36,0.567,37,0.3,38,0.437,39,0.928,42,1.327,44,2.429,45,1.619,51,1.101,52,0.87,53,1.018,60,1.032,64,2.015,65,0.739,72,1.081,73,0.871,79,0.384,85,3.371,90,0.217,91,1.855,92,0.356,93,0.817,95,0.2,110,0.005,111,0.007,112,0.005,117,0.739,118,1.383,125,1.529,133,2.203,144,1.049,170,0.871,172,0.998,174,1.886,178,0.27,212,0.619,269,1.791,324,1.776,334,1.776,337,1.83,353,1.246,364,0.946,387,0.974,413,1.032,475,2.785,482,3.129,495,0.946,519,2.528,522,3.074,534,1.366,550,3.387,577,1.002,578,1.062,579,1.093,582,0.867,583,1.293,585,1.081,587,1.081,600,2.722,601,1.032,602,1.447,603,1.873,604,1.125,605,1.125,606,0.919,607,1.125,608,1.62,609,1.125,610,0.974,611,1.125,612,1.002,613,1.125,614,1.002,615,1.125,616,1.002,617,1.125,618,1.002,619,1.062,620,1.125,621,1.002,622,1.533,623,1.002,624,1.062,625,1.125,626,1.002,627,1.125,628,1.002,629,1.125,630,0.974,631,1.125,632,1.125,633,0.974,634,1.125,635,1.002,636,1.125,637,0.974,638,1.125,639,1.002,640,1.744,641,1.002,642,0.946,643,0.946,644,1.533,645,1.002,646,1.032,647,1.125,648,0.974,649,1.125,650,1.002,651,1.125,652,1.002,653,1.125,654,0.946,655,1.125,656,0.974,657,1.125,658,1.002,659,1.093,660,1.125,661,0.974,662,0.919,663,1.125,664,0.974,665,1.125,666,0.946,667,1.125,668,0.974,669,1.062,670,1.002,671,1.125,672,1.032,673,1.125,674,1.002,675,1.125,676,0.974,677,1.125,678,1.002,679,1.062,680,1.002,681,0.974,682,1.093,683,0.817,684,0.974,685,1.125,686,0.974,687,1.125,688,0.974,689,1.125,690,0.974,691,1.125,692,0.974,693,1.125,694,0.974,695,1.125,696,0.974,697,1.125,698,0.974,699,1.062,700,1.125,711,1.366,712,1.767,714,2.593,715,2.593,716,1.998,733,3.981,742,2.528,756,0.681,1006,3.734,1007,4.528,1008,4.263,1009,5.803,1010,4.263,1011,3.747,1012,5.803,1013,5.803,1014,5.803,1015,5.803,1016,5.803,1017,5.087,1018,4.615,1019,3.926,1020,4.615,1021,3.371,1022,5.087,1023,4.615,1024,5.803,1025,5.087,1026,5.087,1027,5.087,1028,6.601,1029,2.005,1030,5.249,1031,5.803,1032,7.088,1033,4.615,1034,4.259,1035,4.259,1036,4.259,1037,4.259,1038,4.259,1039,5.087,1040,4.259,1041,1.427,1042,4.528,1043,5.803,1044,6.708,1045,3.734]],["title/components/ButtonGroupComponent.html",[178,0.147,610,0.972]],["body/components/ButtonGroupComponent.html",[0,0.015,3,0.132,4,0.156,5,0.109,8,0.715,13,1.006,14,0.878,16,1.653,19,0.156,20,0.619,21,2.16,23,0.712,29,0.796,32,0.732,34,1.119,35,0.012,36,0.609,37,0.331,38,0.695,39,1.243,42,1.235,44,2.3,45,1.46,51,1.076,52,1.041,53,1.189,58,1.731,60,0.931,64,1.829,65,0.91,72,1.006,73,1.167,79,0.448,90,0.202,91,1.674,92,0.321,93,0.737,95,0.186,98,1.34,110,0.005,111,0.007,112,0.005,117,0.688,118,0.805,119,2.228,121,2.031,122,2.094,123,1.149,126,2.195,127,2.195,131,1.926,133,2.123,144,0.977,146,1.81,148,2.204,149,1.81,164,2.123,170,0.577,172,1.072,178,0.216,185,1.615,187,1.248,189,2.031,202,2.354,212,0.559,308,2.228,324,2.075,332,2.272,334,1.653,336,1.81,337,2.138,353,1.239,357,1.47,364,0.853,387,0.878,405,3.707,413,0.931,495,0.853,534,1.272,577,0.904,578,0.958,579,0.986,582,0.782,583,1.287,585,1.006,587,1.006,601,0.931,602,1.347,603,1.792,604,1.015,605,1.015,606,0.829,607,1.015,608,0.878,609,1.015,610,1.777,611,1.015,612,0.904,613,1.015,614,0.904,615,1.015,616,0.904,617,1.015,618,0.904,619,0.958,620,1.015,621,0.904,622,1.428,623,0.904,624,0.958,625,1.015,626,0.904,627,1.015,628,0.904,629,1.015,630,0.878,631,1.015,632,1.015,633,0.878,634,1.015,635,0.904,636,1.015,637,0.878,638,1.015,639,0.904,640,1.651,641,0.904,642,0.853,643,0.853,644,1.428,645,0.904,646,0.931,647,1.015,648,0.878,649,1.015,650,0.904,651,1.015,652,0.904,653,1.015,654,0.853,655,1.015,656,0.878,657,1.015,658,0.904,659,0.986,660,1.015,661,0.878,662,0.829,663,1.015,664,0.878,665,1.015,666,1.388,667,1.015,668,0.878,669,0.958,670,0.904,671,1.015,672,0.931,673,1.015,674,0.904,675,1.015,676,0.878,677,1.015,678,0.904,679,0.958,680,0.904,681,0.878,682,0.986,683,0.737,684,0.878,685,1.015,686,0.878,687,1.015,688,0.878,689,1.015,690,0.878,691,1.015,692,0.878,693,1.015,694,0.878,695,1.015,696,0.878,697,1.015,698,0.878,699,0.958,700,1.015,711,1.272,712,1.691,714,2.807,715,2.455,716,2.931,742,2.354,753,1.46,756,0.614,969,4.144,1008,3.969,1029,1.867,1042,4.288,1046,7.385,1047,6.699,1048,3.368,1049,4.288,1050,4.736,1051,4.736,1052,4.297,1053,4.736,1054,4.297,1055,2.441,1056,4.297,1057,5.403,1058,5.403,1059,6.25,1060,5.403,1061,6.264,1062,4.035,1063,4.97,1064,5.403,1065,3.842,1066,3.842,1067,3.842,1068,3.842,1069,3.842,1070,3.842,1071,3.842,1072,3.842,1073,3.842,1074,3.842,1075,5.403,1076,3.842,1077,3.842,1078,3.842,1079,5.403,1080,3.842,1081,3.842,1082,3.055,1083,3.842,1084,3.368,1085,5.403]],["title/injectables/CaptchaDataService.html",[316,1.67,1086,2.745]],["body/injectables/CaptchaDataService.html",[0,0.026,3,0.177,4,0.208,5,0.103,19,0.208,23,0.864,29,0.653,32,0.666,34,1.258,35,0.012,36,0.61,37,0.309,38,0.782,50,4.939,65,0.921,79,0.59,89,2.716,90,0.286,92,0.429,95,0.226,100,0.992,110,0.007,111,0.008,112,0.007,123,1.299,198,0.899,229,4.007,235,4.67,240,4.682,258,4.396,266,3.133,282,2.84,283,2.405,316,2.842,318,2.978,861,1.569,1086,4.235,1087,6.267,1088,4.077,1089,6.56,1090,6.56,1091,6.56,1092,5.127,1093,5.127,1094,6.34,1095,6.908,1096,5.127,1097,6.411,1098,6.34,1099,6.923,1100,5.127,1101,6.34,1102,7.274,1103,7.066,1104,5.127,1105,4.494,1106,4.039,1107,3.766,1108,6.34,1109,3.31,1110,3.766,1111,4.962,1112,4.494,1113,3.517,1114,6.34,1115,6.34,1116,5.75,1117,4.494,1118,5.75,1119,6.34]],["title/modules/CaptchaModule.html",[1120,2.598,1121,2.745]],["body/modules/CaptchaModule.html",[0,0.022,3,0.193,4,0.227,5,0.113,23,0.739,32,0.49,35,0.012,65,0.714,90,0.319,92,0.469,93,1.076,95,0.193,100,0.69,110,0.007,111,0.009,112,0.007,155,2.534,178,0.193,230,3.136,282,3.107,287,3.107,323,4.484,334,1.717,336,2.763,353,0.977,357,1.888,358,3.845,464,5.52,475,2.204,533,3.428,600,2.631,601,1.359,612,2.037,703,1.879,704,1.879,734,5.099,751,1.359,851,2.204,928,5.099,1003,2.735,1086,5.397,1097,4.461,1099,4.461,1111,5.171,1120,4.606,1121,5.627,1122,3.428,1123,5.553,1124,5.995,1125,4.917,1126,4.917,1127,4.917,1128,4.917,1129,5.52,1130,4.12,1131,5.61,1132,7.538,1133,5.61,1134,7.538,1135,6.085,1136,5.171,1137,5.61,1138,4.917,1139,5.61,1140,4.917,1141,5.61,1142,3.848,1143,5.61,1144,4.917,1145,6.085,1146,5.61,1147,4.917,1148,6.085,1149,4.461]],["title/injectables/CheckCompleteBaseService.html",[316,1.67,1150,3.123]],["body/injectables/CheckCompleteBaseService.html",[0,0.028,3,0.137,4,0.161,5,0.08,8,0.741,9,1.148,11,0.73,12,1.419,16,1.695,17,2.701,19,0.293,20,0.635,23,0.73,26,2.576,29,0.705,30,2.731,31,4.58,32,0.732,34,1.194,35,0.012,36,0.579,37,0.318,38,0.742,39,1.341,51,0.868,52,0.907,53,1.208,65,1.047,72,1.483,73,1.126,79,0.554,84,3.53,88,3.933,90,0.239,92,0.333,94,2.021,95,0.191,98,1.361,100,0.965,105,2.271,110,0.005,111,0.007,112,0.005,117,0.507,123,1.339,174,1.294,193,3.576,198,1.208,205,2.413,230,2.502,237,2.413,316,2.176,317,3.576,318,2.312,319,2.731,321,4.209,322,3.217,332,2.679,333,3.893,334,1.218,339,5.477,340,5.477,341,5.066,342,5.477,345,3.489,357,1.507,390,5.191,391,3.068,426,3.23,441,1.645,475,2.176,477,3.7,522,2.934,559,1.798,751,1.342,825,4.209,851,2.176,861,2.294,883,3.8,884,3.815,923,3.385,930,5.961,1150,4.068,1151,6.7,1152,3.166,1153,4.855,1154,4.068,1155,3.576,1156,5.584,1157,5.584,1158,5.584,1159,5.584,1160,6.037,1161,5.477,1162,5.477,1163,5.584,1164,5.584,1165,5.539,1166,3.981,1167,3.981,1168,3.981,1169,3.981,1170,3.893,1171,2.503,1172,3.576,1173,3.981,1174,4.855,1175,5.059,1176,3.981,1177,4.855,1178,4.068,1179,5.505,1180,3.981,1181,3.981,1182,4.855,1183,3.981,1184,4.855,1185,4.855,1186,4.068,1187,3.981,1188,4.855,1189,4.855,1190,3.981,1191,4.679,1192,3.981,1193,3.981,1194,3.981,1195,3.981,1196,3.981,1197,5.584,1198,3.166,1199,3.489,1200,3.489,1201,2.924,1202,3.489,1203,3.489,1204,3.489,1205,2.432,1206,2.432,1207,4.855,1208,4.855,1209,5.584,1210,6.346,1211,5.584,1212,4.855,1213,4.405,1214,4.405,1215,3.8,1216,4.855,1217,3.489,1218,3.489,1219,3.489,1220,3.489,1221,2.924,1222,3.489,1223,3.489,1224,3.489,1225,3.489,1226,3.489,1227,3.489,1228,3.489,1229,3.489,1230,3.489,1231,3.489]],["title/components/CheckboxComponent.html",[178,0.147,614,1]],["body/components/CheckboxComponent.html",[0,0.014,3,0.128,4,0.151,5,0.106,8,0.694,9,1.525,10,1.328,13,1.144,14,0.851,19,0.151,20,0.606,21,2.123,23,0.696,29,0.673,32,0.741,34,1.165,35,0.012,36,0.617,37,0.338,38,0.774,39,1.287,42,1.208,44,2.262,45,2.009,51,1.083,52,1.048,53,1.287,58,1.62,60,0.902,64,1.244,65,0.934,72,0.984,73,1.178,79,0.499,90,0.23,91,1.622,92,0.311,93,0.714,95,0.182,110,0.005,111,0.007,112,0.005,115,1.14,116,1.529,117,0.673,118,1.288,119,2.191,121,1.997,122,2.059,123,1.247,124,1.826,125,1.443,126,2.148,127,2.148,131,1.885,133,2.098,137,1.14,138,1.248,139,1.371,140,1.248,141,1.14,142,1.21,143,1.328,144,1.111,146,1.771,148,2.173,149,1.771,152,2.775,156,2.077,164,2.077,170,0.559,172,1.104,178,0.244,183,2.009,185,1.566,187,1.21,189,1.718,191,1.14,200,2.555,212,0.542,308,2.518,324,1.617,334,1.617,337,1.667,353,1.237,357,1.819,362,3.882,364,0.827,387,0.851,405,5.52,413,0.902,495,0.827,522,1.973,534,1.244,577,0.876,578,0.929,579,0.956,582,0.758,583,1.285,585,0.984,587,0.984,601,0.902,602,1.318,603,1.767,604,0.984,605,0.984,606,0.803,607,0.984,608,0.851,609,0.984,610,0.851,611,0.984,612,0.876,613,0.984,614,1.574,615,0.984,616,0.876,617,0.984,618,0.876,619,0.929,620,0.984,621,0.876,622,1.397,623,0.876,624,0.929,625,0.984,626,0.876,627,0.984,628,0.876,629,0.984,630,0.851,631,0.984,632,0.984,633,0.851,634,0.984,635,0.876,636,0.984,637,0.851,638,0.984,639,0.876,640,1.624,641,0.876,642,0.827,643,0.827,644,1.397,645,0.876,646,0.902,647,0.984,648,0.851,649,0.984,650,0.876,651,0.984,652,0.876,653,0.984,654,0.827,655,0.984,656,0.851,657,0.984,658,0.876,659,0.956,660,0.984,661,0.851,662,0.803,663,0.984,664,0.851,665,0.984,666,0.827,667,0.984,668,0.851,669,0.929,670,0.876,671,0.984,672,0.902,673,0.984,674,0.876,675,0.984,676,0.851,677,0.984,678,0.876,679,0.929,680,0.876,681,0.851,682,0.956,683,0.714,684,0.851,685,0.984,686,0.851,687,0.984,688,0.851,689,0.984,690,0.851,691,0.984,692,0.851,693,0.984,694,0.851,695,0.984,696,0.851,697,0.984,698,0.851,699,0.929,700,0.984,711,1.244,712,1.668,714,2.414,715,2.414,716,1.747,717,1.287,742,2.303,756,0.596,788,1.043,845,1.945,969,4.087,976,3.07,1029,1.826,1041,1.771,1042,4.215,1061,5.386,1062,3.967,1063,4.887,1084,4.633,1232,3.264,1233,5.286,1234,5.286,1235,3.077,1236,7.546,1237,5.286,1238,1.816,1239,5.286,1240,3.724,1241,5.286,1242,3.882,1243,3.23,1244,3.724,1245,3.724,1246,3.724,1247,3.724,1248,3.724,1249,3.724,1250,3.724,1251,3.724,1252,3.724,1253,3.724,1254,5.286,1255,3.724,1256,3.724,1257,3.724,1258,5.286,1259,3.724,1260,1.816,1261,3.724,1262,3.724,1263,2.735,1264,1.622,1265,5.286,1266,5.286,1267,3.724,1268,3.724,1269,3.724]],["title/components/CityComponent.html",[178,0.147,616,1]],["body/components/CityComponent.html",[0,0.012,3,0.111,4,0.13,5,0.095,8,0.598,12,2.226,13,1.052,14,0.735,19,0.13,20,0.544,21,1.641,23,0.626,26,2.092,29,0.605,32,0.75,34,1.269,35,0.012,36,0.649,37,0.343,38,0.81,39,0.904,42,1.086,45,1.222,51,1.063,52,1.123,53,0.564,58,1.512,60,0.779,64,1.118,65,1.006,72,0.885,73,1.198,79,0.556,90,0.234,92,0.269,93,0.617,95,0.111,100,0.395,110,0.004,111,0.006,112,0.004,113,3.983,115,1.025,116,0.735,117,0.605,118,1.184,119,2.015,120,3.529,121,1.544,122,1.592,123,1.032,124,1.641,125,1.556,126,1.93,127,1.93,128,2.759,129,2.516,130,2.994,131,2.375,132,2.931,133,2.143,137,0.983,138,2.697,139,1.183,140,1.077,141,0.983,142,1.044,143,1.146,144,1.021,146,1.077,148,2.029,149,1.077,151,1.867,152,2.91,153,2.228,155,1.452,156,2.453,157,2.631,158,1.4,159,1.013,160,1.452,162,1.351,164,1.866,170,0.713,171,1.632,172,0.982,178,0.195,187,1.044,189,1.044,191,0.983,212,0.467,237,2.069,295,1.452,353,1.225,364,0.714,387,0.735,413,0.779,495,0.714,514,2.994,534,1.118,577,0.756,578,0.801,579,0.825,582,0.654,583,1.275,585,0.885,587,0.885,601,0.779,602,1.185,603,1.65,604,0.849,605,0.849,606,0.693,607,0.849,608,0.735,609,0.849,610,0.735,611,0.849,612,0.756,613,0.849,614,0.756,615,0.849,616,1.469,617,0.849,618,0.756,619,0.801,620,0.849,621,0.756,622,1.255,623,0.756,624,0.801,625,0.849,626,0.756,627,0.849,628,0.756,629,0.849,630,0.735,631,0.849,632,0.849,633,0.735,634,0.849,635,0.756,636,0.849,637,0.735,638,0.849,639,0.756,640,1.493,641,0.756,642,0.714,643,0.714,644,1.255,645,0.756,646,0.779,647,0.849,648,0.735,649,0.849,650,0.756,651,0.849,652,0.756,653,0.849,654,0.714,655,0.849,656,0.735,657,0.849,658,0.756,659,0.825,660,0.849,661,0.735,662,0.693,663,0.849,664,0.735,665,0.849,666,0.714,667,0.849,668,0.735,669,0.801,670,0.756,671,0.849,672,0.779,673,0.849,674,0.756,675,0.849,676,0.735,677,0.849,678,0.756,679,0.801,680,0.756,681,0.735,682,0.825,683,0.617,684,0.735,685,0.849,686,0.735,687,0.849,688,0.735,689,0.849,690,0.735,691,0.849,692,0.735,693,0.849,694,0.735,695,0.849,696,0.735,697,0.849,698,0.735,699,0.801,700,0.849,703,1.592,704,1.592,709,4.006,711,1.33,712,1.799,751,0.779,753,2.373,756,0.76,788,0.9,810,1.998,981,5.472,1021,2.759,1029,1.641,1041,2.092,1235,2.902,1238,1.567,1260,1.567,1264,1.4,1270,2.817,1271,4.751,1272,4.751,1273,2.994,1274,3.13,1275,3.282,1276,2.994,1277,3.453,1278,2.755,1279,3.214,1280,3.214,1281,4.751,1282,2.412,1283,3.214,1284,3.067,1285,3.214,1286,3.214,1287,4.751,1288,1.964,1289,1.964,1290,1.964,1291,3.214,1292,3.214,1293,3.214,1294,2.075,1295,3.214,1296,1.964,1297,3.214,1298,3.214,1299,1.964,1300,1.964,1301,1.964,1302,1.964,1303,1.964,1304,1.964,1305,1.964,1306,3.382,1307,2.516,1308,3.067,1309,2.903,1310,2.069,1311,3.778,1312,3.067,1313,2.72,1314,3.259,1315,3.259,1316,3.259,1317,3.214,1318,3.214,1319,3.214,1320,1.964,1321,1.964,1322,1.964,1323,1.78,1324,3.214,1325,1.78,1326,1.306,1327,1.93,1328,1.306,1329,1.93,1330,1.93,1331,1.93,1332,1.306,1333,1.306,1334,1.93,1335,1.93,1336,1.306,1337,1.306,1338,1.306,1339,1.306,1340,1.306,1341,1.93,1342,1.866,1343,1.306,1344,1.93,1345,1.93,1346,1.306,1347,1.93,1348,1.306,1349,1.306,1350,1.306,1351,1.306,1352,2.536,1353,1.306,1354,1.306,1355,1.306,1356,1.306,1357,1.306,1358,1.306,1359,1.306,1360,1.306,1361,1.306,1362,1.306,1363,1.306,1364,1.306,1365,1.306,1366,1.306,1367,1.306,1368,1.306,1369,1.93,1370,1.306,1371,1.306,1372,1.306,1373,1.306,1374,1.306,1375,1.306,1376,1.306,1377,1.306,1378,1.306,1379,1.306,1380,1.306,1381,1.306,1382,1.306,1383,1.93,1384,1.306,1385,1.306,1386,1.306,1387,1.306,1388,1.306,1389,1.077,1390,1.306,1391,1.306,1392,1.306,1393,1.306,1394,1.306,1395,1.306,1396,1.306,1397,1.306,1398,1.78,1399,1.702,1400,1.78,1401,1.78,1402,2.075,1403,2.903,1404,4.164]],["title/classes/CommonImage.html",[0,0.017,1405,2.355]],["body/classes/CommonImage.html",[0,0.028,2,2.21,3,0.181,4,0.213,5,0.155,8,0.979,11,0.692,19,0.213,20,0.764,26,1.761,29,0.932,32,0.752,35,0.012,36,0.586,37,0.347,38,0.683,51,0.716,52,0.692,67,2.303,79,0.574,90,0.197,95,0.274,100,0.647,105,2.376,110,0.007,111,0.009,112,0.007,117,0.669,123,0.815,137,1.608,170,1.192,176,2.465,183,1.998,215,3.053,287,4.399,288,2.784,356,3.212,426,2.465,441,2.598,469,1.935,745,3.212,756,0.841,1389,2.452,1405,4.263,1406,3.394,1407,4.472,1408,4.572,1409,5.375,1410,5.375,1411,5.375,1412,5.375,1413,5.375,1414,4.472,1415,5.375,1416,5.375,1417,6.665,1418,5.256,1419,5.256,1420,4.702,1421,5.256,1422,5.256,1423,5.256,1424,5.256,1425,5.256,1426,5.256,1427,5.256,1428,5.256,1429,5.256,1430,3.394,1431,3.692,1432,3.212,1433,3.394,1434,3.606,1435,3.606,1436,3.606,1437,3.606,1438,3.394,1439,3.606,1440,3.606,1441,3.606,1442,3.212,1443,3.861,1444,3.861,1445,3.861,1446,3.861,1447,3.861,1448,2.465,1449,3.394,1450,3.394,1451,3.861,1452,3.394,1453,3.861,1454,3.861,1455,3.606,1456,3.606,1457,3.861,1458,3.606,1459,3.861,1460,3.861,1461,4.702,1462,4.895,1463,4.895,1464,4.895,1465,3.871,1466,3.861,1467,4.895,1468,4.895,1469,3.861,1470,4.895,1471,4.572]],["title/classes/CommonImageProcessingError.html",[0,0.017,1442,2.598]],["body/classes/CommonImageProcessingError.html",[0,0.029,2,2.28,3,0.187,4,0.22,5,0.161,11,0.714,19,0.22,20,0.779,26,1.817,29,0.865,32,0.714,34,0.894,35,0.012,36,0.544,37,0.331,38,0.868,67,1.874,79,0.567,89,2.872,90,0.203,95,0.276,100,0.667,105,1.933,110,0.007,111,0.009,112,0.007,117,0.69,123,1.242,137,1.659,170,1.115,176,2.543,183,2.061,215,3.149,287,4.112,288,2.872,356,3.313,426,2.543,441,2.587,469,1.996,745,3.313,756,0.867,1389,1.817,1405,4.53,1406,3.501,1407,4.153,1408,3.72,1409,3.983,1410,3.983,1411,3.983,1412,3.983,1413,3.983,1414,3.313,1415,3.983,1416,3.983,1420,4.997,1430,3.501,1431,3.765,1432,3.313,1433,3.501,1434,3.72,1435,3.72,1436,3.72,1437,3.72,1438,3.501,1439,3.72,1440,3.72,1441,3.72,1442,4.153,1443,5.452,1444,5.452,1445,3.983,1446,3.983,1447,3.983,1448,2.543,1449,3.501,1450,3.501,1451,3.983,1452,3.501,1453,3.983,1454,3.983,1455,5.339,1456,5.498,1457,3.983,1458,3.72,1459,3.983,1460,3.983,1461,4.755,1462,4.992,1463,4.992,1464,4.992,1465,3.947,1466,3.983,1467,4.992,1468,4.992,1469,3.983,1470,4.992,1471,4.662,1472,5.422,1473,6.796,1474,5.422,1475,6.796,1476,5.422]],["title/interfaces/CommonImageScaleFactors.html",[11,0.56,1461,2.598]],["body/interfaces/CommonImageScaleFactors.html",[0,0.029,3,0.193,4,0.226,5,0.158,11,0.736,19,0.226,20,0.794,23,0.912,26,1.872,29,0.712,32,0.488,34,0.922,35,0.012,36,0.554,37,0.305,38,0.573,65,0.712,67,1.931,79,0.558,90,0.209,95,0.279,100,0.688,105,1.992,110,0.007,111,0.009,112,0.007,117,0.712,123,0.866,137,1.71,170,1.13,176,2.621,183,2.124,215,3.246,287,4.168,288,2.96,356,3.415,426,2.621,441,2.622,469,2.057,702,1.931,745,3.415,756,0.894,1389,1.872,1405,4.168,1406,3.608,1407,4.232,1408,3.834,1409,4.105,1410,4.105,1411,4.105,1412,4.105,1413,4.105,1414,3.415,1415,4.105,1416,4.105,1420,4.598,1430,3.608,1431,3.836,1432,3.415,1433,3.608,1434,3.834,1435,3.834,1436,3.834,1437,3.834,1438,3.608,1439,3.834,1440,3.834,1441,3.834,1442,3.415,1443,4.105,1444,4.105,1445,4.105,1446,4.105,1447,4.105,1448,2.621,1449,3.608,1450,3.608,1451,4.105,1452,3.608,1453,4.105,1454,4.105,1455,3.834,1456,3.834,1457,4.105,1458,3.834,1459,4.105,1460,4.105,1461,5.035,1462,5.939,1463,5.939,1464,5.527,1465,4.022,1466,4.105,1467,5.087,1468,5.087,1469,4.105,1470,5.087,1471,5.162,1477,6.07,1478,5.588]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.017,1465,2.469]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.029,2,2.31,3,0.189,4,0.222,5,0.157,11,0.724,19,0.222,20,0.785,23,0.903,26,1.841,29,0.873,32,0.683,34,1.13,35,0.012,36,0.598,37,0.317,38,0.703,65,0.7,67,1.898,79,0.556,90,0.206,95,0.277,100,0.676,105,1.959,110,0.007,111,0.009,112,0.007,117,0.873,123,0.851,137,1.681,170,1.121,176,2.577,183,2.088,215,3.191,287,4.136,288,2.91,356,3.357,426,2.577,441,2.626,469,2.022,745,3.357,756,0.879,1389,1.841,1405,4.136,1406,3.547,1407,4.187,1408,3.769,1409,4.035,1410,4.035,1411,4.035,1412,4.035,1413,4.035,1414,3.357,1415,4.035,1416,4.035,1420,4.563,1430,3.547,1431,3.796,1432,3.357,1433,3.547,1434,3.769,1435,3.769,1436,3.769,1437,3.769,1438,3.547,1439,3.769,1440,3.769,1441,3.769,1442,3.357,1443,4.035,1444,4.035,1445,4.035,1446,4.035,1447,4.035,1448,2.577,1449,3.547,1450,3.547,1451,4.035,1452,3.547,1453,4.035,1454,4.035,1455,3.769,1456,3.769,1457,4.035,1458,3.769,1459,4.035,1460,4.035,1461,5.013,1462,5.743,1463,5.743,1464,5.485,1465,4.337,1466,5.033,1467,5.743,1468,5.033,1469,5.033,1470,5.033,1471,5.123,1477,6.006,1479,6.852,1480,5.494,1481,5.494]],["title/interfaces/CommonLogMessage.html",[11,0.56,1482,3.123]],["body/interfaces/CommonLogMessage.html",[0,0.016,3,0.226,4,0.17,5,0.084,9,1.21,11,0.757,12,1.496,16,1.284,19,0.17,20,0.658,26,2.472,32,0.366,35,0.012,36,0.524,37,0.285,38,0.43,58,1.787,79,0.544,85,2.437,88,2.8,90,0.276,92,0.351,95,0.226,96,2.563,100,0.991,110,0.005,111,0.007,112,0.005,115,0.905,123,1.015,132,2.333,138,1.405,158,1.827,170,1.236,172,0.591,177,1.967,180,2.324,181,2.878,195,3.94,198,1.148,209,3.336,211,2.694,225,3.181,227,2.046,229,3.628,230,2.594,231,2.563,234,2.878,235,3.708,238,4.567,240,3.336,242,4.228,244,4.832,245,4.81,252,3.51,254,2.183,259,2.563,260,4.228,264,2.708,266,2.563,268,2.878,269,1.764,273,3.94,279,3.804,282,2.324,283,1.967,308,2.048,311,5.595,316,2.256,334,1.284,393,2.878,418,2.694,451,1.827,467,2.437,475,1.648,494,2.8,510,2.222,516,2.878,559,2.594,702,1.45,743,2.222,751,1.889,756,0.919,782,3.068,837,1.924,845,1.544,851,1.648,855,2.708,856,2.324,861,2.257,881,2.563,958,4.567,962,3.081,1004,3.628,1011,2.708,1020,3.336,1041,2.757,1106,3.731,1109,3.708,1205,2.563,1206,2.563,1243,2.563,1310,1.827,1389,1.924,1430,2.708,1431,3.181,1452,4.228,1482,5.729,1483,3.081,1484,3.336,1485,4.195,1486,5.034,1487,2.878,1488,4.219,1489,4.567,1490,3.081,1491,4.567,1492,5.208,1493,3.677,1494,2.708,1495,3.677,1496,3.677,1497,2.708,1498,3.336,1499,4.567,1500,3.677,1501,6.466,1502,3.677,1503,5.034,1504,5.034,1505,6.174,1506,5.034,1507,2.878,1508,5.034,1509,5.034,1510,5.034,1511,3.677,1512,5.034,1513,3.677,1514,4.493,1515,4.462,1516,3.677,1517,3.677,1518,5.034,1519,5.208,1520,4.567,1521,5.208,1522,2.563,1523,4.567,1524,3.081,1525,3.336,1526,3.677,1527,3.51,1528,3.677,1529,3.677,1530,3.677,1531,3.677,1532,3.677,1533,3.677,1534,3.677,1535,3.677,1536,2.324,1537,3.677,1538,3.708,1539,3.677,1540,3.677,1541,3.677,1542,3.677,1543,3.677,1544,3.677,1545,3.677,1546,3.677,1547,3.677,1548,3.336,1549,3.081,1550,3.081,1551,3.081,1552,5.034,1553,2.708,1554,3.677,1555,3.677,1556,3.677,1557,3.677,1558,3.336,1559,3.677,1560,3.677,1561,3.677,1562,3.677,1563,3.336,1564,3.336,1565,2.437,1566,3.336,1567,3.081,1568,2.878,1569,3.677,1570,3.336,1571,3.677,1572,3.677,1573,4.567,1574,2.708,1575,3.336,1576,3.081,1577,4.567,1578,3.677,1579,3.336,1580,3.336,1581,3.336,1582,3.677,1583,3.336,1584,3.677,1585,5.034,1586,3.336,1587,3.336,1588,3.336,1589,2.563,1590,3.677,1591,3.677,1592,3.336,1593,3.677,1594,3.677,1595,3.677,1596,3.677,1597,3.677,1598,3.677,1599,3.677,1600,3.677,1601,3.677]],["title/injectables/CommonLogger.html",[316,1.67,1497,2.745]],["body/injectables/CommonLogger.html",[0,0.012,3,0.187,4,0.122,5,0.06,8,1.012,9,0.868,10,1.073,11,0.596,12,2.31,16,1.384,19,0.122,20,0.518,23,0.716,26,2.837,29,0.383,32,0.737,34,1.364,35,0.012,36,0.664,37,0.342,38,0.843,39,0.481,51,0.74,52,0.716,53,0.528,58,1.834,65,1.048,73,1.091,79,0.538,80,3.322,85,2.627,88,3.542,89,1.594,90,0.243,92,0.252,95,0.187,96,1.838,100,0.914,110,0.004,111,0.006,112,0.004,115,0.976,123,1.152,132,2.455,138,2.489,158,1.97,170,1.229,172,0.637,177,2.121,180,2.505,181,2.064,195,2.064,198,0.953,209,3.596,211,2.121,217,2.064,225,4.193,227,1.467,229,3.911,230,2.455,231,3.959,232,3.596,233,3.991,234,4.444,235,4.558,236,3.596,237,1.97,238,5.152,239,2.392,240,3.51,242,4.394,244,4.983,245,4.999,246,2.392,248,2.392,249,3.322,251,4.321,252,3.959,253,3.102,254,2.463,255,1.747,256,2.392,257,2.21,258,3.605,259,3.32,260,4.797,262,2.21,263,2.392,264,3.508,265,2.064,266,3.32,267,2.392,268,3.102,269,2.285,270,2.392,271,2.392,272,2.392,273,4.145,275,2.392,277,2.637,279,3.953,282,1.666,283,1.411,308,2.154,311,4.999,316,1.777,318,1.747,334,1.384,393,3.102,418,2.548,451,1.311,467,2.627,475,1.777,494,2.946,510,1.594,516,2.064,559,1.359,743,2.396,751,1.862,756,0.966,782,2.964,837,1.82,845,1.107,851,1.777,855,2.92,856,2.505,861,2.454,881,2.763,958,4.805,962,3.322,1004,3.01,1011,2.92,1020,3.596,1041,2.576,1106,3.605,1109,2.92,1205,1.838,1206,1.838,1243,1.838,1310,1.97,1389,1.82,1430,2.92,1431,2.505,1452,4.394,1482,5.721,1483,2.21,1486,2.637,1487,2.064,1488,3.322,1489,4.805,1490,2.21,1491,3.596,1492,4.805,1493,2.637,1494,1.942,1495,2.637,1496,2.637,1497,2.92,1498,3.596,1499,4.321,1500,3.964,1501,6.367,1502,3.964,1503,5.297,1504,5.297,1505,6.367,1506,5.297,1507,2.064,1508,3.964,1509,3.964,1510,5.297,1511,3.964,1512,3.964,1513,3.964,1514,4.843,1515,4.405,1516,2.637,1517,4.763,1518,3.964,1519,5.152,1520,4.805,1521,4.805,1522,2.763,1523,4.805,1524,3.322,1525,3.596,1526,3.964,1527,3.692,1528,3.964,1529,3.964,1530,3.964,1531,2.637,1532,2.637,1533,3.964,1534,2.637,1535,2.637,1536,2.505,1537,3.964,1538,3.508,1539,3.964,1540,3.964,1541,3.964,1542,2.637,1543,2.637,1544,2.637,1545,2.637,1546,2.637,1547,2.637,1548,3.596,1549,3.322,1550,3.322,1551,3.322,1552,5.297,1553,2.92,1554,3.964,1555,3.964,1556,2.637,1557,2.637,1558,2.392,1559,2.637,1560,4.763,1561,2.637,1562,2.637,1563,2.392,1564,2.627,1565,1.747,1566,2.392,1567,2.21,1568,2.064,1569,2.637,1570,2.392,1571,2.637,1572,2.637,1573,3.596,1574,1.942,1575,2.392,1576,2.21,1577,3.596,1578,2.637,1579,2.392,1580,2.392,1581,2.392,1582,2.637,1583,2.392,1584,2.637,1585,4.763,1586,3.596,1587,3.596,1588,3.596,1589,2.763,1590,3.964,1591,3.964,1592,2.392,1593,5.297,1594,2.637,1595,2.637,1596,3.964,1597,2.637,1598,3.964,1599,3.964,1600,3.964,1601,2.637,1602,4.522,1603,4.522,1604,4.522,1605,4.522,1606,4.522,1607,4.522,1608,4.522,1609,3.008,1610,3.008,1611,3.008,1612,3.008,1613,3.008,1614,3.008,1615,3.008,1616,3.008,1617,3.008,1618,3.008,1619,3.008,1620,3.008,1621,3.008,1622,2.637,1623,2.637,1624,2.637,1625,2.637,1626,2.637,1627,3.008,1628,2.637,1629,2.637,1630,3.008,1631,3.008,1632,3.008,1633,3.008,1634,3.008,1635,3.008,1636,3.008,1637,3.008,1638,3.008]],["title/components/ConfirmTemplateComponent.html",[178,0.147,618,1]],["body/components/ConfirmTemplateComponent.html",[0,0.019,3,0.165,4,0.193,5,0.126,13,1.166,14,1.598,19,0.193,20,0.718,29,0.89,32,0.69,35,0.011,36,0.56,37,0.254,42,1.432,51,0.853,52,0.825,60,1.157,64,1.474,72,1.166,79,0.316,90,0.235,92,0.399,95,0.216,100,0.86,105,1.702,110,0.006,111,0.008,112,0.006,115,1.351,116,1.697,123,0.971,124,2.164,137,1.461,138,1.6,139,1.757,140,1.6,141,1.461,142,1.552,143,1.702,144,1.263,170,0.941,172,0.882,178,0.241,212,0.694,237,2.729,310,2.918,353,1.253,364,1.06,387,1.092,413,1.157,495,1.06,534,1.474,577,1.124,578,1.191,579,1.226,582,0.972,583,1.299,585,1.166,587,1.166,601,1.157,602,1.562,603,1.961,604,1.262,605,1.262,606,1.03,607,1.262,608,1.092,609,1.262,610,1.092,611,1.262,612,1.124,613,1.262,614,1.124,615,1.262,616,1.124,617,1.262,618,1.746,619,2.01,620,1.262,621,1.124,622,1.655,623,1.124,624,1.191,625,1.262,626,1.124,627,1.262,628,1.124,629,1.262,630,1.092,631,1.262,632,1.262,633,1.092,634,1.262,635,1.124,636,1.262,637,1.092,638,1.262,639,1.124,640,1.847,641,1.124,642,1.06,643,1.06,644,1.655,645,1.124,646,1.157,647,1.262,648,1.092,649,1.262,650,1.124,651,1.262,652,1.124,653,1.262,654,1.06,655,1.262,656,1.092,657,1.262,658,1.124,659,1.226,660,1.262,661,1.092,662,1.03,663,1.262,664,1.092,665,1.262,666,1.06,667,1.262,668,1.092,669,1.191,670,1.124,671,1.262,672,1.157,673,1.262,674,1.124,675,1.262,676,1.092,677,1.262,678,1.124,679,1.191,680,1.124,681,1.092,682,1.226,683,0.916,684,1.092,685,1.262,686,1.092,687,1.262,688,1.092,689,1.262,690,1.092,691,1.262,692,1.092,693,1.262,694,1.092,695,1.262,696,1.092,697,1.262,698,1.092,699,1.191,700,1.262,717,1.65,779,1.876,788,1.337,1171,1.876,1431,2.645,1455,4.796,1639,6.289,1640,5.809,1641,3.797,1642,6.264,1643,6.264,1644,6.991,1645,6.991,1646,6.991,1647,6.264,1648,6.128,1649,6.991,1650,4.775,1651,4.775,1652,4.775,1653,4.775,1654,4.775,1655,4.775,1656,3.797,1657,3.797,1658,4.775,1659,4.775,1660,4.775]],["title/classes/Container.html",[0,0.017,1661,2.598]],["body/classes/Container.html",[0,0.022,2,2.417,3,0.281,4,0.233,5,0.116,8,1.07,11,0.928,19,0.233,20,0.808,23,0.928,26,2.553,32,0.665,34,1.162,35,0.012,36,0.564,37,0.309,38,0.722,65,0.897,67,2.435,73,1.058,79,0.565,84,4.194,90,0.215,94,2.918,95,0.243,100,0.867,110,0.007,111,0.009,112,0.007,116,1.611,174,2.29,205,2.504,269,2.963,354,5.604,422,5.604,479,4.093,591,4.854,679,1.433,680,1.353,796,2.863,870,3.943,1170,4.656,1661,4.854,1662,4.571,1663,6.177,1664,6.177,1665,6.06,1666,7.047,1667,6.68,1668,4.92,1669,5.748,1670,6.177,1671,6.177,1672,5.748,1673,6.177,1674,6.177,1675,5.835,1676,5.748,1677,5.748,1678,5.748,1679,6.177,1680,5.038,1681,5.038,1682,5.038,1683,5.038,1684,5.038,1685,5.038,1686,6.177,1687,5.038]],["title/components/CoreBreadcrumbComponent.html",[178,0.147,623,1]],["body/components/CoreBreadcrumbComponent.html",[0,0.018,3,0.161,4,0.189,5,0.124,8,0.867,9,1.343,13,1.147,14,1.065,16,1.885,19,0.189,23,0.812,29,0.879,32,0.538,35,0.012,36,0.553,38,0.632,49,4.9,60,1.128,64,1.45,65,0.593,67,2.129,72,1.147,73,0.699,87,3.579,90,0.174,92,0.39,95,0.212,110,0.006,111,0.008,112,0.006,116,1.68,117,0.785,118,1.447,125,1.585,144,1.114,170,0.699,178,0.238,212,0.677,334,2.113,353,1.252,357,1.676,364,1.034,387,1.065,396,3.765,413,1.128,423,4.227,467,3.579,493,3.129,495,1.034,500,3.579,501,4.9,507,5.401,511,4.526,534,1.729,577,1.096,578,1.161,579,1.195,582,0.948,583,1.298,585,1.147,587,1.147,601,1.128,602,1.536,603,1.942,604,1.23,605,1.23,606,1.005,607,1.23,608,1.065,609,1.23,610,1.065,611,1.23,612,1.096,613,1.23,614,1.096,615,1.23,616,1.096,617,1.23,618,1.096,619,1.161,620,1.23,621,1.096,622,1.628,623,1.729,624,1.997,625,1.23,626,1.096,627,1.23,628,1.096,629,1.23,630,1.065,631,1.23,632,1.23,633,1.065,634,1.23,635,1.096,636,1.23,637,1.065,638,1.23,639,1.096,640,1.825,641,1.096,642,1.034,643,1.034,644,1.628,645,1.096,646,1.128,647,1.23,648,1.065,649,1.23,650,1.096,651,1.23,652,1.096,653,1.23,654,1.034,655,1.23,656,1.065,657,1.23,658,1.096,659,1.195,660,1.23,661,1.065,662,1.005,663,1.23,664,1.065,665,1.23,666,1.034,667,1.23,668,1.065,669,1.161,670,1.096,671,1.23,672,1.128,673,1.23,674,1.096,675,1.23,676,1.065,677,1.23,678,1.096,679,1.161,680,1.096,681,1.065,682,1.195,683,0.893,684,1.065,685,1.23,686,1.065,687,1.23,688,1.065,689,1.23,690,1.065,691,1.23,692,1.065,693,1.23,694,1.065,695,1.23,696,1.065,697,1.23,698,1.065,699,1.161,700,1.23,703,2.064,704,2.064,780,2.89,923,3.765,1553,3.978,1688,6.053,1689,5.491,1690,4.082,1691,5.398,1692,8.133,1693,7.349,1694,6.162,1695,6.162,1696,6.162,1697,6.162,1698,6.162,1699,6.162,1700,4.227,1701,6.162,1702,6.162,1703,6.162,1704,6.162,1705,6.162,1706,6.162,1707,6.162,1708,4.657,1709,4.657]],["title/interfaces/CountryList.html",[11,0.56,722,2.745]],["body/interfaces/CountryList.html",[0,0.008,3,0.069,4,0.081,5,0.04,8,1.672,11,0.549,19,0.081,20,0.376,21,0.691,29,0.254,35,0.012,37,0.133,38,0.336,39,0.771,51,0.272,52,0.885,53,0.575,58,1.009,73,0.724,79,0.473,90,0.181,92,0.167,93,0.383,95,0.197,98,0.395,100,0.403,110,0.003,111,0.004,112,0.003,115,0.431,116,0.749,117,0.254,118,0.687,119,1.168,121,0.649,122,0.67,123,0.31,125,0.431,126,0.812,127,0.812,130,1.059,131,0.712,132,1.958,133,0.594,148,1.566,152,1.287,155,1.48,156,1.287,159,1.314,160,0.903,162,0.84,170,0.3,171,1.015,172,0.968,178,0.113,183,0.76,185,1.378,186,1.589,187,1.065,188,1.29,189,1.065,192,1.221,198,0.845,203,1.589,204,1.589,205,0.871,207,1.589,295,0.903,315,1.752,332,0.84,353,0.281,493,1.015,497,2.35,498,0.937,505,1.589,514,1.059,578,0.498,583,0.291,585,0.372,587,0.372,626,0.47,702,0.691,703,1.098,704,1.098,709,1.059,711,0.98,712,1.327,717,0.691,722,3.435,723,1.598,724,1.371,725,2.248,751,0.484,753,1.832,756,0.851,781,2.116,787,1.161,788,0.56,810,0.84,861,0.611,884,1.107,888,2.407,891,1.468,983,4.663,1021,1.161,1041,1.396,1044,1.752,1235,1.428,1264,0.871,1274,1.107,1276,1.059,1278,0.974,1282,1.015,1307,1.059,1308,1.29,1309,1.221,1310,0.871,1312,1.29,1313,1.428,1314,1.371,1315,1.371,1316,1.371,1326,0.812,1327,1.331,1328,0.812,1329,1.331,1330,1.331,1331,1.331,1332,0.812,1333,0.812,1334,1.331,1335,1.331,1336,0.812,1337,0.812,1338,0.812,1339,0.812,1340,0.812,1341,1.331,1342,1.287,1343,0.812,1344,1.331,1345,1.331,1346,0.812,1347,1.331,1348,0.812,1349,0.812,1350,0.812,1351,0.812,1352,1.958,1353,0.812,1354,0.812,1355,0.812,1356,0.812,1357,0.812,1358,0.812,1359,0.812,1360,0.812,1361,0.812,1362,0.812,1363,0.812,1364,0.812,1365,0.812,1366,0.812,1367,0.812,1368,0.812,1369,1.331,1370,0.812,1371,0.812,1372,0.812,1373,0.812,1374,0.812,1375,0.812,1376,0.812,1377,0.812,1378,0.812,1379,0.812,1380,0.812,1381,0.812,1382,0.812,1383,1.331,1384,0.812,1385,0.812,1386,0.812,1387,0.812,1388,0.812,1389,0.67,1390,0.812,1391,0.812,1392,0.812,1393,0.812,1394,0.812,1395,0.812,1396,0.812,1397,0.812,1399,1.059,1401,1.107,1710,1.589,1711,4.166,1712,7.87,1713,3.277,1714,1.998,1715,1.998,1716,1.998,1717,1.998,1718,7.359,1719,1.998,1720,1.998,1721,1.998,1722,1.998,1723,1.998,1724,1.998,1725,3.277,1726,1.998,1727,1.998,1728,1.998,1729,1.998,1730,1.998,1731,1.998,1732,1.998,1733,1.998,1734,1.998,1735,1.998,1736,1.998,1737,1.998,1738,1.998,1739,1.998,1740,1.998,1741,1.998,1742,1.998,1743,1.998,1744,1.998,1745,1.998,1746,1.998,1747,1.998,1748,1.998,1749,1.998,1750,1.998,1751,1.998,1752,1.998,1753,1.998,1754,1.998,1755,1.998,1756,1.998,1757,1.998,1758,1.998,1759,1.998,1760,1.998,1761,1.998,1762,1.998,1763,1.998,1764,1.998,1765,1.998,1766,1.998,1767,1.998,1768,1.998,1769,1.998,1770,1.998,1771,1.998,1772,3.277,1773,1.998,1774,1.998,1775,1.998,1776,1.998,1777,1.998,1778,1.998,1779,1.998,1780,1.998,1781,1.998,1782,3.833,1783,1.998,1784,1.998,1785,1.998,1786,2.248,1787,1.998,1788,1.998,1789,3.277,1790,1.998,1791,1.998,1792,1.998,1793,1.998,1794,1.998,1795,1.998,1796,1.998,1797,1.998,1798,1.998,1799,1.998,1800,1.998,1801,1.998,1802,1.998,1803,1.998,1804,1.998,1805,1.998,1806,1.998,1807,1.998,1808,1.998,1809,1.752,1810,1.998,1811,1.998,1812,7.148,1813,1.998,1814,1.998,1815,1.998,1816,1.998,1817,1.998,1818,3.277,1819,1.998,1820,1.998,1821,1.998,1822,1.998,1823,1.998,1824,1.998,1825,1.998,1826,1.998,1827,1.998,1828,1.998,1829,3.277,1830,1.998,1831,4.166,1832,1.998,1833,1.998,1834,1.998,1835,1.998,1836,1.998,1837,1.998,1838,1.998,1839,1.998,1840,1.998,1841,1.998,1842,1.998,1843,1.998,1844,1.998,1845,1.998,1846,1.998,1847,1.998,1848,1.998,1849,1.998,1850,1.998,1851,1.998,1852,1.998,1853,1.998,1854,1.998,1855,1.998,1856,1.998,1857,1.998,1858,1.998,1859,1.998,1860,1.998,1861,1.998,1862,1.998,1863,1.998,1864,1.998,1865,1.998,1866,4.82,1867,1.998,1868,1.998,1869,1.998,1870,1.998,1871,1.998,1872,1.998,1873,1.998,1874,1.998,1875,1.998,1876,1.998,1877,1.998,1878,1.998,1879,1.998,1880,1.998,1881,1.998,1882,1.998,1883,1.998,1884,1.998,1885,4.82,1886,1.998,1887,1.998,1888,1.998,1889,1.998,1890,1.998,1891,1.589,1892,1.998,1893,1.998,1894,1.998,1895,1.998,1896,1.998,1897,3.277,1898,1.998,1899,1.998,1900,1.998,1901,1.998,1902,1.752,1903,1.998,1904,1.998,1905,1.998,1906,1.998,1907,1.998,1908,1.998,1909,1.998,1910,1.998,1911,1.998,1912,1.998,1913,1.998,1914,1.998,1915,1.998,1916,1.998,1917,1.998,1918,1.998,1919,1.998,1920,1.998,1921,1.998,1922,1.998,1923,1.998,1924,1.998,1925,1.998,1926,1.998,1927,1.998,1928,1.998,1929,1.998,1930,1.998,1931,1.998,1932,1.998,1933,1.998,1934,1.998,1935,1.998,1936,1.998,1937,1.998,1938,1.998,1939,1.998,1940,1.998,1941,1.998,1942,1.998,1943,1.998,1944,1.998,1945,1.998,1946,1.998,1947,1.998,1948,1.998,1949,1.998,1950,1.998,1951,1.998,1952,1.998,1953,1.998,1954,1.998,1955,1.998,1956,1.998,1957,1.998,1958,1.998,1959,1.998,1960,1.998,1961,1.998,1962,1.998,1963,1.998,1964,1.998,1965,1.998,1966,1.998,1967,1.998,1968,1.998,1969,1.998,1970,1.998,1971,1.998,1972,1.998,1973,3.277,1974,3.277,1975,1.998,1976,1.998,1977,1.998,1978,1.998,1979,1.998,1980,3.277,1981,1.998,1982,1.998,1983,1.998,1984,1.998,1985,1.998,1986,1.998,1987,1.998,1988,1.998,1989,1.998,1990,1.998,1991,1.998,1992,1.998,1993,1.998,1994,1.998,1995,1.998,1996,1.998,1997,1.998,1998,1.998,1999,1.998,2000,1.998,2001,1.998,2002,1.998,2003,1.998,2004,1.998,2005,1.998,2006,1.998,2007,1.998,2008,1.998,2009,1.998,2010,1.998,2011,1.998,2012,1.998,2013,1.998,2014,1.998,2015,1.998,2016,1.998,2017,1.998,2018,1.998,2019,1.998,2020,1.998,2021,1.998,2022,1.998,2023,1.998,2024,1.998,2025,1.998,2026,1.998,2027,1.998,2028,1.998,2029,1.998,2030,3.652,2031,1.998,2032,1.998,2033,1.998,2034,1.998,2035,1.998,2036,1.998,2037,1.998,2038,1.998,2039,1.998,2040,1.998,2041,1.998,2042,1.998,2043,1.998,2044,1.998,2045,1.998,2046,1.998,2047,3.277,2048,1.998,2049,1.998,2050,1.998,2051,1.998,2052,1.998,2053,1.998,2054,1.998,2055,1.998,2056,1.998,2057,1.998,2058,1.998,2059,1.998,2060,1.998,2061,1.998,2062,1.998,2063,1.998,2064,1.998,2065,1.998,2066,1.998,2067,1.998,2068,1.998,2069,1.998,2070,1.998,2071,1.998,2072,1.998,2073,1.998,2074,1.998,2075,1.998,2076,1.998,2077,1.998,2078,1.998,2079,1.998,2080,1.998,2081,1.998,2082,1.998,2083,1.998,2084,1.752,2085,1.998,2086,1.998,2087,1.998,2088,1.998,2089,1.998,2090,1.998,2091,1.998,2092,1.998,2093,1.998,2094,1.998,2095,1.998,2096,1.998,2097,1.998,2098,1.998,2099,1.998,2100,1.998,2101,1.998,2102,1.998,2103,1.998,2104,1.998,2105,1.998,2106,1.998,2107,1.998,2108,1.998,2109,1.998,2110,1.998,2111,1.998,2112,6.037,2113,1.998,2114,1.998,2115,1.998,2116,1.998,2117,1.998,2118,1.998,2119,1.998,2120,1.998,2121,1.998,2122,1.998,2123,1.998,2124,1.998,2125,1.998,2126,1.998,2127,3.277,2128,1.998,2129,1.998,2130,1.998,2131,1.998,2132,1.998,2133,1.998,2134,1.998,2135,1.998,2136,1.998,2137,1.998,2138,1.998,2139,1.998,2140,1.998,2141,1.998,2142,1.998,2143,1.998,2144,1.998,2145,1.998,2146,1.998,2147,1.998,2148,1.998,2149,1.998,2150,1.998,2151,1.998,2152,1.998,2153,1.998,2154,1.998,2155,1.998,2156,1.998,2157,1.998,2158,1.998,2159,1.998,2160,1.998,2161,1.998,2162,1.998,2163,1.998,2164,1.998,2165,1.998,2166,1.998,2167,1.998,2168,4.82,2169,1.998,2170,1.998,2171,1.998,2172,1.998,2173,3.277,2174,1.998,2175,1.998,2176,1.998,2177,1.998,2178,1.998,2179,1.998,2180,1.998,2181,1.998,2182,1.998,2183,1.998,2184,1.998,2185,1.998,2186,1.998,2187,1.998,2188,1.998,2189,1.998,2190,1.998,2191,1.998,2192,1.998,2193,1.998,2194,3.277,2195,1.998,2196,1.998,2197,1.998,2198,1.998,2199,1.998,2200,1.998,2201,5.32,2202,1.998,2203,1.998,2204,1.998,2205,1.998,2206,1.998,2207,1.998,2208,1.998,2209,1.998,2210,1.998,2211,1.998,2212,1.998,2213,1.998,2214,1.998,2215,1.998,2216,1.998,2217,1.998,2218,1.998,2219,1.998,2220,1.998,2221,1.998,2222,1.998,2223,1.998,2224,1.998,2225,1.998,2226,1.998,2227,1.998,2228,1.998,2229,1.998,2230,1.998,2231,1.998,2232,1.998,2233,1.998,2234,1.998,2235,1.998,2236,1.998,2237,1.998,2238,1.998,2239,1.998,2240,1.998,2241,1.998,2242,1.998,2243,1.998,2244,1.998,2245,1.998,2246,1.998,2247,1.998,2248,3.277,2249,1.998,2250,1.998,2251,1.998,2252,1.998,2253,1.998,2254,1.998,2255,1.998,2256,1.998,2257,1.998,2258,1.998,2259,1.998,2260,1.998,2261,1.998,2262,1.998,2263,1.589,2264,1.998,2265,1.998,2266,1.998,2267,1.998,2268,1.998,2269,1.589,2270,1.161,2271,1.29,2272,1.371,2273,1.752,2274,1.589,2275,1.371,2276,1.752]],["title/interfaces/DateErrorMsg.html",[11,0.56,2277,3.123]],["body/interfaces/DateErrorMsg.html",[0,0.013,3,0.114,4,0.134,5,0.067,8,0.618,9,0.957,10,2.053,11,0.835,15,2.639,16,1.015,19,0.134,20,0.557,21,1.146,29,0.423,35,0.012,37,0.295,38,0.83,39,0.921,44,2.119,50,1.927,51,0.919,53,1.01,55,1.685,58,1.961,59,2.142,64,1.144,65,0.423,67,1.146,73,0.952,79,0.559,85,1.927,90,0.253,91,1.445,92,0.278,93,0.636,95,0.199,98,0.961,99,2.469,100,0.868,101,1.927,105,2.26,110,0.004,111,0.006,112,0.004,115,0.716,116,1.112,117,0.423,118,1.019,119,1.734,121,1.078,122,1.112,123,0.754,125,0.716,133,1.445,141,1.015,146,1.112,148,1.58,149,1.112,170,0.498,172,1.14,174,1.58,176,2.973,178,0.274,183,1.849,185,1.395,187,1.078,189,1.871,191,1.015,195,2.276,198,0.853,202,2.118,205,2.508,254,2.188,255,2.825,280,2.639,290,2.027,295,2.601,301,2.276,304,1.348,308,1.183,324,1.488,332,1.395,336,1.112,337,1.533,353,0.467,357,1.566,392,2.694,406,3.867,415,2.142,451,1.445,452,1.685,454,2.276,469,1.221,475,1.303,476,2.639,485,2.142,488,2.508,515,2.825,516,2.276,519,2.508,534,1.144,558,2.639,583,0.482,585,0.618,587,0.618,599,3.718,602,0.827,630,1.112,702,1.146,703,1.629,704,1.629,711,1.144,712,1.213,713,2.694,714,2.262,715,1.911,716,2.281,717,1.146,738,1.618,739,3.344,740,2.027,741,1.758,742,1.445,751,1.178,756,0.921,779,1.303,788,0.929,796,1.348,800,2.469,802,4.358,814,2.972,830,1.838,837,2.504,845,1.221,860,2.276,882,2.972,916,2.276,976,1.927,982,2.142,1001,2.694,1002,2.825,1003,2.371,1004,3.512,1021,1.927,1055,1.499,1154,2.437,1171,1.911,1172,2.142,1243,2.027,1263,2.437,1310,1.445,1326,1.348,1327,1.976,1328,1.348,1329,1.976,1330,1.976,1331,1.976,1332,1.348,1333,1.348,1334,1.976,1335,1.976,1336,1.348,1337,1.348,1338,1.348,1339,1.348,1340,1.348,1341,1.976,1342,2.262,1343,1.348,1344,1.976,1345,1.976,1346,1.348,1347,1.976,1348,1.348,1349,1.348,1350,1.348,1351,1.348,1352,2.576,1353,1.348,1354,1.348,1355,1.348,1356,1.348,1357,1.348,1358,1.348,1359,1.348,1360,1.348,1361,1.348,1362,1.348,1363,1.348,1364,1.348,1365,1.348,1366,1.348,1367,1.348,1368,1.348,1369,1.976,1370,1.348,1371,1.348,1372,1.348,1373,1.348,1374,1.348,1375,1.348,1376,1.348,1377,1.348,1378,1.348,1379,1.348,1380,1.348,1381,1.348,1382,1.348,1383,1.976,1384,1.348,1385,1.348,1386,1.348,1387,1.348,1388,1.348,1389,1.112,1390,1.348,1391,1.348,1392,1.348,1393,1.348,1394,1.348,1395,1.348,1396,1.348,1397,1.348,1414,3.518,1431,2.694,1448,3.418,1488,3.572,1527,4.983,1536,2.694,1565,1.927,1589,2.027,2277,4.229,2278,2.437,2279,3.867,2280,3.336,2281,6.388,2282,6.388,2283,6.388,2284,6.388,2285,6.684,2286,3.336,2287,3.572,2288,3.717,2289,3.572,2290,5.557,2291,3.572,2292,4.263,2293,5.916,2294,4.263,2295,5.944,2296,2.437,2297,5.796,2298,2.908,2299,2.639,2300,2.908,2301,2.908,2302,1.927,2303,1.838,2304,2.908,2305,2.908,2306,2.908,2307,5.609,2308,2.908,2309,2.908,2310,2.908,2311,3.867,2312,2.027,2313,4.263,2314,4.263,2315,4.263,2316,2.972,2317,4.263,2318,2.908,2319,2.437,2320,2.908,2321,2.908,2322,2.908,2323,2.908,2324,4.578,2325,2.639,2326,3.867,2327,5.046,2328,1.758,2329,2.908,2330,2.908,2331,2.276,2332,4.263,2333,2.639,2334,2.908,2335,4.656,2336,2.639,2337,2.908,2338,2.908,2339,2.908,2340,2.908,2341,2.908,2342,3.336,2343,2.908,2344,3.572,2345,2.908,2346,3.572,2347,2.908,2348,2.908,2349,2.908,2350,2.908,2351,2.908,2352,2.908,2353,2.908,2354,2.908,2355,2.908,2356,3.572,2357,6.183,2358,2.908,2359,2.908,2360,2.908,2361,2.908,2362,2.908,2363,2.908,2364,2.908,2365,2.908,2366,2.908,2367,2.908,2368,2.908,2369,2.908,2370,2.908,2371,2.908,2372,4.263,2373,2.908,2374,4.263,2375,2.908,2376,2.639,2377,2.908,2378,5.557,2379,3.572,2380,5.046,2381,2.908,2382,2.908,2383,4.578,2384,2.908,2385,2.908,2386,2.908,2387,2.437,2388,2.142,2389,2.908,2390,2.908,2391,2.639,2392,2.908,2393,2.908,2394,2.639,2395,2.908,2396,4.263,2397,3.572,2398,2.908,2399,2.908,2400,2.908,2401,2.908,2402,2.639,2403,2.908,2404,2.908,2405,2.908,2406,2.908,2407,2.276]],["title/directives/DateFieldFormatDirective.html",[212,0.618,684,0.972]],["body/directives/DateFieldFormatDirective.html",[0,0.024,3,0.213,4,0.25,5,0.124,19,0.25,32,0.643,35,0.012,37,0.25,90,0.232,92,0.517,95,0.213,105,2.203,110,0.008,111,0.009,112,0.008,172,1.107,198,1.291,202,3.425,212,1.071,441,1.836,582,1.258,583,1.071,683,1.186,684,1.683,711,1.732,712,1.961,756,0.988,1029,2.544,1041,2.634,1275,3.589,2270,4.276,2408,6.893,2409,5.417,2410,7.362,2411,7.863,2412,6.453,2413,6.18,2414,5.417,2415,6.18,2416,5.854,2417,6.18,2418,4.914,2419,6.18,2420,6.18,2421,6.18,2422,6.18,2423,6.18,2424,6.18,2425,8.316,2426,6.18,2427,6.18,2428,7.362,2429,6.18,2430,6.18,2431,6.18]],["title/components/DatepickerComponent.html",[178,0.147,630,0.972]],["body/components/DatepickerComponent.html",[0,0.01,3,0.085,4,0.1,5,0.078,8,0.458,9,0.709,10,2.107,11,0.716,13,0.721,14,0.562,15,3.079,16,0.752,19,0.1,20,0.444,21,1.655,23,0.51,29,0.61,32,0.729,34,1.122,35,0.012,36,0.585,37,0.33,38,0.698,39,1.004,42,0.885,44,1.999,45,0.935,50,1.428,51,1.051,52,0.896,53,0.953,55,1.248,58,1.736,59,1.587,60,0.596,64,1.477,65,0.931,67,1.338,72,0.721,73,1.097,79,0.491,85,1.428,90,0.221,91,1.071,92,0.206,93,0.472,95,0.165,98,0.946,99,2.758,100,0.772,101,1.428,105,1.937,110,0.003,111,0.005,112,0.003,115,0.835,116,1.242,117,0.493,118,1.003,119,1.707,121,1.556,122,1.604,123,1.055,124,1.338,125,1.172,126,1.573,127,1.573,131,1.38,133,0.73,137,0.752,138,0.824,139,0.905,140,0.824,141,1.185,142,0.799,143,0.877,144,0.866,146,1.297,148,1.765,149,1.297,170,0.581,172,1.074,174,1.765,176,1.816,178,0.263,183,1.472,185,1.034,187,0.799,189,1.556,191,1.185,195,1.687,198,0.679,202,1.071,205,2.574,212,0.358,254,1.472,255,3.155,280,3.079,290,1.502,295,2.163,301,1.687,304,0.999,308,0.877,324,1.662,332,1.628,336,1.297,337,1.713,353,1.2,357,1.607,364,0.546,387,0.562,392,2.653,406,4.32,413,0.596,415,1.587,451,1.071,452,1.248,454,2.656,469,1.425,475,1.521,476,1.955,485,1.587,488,2.367,495,0.546,515,3.155,516,2.656,519,2.574,534,1.477,558,1.955,577,0.579,578,0.613,579,0.631,582,0.5,583,1.253,585,0.721,587,0.721,599,3.797,601,0.596,602,1.194,603,1.435,604,0.65,605,0.65,606,0.53,607,0.65,608,0.562,609,0.65,610,0.562,611,0.65,612,0.579,613,0.65,614,0.579,615,0.65,616,0.579,617,0.65,618,0.579,619,0.613,620,0.65,621,0.579,622,1.023,623,0.579,624,0.613,625,0.65,626,0.579,627,0.65,628,0.579,629,0.65,630,1.435,631,0.65,632,0.65,633,0.562,634,0.65,635,0.579,636,0.65,637,0.562,638,0.65,639,0.579,640,1.265,641,0.579,642,0.546,643,0.546,644,1.023,645,0.579,646,0.596,647,0.65,648,0.562,649,0.65,650,0.579,651,0.65,652,0.579,653,0.65,654,0.546,655,0.65,656,0.562,657,0.65,658,0.579,659,0.631,660,0.65,661,0.562,662,0.53,663,0.65,664,0.562,665,0.65,666,0.546,667,0.65,668,0.562,669,0.613,670,0.579,671,0.65,672,0.596,673,0.65,674,0.579,675,0.65,676,0.562,677,0.65,678,0.579,679,0.613,680,0.579,681,0.562,682,0.631,683,0.472,684,0.562,685,0.65,686,0.562,687,0.65,688,0.562,689,0.65,690,0.562,691,0.65,692,0.562,693,0.65,694,0.562,695,0.65,696,0.562,697,0.65,698,0.562,699,0.613,700,0.65,703,1.297,704,1.297,711,0.911,712,1.194,713,2.653,714,2.321,715,1.881,716,2.246,717,0.85,738,1.199,739,3.155,740,1.502,741,1.302,742,1.687,751,0.938,756,0.766,779,0.966,788,0.689,796,1.573,800,2.758,802,4.627,814,2.926,830,2.145,837,2.28,845,0.905,860,1.687,882,2.926,916,1.687,976,1.428,982,1.587,1001,1.362,1002,1.428,1003,1.199,1004,2.653,1019,1.362,1021,1.428,1029,1.338,1041,0.824,1055,1.749,1154,1.806,1171,1.521,1172,2.5,1243,1.502,1263,1.806,1310,1.687,1326,0.999,1327,1.573,1328,0.999,1329,1.573,1330,1.573,1331,1.573,1332,0.999,1333,0.999,1334,1.573,1335,1.573,1336,0.999,1337,0.999,1338,0.999,1339,0.999,1340,0.999,1341,1.573,1342,1.881,1343,0.999,1344,1.573,1345,1.573,1346,0.999,1347,1.573,1348,0.999,1349,0.999,1350,0.999,1351,0.999,1352,2.207,1353,0.999,1354,0.999,1355,0.999,1356,0.999,1357,0.999,1358,0.999,1359,0.999,1360,0.999,1361,0.999,1362,0.999,1363,0.999,1364,0.999,1365,0.999,1366,0.999,1367,0.999,1368,0.999,1369,1.573,1370,0.999,1371,0.999,1372,0.999,1373,0.999,1374,0.999,1375,0.999,1376,0.999,1377,0.999,1378,0.999,1379,0.999,1380,0.999,1381,0.999,1382,0.999,1383,1.573,1384,0.999,1385,0.999,1386,0.999,1387,0.999,1388,0.999,1389,0.824,1390,0.999,1391,0.999,1392,0.999,1393,0.999,1394,0.999,1395,0.999,1396,0.999,1397,0.999,1414,4.013,1431,2.145,1448,2.944,1488,2.844,1527,5.088,1536,1.362,1565,1.428,1589,2.366,2277,3.518,2278,1.806,2279,1.955,2280,1.687,2281,4.198,2282,4.198,2283,4.198,2284,4.198,2285,4.762,2286,1.687,2287,1.806,2288,3.508,2289,1.806,2290,2.155,2291,3.99,2292,4.198,2293,6.282,2294,4.198,2295,6.068,2296,1.806,2297,5.993,2298,3.394,2299,3.079,2300,3.394,2301,3.394,2302,2.249,2303,2.145,2304,3.394,2305,3.394,2306,3.394,2307,5.811,2308,3.394,2309,4.198,2310,5.18,2311,4.32,2312,2.366,2313,5.18,2314,4.762,2315,4.762,2316,3.32,2317,5.18,2318,3.394,2319,2.844,2320,3.394,2321,3.394,2322,4.198,2323,3.394,2324,4.32,2325,3.079,2326,4.32,2327,5.501,2328,2.051,2329,3.394,2330,4.198,2331,2.656,2332,4.762,2333,3.079,2334,3.394,2335,4.824,2336,1.955,2337,3.394,2338,4.198,2339,3.394,2340,4.198,2341,3.394,2342,2.656,2343,2.155,2344,2.844,2345,2.155,2346,2.844,2347,2.155,2348,3.394,2349,2.155,2350,2.155,2351,2.155,2352,2.155,2353,2.155,2354,3.394,2355,2.155,2356,2.844,2357,5.501,2358,2.155,2359,2.155,2360,2.155,2361,2.155,2362,2.155,2363,2.155,2364,2.155,2365,2.155,2366,2.155,2367,2.155,2368,2.155,2369,2.155,2370,2.155,2371,2.155,2372,3.394,2373,2.155,2374,3.394,2375,2.155,2376,1.955,2377,2.155,2378,4.762,2379,2.844,2380,4.198,2381,2.155,2382,2.155,2383,3.808,2384,2.155,2385,2.155,2386,2.155,2387,1.806,2388,1.587,2389,2.155,2390,2.155,2391,1.955,2392,2.155,2393,2.155,2394,1.955,2395,3.394,2396,3.394,2397,2.844,2398,2.155,2399,2.155,2400,4.762,2401,2.155,2402,1.955,2403,2.155,2404,4.198,2405,2.155,2406,3.394,2407,2.656,2432,3.872,2433,3.872,2434,3.872,2435,2.844,2436,3.872,2437,2.459,2438,2.459,2439,2.459,2440,2.459,2441,2.459,2442,2.459,2443,2.459,2444,2.459,2445,2.459,2446,2.459,2447,2.459,2448,2.459,2449,2.459,2450,2.459,2451,2.459,2452,2.459,2453,2.459,2454,2.459,2455,2.459,2456,2.459,2457,2.459,2458,2.459,2459,2.459,2460,2.459,2461,2.459,2462,2.459,2463,2.459,2464,3.872,2465,3.872,2466,3.872,2467,3.872,2468,3.872,2469,3.872,2470,3.872]],["title/components/DropdownComponent.html",[178,0.147,495,0.944]],["body/components/DropdownComponent.html",[0,0.016,3,0.143,4,0.168,5,0.114,13,1.06,14,0.946,19,0.168,20,0.652,23,0.75,29,0.725,32,0.742,34,1.155,35,0.012,36,0.622,37,0.339,38,0.778,39,1.213,42,1.301,45,1.573,51,1.107,52,1.071,53,0.998,58,1.778,60,1.003,64,1.339,65,0.828,72,1.06,73,1.139,79,0.531,90,0.244,92,0.346,93,0.794,95,0.143,98,1.124,110,0.005,111,0.007,112,0.005,115,1.228,116,1.601,117,0.725,118,0.867,119,2.318,121,2.113,122,2.179,123,1.3,124,1.966,126,2.312,127,2.312,131,2.029,133,2.386,137,1.266,138,1.387,139,1.523,140,1.387,141,1.266,142,1.345,143,1.476,144,1.175,146,1.906,148,2.276,149,1.906,152,2.884,156,2.235,164,2.235,170,0.621,172,1.131,178,0.224,185,1.74,187,1.345,189,1.345,212,0.602,304,2.312,353,1.244,364,0.919,387,0.946,413,1.003,442,4.525,495,1.555,534,1.339,577,0.974,578,1.032,579,1.062,582,0.842,583,1.291,585,1.06,587,1.06,601,1.003,602,1.419,603,1.85,604,1.094,605,1.094,606,0.893,607,1.094,608,0.946,609,1.094,610,0.946,611,1.094,612,0.974,613,1.094,614,0.974,615,1.094,616,0.974,617,1.094,618,0.974,619,1.032,620,1.094,621,0.974,622,1.504,623,0.974,624,1.032,625,1.094,626,0.974,627,1.094,628,0.974,629,1.094,630,0.946,631,1.094,632,1.094,633,0.946,634,1.094,635,0.974,636,1.094,637,0.946,638,1.094,639,0.974,640,1.718,641,0.974,642,0.919,643,0.919,644,1.504,645,0.974,646,1.003,647,1.094,648,0.946,649,1.094,650,0.974,651,1.094,652,0.974,653,1.094,654,0.919,655,1.094,656,0.946,657,1.094,658,0.974,659,1.062,660,1.094,661,0.946,662,0.893,663,1.094,664,0.946,665,1.094,666,0.919,667,1.094,668,0.946,669,1.032,670,0.974,671,1.094,672,1.003,673,1.094,674,0.974,675,1.094,676,0.946,677,1.094,678,0.974,679,1.032,680,0.974,681,0.946,682,1.062,683,0.794,684,0.946,685,1.094,686,0.946,687,1.094,688,0.946,689,1.094,690,0.946,691,1.094,692,0.946,693,1.094,694,0.946,695,1.094,696,0.946,697,1.094,698,0.946,699,1.032,700,1.094,714,1.626,716,1.941,717,1.43,788,1.159,1170,3.974,1235,3.198,1238,2.018,1260,2.018,1264,1.803,1276,3.445,2335,4.776,2383,3.291,2471,3.628,2472,5.69,2473,5.69,2474,6.503,2475,6.503,2476,6.503,2477,5.7,2478,5.69,2479,4.139,2480,4.139,2481,4.139,2482,4.139,2483,4.139,2484,4.139,2485,4.139,2486,4.139,2487,4.139,2488,4.139,2489,4.139,2490,4.139,2491,4.139,2492,4.139]],["title/directives/DuplicateCheckDirective.html",[212,0.618,686,0.972]],["body/directives/DuplicateCheckDirective.html",[0,0.022,3,0.195,4,0.228,5,0.113,9,1.627,16,1.727,18,3.448,19,0.228,23,0.918,32,0.608,34,0.931,35,0.012,36,0.452,37,0.306,38,0.579,39,1.114,42,1.593,65,0.719,79,0.553,90,0.261,92,0.472,93,1.082,95,0.24,98,1.493,100,0.998,110,0.007,111,0.009,112,0.007,117,0.887,159,2.383,172,0.981,191,2.527,198,0.989,205,3.035,212,1.013,214,4.186,281,3.125,324,2.132,336,2.334,337,2.197,426,2.646,448,4.823,500,3.277,559,3.414,582,1.148,583,1.013,619,1.407,683,1.082,686,1.804,837,2.767,1055,3.147,2493,6.01,2494,5.551,2495,4.487,2496,4.618,2497,6.01,2498,4.39,2499,7.337,2500,5.642,2501,3.448,2502,5.047,2503,5.642,2504,4.046,2505,3.643,2506,6.01,2507,5.642,2508,5.642,2509,3.448,2510,4.144,2511,5.642]],["title/components/EmailComponent.html",[178,0.147,633,0.972]],["body/components/EmailComponent.html",[0,0.013,3,0.114,4,0.134,5,0.098,8,0.906,9,1.403,12,2.26,13,1.072,14,0.759,16,1.488,18,2.972,19,0.134,20,0.557,21,1.68,23,0.641,26,2.124,29,0.619,32,0.754,34,1.279,35,0.012,36,0.642,37,0.345,38,0.815,39,0.921,42,1.112,45,1.261,51,1.07,52,1.126,53,0.582,58,1.709,60,0.804,64,1.144,65,1.022,72,0.906,73,1.205,79,0.535,90,0.238,92,0.278,93,0.636,95,0.114,98,0.656,100,0.708,110,0.007,111,0.006,112,0.004,113,4.002,115,1.049,116,0.759,117,0.619,118,1.206,120,3.575,121,1.58,122,1.629,123,1.046,124,1.68,125,1.572,126,1.976,127,1.976,128,2.825,129,2.576,130,3.05,131,2.406,132,2.961,133,2.165,137,1.015,138,2.712,139,1.221,140,1.112,141,1.015,142,1.078,143,1.183,144,1.04,146,1.112,148,2.06,149,1.112,151,1.927,152,2.936,153,3.165,155,1.499,156,2.491,157,2.694,158,1.445,159,1.046,160,1.499,162,1.395,164,1.911,170,0.498,171,1.685,172,0.95,178,0.199,187,1.078,189,1.078,191,1.015,198,0.582,212,0.482,213,4.349,237,2.118,269,2.045,332,2.045,350,2.825,353,1.228,357,1.323,364,0.737,387,0.759,413,0.804,477,2.825,495,0.737,514,3.05,534,1.144,577,0.781,578,0.827,579,0.852,582,0.675,583,1.277,585,0.906,587,0.906,601,0.804,602,1.213,603,1.675,604,0.877,605,0.877,606,0.716,607,0.877,608,0.759,609,0.877,610,0.759,611,0.877,612,0.781,613,0.877,614,0.781,615,0.877,616,0.781,617,0.877,618,0.781,619,0.827,620,0.877,621,0.781,622,1.285,623,0.781,624,0.827,625,0.877,626,0.781,627,0.877,628,0.781,629,0.877,630,0.759,631,0.877,632,0.877,633,1.449,634,0.877,635,0.781,636,0.877,637,0.759,638,0.877,639,0.781,640,1.521,641,0.781,642,0.737,643,0.737,644,1.285,645,0.781,646,0.804,647,0.877,648,0.759,649,0.877,650,0.781,651,0.877,652,0.781,653,0.877,654,0.737,655,0.877,656,0.759,657,0.877,658,0.781,659,0.852,660,0.877,661,0.759,662,0.716,663,0.877,664,0.759,665,0.877,666,0.737,667,0.877,668,0.759,669,0.827,670,0.781,671,0.877,672,0.804,673,0.877,674,0.781,675,0.877,676,0.759,677,0.877,678,0.781,679,0.827,680,0.781,681,0.759,682,0.852,683,0.636,684,0.759,685,0.877,686,0.759,687,0.877,688,0.759,689,0.877,690,0.759,691,0.877,692,0.759,693,0.877,694,0.759,695,0.877,696,0.759,697,0.877,698,0.759,699,0.827,700,0.877,711,1.355,712,1.817,751,0.804,753,2.41,756,0.778,788,0.929,837,2.124,861,2.158,1029,1.68,1041,1.929,1235,2.94,1238,1.618,1242,3.572,1260,1.618,1264,1.445,1273,3.05,1274,3.189,1275,3.344,1277,3.518,1278,2.807,1282,2.469,1288,2.027,1289,2.027,1290,2.027,1294,2.142,1296,2.027,1299,2.027,1300,2.027,1301,2.027,1302,2.027,1303,2.027,1304,2.027,1305,2.027,1306,3.427,1320,2.027,1321,2.027,1322,2.027,1323,1.838,1325,1.838,1398,1.838,1399,1.758,1400,1.838,1401,1.838,1402,2.142,1403,2.972,2510,3.572,2512,2.908,2513,3.572,2514,2.825,2515,4.263,2516,6.388,2517,4.863,2518,4.863,2519,3.189,2520,4.863,2521,3.318,2522,4.863,2523,3.318,2524,3.867,2525,3.318,2526,4.863,2527,3.318,2528,3.318,2529,3.318,2530,3.318,2531,3.318,2532,3.318,2533,3.318,2534,5.757,2535,2.972,2536,4.863,2537,4.863,2538,3.318,2539,3.318,2540,2.469,2541,4.863,2542,3.318,2543,3.318,2544,7.053,2545,2.639,2546,2.437,2547,2.639,2548,2.908,2549,3.318,2550,4.863]],["title/components/ErrorContainerComponent.html",[178,0.147,635,1]],["body/components/ErrorContainerComponent.html",[0,0.02,3,0.177,4,0.208,5,0.132,13,1.224,14,1.175,19,0.208,29,0.922,32,0.574,35,0.011,36,0.58,37,0.208,39,1.051,42,1.502,51,0.7,52,0.677,53,1.152,60,1.245,64,1.546,72,1.224,90,0.193,92,0.43,95,0.177,110,0.007,111,0.008,112,0.007,144,1.187,170,1.231,172,0.925,178,0.25,212,0.748,353,1.257,364,1.142,387,1.175,413,1.245,495,1.142,534,1.546,577,1.21,578,1.282,579,1.319,582,1.046,583,1.303,585,1.224,587,1.224,601,1.245,602,1.638,603,2.017,604,1.358,605,1.358,606,1.109,607,1.358,608,1.175,609,1.358,610,1.175,611,1.358,612,1.21,613,1.358,614,1.21,615,1.358,616,1.21,617,1.358,618,1.21,619,1.282,620,1.358,621,1.21,622,1.736,623,1.21,624,1.282,625,1.358,626,1.21,627,1.358,628,1.21,629,1.358,630,1.175,631,1.358,632,1.358,633,1.175,634,1.358,635,1.796,636,1.358,637,1.175,638,1.358,639,1.21,640,1.914,641,1.21,642,1.142,643,1.142,644,1.736,645,1.21,646,1.245,647,1.358,648,1.175,649,1.358,650,1.21,651,1.358,652,1.21,653,1.358,654,1.142,655,1.358,656,1.175,657,1.358,658,1.21,659,1.319,660,1.358,661,1.175,662,1.109,663,1.358,664,1.175,665,1.358,666,1.142,667,1.358,668,1.175,669,1.282,670,1.21,671,1.358,672,1.245,673,1.358,674,1.21,675,1.358,676,1.175,677,1.358,678,1.21,679,1.282,680,1.21,681,1.175,682,1.319,683,0.986,684,1.175,685,1.358,686,1.175,687,1.358,688,1.175,689,1.358,690,1.175,691,1.358,692,1.175,693,1.358,694,1.175,695,1.358,696,1.175,697,1.358,698,1.175,699,1.282,700,1.358,1661,4.015,2551,6.348,2552,5.759,2553,4.506,2554,6.571,2555,6.571,2556,7.242,2557,6.571]],["title/interfaces/ErrorMessage.html",[11,0.56,132,1.727]],["body/interfaces/ErrorMessage.html",[3,0.22,4,0.259,5,0.128,11,0.842,19,0.259,20,0.861,32,0.558,35,0.011,37,0.259,38,0.77,52,0.989,58,1.993,79,0.575,95,0.275,100,0.786,110,0.008,111,0.01,112,0.008,132,3.051,133,2.23,159,2.367,169,4.693,174,2.076,198,1.317,559,3.392,702,2.208,756,1.022,1306,3.812,1484,5.081,1515,3.539,2303,3.539,2540,3.244,2558,5.971,2559,5.081,2560,6.389,2561,5.601,2562,6.389,2563,5.601,2564,6.582,2565,5.081,2566,5.081,2567,6.389]],["title/interfaces/FileUploaderMsg.html",[11,0.56,2568,3.381]],["body/interfaces/FileUploaderMsg.html",[0,0.008,3,0.141,4,0.078,5,0.162,9,1.364,10,0.691,11,0.255,13,0.595,14,0.443,16,0.978,17,1.558,19,0.212,20,0.6,22,4.161,29,0.247,31,2.491,35,0.012,36,0.419,37,0.192,38,0.199,39,0.837,44,1.5,48,2.994,53,1.092,58,1.563,66,1.698,67,2.058,68,1.541,72,0.361,73,0.846,79,0.427,90,0.288,91,0.844,92,0.162,93,0.372,94,0.984,95,0.11,98,1.375,100,0.98,105,2.429,110,0.004,111,0.004,112,0.002,115,0.418,116,0.73,117,0.247,118,0.669,125,0.418,140,0.649,142,1.325,156,1.602,158,0.844,159,1.878,170,1.178,172,0.935,177,0.909,178,0.141,183,1.989,191,0.593,194,1.073,198,1.448,205,0.844,211,0.909,215,1.125,227,0.945,230,1.842,244,2.192,254,1.214,258,1.692,259,1.184,265,2.192,269,0.815,283,1.912,286,1.073,287,1.073,289,4.587,290,1.184,304,0.787,305,2.541,306,1.541,308,1.139,309,1.698,324,0.593,329,1.026,332,0.815,337,0.611,353,0.45,359,2.258,390,1.184,391,1.073,394,1.125,416,1.541,421,1.698,426,1.498,441,1.673,448,1.184,450,0.984,452,2.859,460,1.423,463,1.541,469,1.5,475,0.761,477,1.856,479,1.125,482,2.994,485,3.845,499,1.251,500,1.125,510,1.026,523,1.251,528,1.423,531,1.541,533,1.952,534,1.231,553,1.698,578,0.483,582,0.83,583,0.282,585,0.361,587,0.361,596,2.192,599,0.945,600,0.909,637,0.443,702,0.669,703,1.07,704,1.07,711,0.959,712,1.305,713,1.77,714,1.255,715,1.858,717,0.669,738,0.945,739,1.125,741,1.692,742,0.844,743,1.026,756,1.168,764,2.368,765,1.423,773,1.251,779,0.761,782,0.844,788,0.543,795,1.251,796,1.298,830,1.073,839,2.063,845,1.176,849,1.329,861,1.974,882,1.184,884,1.073,899,2.368,928,1.423,1004,1.77,1033,1.541,1041,2.226,1042,4.27,1049,2.192,1062,1.251,1106,1.692,1130,2.347,1142,1.329,1147,1.698,1171,2.34,1179,1.423,1243,1.952,1284,1.251,1308,2.063,1312,1.251,1326,0.787,1327,1.298,1328,0.787,1329,1.298,1330,1.298,1331,1.298,1332,0.787,1333,0.787,1334,1.298,1335,1.298,1336,0.787,1337,0.787,1338,0.787,1339,0.787,1340,0.787,1341,1.298,1342,1.255,1343,0.787,1344,1.298,1345,1.298,1346,0.787,1347,1.298,1348,0.787,1349,0.787,1350,0.787,1351,0.787,1352,1.922,1353,0.787,1354,0.787,1355,0.787,1356,0.787,1357,0.787,1358,0.787,1359,0.787,1360,0.787,1361,0.787,1362,0.787,1363,0.787,1364,0.787,1365,0.787,1366,0.787,1367,0.787,1368,0.787,1369,1.298,1370,0.787,1371,0.787,1372,0.787,1373,0.787,1374,0.787,1375,0.787,1376,0.787,1377,0.787,1378,0.787,1379,0.787,1380,0.787,1381,0.787,1382,0.787,1383,1.298,1384,0.787,1385,0.787,1386,0.787,1387,0.787,1388,0.787,1389,1.366,1390,0.787,1391,0.787,1392,0.787,1393,0.787,1394,0.787,1395,0.787,1396,0.787,1397,0.787,1405,3.926,1407,5.122,1408,2.797,1414,4.163,1420,1.952,1433,1.251,1438,1.251,1442,3.441,1448,0.909,1449,1.251,1456,2.192,1458,3.245,1461,1.952,1465,1.125,1471,1.329,1514,4.086,1520,2.541,1521,2.541,1522,2.89,1536,3.119,1564,1.856,1565,2.368,1567,1.423,1568,1.329,1574,1.251,1589,1.184,1902,1.698,2084,1.698,2271,1.251,2286,2.192,2288,1.251,2291,2.347,2303,1.073,2312,1.184,2316,1.952,2325,1.541,2379,1.423,2416,1.541,2514,1.856,2563,2.8,2568,3.242,2569,1.698,2570,1.541,2571,2.8,2572,2.192,2573,1.937,2574,3.195,2575,1.937,2576,1.423,2577,1.329,2578,4.077,2579,4.478,2580,2.994,2581,1.937,2582,3.574,2583,2.797,2584,2.797,2585,3.195,2586,3.195,2587,1.937,2588,3.195,2589,1.698,2590,3.195,2591,1.937,2592,3.195,2593,1.937,2594,1.937,2595,1.937,2596,1.937,2597,1.937,2598,1.937,2599,1.184,2600,1.937,2601,1.937,2602,1.937,2603,1.937,2604,3.574,2605,1.937,2606,4.161,2607,3.242,2608,1.937,2609,3.195,2610,2.8,2611,3.195,2612,1.937,2613,3.195,2614,3.195,2615,1.937,2616,3.195,2617,3.195,2618,1.937,2619,1.184,2620,1.541,2621,1.698,2622,1.184,2623,1.541,2624,1.937,2625,1.937,2626,1.423,2627,1.423,2628,1.937,2629,4.077,2630,1.937,2631,1.937,2632,1.937,2633,1.937,2634,1.937,2635,1.937,2636,1.937,2637,1.937,2638,1.937,2639,1.937,2640,1.937,2641,1.937,2642,3.474,2643,3.242,2644,1.937,2645,1.937,2646,1.541,2647,4.73,2648,1.937,2649,1.937,2650,7.087,2651,1.937,2652,1.937,2653,1.698,2654,1.937,2655,1.423,2656,1.937,2657,1.937,2658,1.698,2659,2.541,2660,1.937,2661,4.077,2662,1.937,2663,1.937,2664,1.541,2665,1.937,2666,1.937,2667,1.937,2668,1.937,2669,3.195,2670,1.937,2671,1.937,2672,1.937,2673,1.937,2674,1.698,2675,1.937,2676,3.195,2677,1.937,2678,1.937,2679,4.077,2680,4.077,2681,1.937,2682,3.195,2683,2.8,2684,1.937,2685,2.8,2686,1.937,2687,1.937,2688,1.698,2689,1.937,2690,1.937,2691,1.937,2692,1.937,2693,1.937,2694,1.937,2695,1.937,2696,4.077,2697,1.698,2698,1.937,2699,1.698,2700,2.8,2701,3.195,2702,3.195,2703,1.937,2704,1.937,2705,1.698,2706,3.195,2707,1.937,2708,1.937,2709,3.574,2710,1.937,2711,1.329,2712,3.195,2713,1.698,2714,2.797,2715,1.125,2716,4.161,2717,3.574,2718,1.698,2719,1.423,2720,1.937,2721,1.937,2722,1.423,2723,1.937,2724,4.73,2725,1.251,2726,3.195,2727,2.8,2728,1.937,2729,1.026,2730,1.937,2731,4.077,2732,4.136,2733,4.936,2734,0.984,2735,4.73,2736,1.937,2737,1.937,2738,1.329,2739,1.937,2740,1.937,2741,1.937,2742,3.195,2743,1.423,2744,1.937,2745,1.937,2746,3.195,2747,1.937,2748,1.937,2749,1.937,2750,1.937,2751,1.937,2752,1.937,2753,1.937,2754,1.423,2755,1.937,2756,4.077,2757,3.195,2758,3.474,2759,1.541,2760,1.698,2761,5.956,2762,1.937,2763,1.541,2764,1.937,2765,1.937,2766,3.574,2767,1.541,2768,1.937,2769,1.937,2770,1.541,2771,1.937,2772,3.195,2773,1.937,2774,1.937,2775,1.937,2776,3.574,2777,1.937,2778,1.541,2779,1.937,2780,1.698,2781,1.423,2782,1.937,2783,1.937,2784,1.937,2785,1.937,2786,1.541,2787,1.541,2788,1.937,2789,3.195,2790,4.077,2791,1.937,2792,1.937,2793,1.937,2794,1.937,2795,1.937,2796,1.937,2797,1.937,2798,1.937,2799,4.077,2800,1.937,2801,1.937,2802,1.937,2803,1.937,2804,1.937,2805,1.937,2806,1.937,2807,1.937,2808,1.937,2809,1.937,2810,2.347,2811,3.195,2812,3.195,2813,1.937,2814,1.937,2815,7.303,2816,5.632,2817,3.195,2818,4.077,2819,3.195,2820,5.233,2821,1.423,2822,1.937,2823,1.937,2824,1.937,2825,3.195,2826,4.077,2827,1.937,2828,1.937,2829,1.937,2830,4.146,2831,5.233,2832,1.937,2833,2.541,2834,5.956,2835,1.698,2836,1.423,2837,1.541,2838,1.541,2839,4.73,2840,1.937,2841,1.937,2842,5.233,2843,1.937,2844,1.937,2845,1.937,2846,1.937,2847,1.937,2848,1.937,2849,1.937,2850,1.937,2851,3.195,2852,1.937,2853,1.937,2854,1.937,2855,3.195,2856,3.195,2857,4.077,2858,1.937,2859,3.195,2860,1.937,2861,1.937,2862,1.937,2863,1.937,2864,3.195,2865,3.195,2866,1.937,2867,1.937,2868,1.937,2869,1.937,2870,1.937,2871,1.937,2872,1.937,2873,1.937,2874,4.73,2875,1.937,2876,3.195,2877,1.937,2878,1.698,2879,1.541,2880,1.937,2881,3.195,2882,1.937,2883,1.937,2884,4.73,2885,1.937,2886,1.937,2887,6.452,2888,1.698,2889,1.698,2890,2.8,2891,3.195,2892,1.937,2893,1.937,2894,4.077,2895,1.937,2896,5.233,2897,4.077,2898,4.077,2899,5.233,2900,1.937,2901,1.937,2902,1.937,2903,1.423,2904,1.541,2905,1.937,2906,1.937,2907,1.423,2908,1.937,2909,1.937,2910,1.937,2911,3.195,2912,4.73,2913,4.73,2914,1.937,2915,5.632,2916,1.937,2917,1.937,2918,1.423,2919,1.698,2920,1.937,2921,1.937,2922,3.195,2923,1.937,2924,3.195,2925,1.937,2926,1.937,2927,1.937,2928,3.195,2929,2.8,2930,1.937,2931,1.937,2932,1.937,2933,1.937,2934,1.937,2935,1.937,2936,1.937,2937,1.937,2938,1.937,2939,4.73,2940,1.937,2941,1.541,2942,1.937,2943,4.73,2944,3.195,2945,4.077,2946,4.73,2947,1.937,2948,1.937,2949,1.937,2950,1.937,2951,1.937,2952,1.937,2953,1.937,2954,1.937,2955,1.937,2956,1.937,2957,3.195,2958,4.077,2959,3.195,2960,1.937,2961,3.195,2962,1.937,2963,1.937,2964,1.937,2965,1.937,2966,1.937,2967,1.937,2968,4.077,2969,1.698,2970,1.937,2971,1.937,2972,1.937,2973,1.937,2974,1.251,2975,5.233,2976,4.73,2977,1.937,2978,1.937,2979,3.195,2980,1.698,2981,1.937,2982,1.937,2983,1.937,2984,1.937,2985,1.937,2986,1.937,2987,1.937,2988,1.937,2989,1.937,2990,1.937,2991,1.937,2992,1.937,2993,1.937,2994,1.937,2995,1.937,2996,1.937,2997,1.937,2998,3.195,2999,1.937,3000,1.937,3001,1.937,3002,3.195,3003,3.195,3004,4.73,3005,5.233,3006,1.698,3007,1.541,3008,1.937,3009,1.698,3010,1.698,3011,3.195,3012,1.937,3013,1.937,3014,1.937,3015,1.937,3016,1.937,3017,1.937,3018,1.937,3019,1.937,3020,1.937,3021,1.937,3022,4.077,3023,3.195,3024,1.937,3025,1.937,3026,1.937,3027,1.937,3028,3.195,3029,1.937,3030,1.937,3031,1.937,3032,4.73,3033,1.937,3034,1.937,3035,1.937,3036,3.195,3037,1.937,3038,1.937,3039,1.937,3040,1.937,3041,1.937,3042,1.937,3043,1.937,3044,1.937,3045,1.541,3046,1.937,3047,1.937,3048,1.937,3049,1.937,3050,3.195,3051,1.937,3052,1.937,3053,1.937,3054,1.937,3055,1.937,3056,1.937,3057,1.937,3058,1.937,3059,1.937,3060,1.937,3061,3.195,3062,3.195,3063,3.195,3064,1.937,3065,1.937,3066,3.195,3067,1.937,3068,1.937,3069,1.937,3070,1.937,3071,1.937,3072,1.937,3073,1.937,3074,1.937,3075,1.423,3076,1.937,3077,1.937,3078,1.937,3079,1.937,3080,1.937,3081,1.937,3082,1.937,3083,1.937,3084,1.937,3085,1.937,3086,1.937,3087,1.937,3088,1.698,3089,1.937,3090,1.937,3091,3.195,3092,3.195,3093,1.937,3094,1.937,3095,1.698,3096,1.937,3097,1.937]],["title/components/FormActionBarComponent.html",[178,0.147,639,1]],["body/components/FormActionBarComponent.html",[0,0.016,3,0.144,4,0.169,5,0.115,13,1.476,14,0.952,19,0.169,23,0.753,24,5.187,25,3.688,29,0.831,32,0.692,34,0.687,35,0.011,36,0.562,37,0.298,38,0.427,39,1.245,42,1.306,44,2.4,51,0.956,52,0.925,53,1.144,60,2.105,61,3.318,64,1.344,65,0.727,72,1.064,73,0.625,79,0.378,90,0.214,92,0.348,93,0.798,95,0.144,98,1.387,100,0.512,110,0.005,111,0.007,112,0.005,117,0.727,118,1.367,125,1.514,144,1.032,170,0.858,172,1.036,178,0.225,212,0.605,324,1.748,337,1.801,353,1.245,364,0.924,387,0.952,413,1.008,495,0.924,534,1.344,577,0.98,578,1.038,579,1.068,582,0.847,583,1.292,585,1.064,587,1.064,601,1.008,602,1.424,603,1.855,604,1.1,605,1.1,606,0.898,607,1.1,608,0.952,609,1.1,610,0.952,611,1.1,612,0.98,613,1.1,614,0.98,615,1.1,616,0.98,617,1.1,618,0.98,619,1.038,620,1.1,621,0.98,622,1.509,623,0.98,624,1.038,625,1.1,626,0.98,627,1.1,628,0.98,629,1.1,630,0.952,631,1.1,632,1.1,633,0.952,634,1.1,635,0.98,636,1.1,637,0.952,638,1.1,639,1.652,640,1.723,641,0.98,642,0.924,643,0.924,644,1.509,645,0.98,646,1.008,647,1.1,648,0.952,649,1.1,650,0.98,651,1.1,652,0.98,653,1.1,654,0.924,655,1.1,656,0.952,657,1.1,658,0.98,659,1.068,660,1.1,661,0.952,662,0.898,663,1.1,664,0.952,665,1.1,666,0.924,667,1.1,668,0.952,669,1.038,670,0.98,671,1.1,672,1.008,673,1.1,674,0.98,675,1.1,676,0.952,677,1.1,678,0.98,679,1.038,680,0.98,681,0.952,682,1.068,683,0.798,684,0.952,685,1.1,686,0.952,687,1.1,688,0.952,689,1.1,690,0.952,691,1.1,692,0.952,693,1.1,694,0.952,695,1.1,696,0.952,697,1.1,698,0.952,699,1.038,700,1.1,703,1.914,704,1.914,711,1.344,712,1.75,714,2.562,715,2.562,742,2.488,756,0.666,1027,5.007,1029,1.974,1030,5.187,1039,5.007,1041,1.394,1045,3.648,1326,1.691,1327,2.321,1328,1.691,1329,2.321,1330,2.321,1331,2.321,1332,1.691,1333,1.691,1334,2.321,1335,2.321,1336,1.691,1337,1.691,1338,1.691,1339,1.691,1340,1.691,1341,2.321,1342,2.244,1343,1.691,1344,2.321,1345,2.321,1346,1.691,1347,2.321,1348,1.691,1349,1.691,1350,1.691,1351,1.691,1352,2.852,1353,1.691,1354,1.691,1355,1.691,1356,1.691,1357,1.691,1358,1.691,1359,1.691,1360,1.691,1361,1.691,1362,1.691,1363,1.691,1364,1.691,1365,1.691,1366,1.691,1367,1.691,1368,1.691,1369,2.321,1370,1.691,1371,1.691,1372,1.691,1373,1.691,1374,1.691,1375,1.691,1376,1.691,1377,1.691,1378,1.691,1379,1.691,1380,1.691,1381,1.691,1382,1.691,1383,2.321,1384,1.691,1385,1.691,1386,1.691,1387,1.691,1388,1.691,1389,1.394,1390,1.691,1391,1.691,1392,1.691,1393,1.691,1394,1.691,1395,1.691,1396,1.691,1397,1.691,3098,6.396,3099,5.907,3100,3.057,3101,4.543,3102,4.543,3103,5.717,3104,5.717,3105,6.448,3106,5.713,3107,4.162,3108,4.162,3109,4.162,3110,4.162,3111,3.648,3112,3.648,3113,4.162,3114,4.162,3115,4.162]],["title/components/FormSubmitBarComponent.html",[178,0.147,641,1]],["body/components/FormSubmitBarComponent.html",[0,0.015,2,2.3,3,0.135,4,0.158,5,0.11,8,0.728,10,1.95,13,1.548,14,0.894,16,1.674,19,0.158,23,0.72,24,5.017,25,3.531,29,0.803,32,0.682,35,0.011,36,0.505,37,0.316,39,1.248,42,1.25,44,2.322,51,0.98,52,0.947,53,1.198,60,0.947,61,3.176,64,1.287,65,0.498,72,1.388,73,0.587,79,0.362,90,0.205,92,0.327,93,0.75,95,0.135,98,1.35,110,0.005,111,0.007,112,0.005,117,0.696,118,1.322,125,1.474,144,0.988,170,0.821,172,1.049,174,1.777,178,0.248,212,0.568,304,2.222,324,1.674,329,2.897,337,1.724,353,1.24,364,0.868,387,1.976,413,0.947,415,3.531,423,4.687,495,0.868,500,3.176,534,1.287,577,0.92,578,0.975,579,1.003,582,0.795,583,1.288,585,1.018,587,1.018,601,0.947,602,1.364,603,1.805,604,1.033,605,1.033,606,0.843,607,1.033,608,0.894,609,1.033,610,0.894,611,1.033,612,0.92,613,1.033,614,0.92,615,1.033,616,0.92,617,1.033,618,0.92,619,0.975,620,1.033,621,0.92,622,1.445,623,0.92,624,0.975,625,1.033,626,0.92,627,1.033,628,0.92,629,1.033,630,0.894,631,1.033,632,1.033,633,0.894,634,1.033,635,0.92,636,1.033,637,0.894,638,1.033,639,0.92,640,1.667,641,1.608,642,0.868,643,1.401,644,1.445,645,0.92,646,0.947,647,1.033,648,0.894,649,1.033,650,0.92,651,1.033,652,0.92,653,1.033,654,0.868,655,1.033,656,0.894,657,1.033,658,0.92,659,1.003,660,1.033,661,0.894,662,0.843,663,1.033,664,0.894,665,1.033,666,0.868,667,1.033,668,0.894,669,0.975,670,0.92,671,1.033,672,0.947,673,1.033,674,0.92,675,1.033,676,0.894,677,1.033,678,0.92,679,0.975,680,0.92,681,0.894,682,1.003,683,0.75,684,0.894,685,1.033,686,0.894,687,1.033,688,0.894,689,1.033,690,0.894,691,1.033,692,0.894,693,1.033,694,0.894,695,1.033,696,0.894,697,1.033,698,0.894,699,0.975,700,1.033,703,1.832,704,1.832,711,1.287,712,1.704,714,2.478,715,2.478,742,2.382,756,0.625,800,2.777,810,2.3,851,2.149,923,3.342,1029,1.89,1030,5.017,1326,1.588,1327,2.222,1328,1.588,1329,2.222,1330,2.222,1331,2.222,1332,1.588,1333,1.588,1334,2.222,1335,2.222,1336,1.588,1337,1.588,1338,1.588,1339,1.588,1340,1.588,1341,2.222,1342,2.149,1343,1.588,1344,2.222,1345,2.222,1346,1.588,1347,2.222,1348,1.588,1349,1.588,1350,1.588,1351,1.588,1352,2.776,1353,1.588,1354,1.588,1355,1.588,1356,1.588,1357,1.588,1358,1.588,1359,1.588,1360,1.588,1361,1.588,1362,1.588,1363,1.588,1364,1.588,1365,1.588,1366,1.588,1367,1.588,1368,1.588,1369,2.222,1370,1.588,1371,1.588,1372,1.588,1373,1.588,1374,1.588,1375,1.588,1376,1.588,1377,1.588,1378,1.588,1379,1.588,1380,1.588,1381,1.588,1382,1.588,1383,2.222,1384,1.588,1385,1.588,1386,1.588,1387,1.588,1388,1.588,1389,1.31,1390,1.588,1391,1.588,1392,1.588,1393,1.588,1394,1.588,1395,1.588,1396,1.588,1397,1.588,1700,3.752,2328,2.897,2535,3.342,2732,4.017,3098,6.308,3099,5.826,3100,2.871,3101,4.349,3102,4.349,3103,5.53,3104,5.53,3105,6.304,3111,3.426,3116,6.833,3117,4.794,3118,4.349,3119,5.469,3120,5.469,3121,5.469,3122,4.794,3123,6.309,3124,5.469,3125,3.909,3126,3.909,3127,4.794,3128,5.434,3129,6.833,3130,5.469,3131,5.469,3132,4.349,3133,5.469,3134,3.909,3135,3.909,3136,3.909]],["title/components/FullNameComponent.html",[178,0.147,642,0.944]],["body/components/FullNameComponent.html",[0,0.013,3,0.114,4,0.134,5,0.098,8,0.617,9,1.401,11,0.437,13,0.905,14,0.758,16,1.487,19,0.134,20,0.557,21,1.988,23,0.64,29,0.733,32,0.736,34,0.949,35,0.012,36,0.657,37,0.336,38,0.59,39,1.013,42,1.111,44,1.22,51,1.07,52,1.074,53,0.852,58,1.81,60,0.803,64,1.144,65,0.807,72,0.905,73,1.122,79,0.556,90,0.253,91,1.444,92,0.277,93,0.636,95,0.198,98,0.96,110,0.004,111,0.006,112,0.004,115,1.048,116,1.449,117,0.619,118,1.205,119,2.051,121,1.87,122,1.928,123,1.254,124,1.679,125,1.367,126,1.974,127,1.974,131,1.732,137,1.014,138,1.11,139,1.22,140,1.11,141,1.014,142,1.077,143,1.182,144,1.04,146,1.628,148,2.059,149,1.628,164,1.909,170,0.498,172,1.026,176,1.554,178,0.233,185,1.394,187,1.077,189,2.192,202,2.76,212,0.482,286,1.836,324,1.487,332,2.043,334,1.487,336,1.628,337,1.532,353,1.228,364,1.278,387,0.758,413,0.803,450,3.217,469,1.788,494,2.369,495,0.736,534,1.144,577,0.78,578,0.826,579,0.851,582,0.674,583,1.277,585,0.905,587,0.905,601,0.803,602,1.212,603,1.674,604,0.876,605,0.876,606,0.715,607,0.876,608,0.758,609,0.876,610,0.758,611,0.876,612,0.78,613,0.876,614,0.78,615,0.876,616,0.78,617,0.876,618,0.78,619,0.826,620,0.876,621,0.78,622,1.284,623,0.78,624,0.826,625,0.876,626,0.78,627,0.876,628,0.78,629,0.876,630,0.758,631,0.876,632,0.876,633,0.758,634,0.876,635,0.78,636,0.876,637,0.758,638,0.876,639,0.78,640,1.52,641,0.78,642,1.659,643,1.618,644,1.284,645,0.78,646,0.803,647,0.876,648,0.758,649,0.876,650,0.78,651,0.876,652,0.78,653,0.876,654,0.736,655,0.876,656,0.758,657,0.876,658,0.78,659,0.851,660,0.876,661,0.758,662,0.715,663,0.876,664,0.758,665,0.876,666,0.736,667,0.876,668,0.758,669,0.826,670,0.78,671,0.876,672,0.803,673,0.876,674,0.78,675,0.876,676,0.758,677,0.876,678,0.78,679,0.826,680,0.78,681,0.758,682,0.851,683,0.636,684,0.758,685,0.876,686,0.758,687,0.876,688,0.758,689,0.876,690,0.758,691,0.876,692,0.758,693,0.876,694,0.758,695,0.876,696,0.758,697,0.876,698,0.758,699,0.826,700,0.876,711,1.144,712,1.435,714,2.26,715,1.302,716,2.698,717,1.145,756,0.53,788,0.928,810,2.043,861,2.157,946,2.969,1029,1.679,1055,2.195,1062,3.714,1142,3.333,1215,3.333,1309,2.969,2535,2.969,2572,2.273,2599,4.308,2714,3.333,3137,6.707,3138,6.194,3139,2.636,3140,4.654,3141,5.039,3142,4.259,3143,3.864,3144,3.864,3145,3.864,3146,3.947,3147,4.575,3148,4.575,3149,4.575,3150,5.043,3151,4.955,3152,4.226,3153,6.386,3154,6.386,3155,6.386,3156,5.043,3157,4.859,3158,3.314,3159,3.314,3160,3.314,3161,3.314,3162,3.314,3163,3.314,3164,3.314,3165,3.314,3166,3.314,3167,3.314,3168,3.314,3169,3.314,3170,4.226,3171,3.314,3172,3.314,3173,3.314,3174,3.314,3175,3.872,3176,3.864,3177,3.314,3178,3.864,3179,3.333,3180,4.259,3181,4.259,3182,4.259,3183,4.259,3184,3.569,3185,3.314,3186,3.314,3187,2.905,3188,2.636,3189,4.259,3190,2.636,3191,5.043,3192,2.636,3193,5.043,3194,2.636,3195,5.043,3196,2.434,3197,2.434,3198,2.905,3199,2.905,3200,2.905,3201,2.905,3202,2.905,3203,2.905,3204,2.905,3205,5.043,3206,5.043,3207,2.905,3208,2.905,3209,6.18,3210,7.051]],["title/interfaces/FullNameErrorMsg.html",[11,0.56,3170,3.123]],["body/interfaces/FullNameErrorMsg.html",[0,0.019,3,0.17,4,0.2,5,0.099,9,1.423,11,0.65,16,1.509,19,0.2,20,0.733,21,1.704,29,0.628,35,0.012,36,0.623,37,0.259,38,0.77,39,1.023,44,1.815,51,0.672,52,0.99,53,0.865,58,1.994,73,1.128,79,0.57,90,0.292,91,2.148,92,0.413,93,0.946,95,0.245,98,0.975,110,0.006,111,0.008,112,0.006,115,1.064,116,1.463,117,0.628,118,1.341,119,2.281,121,1.603,122,1.652,123,1.165,125,1.064,146,1.652,148,2.079,149,1.652,164,1.938,172,1.143,176,2.313,178,0.245,185,2.074,187,1.603,189,2.53,202,2.787,286,2.732,324,1.509,332,2.074,334,1.509,336,1.652,337,1.555,353,0.694,364,1.095,450,3.249,469,1.815,494,2.405,583,0.717,585,0.918,587,0.918,642,1.577,643,1.577,702,1.704,711,1.506,712,1.595,714,2.513,715,1.938,716,3.001,717,1.704,756,0.789,788,1.381,810,2.074,861,1.958,946,3.014,1055,2.228,1062,3.184,1142,3.384,1215,3.384,1309,3.014,2535,3.014,2572,3.384,2599,4.339,2714,3.384,3137,3.922,3138,3.623,3139,3.922,3140,4.699,3141,5.088,3142,4.323,3143,3.922,3144,3.922,3145,3.922,3146,3.384,3147,3.922,3148,3.922,3149,3.922,3150,4.323,3151,5.86,3152,3.623,3153,4.323,3154,4.323,3155,4.323,3156,4.323,3170,5.216,3175,3.909,3176,3.922,3178,3.922,3179,3.384,3180,4.323,3181,4.323,3182,4.323,3183,4.323,3184,3.623,3187,4.323,3188,3.922,3189,5.608,3190,3.922,3191,6.225,3192,3.922,3193,6.225,3194,3.922,3195,6.225,3196,3.623,3197,3.623,3198,4.323,3199,4.323,3200,4.323,3201,4.323,3202,4.323,3203,4.323,3204,4.323,3205,6.225,3206,6.225,3207,4.323,3208,4.323]],["title/interfaces/GeoAddressResult.html",[11,0.56,718,2.355]],["body/interfaces/GeoAddressResult.html",[0,0.02,3,0.178,4,0.209,5,0.104,11,0.681,12,1.844,19,0.209,20,0.756,26,2.647,35,0.012,36,0.414,37,0.32,53,1.157,79,0.579,81,3.548,90,0.303,92,0.433,95,0.227,96,3.161,98,1.022,100,0.972,110,0.007,111,0.009,112,0.007,115,1.116,170,1.149,198,1.44,211,2.426,225,3.654,227,3.853,229,2.865,230,2.337,231,3.161,240,3.831,242,4.689,249,4.845,258,3.494,259,3.161,260,4.259,264,3.34,282,2.865,283,2.426,286,2.865,290,3.161,316,2.591,329,2.74,488,2.253,494,3.217,497,4.054,498,3.899,499,3.34,500,3.004,519,2.253,702,1.787,709,4.511,718,4.023,720,3.349,723,3.542,743,2.74,751,1.598,756,1.055,760,4.914,833,3.34,851,2.032,1106,3.848,1170,3.161,1205,3.161,1206,3.161,1487,3.548,1507,3.548,1524,3.799,1538,3.34,2312,3.161,2407,3.548,2583,3.548,2734,2.626,2758,3.799,3211,4.113,3212,6.927,3213,4.113,3214,3.161,3215,4.534,3216,4.534,3217,6.367,3218,4.534,3219,4.534,3220,4.534,3221,4.534,3222,4.534,3223,4.534,3224,4.534,3225,4.534,3226,4.534,3227,4.534,3228,4.534,3229,4.534,3230,4.534,3231,4.534,3232,4.534,3233,4.534,3234,4.534,3235,5.782,3236,4.534,3237,4.534,3238,4.534,3239,4.534,3240,4.534,3241,4.534,3242,4.534,3243,4.534,3244,4.113,3245,4.534,3246,5.782,3247,4.534,3248,4.534,3249,4.534,3250,4.534,3251,4.534,3252,4.534]],["title/components/GeocoderInputComponent.html",[178,0.147,645,1]],["body/components/GeocoderInputComponent.html",[0,0.011,3,0.095,4,0.111,5,0.085,8,0.511,13,0.786,14,0.628,16,0.84,19,0.111,20,0.484,22,3.356,23,0.556,29,0.35,32,0.734,34,1.259,35,0.012,36,0.631,37,0.334,38,0.792,39,1.22,42,0.965,45,1.044,51,1.039,52,1.029,53,1.319,56,1.884,59,2.725,60,0.665,64,0.993,65,0.972,67,2.364,71,2.017,72,0.786,73,1.211,79,0.521,90,0.277,92,0.23,93,0.527,95,0.095,98,0.543,100,0.709,105,0.979,110,0.007,111,0.005,112,0.01,115,0.91,116,1.318,117,0.537,118,1.077,119,1.832,121,1.67,122,1.722,123,1.282,124,1.458,125,1.244,126,2.088,127,2.088,131,1.832,133,1.848,137,0.84,138,0.92,139,1.011,140,0.92,141,0.84,142,0.893,143,0.979,144,0.929,146,0.92,148,2.135,149,0.92,152,2.445,155,1.906,156,1.658,159,1.331,164,1.079,170,0.866,172,0.994,178,0.177,183,1.044,185,1.775,187,0.893,188,1.773,189,1.371,198,1.091,212,0.399,227,3.203,229,1.521,252,3.524,258,3.296,269,1.155,279,1.595,283,1.288,284,2.408,285,2.408,286,1.521,301,2.895,308,0.979,334,1.572,353,1.211,357,0.747,364,0.61,387,0.628,413,0.665,418,2.705,427,2.579,451,1.838,469,1.553,482,3.775,495,0.61,497,1.339,498,1.288,502,2.017,509,3.318,515,1.595,523,1.773,524,2.408,528,3.1,534,0.993,577,0.646,578,0.685,579,0.705,582,0.559,583,1.263,585,0.786,587,0.786,599,1.339,600,1.288,601,0.665,602,1.052,603,1.524,604,0.726,605,0.726,606,0.593,607,0.726,608,0.628,609,0.726,610,0.628,611,0.726,612,0.646,613,0.726,614,0.646,615,0.726,616,0.646,617,0.726,618,0.646,619,0.685,620,0.726,621,0.646,622,1.115,623,0.646,624,0.685,625,0.726,626,0.646,627,0.726,628,0.646,629,0.726,630,0.628,631,0.726,632,0.726,633,0.628,634,0.726,635,0.646,636,0.726,637,0.628,638,0.726,639,0.646,640,1.358,641,0.646,642,0.61,643,0.61,644,1.115,645,1.357,646,1.849,647,0.726,648,0.628,649,0.726,650,0.646,651,0.726,652,0.646,653,0.726,654,0.61,655,0.726,656,0.628,657,0.726,658,0.646,659,0.705,660,0.726,661,0.628,662,0.593,663,0.726,664,0.628,665,0.726,666,0.61,667,0.726,668,0.628,669,0.685,670,0.646,671,0.726,672,0.665,673,0.726,674,0.646,675,0.726,676,0.628,677,0.726,678,0.646,679,0.685,680,1.209,681,0.628,682,0.705,683,0.527,684,0.628,685,0.726,686,0.628,687,0.726,688,0.628,689,0.726,690,0.628,691,0.726,692,0.628,693,0.726,694,0.628,695,0.726,696,0.628,697,0.726,698,0.628,699,0.685,700,0.726,711,1.209,712,1.281,713,2.847,717,0.949,718,2.338,719,2.017,720,4.143,721,2.017,723,2.506,726,1.773,728,2.579,730,2.017,738,1.339,751,0.665,753,2.365,755,4.571,756,1.158,768,2.895,788,0.769,814,1.678,830,2.338,837,1.722,851,1.658,856,1.521,861,2.161,881,3.524,884,3.194,894,1.906,897,3.1,901,2.017,902,2.017,982,3.318,1019,2.338,1029,1.458,1041,1.722,1106,1.455,1109,2.725,1235,2.711,1238,1.339,1260,1.339,1264,1.196,1273,2.235,1275,3.614,1294,2.725,1536,1.521,1538,2.725,2291,4.236,2296,2.017,2394,2.184,2397,2.017,2416,4.087,2435,3.1,2514,2.451,2524,3.356,2566,2.184,2572,3.956,2584,2.895,2643,4.087,2655,3.775,2683,2.408,2685,2.408,2729,1.455,2734,1.395,2754,2.017,2837,2.184,3088,3.699,3117,4.505,3188,2.184,3214,4.314,3253,7.37,3254,6.687,3255,2.408,3256,4.22,3257,5.139,3258,4.22,3259,4.22,3260,5.139,3261,5.139,3262,5.139,3263,5.139,3264,5.139,3265,6.223,3266,5.139,3267,4.22,3268,4.22,3269,4.22,3270,4.22,3271,4.22,3272,4.22,3273,2.747,3274,2.747,3275,2.747,3276,2.747,3277,2.747,3278,2.747,3279,2.747,3280,4.22,3281,2.747,3282,2.747,3283,4.22,3284,2.747,3285,4.22,3286,2.747,3287,4.22,3288,2.747,3289,4.22,3290,5.767,3291,2.747,3292,2.747,3293,2.747,3294,4.22,3295,2.747,3296,2.747,3297,2.747,3298,2.747,3299,2.747,3300,2.747,3301,2.747,3302,2.747,3303,4.22,3304,6.223,3305,2.747,3306,3.699,3307,2.747,3308,4.22,3309,4.22,3310,2.747,3311,5.055,3312,4.22,3313,2.747,3314,2.747,3315,2.747,3316,2.408,3317,2.747,3318,2.747,3319,2.747,3320,2.747,3321,2.747,3322,2.747,3323,2.747,3324,2.747,3325,2.747,3326,4.505,3327,2.747,3328,4.22,3329,4.22,3330,5.139,3331,5.139,3332,2.747,3333,4.22,3334,2.747,3335,2.747,3336,2.747,3337,2.747,3338,2.408,3339,2.747,3340,2.747,3341,2.747,3342,2.747,3343,2.747,3344,2.747,3345,2.747,3346,2.747,3347,2.747,3348,2.184,3349,2.747,3350,2.747,3351,2.747,3352,2.747,3353,2.408,3354,2.747,3355,2.184,3356,2.747,3357,2.747,3358,4.22,3359,2.184,3360,2.747,3361,2.747,3362,2.747,3363,2.747,3364,2.747,3365,5.767,3366,4.22]],["title/injectables/GeocoderService.html",[316,1.67,3214,2.598]],["body/injectables/GeocoderService.html",[0,0.017,3,0.147,4,0.173,5,0.086,8,1.081,10,1.52,11,0.562,12,2.645,19,0.173,20,0.666,23,0.87,26,2.935,29,0.543,32,0.735,34,1.361,35,0.012,36,0.647,37,0.339,38,0.817,39,0.682,51,0.966,52,0.934,53,1.158,65,1.015,79,0.546,80,4.265,81,2.924,88,3.457,89,2.258,90,0.287,92,0.357,95,0.2,96,2.605,98,0.842,100,0.913,110,0.005,111,0.007,112,0.005,115,1.253,138,2.624,170,1.214,198,1.373,211,1.999,217,2.924,225,4.528,227,3.617,229,3.658,230,1.925,231,4.533,232,4.617,233,4.85,234,4.864,235,4.263,236,4.617,239,3.39,240,4.118,242,4.942,244,3.983,245,3.131,246,3.39,248,3.39,249,5.208,251,5.251,252,3.548,253,3.983,254,1.62,255,2.476,256,3.39,257,3.131,258,4.282,259,4.035,260,4.942,262,3.131,263,3.39,264,4.263,265,2.924,266,2.605,267,3.39,268,2.924,269,1.792,270,3.39,271,3.39,272,3.39,273,3.983,275,3.39,282,2.361,283,1.999,286,2.361,290,2.605,316,2.281,318,2.476,329,2.258,488,1.857,494,2.078,497,3.457,498,3.325,499,2.752,500,3.372,509,3.749,519,2.529,709,4.149,718,3.658,720,3.353,723,3.22,743,3.076,751,1.6,756,1.056,760,4.446,833,2.752,851,2.281,1106,3.93,1170,3.548,1205,2.605,1206,2.605,1487,2.924,1507,2.924,1524,3.131,1538,2.752,1622,3.736,1623,3.736,1624,3.736,1625,3.736,1626,3.736,1628,3.736,1629,3.736,2312,2.605,2407,3.983,2583,2.924,2734,2.164,2758,3.131,3211,3.39,3212,5.089,3213,3.39,3214,3.548,3215,5.788,3216,5.089,3217,6.866,3218,5.089,3219,3.736,3220,5.089,3221,3.736,3222,3.736,3223,3.736,3224,3.736,3225,3.736,3226,3.736,3227,3.736,3228,3.736,3229,3.736,3230,3.736,3231,3.736,3232,3.736,3233,3.736,3234,5.089,3235,5.788,3236,5.089,3237,5.089,3238,5.089,3239,3.736,3240,3.736,3241,3.736,3242,3.736,3243,3.736,3244,3.39,3245,3.736,3246,5.089,3247,3.736,3248,3.736,3249,3.736,3250,3.736,3251,3.736,3252,3.736,3367,5.806,3368,5.806,3369,4.263,3370,4.263,3371,4.263,3372,4.263,3373,4.263]],["title/components/HeaderComponent.html",[178,0.147,648,0.972]],["body/components/HeaderComponent.html",[0,0.016,3,0.145,4,0.17,5,0.115,8,0.782,13,1.07,14,0.96,17,2.802,19,0.17,20,0.659,23,0.757,29,0.535,30,2.88,31,4.656,32,0.712,34,0.948,35,0.012,36,0.591,37,0.309,38,0.589,39,0.919,42,1.314,51,0.96,52,0.928,60,1.017,64,1.352,65,0.897,72,1.07,73,0.863,79,0.549,87,3.337,88,2.047,90,0.245,92,0.351,94,2.132,95,0.145,100,0.806,110,0.005,111,0.007,112,0.005,117,0.732,118,1.373,123,1.015,125,1.52,144,1.038,170,0.63,172,0.992,178,0.226,212,0.61,286,2.325,304,1.706,353,1.245,364,0.932,387,0.96,396,4.854,398,5.175,399,5.037,400,5.037,413,1.017,448,2.565,475,2.257,477,3.337,495,0.932,534,1.793,577,0.988,578,1.047,579,1.078,582,0.854,583,1.292,585,1.07,587,1.07,601,1.017,602,1.433,603,1.862,604,1.109,605,1.109,606,0.906,607,1.109,608,0.96,609,1.109,610,0.96,611,1.109,612,0.988,613,1.109,614,0.988,615,1.109,616,0.988,617,1.109,618,0.988,619,1.047,620,1.109,621,0.988,622,1.518,623,0.988,624,1.047,625,1.109,626,0.988,627,1.109,628,0.988,629,1.109,630,0.96,631,1.109,632,1.109,633,0.96,634,1.109,635,0.988,636,1.109,637,0.96,638,1.109,639,0.988,640,1.731,641,0.988,642,0.932,643,0.932,644,1.518,645,0.988,646,1.017,647,1.109,648,1.742,649,1.109,650,0.988,651,1.109,652,0.988,653,1.109,654,0.932,655,1.109,656,0.96,657,1.109,658,0.988,659,1.078,660,1.109,661,0.96,662,0.906,663,1.109,664,0.96,665,1.109,666,0.932,667,1.109,668,0.96,669,1.047,670,0.988,671,1.109,672,1.017,673,1.109,674,0.988,675,1.109,676,0.96,677,1.109,678,0.988,679,1.047,680,0.988,681,0.96,682,1.078,683,0.805,684,0.96,685,1.109,686,0.96,687,1.109,688,0.96,689,1.109,690,0.96,691,1.109,692,0.96,693,1.109,694,0.96,695,1.109,696,0.96,697,1.109,698,0.96,699,1.047,700,1.109,782,1.829,861,2.332,1011,3.71,1019,2.325,1113,2.88,1171,1.649,1243,2.565,1310,1.829,1550,4.221,1574,2.71,2299,4.57,2336,4.57,2388,2.71,2584,2.88,3359,4.57,3374,3.68,3375,5.746,3376,5.746,3377,6.176,3378,4.221,3379,4.57,3380,3.942,3381,7.045,3382,7.045,3383,5.746,3384,5.746,3385,5.746,3386,5.746,3387,5.746,3388,6.552,3389,6.552,3390,7.045,3391,5.746,3392,7.045,3393,6.552,3394,7.379,3395,6.552,3396,5.746,3397,5.746,3398,4.198,3399,4.198,3400,4.198,3401,4.198,3402,4.198,3403,5.746,3404,4.198,3405,4.198,3406,4.198,3407,5.037,3408,3.68,3409,3.68,3410,3.68,3411,4.198,3412,4.198,3413,4.198,3414,4.198,3415,4.198,3416,4.198,3417,4.198,3418,5.746,3419,4.198,3420,4.198,3421,4.198,3422,4.198,3423,4.198,3424,4.198,3425,4.198]],["title/interfaces/IRadioItems.html",[11,0.56,3426,3.123]],["body/interfaces/IRadioItems.html",[0,0.02,3,0.177,4,0.208,5,0.103,8,0.956,11,0.676,13,1.348,14,1.173,18,3.136,19,0.208,20,0.752,29,0.653,35,0.012,37,0.309,38,0.673,51,0.894,52,1.132,53,0.9,58,1.59,73,1.087,79,0.533,89,2.718,90,0.286,92,0.429,93,0.984,95,0.25,98,1.014,100,0.631,110,0.007,111,0.008,112,0.007,113,3.2,115,1.107,117,0.653,118,1.375,120,2.718,123,0.795,125,1.107,132,2.667,133,2.526,146,1.719,148,2.133,149,1.719,152,2.578,156,2.578,164,2.016,171,2.606,172,1.135,174,2.133,178,0.226,187,1.668,189,2.133,191,1.57,194,4.225,334,1.57,353,0.722,357,1.785,441,1.95,583,0.746,585,0.956,587,0.956,666,1.607,702,1.773,711,1.545,712,1.804,751,1.243,753,2.751,756,0.821,780,3.078,788,1.437,796,3.203,856,3.636,1007,4.502,1010,4.821,1056,5.755,1082,4.081,1235,2.859,1264,2.235,1278,2.502,1306,3.332,1398,2.842,1399,2.718,1400,2.842,1494,4.237,2646,4.081,3378,4.821,3426,5.79,3427,4.081,3428,6.763,3429,5.753,3430,5.219,3431,5.753,3432,6.343,3433,5.219,3434,5.753,3435,6.686,3436,5.753,3437,6.686,3438,5.753,3439,5.753,3440,6.343,3441,4.498,3442,4.498,3443,4.498,3444,6.686,3445,4.081,3446,4.498,3447,4.498]],["title/interfaces/ISpaEnvResponse.html",[11,0.56,3448,3.381]],["body/interfaces/ISpaEnvResponse.html",[0,0.019,3,0.202,4,0.139,5,0.069,8,0.638,9,0.988,10,1.221,11,0.451,13,1.092,19,0.139,20,0.57,25,3.785,26,1.668,35,0.012,37,0.298,39,1.029,44,1.832,51,0.467,53,1.251,59,2.211,63,3.002,67,1.72,73,0.966,79,0.571,85,1.989,88,1.67,90,0.283,91,1.492,92,0.286,93,0.657,95,0.202,96,2.093,98,1.409,100,0.721,110,0.004,111,0.006,112,0.004,115,0.739,117,0.634,118,1.043,119,1.775,121,1.113,122,1.147,123,1.105,125,1.074,142,1.617,146,1.147,148,1.617,149,1.147,158,1.492,164,1.345,170,1.173,172,1.099,174,2.222,178,0.222,185,1.44,187,1.113,189,1.617,198,0.601,217,3.414,225,2.757,227,3.138,229,1.897,230,1.547,231,2.093,240,2.891,242,4.155,252,2.093,254,2.446,258,3.106,259,2.093,260,3.213,266,3.933,268,2.35,273,4.415,282,1.897,283,1.606,304,1.391,308,1.775,310,2.093,311,2.516,324,1.523,330,6.36,332,2.093,334,1.794,336,1.147,337,1.569,353,0.482,365,3.002,387,1.471,390,3.041,391,1.897,394,1.989,396,2.093,405,2.35,408,5.118,409,5.139,413,1.827,414,5.173,415,2.211,423,2.35,452,1.739,466,2.516,467,1.989,475,2.962,510,1.814,522,1.814,528,3.656,533,3.041,534,0.806,559,1.547,583,0.498,585,0.638,587,0.638,591,2.093,599,1.67,600,1.606,621,1.515,702,1.183,711,1.515,712,1.705,714,2.303,715,1.955,716,2.334,733,2.35,742,1.492,751,1.206,756,1.141,764,2.891,773,3.213,782,2.803,796,1.391,837,1.147,845,1.261,861,1.523,894,2.907,959,4.306,1041,1.147,1055,1.547,1106,3.621,1107,2.516,1109,3.213,1155,2.211,1186,3.656,1215,2.35,1432,2.093,1487,2.35,1497,3.213,1507,2.35,1514,2.35,1515,2.757,1525,2.724,1538,2.211,1564,3.405,1565,1.989,1566,3.958,1570,2.724,1573,3.958,1574,2.211,1575,2.724,1576,2.516,1577,2.724,1579,2.724,1580,3.958,1581,2.724,1583,2.724,1675,4.727,1809,4.363,2271,3.213,2303,2.757,2312,2.093,2326,2.724,2388,3.213,2571,3.002,2577,3.414,2583,2.35,2620,2.724,2621,3.002,2622,3.041,2653,3.002,2697,3.002,2705,3.002,2716,2.724,2718,4.363,2727,4.363,2780,4.363,2781,3.656,2830,3.002,2890,3.002,2904,2.724,2974,4.155,3075,3.656,3146,2.35,3380,3.414,3448,4.662,3449,3.002,3450,2.724,3451,2.516,3452,7.132,3453,7.132,3454,4.977,3455,6.836,3456,6.436,3457,6.436,3458,6.436,3459,6.436,3460,6.436,3461,6.436,3462,6.436,3463,3.425,3464,3.425,3465,3.425,3466,3.002,3467,3.425,3468,3.425,3469,3.425,3470,3.425,3471,3.425,3472,3.002,3473,3.425,3474,4.977,3475,4.977,3476,4.363,3477,6.436,3478,6.436,3479,4.977,3480,3.958,3481,4.977,3482,4.977,3483,5.992,3484,4.727,3485,4.977,3486,4.977,3487,4.363,3488,4.363,3489,3.958,3490,4.363,3491,4.977,3492,4.977,3493,4.977,3494,6.252,3495,4.977,3496,4.977,3497,4.977,3498,4.977,3499,4.977,3500,4.977,3501,4.977,3502,4.977,3503,4.977,3504,4.977,3505,4.977,3506,4.977,3507,4.977,3508,4.977,3509,4.977,3510,4.363,3511,3.425,3512,3.425,3513,3.425,3514,3.002,3515,3.425,3516,3.002,3517,2.724,3518,3.425,3519,2.724,3520,3.425,3521,4.977,3522,2.724,3523,3.425,3524,3.425,3525,3.425,3526,3.425,3527,3.425,3528,4.977,3529,3.425,3530,3.002,3531,3.002,3532,3.425,3533,3.002,3534,3.425,3535,3.002,3536,3.425,3537,3.958,3538,3.002,3539,3.425,3540,3.425,3541,3.425,3542,3.425,3543,3.425,3544,3.425,3545,3.425,3546,3.425,3547,3.425,3548,3.425,3549,3.425,3550,3.425,3551,3.425,3552,2.724,3553,3.425,3554,3.425,3555,3.002,3556,3.425,3557,3.425,3558,3.425,3559,3.425,3560,3.425,3561,3.425,3562,3.425,3563,4.977,3564,3.425,3565,3.425,3566,3.425,3567,3.425,3568,3.425,3569,3.425,3570,3.425,3571,2.516,3572,3.425,3573,3.425,3574,3.425,3575,3.425,3576,3.425,3577,3.425,3578,3.425,3579,3.425,3580,3.425,3581,3.425,3582,3.425,3583,3.425,3584,4.977,3585,4.977,3586,3.425,3587,3.425,3588,3.425,3589,3.425,3590,3.425,3591,4.977,3592,3.425,3593,3.425,3594,3.425,3595,3.425]],["title/interfaces/Maxlengths.html",[11,0.56,731,2.745]],["body/interfaces/Maxlengths.html",[0,0.012,3,0.106,4,0.125,5,0.062,9,1.33,10,1.101,11,0.727,16,1.689,19,0.125,20,0.529,21,1.067,29,0.393,35,0.012,36,0.247,37,0.265,38,0.781,39,1.288,44,2.031,51,0.628,52,1.043,53,1.401,55,1.568,67,1.067,73,0.829,79,0.573,84,1.506,90,0.267,92,0.258,93,0.592,95,0.211,98,1.21,100,0.937,101,1.794,110,0.004,111,0.006,112,0.004,115,0.666,116,1.054,117,0.393,118,0.966,119,1.644,121,1.003,122,1.035,125,0.666,131,1.101,141,0.945,146,1.035,148,1.499,149,1.035,159,0.974,160,1.395,162,1.299,172,1.134,178,0.211,179,3.164,180,2.554,185,1.939,187,1.003,189,1.003,190,3.164,192,3.373,194,1.711,196,2.118,198,1.205,202,1.345,205,2.854,211,2.163,254,1.174,295,1.395,299,1.636,304,2.242,308,1.968,323,1.711,324,1.411,336,1.035,337,1.454,353,0.435,357,0.84,377,2.268,391,1.711,418,1.448,427,2.818,441,1.37,451,1.345,452,1.568,469,1.137,479,1.794,488,1.345,493,1.568,497,4.026,498,3.713,509,3.564,510,1.636,515,1.794,519,1.345,583,0.449,585,0.575,587,0.575,606,0.995,643,0.686,646,1.117,662,0.995,701,3.786,702,1.067,703,1.545,704,1.545,705,2.268,706,3.387,707,3.667,708,3.667,709,4.036,710,4.832,711,1.085,712,1.376,713,2.554,714,2.168,715,1.812,716,2.163,717,1.067,718,2.554,719,2.268,720,4.212,721,2.268,722,3.564,723,3.194,724,2.118,725,3.164,726,1.994,727,3.741,728,3.373,729,2.977,730,2.268,731,4.23,732,4.494,733,2.118,734,2.268,735,2.456,736,2.456,737,2.456,738,1.506,739,1.794,740,1.887,741,1.636,742,1.345,743,2.443,744,3.667,745,2.818,746,2.118,747,2.456,748,2.456,749,2.268,750,1.994,751,1.665,752,2.456,753,2.49,754,5.663,755,2.268,756,0.494,757,1.994,758,2.268,759,2.268,760,2.678,761,2.456,762,2.268,763,2.456,764,3.991,765,2.268,766,2.456,767,2.268,768,2.118,769,3.667,770,2.456,771,2.456,772,3.667,773,2.977,774,2.456,775,2.456,776,2.456,777,2.456,778,2.456,779,2.168,780,2.589,781,1.994,782,2.854,783,2.456,784,2.456,785,2.456,786,4.2,787,1.794,788,0.865,789,2.268,790,2.456,791,2.456,792,3.667,793,6.059,794,3.667,795,2.977,796,2.242,797,3.667,798,5.951,799,4.389,800,1.568,801,2.268,802,1.994,803,2.456,804,2.456,805,2.456,806,2.456,807,2.456,808,2.456,809,4.868,810,1.299,811,2.456,812,2.456,813,3.667,814,2.818,815,1.636,816,3.667,817,5.21,818,5.465,819,5.21,820,2.456,821,2.456,822,3.667,823,2.456,824,3.667,825,2.818,826,2.456,827,2.268,828,2.456,829,2.456,830,1.711,831,2.456,832,2.456,833,3.564,834,2.456,835,2.456,836,2.456,837,2.386,838,3.387,839,2.977,840,3.667,841,3.667,842,3.667,843,3.667,844,2.456,845,1.137,846,2.456,847,2.456,848,3.786,849,2.118,850,2.456,851,1.213,852,2.456,853,2.456,854,2.456,855,1.994,856,1.711,857,2.456,858,2.456,859,2.456,860,2.118,861,2.24,862,2.456,863,4.868,864,2.456,865,2.456,866,2.456,867,2.456,868,2.456,869,4.054,870,2.118,871,2.456,872,4.2,873,3.667,874,3.164,875,3.667,876,4.389,877,2.118,878,2.456,879,2.456,880,2.118,881,1.887,882,1.887,883,2.118,884,1.711,885,2.456,886,2.456,887,2.456,888,3.387,889,2.456,890,2.456,891,2.268,892,2.456,893,2.268,894,2.083,895,2.456,896,2.456,897,2.268,898,2.456,899,1.794,900,2.456,901,2.268,902,2.268,903,2.456,904,2.456,905,2.456,906,2.456,907,2.456,908,2.456,909,2.456,910,2.456,911,2.456,912,2.456,913,2.456,914,2.456,915,2.456,916,2.118,917,2.456,918,3.667,919,2.456,920,2.456]],["title/classes/MoHCommonLibraryError.html",[0,0.017,3596,3.123]],["body/classes/MoHCommonLibraryError.html",[0,0.026,2,2.769,3,0.227,4,0.267,5,0.132,29,0.838,32,0.575,34,1.086,35,0.011,36,0.527,37,0.267,38,0.675,79,0.534,89,3.488,95,0.227,110,0.008,111,0.01,112,0.008,115,1.648,170,1.212,1515,3.647,1565,3.824,3596,5.613,3597,6.698,3598,5.771,3599,7.641,3600,6.584,3601,6.584,3602,6.584,3603,7.641,3604,7.641,3605,6.584,3606,6.584,3607,6.584]],["title/components/NameComponent.html",[178,0.147,364,0.944]],["body/components/NameComponent.html",[0,0.014,3,0.124,4,0.146,5,0.104,8,0.672,9,1.491,13,0.963,14,0.825,16,1.582,18,3.158,19,0.146,20,0.592,21,2.087,23,0.681,29,0.658,32,0.743,34,1.262,35,0.012,36,0.661,37,0.34,38,0.81,39,1.116,42,1.182,45,1.372,51,1.042,52,1.122,53,0.906,58,1.597,60,0.874,64,1.216,65,0.952,72,0.963,73,1.201,79,0.539,90,0.226,92,0.302,93,0.692,95,0.124,100,0.636,110,0.005,111,0.007,112,0.005,115,1.115,116,1.507,117,0.658,119,2.153,121,1.962,122,2.023,123,1.185,124,1.786,126,2.453,127,2.453,129,2.738,131,2.153,133,2.375,137,1.104,138,1.209,139,1.328,140,1.209,141,1.104,142,1.173,143,1.287,144,1.091,146,1.209,148,2.36,149,1.209,152,2.741,155,2.335,156,2.031,159,1.63,160,2.335,162,2.174,164,1.418,170,0.542,172,1.022,178,0.208,183,1.372,185,2.174,187,1.68,188,2.33,189,1.68,192,2.205,212,0.525,237,2.252,332,2.174,350,3.002,353,1.234,357,1.406,364,1.464,387,0.825,413,0.874,441,1.072,477,3.002,495,0.802,514,3.199,534,1.216,577,0.849,578,0.9,579,0.926,582,0.734,583,1.283,585,0.963,587,0.963,601,0.874,602,1.289,603,1.742,604,0.954,605,0.954,606,0.779,607,0.954,608,0.825,609,0.954,610,0.825,611,0.954,612,0.849,613,0.954,614,0.849,615,0.954,616,0.849,617,0.954,618,0.849,619,0.9,620,0.954,621,0.849,622,1.366,623,0.849,624,0.9,625,0.954,626,0.849,627,0.954,628,0.849,629,0.954,630,0.825,631,0.954,632,0.954,633,0.825,634,0.954,635,0.849,636,0.954,637,0.825,638,0.954,639,0.849,640,1.596,641,0.849,642,0.802,643,0.802,644,1.366,645,0.849,646,0.874,647,0.954,648,0.825,649,0.954,650,0.849,651,0.954,652,0.849,653,0.954,654,0.802,655,0.954,656,0.825,657,0.954,658,0.849,659,0.926,660,0.954,661,0.825,662,0.779,663,0.954,664,0.825,665,0.954,666,0.802,667,0.954,668,0.825,669,0.9,670,0.849,671,0.954,672,0.874,673,0.954,674,0.849,675,0.954,676,0.825,677,0.954,678,0.849,679,0.9,680,0.849,681,0.825,682,0.926,683,0.692,684,0.825,685,0.954,686,0.825,687,0.954,688,0.825,689,0.954,690,0.825,691,0.954,692,0.825,693,0.954,694,0.825,695,0.954,696,0.825,697,0.954,698,0.825,699,0.9,700,0.954,711,1.421,712,1.864,717,1.247,751,0.874,753,2.506,756,0.827,788,1.011,810,2.174,1029,1.786,1041,2.023,1171,2.031,1235,3.04,1238,1.76,1242,3.797,1260,1.76,1264,1.572,1274,3.345,1278,2.945,1282,2.624,1296,2.205,1310,2.252,1312,3.337,1313,2.872,1314,3.546,1315,3.546,1316,3.546,1323,1.999,1325,1.999,1401,1.999,1549,3.797,2270,3.507,2272,4.143,2274,4.802,2275,2.476,2510,3.797,2513,3.797,2514,3.002,2515,4.531,2524,4.11,2548,3.164,2734,1.832,3144,4.11,3145,4.11,3178,4.11,3179,4.523,3608,3.164,3609,6.039,3610,6.039,3611,5.169,3612,3.609,3613,3.609,3614,5.169,3615,3.609,3616,3.609,3617,5.169,3618,3.609,3619,3.609,3620,3.164,3621,3.609,3622,3.609,3623,3.609,3624,3.609,3625,3.609,3626,3.609,3627,3.609,3628,3.609,3629,3.609,3630,3.609,3631,3.609,3632,3.609,3633,6.039,3634,3.609,3635,3.609,3636,5.169]],["title/components/PageFrameworkComponent.html",[178,0.147,650,1]],["body/components/PageFrameworkComponent.html",[0,0.017,3,0.15,4,0.177,5,0.119,8,0.812,13,1.098,14,1.528,19,0.177,23,0.777,32,0.515,35,0.011,36,0.535,37,0.177,42,1.348,51,1.018,52,0.575,60,1.056,64,1.388,65,0.555,72,1.554,73,0.655,90,0.163,92,0.365,95,0.203,110,0.006,111,0.008,112,0.006,117,0.751,118,1.4,125,1.544,144,1.066,170,0.885,172,0.83,174,2.326,178,0.23,212,0.634,334,1.805,353,1.248,364,0.969,387,0.997,413,1.056,423,4.045,467,4.157,469,2.17,495,0.969,534,1.684,577,1.026,578,1.087,579,1.119,582,0.887,583,1.294,585,1.098,587,1.098,601,1.056,602,1.47,603,1.891,604,1.152,605,1.152,606,0.941,607,1.152,608,0.997,609,1.152,610,0.997,611,1.152,612,1.026,613,1.152,614,1.026,615,1.152,616,1.026,617,1.152,618,1.026,619,1.087,620,1.152,621,1.026,622,1.558,623,1.026,624,1.087,625,1.152,626,1.026,627,1.152,628,1.026,629,1.152,630,0.997,631,1.152,632,1.152,633,0.997,634,1.152,635,1.026,636,1.152,637,0.997,638,1.152,639,1.026,640,1.765,641,1.026,642,0.969,643,0.969,644,1.558,645,1.026,646,1.056,647,1.152,648,0.997,649,1.152,650,1.684,651,1.152,652,1.026,653,1.152,654,0.969,655,1.152,656,0.997,657,1.152,658,1.026,659,1.119,660,1.152,661,0.997,662,0.941,663,1.152,664,0.997,665,1.152,666,0.969,667,1.152,668,0.997,669,1.087,670,1.026,671,1.152,672,1.056,673,1.152,674,1.026,675,1.152,676,0.997,677,1.152,678,1.026,679,1.087,680,1.026,681,0.997,682,1.119,683,0.837,684,0.997,685,1.152,686,0.997,687,1.152,688,0.997,689,1.152,690,0.997,691,1.152,692,0.997,693,1.152,694,0.997,695,1.152,696,0.997,697,1.152,698,0.997,699,1.087,700,1.152,703,1.976,704,1.976,810,2.48,1050,5.169,1175,4.331,1326,1.772,1327,2.396,1328,1.772,1329,2.396,1330,2.396,1331,2.396,1332,1.772,1333,1.772,1334,2.396,1335,2.396,1336,1.772,1337,1.772,1338,1.772,1339,1.772,1340,1.772,1341,2.396,1342,2.317,1343,1.772,1344,2.396,1345,2.396,1346,1.772,1347,2.396,1348,1.772,1349,1.772,1350,1.772,1351,1.772,1352,2.908,1353,1.772,1354,1.772,1355,1.772,1356,1.772,1357,1.772,1358,1.772,1359,1.772,1360,1.772,1361,1.772,1362,1.772,1363,1.772,1364,1.772,1365,1.772,1366,1.772,1367,1.772,1368,1.772,1369,2.396,1370,1.772,1371,1.772,1372,1.772,1373,1.772,1374,1.772,1375,1.772,1376,1.772,1377,1.772,1378,1.772,1379,1.772,1380,1.772,1381,1.772,1382,1.772,1383,2.396,1384,1.772,1385,1.772,1386,1.772,1387,1.772,1388,1.772,1389,1.461,1390,1.772,1391,1.772,1392,1.772,1393,1.772,1394,1.772,1395,1.772,1396,1.772,1397,1.772,1551,4.331,1567,4.331,1576,4.331,2302,3.425,2576,3.203,2626,4.331,2627,4.331,3128,5.946,3132,5.692,3140,4.331,3378,4.331,3488,5.169,3637,5.313,3638,5.313,3639,3.823,3640,5.169,3641,5.169,3642,5.897,3643,5.897,3644,5.897,3645,5.169,3646,4.331,3647,7.158,3648,5.169,3649,5.897,3650,5.897,3651,4.69,3652,4.361,3653,4.361]],["title/interfaces/PageListInterface.html",[11,0.56,1191,3.123]],["body/interfaces/PageListInterface.html",[0,0.027,3,0.165,4,0.194,5,0.096,8,0.894,9,1.384,11,0.923,12,1.711,16,1.468,17,2.34,19,0.301,20,0.72,26,2.348,29,0.611,31,4.282,32,0.419,35,0.012,37,0.254,39,1.324,52,0.632,53,1.229,65,0.611,72,1.437,73,0.944,79,0.552,84,3.861,88,3.861,90,0.263,92,0.401,94,2.436,95,0.217,98,1.469,100,1.007,105,2.498,110,0.006,111,0.008,112,0.006,117,0.611,123,1.269,174,2.042,193,3.098,198,1.304,205,2.737,230,2.168,316,2.469,317,4.057,319,3.292,321,3.84,322,2.787,332,2.643,333,3.84,339,3.816,340,3.816,341,3.816,342,3.816,357,1.305,390,4.282,391,2.658,426,3.287,441,1.425,475,1.885,477,3.65,522,2.542,559,2.839,702,1.658,751,1.522,825,3.84,851,1.885,861,1.923,883,4.807,884,3.481,923,2.932,930,6.298,1150,3.524,1151,4.998,1152,3.816,1153,4.206,1154,3.524,1155,3.098,1156,4.206,1157,4.206,1158,4.206,1159,4.206,1160,4.206,1161,3.816,1162,3.816,1163,4.206,1164,4.206,1170,3.84,1171,2.469,1172,3.098,1174,4.206,1175,4.616,1177,4.206,1178,3.524,1179,5.147,1182,4.206,1184,4.206,1185,4.206,1186,3.524,1188,4.206,1189,4.206,1191,5.147,1197,5.509,1198,3.816,1199,4.206,1200,4.206,1201,3.524,1202,4.206,1203,5.509,1204,5.509,1205,2.932,1206,2.932,1207,5.509,1208,5.509,1209,6.143,1210,6.766,1211,6.143,1212,5.509,1213,4.998,1214,4.998,1215,4.311,1216,5.509,1217,4.206,1218,4.206,1219,4.206,1220,4.206,1221,3.524,1222,4.206,1223,4.206,1224,4.206,1225,4.206,1226,4.206,1227,4.206,1228,4.206,1229,4.206,1230,4.206,1231,4.206,1484,3.816,3654,4.798]],["title/components/PageSectionComponent.html",[178,0.147,652,1]],["body/components/PageSectionComponent.html",[0,0.017,3,0.155,4,0.182,5,0.121,13,1.119,14,1.025,16,1.372,19,0.182,23,0.792,29,0.863,32,0.592,35,0.011,36,0.542,37,0.182,42,1.374,49,3.567,51,0.611,52,0.591,60,1.086,64,1.414,65,0.571,72,1.521,73,0.673,90,0.168,92,0.375,95,0.155,110,0.006,111,0.008,112,0.006,117,0.765,118,1.42,125,1.562,144,1.086,170,0.902,172,0.954,178,0.234,212,0.652,304,1.822,353,1.249,364,0.996,387,1.025,396,2.741,413,1.086,428,2.741,450,2.277,495,0.996,534,1.414,577,1.056,578,1.118,579,1.151,582,0.913,583,1.296,585,1.119,587,1.119,601,1.086,602,1.69,603,1.913,604,1.185,605,1.185,606,0.968,607,1.185,608,1.025,609,1.185,610,1.025,611,1.185,612,1.056,613,1.185,614,1.056,615,1.185,616,1.056,617,1.185,618,1.056,619,1.118,620,1.185,621,1.056,622,1.588,623,1.056,624,1.118,625,1.185,626,1.056,627,1.185,628,1.056,629,1.185,630,1.025,631,1.185,632,1.185,633,1.025,634,1.185,635,1.056,636,1.185,637,1.025,638,1.185,639,1.056,640,1.791,641,1.056,642,0.996,643,0.996,644,1.588,645,1.056,646,1.086,647,1.185,648,1.025,649,1.185,650,1.056,651,1.185,652,1.704,653,1.185,654,0.996,655,1.185,656,1.025,657,1.185,658,1.056,659,1.151,660,1.185,661,1.025,662,0.968,663,1.185,664,1.025,665,1.185,666,0.996,667,1.185,668,1.025,669,1.118,670,1.056,671,1.185,672,1.086,673,1.185,674,1.056,675,1.185,676,1.025,677,1.185,678,1.056,679,1.118,680,1.056,681,1.025,682,1.151,683,0.86,684,1.025,685,1.185,686,1.025,687,1.185,688,1.025,689,1.185,690,1.025,691,1.185,692,1.025,693,1.185,694,1.025,695,1.185,696,1.025,697,1.185,698,1.025,699,1.118,700,1.185,703,2.013,704,2.013,751,1.086,757,2.896,796,1.822,1007,3.077,1155,2.896,1326,1.822,1327,2.441,1328,1.822,1329,2.441,1330,2.441,1331,2.441,1332,1.822,1333,1.822,1334,2.441,1335,2.441,1336,1.822,1337,1.822,1338,1.822,1339,1.822,1340,1.822,1341,2.441,1342,2.361,1343,1.822,1344,2.441,1345,2.441,1346,1.822,1347,2.441,1348,1.822,1349,1.822,1350,1.822,1351,1.822,1352,2.941,1353,1.822,1354,1.822,1355,1.822,1356,1.822,1357,1.822,1358,1.822,1359,1.822,1360,1.822,1361,1.822,1362,1.822,1363,1.822,1364,1.822,1365,1.822,1366,1.822,1367,1.822,1368,1.822,1369,2.441,1370,1.822,1371,1.822,1372,1.822,1373,1.822,1374,1.822,1375,1.822,1376,1.822,1377,1.822,1378,1.822,1379,1.822,1380,1.822,1381,1.822,1382,1.822,1383,2.441,1384,1.822,1385,1.822,1386,1.822,1387,1.822,1388,1.822,1389,1.503,1390,1.822,1391,1.822,1392,1.822,1393,1.822,1394,1.822,1395,1.822,1396,1.822,1397,1.822,2514,2.605,2576,3.294,2626,4.414,2627,4.414,3009,3.931,3128,5.757,3380,4.649,3472,3.931,3637,5.757,3648,6.346,3651,4.779,3655,5.757,3656,3.931,3657,6.009,3658,6.009,3659,6.009,3660,6.009,3661,4.485,3662,4.485,3663,7.549,3664,4.485,3665,4.485,3666,4.485,3667,4.485,3668,3.931,3669,4.485,3670,4.485,3671,4.485,3672,4.485]],["title/components/PasswordComponent.html",[178,0.147,654,0.944]],["body/components/PasswordComponent.html",[0,0.011,3,0.095,4,0.111,5,0.085,8,0.785,9,0.791,11,0.555,13,0.956,14,0.627,19,0.111,20,0.483,23,0.555,29,0.654,32,0.734,34,0.951,35,0.012,36,0.547,37,0.333,38,0.591,39,1.05,42,1.174,44,2.289,51,1.091,52,1.062,53,1.091,55,2.14,56,1.882,58,1.59,60,0.664,61,2.448,64,0.992,65,0.792,67,0.948,72,0.785,73,0.865,79,0.559,90,0.216,92,0.229,93,0.526,95,0.177,98,1.139,100,0.519,101,1.593,105,2.054,110,0.004,111,0.005,112,0.004,115,0.909,116,1.317,117,0.537,118,1.076,123,1.21,124,2.149,125,1.243,133,1.847,137,0.839,138,0.919,139,1.009,140,0.919,141,1.29,142,0.891,143,0.978,144,0.928,162,2.159,170,0.771,172,1.087,176,2.408,178,0.243,191,0.839,198,0.739,200,3.522,208,1.676,211,1.286,212,0.613,254,1.043,288,1.453,299,1.453,308,0.978,310,3.521,324,1.29,334,1.571,337,1.329,353,1.211,357,0.746,364,0.609,387,0.627,394,1.593,413,0.664,418,3.395,426,2.408,427,1.676,435,2.015,441,1.847,451,1.195,452,1.393,466,3.096,469,1.551,475,1.656,488,1.195,494,2.055,495,0.609,519,1.195,522,1.453,534,0.992,550,4.583,577,0.645,578,0.684,579,0.704,582,0.558,583,1.263,585,0.785,587,0.785,601,0.664,602,1.051,603,1.523,604,0.725,605,0.725,606,0.592,607,0.725,608,0.627,609,0.725,610,0.627,611,0.725,612,0.645,613,0.725,614,0.645,615,0.725,616,0.645,617,0.725,618,0.645,619,0.684,620,0.725,621,0.645,622,1.114,623,0.645,624,0.684,625,0.725,626,0.645,627,0.725,628,0.645,629,0.725,630,0.627,631,0.725,632,0.725,633,0.627,634,0.725,635,0.645,636,0.725,637,0.627,638,0.725,639,0.645,640,1.357,641,0.645,642,0.609,643,0.609,644,1.114,645,0.645,646,0.664,647,0.725,648,0.627,649,0.725,650,0.645,651,0.725,652,0.645,653,0.725,654,1.458,655,0.725,656,0.627,657,0.725,658,0.645,659,0.704,660,0.725,661,0.627,662,0.592,663,0.725,664,0.627,665,0.725,666,0.609,667,0.725,668,0.627,669,0.684,670,0.645,671,0.725,672,0.664,673,0.725,674,0.645,675,0.725,676,0.627,677,0.725,678,0.645,679,0.684,680,0.645,681,0.627,682,0.704,683,0.526,684,0.627,685,0.725,686,0.627,687,0.725,688,0.627,689,0.725,690,0.627,691,0.725,692,0.627,693,0.725,694,0.627,695,0.725,696,0.627,697,0.725,698,0.627,699,0.684,700,0.725,703,1.412,704,1.412,711,1.356,712,1.637,713,2.844,714,2.017,715,2.017,717,0.948,738,1.337,739,1.593,740,1.676,741,1.453,742,1.836,746,3.522,751,0.664,756,0.674,780,2.703,788,0.768,830,2.335,845,1.009,861,2.413,1019,1.519,1029,1.457,1041,2.2,1052,3.352,1171,1.077,1273,1.453,1282,2.14,1284,1.771,1313,2.709,1326,1.114,1327,1.713,1328,1.114,1329,1.713,1330,1.713,1331,1.713,1332,1.114,1333,1.114,1334,1.713,1335,1.713,1336,1.114,1337,1.114,1338,1.114,1339,1.114,1340,1.114,1341,1.713,1342,1.656,1343,1.114,1344,1.713,1345,1.713,1346,1.114,1347,1.713,1348,1.114,1349,1.114,1350,1.114,1351,1.114,1352,2.341,1353,1.114,1354,1.114,1355,1.114,1356,1.114,1357,1.114,1358,1.114,1359,1.114,1360,1.114,1361,1.114,1362,1.114,1363,1.114,1364,1.114,1365,1.114,1366,1.114,1367,1.114,1368,1.114,1369,1.713,1370,1.114,1371,1.114,1372,1.114,1373,1.114,1374,1.114,1375,1.114,1376,1.114,1377,1.114,1378,1.114,1379,1.114,1380,1.114,1381,1.114,1382,1.114,1383,1.713,1384,1.114,1385,1.114,1386,1.114,1387,1.114,1388,1.114,1389,0.919,1390,1.114,1391,1.114,1392,1.114,1393,1.114,1394,1.114,1395,1.114,1396,1.114,1397,1.114,1448,1.977,1450,5.428,1515,1.519,1589,1.676,1656,4.583,2270,2.982,2272,3.522,2275,1.882,2288,3.72,2316,1.676,2356,2.015,2412,3.695,2414,2.404,2418,3.352,2435,3.096,2519,3.192,2540,2.14,2622,3.521,2659,2.181,2711,3.953,2715,1.593,2725,2.722,2781,3.096,2903,2.015,3045,3.352,3146,3.522,3152,3.771,3196,2.015,3197,2.015,3209,3.695,3480,4.583,3489,3.352,3571,2.015,3673,2.181,3674,5.755,3675,3.695,3676,3.352,3677,3.352,3678,3.695,3679,3.695,3680,3.695,3681,3.695,3682,5.451,3683,3.695,3684,3.695,3685,4.501,3686,4.501,3687,4.501,3688,4.501,3689,5.994,3690,4.501,3691,4.501,3692,4.215,3693,4.501,3694,4.501,3695,4.501,3696,4.501,3697,4.501,3698,4.215,3699,4.568,3700,2.743,3701,2.743,3702,2.743,3703,2.743,3704,3.096,3705,2.743,3706,2.743,3707,3.695,3708,2.743,3709,2.743,3710,2.743,3711,2.743,3712,2.743,3713,2.743,3714,2.743,3715,2.743,3716,2.743,3717,2.743,3718,3.695,3719,3.695,3720,3.695,3721,3.695,3722,3.695,3723,2.743,3724,2.743,3725,3.695,3726,2.743,3727,2.743,3728,2.743,3729,3.352,3730,3.695,3731,2.743,3732,2.743,3733,2.743,3734,2.743,3735,2.743,3736,2.743,3737,2.743,3738,3.695,3739,4.083,3740,2.404,3741,1.882,3742,2.404,3743,2.404,3744,2.404,3745,2.404,3746,2.181,3747,4.501,3748,4.501,3749,3.695,3750,2.404,3751,2.404,3752,2.404,3753,2.404,3754,2.404,3755,2.404,3756,3.695,3757,2.404,3758,3.695,3759,2.404,3760,3.695,3761,2.404,3762,2.404,3763,3.695,3764,3.695,3765,2.404,3766,2.404,3767,2.404,3768,2.404,3769,2.404,3770,2.404,3771,2.181,3772,2.404,3773,2.404,3774,6.566,3775,4.215,3776,2.743,3777,4.215,3778,4.215,3779,5.051,3780,4.215,3781,4.215,3782,4.215,3783,4.215,3784,2.743]],["title/interfaces/PasswordErrorMsg.html",[11,0.56,3699,3.123]],["body/interfaces/PasswordErrorMsg.html",[0,0.015,3,0.137,4,0.161,5,0.08,8,0.74,9,1.596,11,0.729,13,1.031,19,0.161,20,0.634,29,0.506,35,0.012,37,0.258,38,0.768,39,1.018,42,0.909,44,2.663,51,0.867,52,0.729,53,1.116,55,2.81,56,2.727,58,1.899,61,2.309,67,1.374,79,0.567,90,0.258,92,0.332,93,0.763,95,0.22,98,1.093,100,0.681,101,2.309,105,1.973,110,0.005,111,0.007,112,0.005,115,0.858,116,1.265,117,0.506,118,1.16,123,1.067,124,1.374,125,0.858,133,1.181,141,1.216,162,1.672,170,0.831,172,1.157,176,2.986,178,0.258,191,1.693,198,0.97,200,4.367,208,2.429,211,1.864,212,0.578,254,1.511,288,2.106,299,2.106,308,1.417,324,1.216,334,1.693,337,1.253,353,0.56,357,1.081,394,2.309,418,2.595,426,2.595,427,2.429,435,2.92,441,1.644,451,1.732,452,2.018,466,2.92,469,1.463,475,1.562,488,1.732,494,1.938,519,1.732,522,2.931,583,0.578,585,0.74,587,0.74,654,1.229,702,1.374,703,1.854,704,1.854,711,1.62,712,1.716,713,3.065,714,2.174,715,2.174,717,1.374,738,1.938,739,2.309,740,2.429,741,2.106,742,1.732,746,2.727,751,0.963,756,0.885,788,1.113,830,2.202,845,2.037,861,2.214,1041,2.306,1052,3.161,1171,1.562,1273,2.106,1282,2.018,1284,2.567,1313,2.773,1326,1.615,1327,2.248,1328,1.615,1329,2.248,1330,2.248,1331,2.248,1332,1.615,1333,1.615,1334,2.248,1335,2.248,1336,1.615,1337,1.615,1338,1.615,1339,1.615,1340,1.615,1341,2.248,1342,2.174,1343,1.615,1344,2.248,1345,2.248,1346,1.615,1347,2.248,1348,1.615,1349,1.615,1350,1.615,1351,1.615,1352,2.797,1353,1.615,1354,1.615,1355,1.615,1356,1.615,1357,1.615,1358,1.615,1359,1.615,1360,1.615,1361,1.615,1362,1.615,1363,1.615,1364,1.615,1365,1.615,1366,1.615,1367,1.615,1368,1.615,1369,2.248,1370,1.615,1371,1.615,1372,1.615,1373,1.615,1374,1.615,1375,1.615,1376,1.615,1377,1.615,1378,1.615,1379,1.615,1380,1.615,1381,1.615,1382,1.615,1383,2.248,1384,1.615,1385,1.615,1386,1.615,1387,1.615,1388,1.615,1389,1.332,1390,1.615,1391,1.615,1392,1.615,1393,1.615,1394,1.615,1395,1.615,1396,1.615,1397,1.615,1448,1.864,1450,5.463,1515,2.202,1589,2.429,2270,2.309,2272,2.727,2275,2.727,2288,3.573,2316,3.381,2356,2.92,2418,4.401,2519,4.258,2540,2.018,2622,3.381,2659,3.161,2715,2.309,2725,2.567,2781,2.92,2903,2.92,3045,3.161,3146,2.727,3152,2.92,3196,2.92,3197,2.92,3480,4.401,3489,3.161,3571,2.92,3673,3.161,3674,6.034,3675,3.484,3676,3.161,3677,3.161,3678,3.484,3679,3.484,3680,3.484,3681,3.484,3682,4.851,3683,3.484,3684,3.484,3685,3.484,3686,3.484,3687,3.484,3688,3.484,3689,3.484,3690,3.484,3691,3.484,3693,3.484,3694,3.484,3695,3.484,3696,3.484,3697,3.484,3699,5.056,3704,2.92,3707,3.484,3718,3.484,3719,3.484,3720,3.484,3721,3.484,3722,3.484,3725,3.484,3729,3.161,3730,3.484,3738,4.851,3739,5.062,3740,3.484,3741,2.727,3742,3.484,3743,3.484,3744,3.484,3745,3.484,3746,3.161,3747,5.58,3748,6.567,3749,4.851,3750,3.484,3751,3.484,3752,3.484,3753,3.484,3754,3.484,3755,3.484,3756,4.851,3757,3.484,3758,4.851,3759,3.484,3760,4.851,3761,3.484,3762,3.484,3763,4.851,3764,4.851,3765,3.484,3766,3.484,3767,3.484,3768,3.484,3769,3.484,3770,3.484,3771,3.161,3772,3.484,3773,3.484]],["title/classes/Person.html",[0,0.017,2599,2.598]],["body/classes/Person.html",[0,0.026,2,1.787,3,0.147,4,0.172,5,0.085,8,0.791,19,0.172,20,0.664,23,0.763,32,0.735,34,0.956,35,0.012,36,0.677,37,0.327,38,0.594,51,1.009,52,0.869,65,1.058,73,0.87,79,0.566,90,0.217,95,0.147,100,0.912,110,0.005,111,0.007,112,0.005,115,1.25,116,1.694,123,1.335,124,2.002,137,1.301,138,1.424,139,1.564,140,1.424,141,1.301,142,1.381,143,1.515,144,0.768,159,1.34,174,1.883,177,2.718,198,0.745,227,2.825,237,2.524,279,3.366,308,2.066,356,3.541,441,1.721,450,3.883,469,2.133,643,1.573,751,1.03,779,1.67,780,1.993,796,2.877,825,3.541,837,2.373,899,4.113,922,3.975,923,3.541,951,3.725,1001,3.21,1002,3.366,1003,2.825,1004,3.21,1527,4.528,2331,5.369,2333,5.632,2599,5.039,2821,3.122,2918,4.843,3140,5.201,3141,6.082,3147,5.243,3148,5.243,3149,5.243,3190,6.082,3192,6.424,3194,5.893,3785,3.725,3786,6.594,3787,6.594,3788,7.411,3789,7.082,3790,6.594,3791,6.594,3792,6.496,3793,7.082,3794,4.25,3795,4.25,3796,4.25,3797,5.795,3798,4.25,3799,4.25,3800,4.25,3801,4.25,3802,4.25,3803,5.795,3804,5.795,3805,5.795,3806,4.25,3807,4.25,3808,7.411,3809,4.25,3810,4.25,3811,5.795,3812,4.25,3813,4.25,3814,5.795,3815,7.082,3816,4.25,3817,4.25,3818,3.741,3819,5.795,3820,5.079,3821,4.25,3822,4.25,3823,6.594,3824,5.795,3825,5.795,3826,5.795,3827,3.38,3828,3.725,3829,4.25,3830,4.25,3831,7.648,3832,4.25,3833,4.25,3834,8.312,3835,6.594,3836,4.25,3837,4.25,3838,5.795,3839,5.795,3840,4.25,3841,4.25,3842,4.25,3843,4.25,3844,4.25]],["title/components/PhnComponent.html",[178,0.147,656,0.972]],["body/components/PhnComponent.html",[0,0.011,3,0.101,4,0.118,5,0.089,8,0.543,12,2.121,13,0.993,14,0.667,19,0.118,20,0.507,21,1.527,23,0.582,26,1.994,29,0.563,32,0.748,34,1.239,35,0.012,36,0.626,37,0.341,38,0.793,39,1.022,42,1.22,45,1.109,50,1.695,51,1.04,52,1.122,53,0.512,58,1.549,60,0.707,64,1.04,65,1.007,71,3.246,72,0.823,73,1.175,79,0.527,90,0.24,92,0.244,93,0.56,95,0.101,98,1.381,100,0.906,105,2.279,110,0.009,111,0.006,112,0.004,113,3.919,115,0.953,116,0.667,117,0.563,118,1.118,119,1.902,120,3.387,121,1.436,122,1.481,123,0.991,124,1.527,125,1.507,126,1.796,127,1.796,128,2.567,129,2.341,130,2.826,131,2.279,132,2.839,133,2.076,137,0.893,138,2.649,139,1.074,140,0.978,141,0.893,142,0.948,143,1.04,144,0.964,146,0.978,148,1.934,149,0.978,151,1.695,152,2.827,153,3.277,155,1.318,156,2.512,157,2.448,158,1.271,159,0.92,160,1.318,162,1.227,164,1.736,170,0.664,171,1.482,172,0.947,174,1.436,177,1.369,178,0.184,187,0.948,189,0.948,191,0.893,198,1.121,208,1.783,212,0.424,213,4.082,237,1.925,295,1.318,304,1.186,350,1.695,353,1.217,364,0.648,387,0.667,413,0.707,441,2.388,448,2.701,488,1.271,495,0.648,514,2.826,534,1.04,577,0.687,578,0.728,579,0.749,582,0.594,583,1.268,585,0.823,587,0.823,601,0.707,602,1.102,603,1.572,604,0.771,605,0.771,606,0.63,607,0.771,608,0.667,609,0.771,610,0.667,611,0.771,612,0.687,613,0.771,614,0.687,615,0.771,616,0.687,617,0.771,618,0.687,619,0.728,620,0.771,621,0.687,622,1.168,623,0.687,624,0.728,625,0.771,626,0.687,627,0.771,628,0.687,629,0.771,630,0.667,631,0.771,632,0.771,633,0.667,634,0.771,635,0.687,636,0.771,637,0.667,638,0.771,639,0.687,640,1.41,641,0.687,642,0.648,643,0.648,644,1.168,645,0.687,646,0.707,647,0.771,648,0.667,649,0.771,650,0.687,651,0.771,652,0.687,653,0.771,654,0.648,655,0.771,656,1.36,657,0.771,658,0.687,659,0.749,660,0.771,661,0.667,662,0.63,663,0.771,664,0.667,665,0.771,666,0.648,667,0.771,668,0.667,669,0.728,670,0.687,671,0.771,672,0.707,673,0.771,674,0.687,675,0.771,676,0.667,677,0.771,678,0.687,679,0.728,680,0.687,681,0.667,682,0.749,683,0.56,684,0.667,685,0.771,686,0.667,687,0.771,688,0.667,689,0.771,690,0.667,691,0.771,692,0.667,693,0.771,694,0.667,695,0.771,696,0.667,697,0.771,698,0.667,699,0.728,700,0.771,711,1.255,712,1.742,751,0.707,753,2.262,756,0.707,779,1.146,780,1.369,788,0.817,796,1.186,815,2.826,837,2.254,845,1.627,861,2.058,894,1.318,969,1.783,1029,1.527,1041,1.994,1171,1.736,1235,2.785,1238,1.423,1260,1.423,1264,1.271,1273,2.826,1274,2.955,1276,2.826,1277,3.26,1278,2.601,1282,2.244,1288,1.783,1289,1.783,1290,1.783,1294,1.884,1296,1.783,1299,1.783,1300,1.783,1301,1.783,1302,1.783,1303,1.783,1304,1.783,1305,1.783,1306,3.548,1320,1.783,1321,1.783,1322,1.783,1323,1.616,1325,1.616,1398,1.616,1399,1.546,1400,1.616,1401,1.616,1402,1.884,1403,2.701,1448,3.523,1522,2.701,1675,3.246,2328,2.826,2545,2.321,2546,2.143,2547,2.321,2619,1.783,2622,1.783,2711,2.002,2715,1.695,2722,2.143,2725,1.884,2729,3.387,2734,3.246,2738,4.793,2888,2.558,3184,2.143,3348,2.321,3494,3.874,3537,2.321,3845,2.558,3846,6.308,3847,4.42,3848,4.42,3849,5.95,3850,4.676,3851,4.42,3852,2.918,3853,2.918,3854,4.42,3855,2.918,3856,4.42,3857,5.216,3858,2.918,3859,4.42,3860,2.918,3861,2.918,3862,2.918,3863,2.918,3864,2.918,3865,2.918,3866,2.918,3867,2.918,3868,3.874,3869,3.874,3870,2.918,3871,2.918,3872,2.918,3873,2.918,3874,2.143,3875,6.988,3876,2.143,3877,2.002,3878,5.335,3879,2.918,3880,2.918,3881,2.321,3882,3.874,3883,2.558,3884,5.335,3885,2.321,3886,2.918,3887,2.918,3888,2.321,3889,2.321,3890,2.321,3891,2.321,3892,2.321,3893,2.918,3894,2.558,3895,4.42,3896,4.42,3897,2.558,3898,2.918,3899,4.42,3900,2.918,3901,2.918,3902,2.918,3903,2.918,3904,2.918,3905,2.558,3906,2.918,3907,5.95,3908,2.918,3909,2.918,3910,2.918,3911,4.42,3912,2.918,3913,3.874,3914,3.874]],["title/components/PhoneNumberComponent.html",[178,0.147,658,1]],["body/components/PhoneNumberComponent.html",[0,0.012,3,0.104,4,0.122,5,0.091,8,0.843,12,2.156,13,1.126,14,0.689,19,0.122,20,0.519,21,1.564,23,0.596,26,2.026,29,0.384,32,0.751,34,1.249,35,0.012,36,0.631,37,0.341,38,0.788,39,1.211,42,1.035,44,1.109,45,1.145,50,1.75,51,1.061,52,1.118,53,0.954,55,2.299,58,1.711,60,0.73,64,1.065,65,1.003,67,1.041,72,0.843,73,1.183,79,0.521,90,0.243,92,0.252,93,0.578,95,0.156,98,1.281,99,3.071,100,0.669,110,0.004,111,0.006,112,0.004,113,3.941,115,0.977,116,0.689,117,0.577,118,1.14,120,3.434,121,1.471,122,1.517,123,1.233,124,1.564,125,1.524,126,1.839,127,1.839,128,2.63,129,2.398,130,2.881,131,2.156,132,2.87,133,2.098,137,0.922,138,2.665,139,1.109,140,1.009,141,0.922,142,0.979,143,1.074,144,0.983,146,1.009,148,1.965,149,1.009,151,1.75,152,2.855,153,2.123,155,2.045,156,2.547,157,2.508,158,1.313,159,0.95,160,1.361,162,1.267,164,2.137,170,0.452,171,1.53,172,0.959,174,1.767,178,0.209,191,0.922,198,1.239,208,3.323,212,0.438,213,4.149,218,2.641,219,2.641,237,1.972,295,2.045,299,1.596,308,1.614,334,1.385,353,1.22,364,0.669,387,0.689,413,0.73,416,2.396,441,2.363,495,0.669,534,1.065,577,0.709,578,0.751,579,0.773,582,0.613,583,1.27,585,0.843,587,0.843,601,0.73,602,1.129,603,1.598,604,0.796,605,0.796,606,0.65,607,0.796,608,0.689,609,0.796,610,0.689,611,0.796,612,0.709,613,0.796,614,0.709,615,0.796,616,0.709,617,0.796,618,0.709,619,0.751,620,0.796,621,0.709,622,1.196,623,0.709,624,0.751,625,0.796,626,0.709,627,0.796,628,0.709,629,0.796,630,0.689,631,0.796,632,0.796,633,0.689,634,0.796,635,0.709,636,0.796,637,0.689,638,0.796,639,0.709,640,1.437,641,0.709,642,0.669,643,0.669,644,1.196,645,0.709,646,0.73,647,0.796,648,0.689,649,0.796,650,0.709,651,0.796,652,0.709,653,0.796,654,0.669,655,0.796,656,0.689,657,0.796,658,1.602,659,1.908,660,0.796,661,0.689,662,0.65,663,0.796,664,0.689,665,0.796,666,0.669,667,0.796,668,0.689,669,0.751,670,0.709,671,0.796,672,0.73,673,0.796,674,0.709,675,0.796,676,0.689,677,0.796,678,0.709,679,0.751,680,0.709,681,0.689,682,0.773,683,0.578,684,0.689,685,0.796,686,0.689,687,0.796,688,0.689,689,0.796,690,0.689,691,0.796,692,0.689,693,0.796,694,0.689,695,0.796,696,0.689,697,0.796,698,0.689,699,0.751,700,0.796,711,1.065,712,1.508,714,1.184,715,1.184,751,0.73,753,2.299,756,0.482,779,2.137,788,0.844,815,2.881,837,1.517,845,1.109,848,2.067,861,1.664,928,3.995,1029,1.564,1041,1.517,1171,1.779,1235,2.824,1238,1.469,1260,1.469,1264,1.313,1273,2.881,1276,2.881,1278,2.652,1288,1.841,1289,1.841,1290,1.841,1299,1.841,1300,1.841,1301,1.841,1302,1.841,1303,1.841,1304,1.841,1305,1.841,1306,3.292,1320,1.841,1321,1.841,1322,1.841,1323,1.669,1325,1.669,1398,1.669,1399,1.596,1400,1.669,1403,2.767,2289,2.213,2328,2.881,2387,2.213,2546,2.213,2565,2.396,2729,1.596,2734,1.53,2738,2.067,3316,2.641,3326,2.641,3874,2.213,3876,3.995,3889,2.396,3890,2.396,3891,2.396,3892,2.396,3915,7.279,3916,6.604,3917,2.641,3918,4.528,3919,4.528,3920,5.301,3921,5.439,3922,5.439,3923,4.767,3924,4.767,3925,3.013,3926,3.013,3927,3.013,3928,3.601,3929,3.013,3930,3.013,3931,4.528,3932,3.013,3933,3.013,3934,3.013,3935,3.013,3936,4.528,3937,3.013,3938,3.013,3939,5.301,3940,3.013,3941,3.969,3942,3.013,3943,3.013,3944,3.013,3945,3.013,3946,4.528,3947,4.528,3948,4.528,3949,3.013,3950,3.013,3951,3.013,3952,3.013,3953,3.013,3954,3.013,3955,6.483,3956,3.013,3957,4.528,3958,5.439,3959,4.528,3960,3.013,3961,4.528,3962,4.528,3963,3.013,3964,3.013,3965,3.013,3966,3.013,3967,3.013,3968,3.013,3969,3.013,3970,3.013,3971,3.013,3972,4.528,3973,3.013,3974,3.013,3975,4.528]],["title/components/PostalCodeComponent.html",[178,0.147,661,0.972]],["body/components/PostalCodeComponent.html",[0,0.012,3,0.104,4,0.122,5,0.091,13,0.841,14,0.687,19,0.122,20,0.518,21,1.876,23,0.595,29,0.575,32,0.743,34,1.225,35,0.012,36,0.623,37,0.34,38,0.788,39,1.129,42,1.033,45,1.142,51,1.047,52,1.123,53,0.792,58,1.569,60,0.728,64,1.063,65,0.964,72,0.841,73,1.182,79,0.546,90,0.243,92,0.251,93,0.577,95,0.104,98,0.893,100,0.556,110,0.004,111,0.006,112,0.004,115,0.975,116,1.381,117,0.575,118,1.138,119,1.936,121,1.765,122,1.819,123,1.004,124,1.561,125,1.303,126,2.206,127,2.206,129,2.394,130,3.199,131,1.936,132,2.95,133,2.207,137,0.92,138,1.007,139,1.106,140,1.007,141,0.92,142,0.977,143,1.071,144,0.981,146,1.007,148,2.211,149,1.007,152,2.544,155,2.041,156,1.775,159,0.948,160,2.041,162,1.9,164,1.181,170,0.815,172,1.046,178,0.187,183,1.142,185,1.9,186,2.39,187,1.468,188,1.94,189,1.468,192,1.836,203,2.39,204,2.39,205,1.309,207,2.39,212,0.437,237,1.968,295,1.358,299,2.877,353,1.22,364,0.667,387,0.687,413,0.728,418,1.409,441,1.794,495,0.667,514,2.877,534,1.063,577,0.707,578,0.749,579,0.771,582,0.612,583,1.27,585,0.841,587,0.841,601,0.728,602,1.127,603,1.596,604,0.794,605,0.794,606,0.648,607,0.794,608,0.687,609,0.794,610,0.687,611,0.794,612,0.707,613,0.794,614,0.707,615,0.794,616,0.707,617,0.794,618,0.707,619,0.749,620,0.794,621,0.707,622,1.194,623,0.707,624,0.749,625,0.794,626,0.707,627,0.794,628,0.707,629,0.794,630,0.687,631,0.794,632,0.794,633,0.687,634,0.794,635,0.707,636,0.794,637,0.687,638,0.794,639,0.707,640,1.435,641,0.707,642,0.667,643,0.667,644,1.194,645,0.707,646,0.728,647,0.794,648,0.687,649,0.794,650,0.707,651,0.794,652,0.707,653,0.794,654,0.667,655,0.794,656,0.687,657,0.794,658,0.707,659,0.771,660,0.794,661,1.381,662,1.658,663,0.794,664,0.687,665,0.794,666,0.667,667,0.794,668,0.687,669,0.749,670,0.707,671,0.794,672,0.728,673,0.794,674,0.707,675,0.794,676,0.687,677,0.794,678,0.707,679,0.749,680,0.707,681,0.687,682,0.771,683,0.577,684,0.687,685,0.794,686,0.687,687,0.794,688,0.687,689,0.794,690,0.687,691,0.794,692,0.687,693,0.794,694,0.687,695,0.794,696,0.687,697,0.794,698,0.687,699,0.749,700,0.794,703,1.514,704,1.514,710,3.506,711,1.278,712,1.76,717,1.038,751,1.095,753,2.461,756,0.723,782,2.963,787,2.625,788,0.842,796,1.221,810,1.9,815,2.877,827,3.319,861,1.662,969,1.836,1029,1.561,1041,2.023,1155,2.918,1235,2.821,1238,1.465,1260,1.465,1264,1.309,1274,3.345,1276,3.43,1278,2.648,1282,2.294,1296,1.836,1307,2.394,1308,2.918,1309,3.69,1310,1.968,1311,3.594,1313,1.968,1323,1.665,1325,1.665,1326,1.221,1327,1.836,1328,1.221,1329,1.836,1330,1.836,1331,1.836,1332,1.221,1333,1.221,1334,1.836,1335,1.836,1336,1.221,1337,1.221,1338,1.221,1339,1.221,1340,1.221,1341,1.836,1342,1.775,1343,1.221,1344,1.836,1345,1.836,1346,1.221,1347,1.836,1348,1.221,1349,1.221,1350,1.221,1351,1.221,1352,2.454,1353,1.221,1354,1.221,1355,1.221,1356,1.221,1357,1.221,1358,1.221,1359,1.221,1360,1.221,1361,1.221,1362,1.221,1363,1.221,1364,1.221,1365,1.221,1366,1.221,1367,1.221,1368,1.221,1369,1.836,1370,1.221,1371,1.221,1372,1.221,1373,1.221,1374,1.221,1375,1.221,1376,1.221,1377,1.221,1378,1.221,1379,1.221,1380,1.221,1381,1.221,1382,1.221,1383,1.836,1384,1.221,1385,1.221,1386,1.221,1387,1.221,1388,1.221,1389,1.007,1390,1.221,1391,1.221,1392,1.221,1393,1.221,1394,1.221,1395,1.221,1396,1.221,1397,1.221,1401,1.665,1448,2.119,1786,3.1,2270,3.154,2272,3.725,2273,4.76,2274,4.318,2275,2.062,2276,2.634,2328,2.394,2331,3.1,2619,1.836,3151,3.319,3179,4.143,3620,2.634,3874,2.207,3876,2.207,3877,2.062,3924,4.76,3976,5.836,3977,6.766,3978,2.634,3979,4.519,3980,4.519,3981,4.519,3982,4.519,3983,3.005,3984,3.005,3985,3.005,3986,3.005,3987,4.519,3988,3.005,3989,3.005,3990,4.519,3991,4.519,3992,3.005,3993,4.519,3994,3.005,3995,3.005,3996,3.005,3997,3.005,3998,3.005,3999,3.005,4000,3.005,4001,3.005,4002,3.005,4003,4.519,4004,3.005,4005,3.005,4006,3.005,4007,3.005,4008,4.519,4009,3.594,4010,3.319,4011,3.005,4012,3.005,4013,3.005,4014,3.005,4015,3.005,4016,7.058,4017,3.005,4018,3.005,4019,4.519,4020,4.519,4021,4.519,4022,4.519]],["title/components/ProvinceComponent.html",[178,0.147,664,0.972]],["body/components/ProvinceComponent.html",[0,0.011,3,0.099,4,0.117,5,0.088,8,1.482,11,0.379,12,2.106,13,0.985,14,0.658,19,0.117,20,0.501,21,1.511,23,0.576,26,1.979,29,0.557,32,0.747,34,1.235,35,0.012,36,0.625,37,0.342,38,0.791,39,1.112,42,1,45,1.094,51,1.063,52,1.119,53,0.928,58,1.685,60,0.697,64,1.029,65,0.982,72,0.814,73,1.172,79,0.543,90,0.251,92,0.241,93,0.552,95,0.219,98,0.864,100,0.538,110,0.004,111,0.006,112,0.004,113,3.91,115,0.943,116,1,117,0.557,118,1.108,119,1.026,120,3.366,121,1.421,122,1.465,123,0.985,124,1.511,125,1.5,126,1.777,127,1.777,128,2.54,129,2.317,130,2.802,131,2.265,132,2.825,133,2.066,137,0.881,138,2.642,139,1.059,140,0.964,141,0.881,142,0.935,143,1.026,144,0.956,146,0.964,148,1.92,149,0.964,151,1.672,152,2.815,153,2.051,155,1.3,156,2.321,157,2.422,158,1.254,159,1.379,160,1.3,162,1.21,164,1.718,170,0.657,171,1.461,172,1.033,178,0.182,187,0.935,189,0.935,191,0.881,198,0.928,212,0.419,237,1.905,295,1.3,353,1.216,364,0.639,387,0.658,413,0.697,493,2.221,495,0.639,497,3.845,498,3.442,514,2.802,534,1.029,577,0.677,578,0.718,579,0.739,582,0.586,583,1.267,585,0.814,587,0.814,601,0.697,602,1.09,603,1.561,604,0.76,605,0.76,606,0.621,607,0.76,608,0.658,609,0.76,610,0.658,611,0.76,612,0.677,613,0.76,614,0.677,615,0.76,616,0.677,617,0.76,618,0.677,619,0.718,620,0.76,621,0.677,622,1.156,623,0.677,624,0.718,625,0.76,626,0.677,627,0.76,628,0.677,629,0.76,630,0.658,631,0.76,632,0.76,633,0.658,634,0.76,635,0.677,636,0.76,637,0.658,638,0.76,639,0.677,640,1.398,641,0.677,642,0.639,643,0.639,644,1.156,645,0.677,646,0.697,647,0.76,648,0.658,649,0.76,650,0.677,651,0.76,652,0.677,653,0.76,654,0.639,655,0.76,656,0.658,657,0.76,658,0.677,659,0.739,660,0.76,661,0.658,662,0.621,663,0.76,664,1.351,665,0.76,666,0.639,667,0.76,668,0.658,669,0.718,670,0.677,671,0.76,672,0.697,673,0.76,674,0.677,675,0.76,676,0.658,677,0.76,678,0.677,679,0.718,680,0.677,681,0.658,682,0.739,683,0.552,684,0.658,685,0.76,686,0.658,687,0.76,688,0.658,689,0.76,690,0.658,691,0.76,692,0.658,693,0.76,694,0.658,695,0.76,696,0.658,697,0.76,698,0.658,699,0.718,700,0.76,703,1.465,704,1.465,711,1.245,712,1.734,717,0.994,723,3.879,726,1.858,727,4.249,728,1.759,729,3.415,751,0.697,753,2.415,756,0.846,787,2.54,788,0.806,810,1.839,872,3,874,1.974,877,1.974,880,1.974,894,1.976,984,5.053,1021,2.54,1029,1.511,1041,1.979,1235,2.768,1238,1.403,1260,1.403,1264,1.254,1273,2.802,1274,2.93,1275,3.072,1276,2.802,1277,3.232,1278,2.579,1282,2.221,1288,1.759,1289,1.759,1290,1.759,1294,1.858,1296,1.759,1299,1.759,1300,1.759,1301,1.759,1302,1.759,1303,1.759,1304,1.759,1305,1.759,1306,3.226,1307,2.317,1308,2.824,1309,2.672,1310,1.905,1312,2.824,1313,2.574,1314,3,1315,3,1316,3,1320,1.759,1321,1.759,1322,1.759,1323,1.594,1325,1.594,1326,1.169,1327,1.777,1328,1.169,1329,1.777,1330,1.777,1331,1.777,1332,1.169,1333,1.169,1334,1.777,1335,1.777,1336,1.169,1337,1.169,1338,1.169,1339,1.169,1340,1.169,1341,1.777,1342,1.718,1343,1.169,1344,1.777,1345,1.777,1346,1.169,1347,1.777,1348,1.169,1349,1.169,1350,1.169,1351,1.169,1352,2.4,1353,1.169,1354,1.169,1355,1.169,1356,1.169,1357,1.169,1358,1.169,1359,1.169,1360,1.169,1361,1.169,1362,1.169,1363,1.169,1364,1.777,1365,1.169,1366,1.169,1367,1.169,1368,1.169,1369,1.777,1370,1.169,1371,1.169,1372,1.169,1373,1.169,1374,1.169,1375,1.169,1376,1.169,1377,1.169,1378,1.169,1379,1.169,1380,1.169,1381,1.169,1382,1.169,1383,1.777,1384,1.169,1385,1.169,1386,1.169,1387,1.169,1388,1.169,1389,0.964,1390,1.169,1391,1.169,1392,1.169,1393,1.169,1394,1.169,1395,1.169,1396,1.169,1397,1.169,1398,1.594,1399,1.525,1400,1.594,1401,1.594,1402,1.858,1403,2.672,1404,3.833,1782,2.289,1786,1.974,1891,2.289,2269,4.206,2271,2.824,2838,2.289,4010,2.114,4023,2.114,4024,3.833,4025,3.833,4026,2.878,4027,2.878,4028,3.833,4029,2.878,4030,2.878,4031,2.878,4032,2.878,4033,2.878,4034,2.878,4035,4.373,4036,2.878,4037,2.878,4038,2.878,4039,2.878,4040,2.878,4041,2.878,4042,2.878,4043,2.878,4044,2.878,4045,2.878,4046,6.422,4047,2.523,4048,2.523,4049,2.523,4050,2.523,4051,2.523,4052,2.523,4053,2.523,4054,2.523,4055,2.523,4056,2.523,4057,2.523,4058,2.523,4059,2.523,4060,2.523,4061,2.523,4062,2.523,4063,2.523,4064,2.523,4065,2.523,4066,2.523,4067,2.523,4068,2.523,4069,2.523,4070,2.523,4071,2.114,4072,2.523]],["title/interfaces/ProvinceList.html",[11,0.56,727,2.598]],["body/interfaces/ProvinceList.html",[0,0.017,3,0.149,4,0.175,5,0.087,8,1.591,11,0.569,13,0.804,19,0.175,20,0.671,29,0.55,35,0.012,37,0.269,38,0.6,39,0.936,52,1.079,53,0.757,58,1.61,73,0.648,79,0.563,90,0.288,92,0.361,93,0.828,95,0.257,98,0.853,100,0.72,110,0.006,111,0.008,112,0.006,113,2.855,115,0.931,116,0.987,117,0.55,118,1.227,119,1.539,120,2.286,123,0.669,125,0.931,131,1.539,132,2.379,133,1.282,152,2.3,156,2.3,159,1.361,170,0.648,171,2.191,172,1.141,178,0.202,187,1.403,189,1.403,191,1.321,198,1.165,295,1.95,353,0.608,493,2.191,497,4.167,498,3.343,514,2.286,583,0.628,585,0.804,587,0.804,664,0.987,702,1.491,703,1.962,704,1.962,711,1.564,712,1.858,717,1.491,723,4.133,726,2.787,727,4.553,728,2.637,729,3.781,751,1.046,753,2.709,756,1.063,787,2.507,788,1.209,810,1.815,872,4.017,874,2.961,877,2.961,880,2.961,894,2.645,984,5.925,1021,2.507,1041,2.227,1235,2.551,1264,1.88,1273,2.286,1274,2.391,1275,2.507,1276,2.286,1277,2.637,1278,2.104,1282,2.191,1306,3.374,1307,2.286,1308,2.787,1309,2.637,1310,1.88,1312,2.787,1313,2.551,1314,2.961,1315,2.961,1316,2.961,1326,1.754,1327,2.379,1328,1.754,1329,2.379,1330,2.379,1331,2.379,1332,1.754,1333,1.754,1334,2.379,1335,2.379,1336,1.754,1337,1.754,1338,1.754,1339,1.754,1340,1.754,1341,2.379,1342,2.3,1343,1.754,1344,2.379,1345,2.379,1346,1.754,1347,2.379,1348,1.754,1349,1.754,1350,1.754,1351,1.754,1352,2.896,1353,1.754,1354,1.754,1355,1.754,1356,1.754,1357,1.754,1358,1.754,1359,1.754,1360,1.754,1361,1.754,1362,1.754,1363,1.754,1364,2.379,1365,1.754,1366,1.754,1367,1.754,1368,1.754,1369,2.379,1370,1.754,1371,1.754,1372,1.754,1373,1.754,1374,1.754,1375,1.754,1376,1.754,1377,1.754,1378,1.754,1379,1.754,1380,1.754,1381,1.754,1382,1.754,1383,2.379,1384,1.754,1385,1.754,1386,1.754,1387,1.754,1388,1.754,1389,1.446,1390,1.754,1391,1.754,1392,1.754,1393,1.754,1394,1.754,1395,1.754,1396,1.754,1397,1.754,1398,2.391,1399,2.286,1400,2.391,1401,2.391,1402,2.787,1782,3.432,1786,2.961,1891,3.432,2269,3.432,2271,2.787,2838,3.432,4010,3.17,4023,3.17,4024,3.783,4025,3.783,4028,3.783,4046,6.859,4047,3.783,4048,3.783,4049,3.783,4050,3.783,4051,3.783,4052,3.783,4053,3.783,4054,3.783,4055,3.783,4056,3.783,4057,3.783,4058,3.783,4059,3.783,4060,3.783,4061,3.783,4062,3.783,4063,3.783,4064,3.783,4065,3.783,4066,3.783,4067,3.783,4068,3.783,4069,3.783,4070,3.783,4071,3.17,4072,3.783]],["title/components/RadioComponent.html",[178,0.147,666,0.944]],["body/components/RadioComponent.html",[0,0.013,3,0.115,4,0.135,5,0.098,8,0.623,11,0.441,12,2.269,13,1.261,14,1.118,18,2.044,19,0.135,20,0.561,21,1.69,23,0.644,26,2.132,29,0.623,32,0.753,34,1.298,35,0.012,36,0.649,37,0.346,38,0.824,39,0.925,42,1.118,45,1.271,51,1.058,52,1.122,53,1.014,58,1.542,60,0.81,64,1.151,65,1.024,72,0.911,73,1.234,79,0.52,89,2.591,90,0.238,92,0.28,93,0.642,95,0.199,98,0.967,100,0.411,110,0.004,111,0.006,112,0.004,113,4.007,115,1.055,116,0.765,117,0.623,118,1.212,120,3.587,121,1.59,122,1.639,123,1.049,124,1.69,125,1.576,126,2.585,127,2.585,128,2.841,129,2.591,130,3.064,131,2.269,132,2.968,133,2.408,137,1.023,138,2.716,139,1.231,140,1.121,141,1.023,142,1.087,143,1.192,144,1.045,146,1.938,148,2.434,149,1.938,151,1.942,152,2.943,153,2.294,155,1.511,156,2.5,157,2.71,158,1.457,159,1.054,160,1.511,162,1.406,164,2.272,170,0.502,171,1.698,172,0.996,174,1.087,178,0.199,187,1.087,189,1.59,191,1.023,194,2.71,212,0.486,237,2.131,334,1.023,353,1.229,357,0.91,364,0.743,387,0.765,413,0.81,441,0.993,495,0.743,534,1.151,577,0.787,578,0.834,579,0.858,582,0.681,583,1.278,585,0.911,587,0.911,601,0.81,602,1.22,603,1.681,604,0.884,605,0.884,606,0.721,607,0.884,608,0.765,609,0.884,610,0.765,611,0.884,612,0.787,613,0.884,614,0.787,615,0.884,616,0.787,617,0.884,618,0.787,619,0.834,620,0.884,621,0.787,622,1.293,623,0.787,624,0.834,625,0.884,626,0.787,627,0.884,628,0.787,629,0.884,630,0.765,631,0.884,632,0.884,633,0.765,634,0.884,635,0.787,636,0.884,637,0.765,638,0.884,639,0.787,640,1.528,641,0.787,642,0.743,643,0.743,644,1.293,645,0.787,646,0.81,647,0.884,648,0.765,649,0.884,650,0.787,651,0.884,652,0.787,653,0.884,654,0.743,655,0.884,656,0.765,657,0.884,658,0.787,659,0.858,660,0.884,661,0.765,662,0.721,663,0.884,664,0.765,665,0.884,666,1.504,667,0.884,668,0.765,669,0.834,670,0.787,671,0.884,672,0.81,673,0.884,674,0.787,675,0.884,676,0.765,677,0.884,678,0.787,679,0.834,680,0.787,681,0.765,682,0.858,683,0.642,684,0.765,685,0.884,686,0.765,687,0.884,688,0.765,689,0.884,690,0.765,691,0.884,692,0.765,693,0.884,694,0.765,695,0.884,696,0.765,697,0.884,698,0.765,699,0.834,700,0.884,711,1.151,712,1.587,751,0.81,753,2.574,756,0.535,780,1.569,788,0.937,796,2.751,856,1.853,1007,2.294,1010,2.457,1029,1.69,1056,4.599,1082,2.66,1235,2.95,1238,1.631,1260,1.631,1264,1.457,1278,2.82,1288,2.044,1289,2.044,1290,2.044,1299,2.044,1300,2.044,1301,2.044,1302,2.044,1303,2.044,1304,2.044,1305,2.044,1306,2.937,1320,2.044,1321,2.044,1322,2.044,1323,1.853,1325,1.853,1398,1.853,1399,1.772,1400,1.853,1403,2.989,1494,2.159,2646,5.385,3378,2.457,3426,4.674,3427,2.66,3428,5.81,3429,2.932,3430,2.66,3431,2.932,3432,5.07,3433,2.66,3434,2.932,3435,5.935,3436,2.932,3437,5.935,3438,2.932,3439,2.932,3440,5.578,3441,4.288,3442,4.288,3443,5.07,3444,5.578,3445,3.89,3446,4.288,3447,2.932,4073,4.892,4074,4.892,4075,3.345,4076,3.345,4077,3.345,4078,3.345,4079,4.892,4080,3.345,4081,3.345,4082,3.345,4083,3.345,4084,3.345,4085,3.345,4086,3.345,4087,3.345,4088,3.345,4089,4.892]],["title/interfaces/ReadOnlyFields.html",[11,0.56,732,2.916]],["body/interfaces/ReadOnlyFields.html",[0,0.012,3,0.106,4,0.125,5,0.062,9,1.33,10,1.101,11,0.727,16,1.689,19,0.125,20,0.529,21,1.067,29,0.393,35,0.012,36,0.247,37,0.265,38,0.781,39,1.351,44,2.031,51,0.628,52,1.043,53,1.401,55,1.568,67,1.067,73,0.829,79,0.563,84,1.506,90,0.267,92,0.258,93,0.592,95,0.211,98,1.21,100,0.937,101,1.794,110,0.004,111,0.006,112,0.004,115,0.666,116,1.054,117,0.393,118,0.966,119,1.644,121,1.003,122,1.035,125,0.666,131,1.101,141,0.945,146,1.035,148,1.499,149,1.035,159,0.974,160,1.395,162,1.299,172,1.134,178,0.211,179,3.164,180,2.554,185,1.939,187,1.003,189,1.003,190,3.164,192,3.373,194,1.711,196,2.118,198,1.205,202,1.345,205,2.854,211,2.163,254,1.174,295,1.395,299,1.636,304,2.242,308,1.968,323,1.711,324,1.411,336,1.035,337,1.454,353,0.435,357,0.84,377,2.268,391,1.711,418,1.448,427,2.818,441,1.37,451,1.345,452,1.568,469,1.137,479,1.794,488,1.345,493,1.568,497,4.026,498,3.713,509,3.564,510,1.636,515,1.794,519,1.345,583,0.449,585,0.575,587,0.575,606,0.995,643,0.686,646,1.117,662,0.995,701,3.786,702,1.067,703,1.545,704,1.545,705,2.268,706,3.387,707,3.667,708,3.667,709,4.036,710,4.832,711,1.085,712,1.376,713,2.554,714,2.168,715,1.812,716,2.163,717,1.067,718,2.554,719,2.268,720,4.212,721,2.268,722,3.564,723,3.194,724,2.118,725,3.164,726,1.994,727,3.741,728,3.373,729,2.977,730,2.268,731,3.953,732,4.714,733,2.118,734,2.268,735,2.456,736,2.456,737,2.456,738,1.506,739,1.794,740,1.887,741,1.636,742,1.345,743,2.443,744,3.667,745,2.818,746,2.118,747,2.456,748,2.456,749,2.268,750,1.994,751,1.665,752,2.456,753,2.49,754,5.663,755,2.268,756,0.494,757,1.994,758,2.268,759,2.268,760,2.678,761,2.456,762,2.268,763,2.456,764,3.991,765,2.268,766,2.456,767,2.268,768,2.118,769,3.667,770,2.456,771,2.456,772,3.667,773,2.977,774,2.456,775,2.456,776,2.456,777,2.456,778,2.456,779,2.168,780,2.589,781,1.994,782,2.854,783,2.456,784,2.456,785,2.456,786,4.2,787,1.794,788,0.865,789,2.268,790,2.456,791,2.456,792,3.667,793,6.059,794,3.667,795,2.977,796,2.242,797,3.667,798,5.951,799,4.389,800,1.568,801,2.268,802,1.994,803,2.456,804,2.456,805,2.456,806,2.456,807,2.456,808,2.456,809,4.868,810,1.299,811,2.456,812,2.456,813,3.667,814,2.818,815,1.636,816,3.667,817,5.21,818,5.465,819,5.21,820,2.456,821,2.456,822,3.667,823,2.456,824,3.667,825,2.818,826,2.456,827,2.268,828,2.456,829,2.456,830,1.711,831,2.456,832,2.456,833,3.564,834,2.456,835,2.456,836,2.456,837,2.386,838,3.387,839,2.977,840,3.667,841,3.667,842,3.667,843,3.667,844,2.456,845,1.137,846,2.456,847,2.456,848,3.786,849,2.118,850,2.456,851,1.213,852,2.456,853,2.456,854,2.456,855,1.994,856,1.711,857,2.456,858,2.456,859,2.456,860,2.118,861,2.24,862,2.456,863,4.868,864,2.456,865,2.456,866,2.456,867,2.456,868,2.456,869,4.054,870,2.118,871,2.456,872,4.2,873,3.667,874,3.164,875,3.667,876,4.389,877,2.118,878,2.456,879,2.456,880,2.118,881,1.887,882,1.887,883,2.118,884,1.711,885,2.456,886,2.456,887,2.456,888,3.387,889,2.456,890,2.456,891,2.268,892,2.456,893,2.268,894,2.083,895,2.456,896,2.456,897,2.268,898,2.456,899,1.794,900,2.456,901,2.268,902,2.268,903,2.456,904,2.456,905,2.456,906,2.456,907,2.456,908,2.456,909,2.456,910,2.456,911,2.456,912,2.456,913,2.456,914,2.456,915,2.456,916,2.118,917,2.456,918,3.667,919,2.456,920,2.456]],["title/guards/RouteGuardService.html",[321,2.598,333,2.598]],["body/guards/RouteGuardService.html",[0,0.017,3,0.152,4,0.179,5,0.089,8,0.823,10,2.122,12,2.399,13,1.34,17,2.902,19,0.179,23,0.948,25,4.647,29,0.563,30,3.033,31,4.728,32,0.628,34,1.187,35,0.012,36,0.576,37,0.291,38,0.738,39,1.237,53,1.262,65,0.857,67,2.056,72,1.441,79,0.445,84,3.509,90,0.27,92,0.37,94,2.245,95,0.152,98,1.176,100,0.952,110,0.006,111,0.008,112,0.006,117,0.563,125,1.284,177,2.791,181,4.083,184,5.217,193,3.842,198,1.044,230,3.679,258,3.979,283,2.073,304,2.418,316,2.338,317,5.314,319,3.033,322,4.494,323,3.296,324,1.821,333,5.03,334,1.821,335,5.217,336,2.592,337,2.269,338,6.782,357,1.958,391,4.286,392,3.296,457,6.309,475,2.338,519,2.592,779,2.643,780,3.155,781,4.995,800,3.022,861,2.202,959,4.371,1113,3.033,1161,4.733,1162,4.733,1171,1.737,1178,4.371,1179,3.247,1186,4.371,1198,3.515,1205,2.701,1206,2.701,1213,5.35,1221,5.286,1563,4.733,1564,3.456,2711,4.615,2715,3.907,2836,6.144,3007,4.733,4090,6.584,4091,3.875,4092,5.951,4093,5.951,4094,5.951,4095,5.951,4096,7.737,4097,8.145,4098,8.145,4099,5.951,4100,5.217,4101,5.951,4102,5.951,4103,4.083,4104,5.951,4105,5.951,4106,5.951,4107,5.951,4108,4.421,4109,5.951,4110,4.421,4111,4.421,4112,4.421,4113,7.907,4114,7.907,4115,4.421,4116,6.728,4117,4.421,4118,4.421,4119,4.421,4120,4.421,4121,5.951,4122,4.421,4123,3.875,4124,4.421,4125,4.421,4126,4.421,4127,4.421]],["title/interfaces/SampleImageInterface.html",[11,0.56,4128,3.123]],["body/interfaces/SampleImageInterface.html",[0,0.024,3,0.213,4,0.25,5,0.124,11,0.813,19,0.25,20,0.843,29,0.786,35,0.011,37,0.318,38,0.754,73,1.105,79,0.575,90,0.294,91,2.689,92,0.516,95,0.254,110,0.008,111,0.009,112,0.008,115,1.332,116,1.682,123,1.218,172,1.106,178,0.254,353,0.869,414,4.235,583,0.898,585,1.15,587,1.15,591,5.08,599,3.01,600,2.895,668,1.411,669,1.96,702,2.133,717,2.133,788,1.729,1432,3.772,2577,5.047,2642,4.534,3451,4.534,3517,4.909,3519,4.909,4103,5.582,4128,5.773,4129,4.909,4130,4.534,4131,7.133,4132,5.411,4133,5.411,4134,5.411,4135,5.411,4136,5.411]],["title/components/SampleModalComponent.html",[178,0.147,668,0.972]],["body/components/SampleModalComponent.html",[0,0.018,3,0.16,4,0.188,5,0.124,11,0.612,13,1.146,14,1.063,19,0.188,20,0.705,23,0.811,29,0.879,32,0.699,35,0.011,36,0.552,37,0.297,42,1.407,45,1.767,51,0.838,52,0.811,60,1.126,64,1.449,65,0.784,72,1.146,73,1.103,79,0.519,90,0.259,91,2.025,92,0.389,95,0.212,110,0.006,111,0.008,112,0.006,115,1.328,116,1.679,123,1.298,124,2.127,137,1.423,138,1.558,139,1.711,140,1.558,141,1.423,142,1.511,143,1.658,144,1.247,170,0.698,172,0.971,178,0.238,212,0.676,353,1.251,364,1.033,387,1.063,413,1.126,414,4.222,495,1.033,534,1.449,577,1.094,578,1.159,579,1.193,582,0.946,583,1.298,585,1.146,587,1.146,591,4.797,599,2.267,600,2.181,601,1.126,602,1.535,603,1.941,604,1.228,605,1.228,606,1.003,607,1.228,608,1.063,609,1.228,610,1.063,611,1.228,612,1.094,613,1.228,614,1.094,615,1.228,616,1.094,617,1.228,618,1.094,619,1.159,620,1.228,621,1.094,622,1.626,623,1.094,624,1.159,625,1.228,626,1.094,627,1.228,628,1.094,629,1.228,630,1.063,631,1.228,632,1.228,633,1.063,634,1.228,635,1.094,636,1.228,637,1.063,638,1.228,639,1.094,640,1.823,641,1.094,642,1.033,643,1.033,644,1.626,645,1.094,646,1.126,647,1.228,648,1.063,649,1.228,650,1.094,651,1.228,652,1.094,653,1.228,654,1.033,655,1.228,656,1.063,657,1.228,658,1.094,659,1.193,660,1.228,661,1.063,662,1.003,663,1.228,664,1.063,665,1.228,666,1.033,667,1.228,668,1.679,669,1.997,670,1.094,671,1.228,672,1.126,673,1.228,674,1.094,675,1.228,676,1.063,677,1.228,678,1.094,679,1.159,680,1.094,681,1.063,682,1.193,683,0.892,684,1.063,685,1.228,686,1.063,687,1.228,688,1.063,689,1.228,690,1.063,691,1.228,692,1.063,693,1.228,694,1.063,695,1.228,696,1.063,697,1.228,698,1.063,699,1.159,700,1.228,717,1.607,788,1.302,1432,3.761,2577,4.733,2642,5.068,3451,3.415,3483,5.395,3517,5.84,3519,4.895,4103,3.19,4128,5.068,4129,6.368,4130,5.881,4131,4.075,4132,5.395,4133,6.048,4134,4.075,4135,6.438,4136,4.075,4137,6.155,4138,4.649,4139,4.649,4140,4.649,4141,4.649,4142,6.155]],["title/injectables/ServerPayload.html",[316,1.67,1110,3.123]],["body/injectables/ServerPayload.html",[0,0.026,3,0.187,4,0.22,5,0.109,19,0.22,20,0.779,32,0.679,35,0.012,37,0.315,50,4.98,79,0.586,90,0.292,92,0.454,95,0.234,100,1.006,110,0.007,111,0.009,112,0.007,123,1.151,198,0.951,229,4.112,235,4.793,240,4.311,258,4.332,266,3.313,282,3.003,283,2.543,316,2.916,318,3.149,861,1.659,1086,3.501,1087,6.374,1088,4.312,1094,5.957,1095,6.507,1097,5.903,1098,5.957,1099,6.926,1101,5.957,1102,7.168,1103,6.822,1105,4.753,1106,4.123,1107,3.983,1108,6.507,1109,3.501,1110,4.992,1111,5.498,1112,6.507,1113,3.72,1114,6.507,1115,6.507,1116,5.957,1117,4.753,1118,5.957,1119,6.507,4143,5.422,4144,5.422,4145,5.422,4146,5.422]],["title/modules/SharedCoreModule.html",[1120,2.598,4147,2.745]],["body/modules/SharedCoreModule.html",[0,0.012,3,0.105,4,0.124,5,0.061,35,0.012,44,1.683,60,1.107,90,0.329,92,0.255,93,0.586,94,1.55,95,0.105,110,0.004,111,0.006,112,0.004,198,0.535,202,1.33,288,1.617,323,2.532,336,1.532,364,1.713,387,1.045,418,1.432,428,1.865,493,1.55,495,1.713,577,1.815,599,2.673,600,2.144,601,0.739,606,1.664,608,1.763,610,1.763,614,1.815,616,1.815,618,1.815,621,1.815,623,1.815,626,1.815,628,1.815,630,1.763,633,1.763,635,1.815,637,1.763,639,1.815,641,1.815,642,1.713,645,1.815,648,1.763,650,1.815,652,1.815,654,1.713,656,1.763,658,1.815,661,1.763,664,1.763,666,1.713,668,1.763,670,1.815,672,1.868,674,1.815,676,1.763,678,1.815,680,1.076,681,1.763,683,0.586,684,1.763,686,1.763,688,1.763,690,1.763,692,1.763,694,1.763,696,1.763,698,1.763,815,1.617,851,1.199,894,1.379,1003,1.488,1047,2.427,1120,1.865,1122,1.865,1123,3.76,1124,4.359,1129,3.636,1130,2.242,1136,2.094,1145,4.008,1148,4.008,1149,2.427,1640,2.242,1689,2.427,2295,2.427,2494,2.242,2552,2.427,2570,2.427,3099,3.358,3138,2.242,3213,2.427,3254,2.427,3450,2.427,3638,2.427,3655,2.427,3916,2.427,3977,2.427,4130,2.242,4147,5.795,4148,2.676,4149,2.676,4150,2.676,4151,2.676,4152,2.676,4153,3.053,4154,3.053,4155,4.572,4156,5.481,4157,4.572,4158,3.053,4159,3.053,4160,3.053,4161,2.427,4162,3.053,4163,3.053,4164,3.053,4165,4.572,4166,3.053,4167,3.053,4168,3.053,4169,3.053,4170,3.053,4171,3.053,4172,4.572,4173,5.481,4174,3.053,4175,3.053,4176,3.053,4177,4.572,4178,2.676,4179,3.053,4180,3.053,4181,3.053,4182,3.053,4183,3.053,4184,3.053,4185,3.053,4186,3.053,4187,3.053,4188,3.053,4189,4.572,4190,3.053,4191,3.053,4192,3.053,4193,3.053,4194,3.053,4195,3.053,4196,3.053,4197,3.053,4198,3.053,4199,3.053,4200,3.053,4201,3.053,4202,3.053,4203,3.053,4204,3.136,4205,3.053,4206,3.053,4207,2.427,4208,3.053,4209,3.053,4210,3.053,4211,3.053,4212,3.053,4213,3.053,4214,3.053,4215,3.053,4216,3.053,4217,3.053,4218,2.427,4219,3.053,4220,3.053,4221,3.053,4222,3.053,4223,3.053,4224,3.053,4225,3.053,4226,3.053,4227,3.053,4228,3.053,4229,4.805,4230,3.053,4231,3.053,4232,3.053,4233,3.053,4234,3.053]],["title/interfaces/SimpleDate.html",[11,0.56,4235,3.123]],["body/interfaces/SimpleDate.html",[3,0.226,4,0.266,5,0.132,8,1.222,11,1.005,19,0.266,20,0.874,35,0.011,37,0.326,95,0.226,110,0.008,111,0.01,112,0.008,174,2.132,441,2.592,702,2.267,2280,4.501,2342,5.694,2344,6.096,2346,6.096,4235,5.602,4236,5.752,4237,5.752,4238,6.562,4239,6.562,4240,5.752,4241,5.752]],["title/components/SinComponent.html",[178,0.147,670,1]],["body/components/SinComponent.html",[0,0.011,3,0.102,4,0.12,5,0.09,8,0.831,11,0.588,12,2.135,13,1.001,14,0.676,19,0.12,20,0.511,21,1.542,23,0.588,26,2.006,29,0.568,32,0.749,34,1.243,35,0.012,36,0.628,37,0.341,38,0.795,39,0.86,42,1.02,45,1.123,51,1.043,52,1.124,53,0.518,58,1.854,60,0.716,64,1.05,65,1.009,71,3.277,72,0.831,73,1.178,79,0.54,90,0.241,92,0.247,93,0.567,95,0.102,98,1.062,100,0.863,105,2.135,110,0.008,111,0.006,112,0.004,113,3.928,115,0.963,116,0.676,117,0.568,118,1.126,120,3.405,121,1.45,122,1.495,123,0.996,124,1.542,125,1.514,126,1.813,127,1.813,128,2.591,129,2.364,130,2.848,131,2.292,132,2.851,133,2.196,137,0.904,138,2.655,139,1.088,140,0.99,141,0.904,142,0.96,143,1.054,144,0.971,146,0.99,148,1.946,149,0.99,151,1.716,152,2.838,153,3.291,155,1.335,156,2.353,157,2.472,158,1.287,159,0.932,160,1.335,162,1.243,164,1.753,170,0.67,171,1.5,172,0.952,174,1.45,176,2.809,177,1.386,178,0.222,187,0.96,189,0.96,191,0.904,198,0.943,202,1.944,212,0.43,213,4.108,237,1.944,254,1.696,299,1.565,304,1.201,350,2.591,353,1.218,364,0.656,387,0.676,413,0.716,441,2.331,448,3.659,488,1.287,495,0.656,514,2.848,534,1.05,577,0.695,578,0.737,579,0.759,582,0.601,583,1.269,585,0.831,587,0.831,601,0.716,602,1.113,603,1.582,604,0.781,605,0.781,606,0.638,607,0.781,608,0.676,609,0.781,610,0.676,611,0.781,612,0.695,613,0.781,614,0.695,615,0.781,616,0.695,617,0.781,618,0.695,619,0.737,620,0.781,621,0.695,622,1.179,623,0.695,624,0.737,625,0.781,626,0.695,627,0.781,628,0.695,629,0.781,630,0.676,631,0.781,632,0.781,633,0.676,634,0.781,635,0.695,636,0.781,637,0.676,638,0.781,639,0.695,640,1.42,641,0.695,642,0.656,643,0.656,644,1.179,645,0.695,646,0.716,647,0.781,648,0.676,649,0.781,650,0.695,651,0.781,652,0.695,653,0.781,654,0.656,655,0.781,656,0.676,657,0.781,658,0.695,659,0.759,660,0.781,661,0.676,662,0.638,663,0.781,664,0.676,665,0.781,666,0.656,667,0.781,668,0.676,669,0.737,670,1.409,671,0.781,672,0.716,673,0.781,674,0.695,675,0.781,676,0.676,677,0.781,678,0.695,679,0.737,680,0.695,681,0.676,682,0.759,683,0.567,684,0.676,685,0.781,686,0.676,687,0.781,688,0.676,689,0.781,690,0.676,691,0.781,692,0.676,693,0.781,694,0.676,695,0.781,696,0.676,697,0.781,698,0.676,699,0.737,700,0.781,711,1.265,712,1.75,751,1.081,753,2.444,756,0.714,779,2.353,788,0.828,796,1.201,815,2.848,837,2.265,845,1.088,861,2.068,969,1.806,1029,1.542,1041,2.006,1171,2.525,1235,2.8,1238,1.441,1260,1.441,1264,1.287,1273,2.848,1274,2.978,1275,3.122,1276,2.848,1277,3.285,1278,2.621,1282,2.265,1288,1.806,1289,1.806,1290,1.806,1294,1.908,1296,1.806,1299,1.806,1300,1.806,1301,1.806,1302,1.806,1303,1.806,1304,1.806,1305,1.806,1306,3.563,1320,1.806,1321,1.806,1322,1.806,1323,1.637,1325,1.637,1398,1.637,1399,1.565,1400,1.637,1401,1.637,1402,1.908,1403,2.726,1448,3.68,1522,2.726,1536,2.472,2279,3.548,2280,3.061,2286,3.061,2287,3.277,2288,2.881,2289,3.277,2328,2.848,2545,2.35,2546,2.171,2547,2.35,2619,1.806,2622,1.806,2729,2.848,2734,2.265,2763,3.548,3184,2.171,3510,3.911,3537,2.35,3857,5.925,3868,3.911,3869,3.911,3874,2.171,3876,2.171,3877,2.027,3881,2.35,3882,3.911,3883,2.59,3885,2.35,3888,2.35,3889,2.35,3890,2.35,3891,2.35,3892,2.35,3897,2.59,3905,5.635,3913,3.911,3914,3.911,4242,2.59,4243,6.151,4244,4.462,4245,4.462,4246,5.989,4247,4.462,4248,4.462,4249,2.955,4250,4.462,4251,2.955,4252,2.955,4253,2.955,4254,4.462,4255,2.955,4256,2.955,4257,2.955,4258,2.955,4259,2.955,4260,2.955,4261,2.955,4262,2.955,4263,2.955,4264,2.955,4265,2.955,4266,2.955,4267,7.224,4268,5.375,4269,2.955,4270,2.955,4271,2.955,4272,2.955,4273,2.955,4274,2.955]],["title/components/ThumbnailComponent.html",[178,0.147,674,1]],["body/components/ThumbnailComponent.html",[0,0.016,3,0.143,4,0.168,5,0.114,13,1.06,14,0.946,19,0.168,20,0.652,23,0.75,29,0.527,32,0.717,34,0.939,35,0.011,36,0.588,37,0.321,38,0.583,39,0.91,42,1.301,45,1.573,51,0.775,52,0.75,53,0.998,60,1.003,64,1.339,65,0.892,72,1.06,73,1.052,79,0.274,90,0.244,91,1.803,92,0.346,95,0.143,110,0.005,111,0.007,112,0.005,117,0.725,118,1.363,123,1.008,125,1.511,144,1.028,170,0.854,172,0.915,178,0.224,198,0.726,212,0.602,353,1.244,364,0.919,387,0.946,413,1.003,441,1.69,485,2.672,495,0.919,534,1.339,577,0.974,578,1.032,579,1.062,582,0.842,583,1.291,585,1.06,587,1.06,599,2.018,600,1.941,601,1.003,602,1.419,603,1.85,604,1.094,605,1.094,606,0.893,607,1.094,608,0.946,609,1.094,610,0.946,611,1.094,612,0.974,613,1.094,614,0.974,615,1.094,616,0.974,617,1.094,618,0.974,619,1.032,620,1.094,621,0.974,622,1.504,623,0.974,624,1.032,625,1.094,626,0.974,627,1.094,628,0.974,629,1.094,630,0.946,631,1.094,632,1.094,633,0.946,634,1.094,635,0.974,636,1.094,637,0.946,638,1.094,639,0.974,640,1.718,641,0.974,642,0.919,643,0.919,644,1.504,645,0.974,646,1.003,647,1.094,648,0.946,649,1.094,650,0.974,651,1.094,652,0.974,653,1.094,654,0.919,655,1.094,656,0.946,657,1.094,658,0.974,659,1.062,660,1.094,661,0.946,662,0.893,663,1.094,664,0.946,665,1.094,666,0.919,667,1.094,668,0.946,669,1.032,670,0.974,671,1.094,672,1.003,673,1.094,674,1.648,675,1.094,676,0.946,677,1.094,678,0.974,679,1.032,680,0.974,681,0.946,682,1.062,683,0.794,684,0.946,685,1.094,686,0.946,687,1.094,688,0.946,689,1.094,690,0.946,691,1.094,692,0.946,693,1.094,694,0.946,695,1.094,696,0.946,697,1.094,698,0.946,699,1.032,700,1.094,703,1.906,704,1.906,711,1.339,712,1.746,756,0.662,787,4.067,845,2.094,861,1.99,1029,1.966,1326,1.681,1327,2.312,1328,1.681,1329,2.312,1330,2.312,1331,2.312,1332,1.681,1333,1.681,1334,2.312,1335,2.312,1336,1.681,1337,1.681,1338,1.681,1339,1.681,1340,1.681,1341,2.312,1342,2.235,1343,1.681,1344,2.312,1345,2.312,1346,1.681,1347,2.312,1348,1.681,1349,1.681,1350,1.681,1351,1.681,1352,2.845,1353,1.681,1354,1.681,1355,1.681,1356,1.681,1357,1.681,1358,1.681,1359,1.681,1360,1.681,1361,1.681,1362,1.681,1363,1.681,1364,1.681,1365,1.681,1366,1.681,1367,1.681,1368,1.681,1369,2.312,1370,1.681,1371,1.681,1372,1.681,1373,1.681,1374,1.681,1375,1.681,1376,1.681,1377,1.681,1378,1.681,1379,1.681,1380,1.681,1381,1.681,1382,1.681,1383,2.312,1384,1.681,1385,1.681,1386,1.681,1387,1.681,1388,1.681,1389,1.387,1390,1.681,1391,1.681,1392,1.681,1393,1.681,1394,1.681,1395,1.681,1396,1.681,1397,1.681,1405,3.602,2576,3.04,2577,4.461,2589,3.628,2626,4.179,2627,4.179,2709,3.628,2732,4.179,2734,2.101,2787,4.525,2833,3.291,2969,3.628,3075,4.179,3530,4.988,3531,5.7,3555,5.7,4275,3.628,4276,5.69,4277,5.69,4278,6.503,4279,8.208,4280,6.503,4281,6.503,4282,6.503,4283,6.503,4284,5.69,4285,5.69,4286,4.139,4287,4.139,4288,4.139,4289,4.139,4290,4.139,4291,4.139,4292,4.139,4293,4.139,4294,4.139,4295,7.003,4296,4.139,4297,4.139,4298,5.69,4299,4.139,4300,4.139,4301,4.139,4302,5.69,4303,7.003,4304,4.139,4305,5.69,4306,5.69]],["title/components/ToggleComponent.html",[178,0.147,676,0.972]],["body/components/ToggleComponent.html",[0,0.018,3,0.156,4,0.184,5,0.122,13,1.127,14,1.037,19,0.184,20,0.694,23,0.797,29,0.868,32,0.68,35,0.011,36,0.545,37,0.294,39,0.968,42,1.384,51,0.618,52,0.597,60,1.098,64,1.424,65,0.577,72,1.127,73,0.681,79,0.451,90,0.227,92,0.379,95,0.156,110,0.006,111,0.008,112,0.006,115,1.306,116,1.662,117,0.771,118,1.428,123,0.938,124,2.092,125,1.569,133,2.024,137,1.387,138,1.519,139,1.669,140,1.519,141,1.387,142,1.473,143,1.616,144,1.231,170,0.909,172,0.959,178,0.235,212,0.659,308,2.429,353,1.25,364,1.007,387,1.037,413,1.098,495,1.007,534,1.424,577,1.067,578,1.131,579,1.164,582,0.923,583,1.297,585,1.127,587,1.127,601,1.098,602,1.509,603,1.921,604,1.198,605,1.198,606,0.978,607,1.198,608,1.037,609,1.198,610,1.037,611,1.198,612,1.067,613,1.198,614,1.067,615,1.198,616,1.067,617,1.198,618,1.067,619,1.131,620,1.198,621,1.067,622,1.599,623,1.067,624,1.131,625,1.198,626,1.067,627,1.198,628,1.067,629,1.198,630,1.037,631,1.198,632,1.198,633,1.037,634,1.198,635,1.067,636,1.198,637,1.037,638,1.198,639,1.067,640,1.8,641,1.067,642,1.007,643,1.007,644,1.599,645,1.067,646,1.098,647,1.198,648,1.037,649,1.198,650,1.067,651,1.198,652,1.067,653,1.198,654,1.007,655,1.198,656,1.037,657,1.198,658,1.067,659,1.164,660,1.198,661,1.037,662,0.978,663,1.198,664,1.037,665,1.198,666,1.007,667,1.198,668,1.037,669,1.131,670,1.067,671,1.198,672,1.098,673,1.198,674,1.067,675,1.198,676,1.662,677,1.198,678,1.067,679,1.131,680,1.067,681,1.037,682,1.164,683,0.87,684,1.037,685,1.198,686,1.037,687,1.198,688,1.037,689,1.198,690,1.037,691,1.198,692,1.037,693,1.198,694,1.037,695,1.198,696,1.037,697,1.198,698,1.037,699,1.131,700,1.198,703,2.028,704,2.028,711,1.424,712,1.813,717,1.567,756,0.725,788,1.27,1029,2.092,1054,4.814,1063,5.419,1326,1.842,1327,2.459,1328,1.842,1329,2.459,1330,2.459,1331,2.459,1332,1.842,1333,1.842,1334,2.459,1335,2.459,1336,1.842,1337,1.842,1338,1.842,1339,1.842,1340,1.842,1341,2.459,1342,2.378,1343,1.842,1344,2.459,1345,2.459,1346,1.842,1347,2.459,1348,1.842,1349,1.842,1350,1.842,1351,1.842,1352,2.954,1353,1.842,1354,1.842,1355,1.842,1356,1.842,1357,1.842,1358,1.842,1359,1.842,1360,1.842,1361,1.842,1362,1.842,1363,1.842,1364,1.842,1365,1.842,1366,1.842,1367,1.842,1368,1.842,1369,2.459,1370,1.842,1371,1.842,1372,1.842,1373,1.842,1374,1.842,1375,1.842,1376,1.842,1377,1.842,1378,1.842,1379,1.842,1380,1.842,1381,1.842,1382,1.842,1383,2.459,1384,1.842,1385,1.842,1386,1.842,1387,1.842,1388,1.842,1389,1.519,1390,1.842,1391,1.842,1392,1.842,1393,1.842,1394,1.842,1395,1.842,1396,1.842,1397,1.842,4307,3.974,4308,6.053,4309,6.053,4310,6.053,4311,4.534,4312,4.534,4313,4.534]],["title/directives/ValidateBcPostalDirective.html",[212,0.618,688,0.972]],["body/directives/ValidateBcPostalDirective.html",[0,0.023,3,0.201,4,0.236,5,0.117,9,1.678,19,0.236,23,0.935,32,0.508,34,0.959,35,0.012,36,0.466,37,0.287,38,0.596,65,0.741,79,0.385,90,0.266,92,0.487,93,1.116,95,0.245,98,1.514,99,2.953,100,0.942,110,0.007,111,0.009,112,0.007,117,0.904,153,3.329,174,1.89,191,2.441,193,3.755,198,1.245,212,1.114,214,4.243,215,3.378,281,3.222,324,2.172,336,2.378,337,2.238,357,1.582,559,2.627,582,1.184,583,1.032,662,1.255,683,1.116,688,1.824,710,3.755,782,2.534,837,2.74,894,3.46,944,6.343,945,6.222,946,3.554,947,4.626,948,4.626,959,4.272,1049,3.99,1055,3.206,1178,4.272,1313,2.534,2496,4.681,2498,4.633,2501,3.554,2502,4.998,2504,4.122,2509,4.337,2519,3.222,2540,2.953,2821,4.272,3976,4.869,4009,4.626,4204,4.869,4314,5.099,4315,6.992,4316,5.817,4317,5.817,4318,5.099,4319,3.755]],["title/directives/ValidateCityDirective.html",[212,0.618,690,0.972]],["body/directives/ValidateCityDirective.html",[0,0.023,3,0.204,4,0.24,5,0.119,19,0.24,23,0.945,32,0.517,34,0.976,35,0.012,36,0.474,37,0.29,38,0.607,65,0.753,79,0.391,90,0.269,92,0.495,93,1.135,95,0.247,98,1.525,99,3.004,100,0.949,110,0.01,111,0.009,112,0.008,117,0.913,153,3.364,191,2.455,198,1.353,212,1.043,214,4.275,281,3.277,324,2.195,336,2.403,337,2.261,559,2.673,582,1.204,583,1.043,683,1.135,690,1.834,709,3.134,837,2.753,1055,3.24,1307,3.134,1313,2.577,2496,4.716,2498,4.482,2501,3.615,2502,5.022,2504,4.165,2509,4.382,2519,3.277,2540,3.642,2729,3.134,2918,4.346,3175,4.382,4319,3.82,4320,6.287,4321,5.186,4322,7.033,4323,5.917,4324,5.186,4325,4.705]],["title/directives/ValidateNameDirective.html",[212,0.618,692,0.972]],["body/directives/ValidateNameDirective.html",[0,0.023,3,0.205,4,0.241,5,0.12,19,0.241,23,0.948,32,0.52,34,0.982,35,0.012,36,0.576,37,0.291,38,0.61,65,0.758,79,0.394,90,0.27,92,0.498,93,1.142,95,0.248,98,1.529,99,3.023,100,0.952,110,0.008,111,0.009,112,0.008,117,0.917,153,3.376,191,2.46,198,1.262,212,1.047,214,4.286,281,3.297,324,2.203,336,2.412,337,2.27,559,2.689,582,1.211,583,1.047,683,1.142,692,1.838,837,2.758,946,3.638,1055,3.252,1307,3.153,1313,2.593,2496,4.728,2498,4.494,2501,3.638,2502,5.03,2504,4.181,2509,4.399,2519,3.297,2540,3.655,3175,4.399,3176,4.734,4319,3.843,4326,6.31,4327,5.218,4328,7.047,4329,5.953]],["title/directives/ValidatePostalcodeDirective.html",[212,0.618,694,0.972]],["body/directives/ValidatePostalcodeDirective.html",[0,0.02,3,0.179,4,0.211,5,0.104,19,0.211,23,0.872,32,0.636,34,0.858,35,0.012,36,0.416,37,0.31,38,0.533,39,1.354,42,1.513,51,0.902,52,0.872,53,1.161,65,0.662,79,0.481,90,0.248,92,0.435,93,0.998,95,0.228,98,1.625,99,2.64,100,1.011,110,0.007,111,0.009,112,0.007,117,0.843,159,2.296,172,1.025,191,2.422,198,1.277,212,0.963,214,4.033,281,2.88,324,2.025,336,2.218,337,2.087,559,3.289,582,1.058,583,0.963,662,1.122,683,0.998,694,1.752,750,5.308,782,2.265,789,3.82,837,2.652,894,2.349,944,5.264,946,3.178,947,4.135,948,4.135,1055,2.99,1307,2.755,1313,2.265,2496,4.449,2498,4.229,2501,3.178,2502,4.944,2504,3.844,2505,3.357,2509,4.684,2519,2.88,2540,3.892,2729,3.506,3151,3.82,3175,4.836,3976,5.258,4009,4.135,4204,5.258,4318,4.558,4319,3.357,4325,5.264,4330,4.135,4331,5.79,4332,7.207,4333,5.2,4334,5.2,4335,5.2,4336,4.558,4337,5.2,4338,6.619,4339,6.619,4340,5.2,4341,5.2,4342,4.558,4343,5.2,4344,5.2,4345,5.264,4346,5.2]],["title/directives/ValidateRegionDirective.html",[212,0.618,696,0.972]],["body/directives/ValidateRegionDirective.html",[0,0.023,3,0.204,4,0.239,5,0.119,19,0.239,23,0.944,32,0.516,34,0.975,35,0.012,36,0.473,37,0.29,38,0.606,65,0.753,79,0.391,90,0.269,92,0.494,93,1.134,95,0.247,98,1.524,99,3.001,100,0.949,110,0.01,111,0.009,112,0.008,117,0.913,153,3.362,191,2.454,198,1.353,212,1.042,214,4.273,281,3.274,324,2.193,336,2.401,337,2.26,559,2.67,582,1.203,583,1.042,683,1.134,696,1.834,837,2.753,946,3.612,1055,3.238,1307,3.131,1313,2.575,2496,4.714,2498,4.48,2501,3.612,2502,5.02,2504,4.163,2509,4.38,2519,3.274,2540,3.639,2918,4.341,3175,4.38,4218,5.7,4319,3.816,4324,5.181,4347,6.283,4348,5.181,4349,7.03,4350,5.911,4351,5.911]],["title/directives/ValidateStreetDirective.html",[212,0.618,698,0.972]],["body/directives/ValidateStreetDirective.html",[0,0.023,3,0.204,4,0.24,5,0.119,19,0.24,23,0.945,32,0.517,34,0.976,35,0.012,36,0.474,37,0.29,38,0.607,65,0.753,79,0.391,90,0.269,92,0.495,93,1.135,95,0.247,98,1.525,99,3.004,100,0.949,110,0.01,111,0.009,112,0.008,117,0.913,153,3.364,191,2.455,198,1.353,212,1.043,214,4.275,281,3.277,324,2.195,336,2.403,337,2.261,559,2.673,582,1.204,583,1.043,683,1.135,698,1.834,699,2.001,760,3.436,837,2.753,1055,3.24,1307,3.134,1313,2.577,2496,4.716,2498,4.482,2501,3.615,2502,5.022,2504,4.165,2509,4.382,2519,3.277,2540,3.642,2729,3.134,3175,4.382,4319,3.82,4325,5.703,4342,5.186,4352,6.287,4353,5.186,4354,5.917]],["title/components/WizardProgressBarComponent.html",[178,0.147,678,1]],["body/components/WizardProgressBarComponent.html",[0,0.014,3,0.121,4,0.142,5,0.102,8,0.653,13,0.943,14,0.801,19,0.142,20,0.58,23,0.667,29,0.446,30,2.405,31,4.393,32,0.694,34,0.835,35,0.012,36,0.552,37,0.291,38,0.519,42,1.157,45,1.924,51,0.477,52,0.462,60,0.849,61,3.778,64,1.191,65,0.879,72,0.943,73,0.892,76,3.63,84,2.468,86,4.025,88,1.709,90,0.259,91,1.527,92,0.293,94,1.78,95,0.121,100,0.731,105,1.25,110,0.005,111,0.007,112,0.005,117,0.645,118,1.245,123,0.921,125,1.403,144,0.915,159,1.596,170,0.977,172,0.712,178,0.205,183,1.332,198,1.21,212,0.51,254,1.332,257,2.574,283,2.786,286,1.942,353,1.232,364,0.778,387,0.801,398,2.574,413,0.849,441,2.136,450,1.78,451,1.527,469,1.863,495,0.778,533,3.093,534,1.191,577,0.825,578,0.874,579,0.9,582,0.713,583,1.281,585,0.943,587,0.943,599,2.468,600,2.374,601,0.849,602,1.262,603,1.719,604,0.926,605,0.926,606,0.756,607,0.926,608,0.801,609,0.926,610,0.801,611,0.926,612,0.825,613,0.926,614,0.825,615,0.926,616,0.825,617,0.926,618,0.825,619,0.874,620,0.926,621,0.825,622,1.337,623,0.825,624,0.874,625,0.926,626,0.825,627,0.926,628,0.825,629,0.926,630,0.801,631,0.926,632,0.926,633,0.801,634,0.926,635,0.825,636,0.926,637,0.801,638,0.926,639,0.825,640,1.57,641,0.825,642,0.778,643,0.778,644,1.337,645,0.825,646,0.849,647,0.926,648,0.801,649,0.926,650,0.825,651,0.926,652,0.825,653,0.926,654,0.778,655,0.926,656,0.801,657,0.926,658,0.825,659,0.9,660,0.926,661,0.801,662,0.756,663,0.926,664,0.801,665,0.926,666,0.778,667,0.926,668,0.801,669,0.874,670,0.825,671,0.926,672,0.849,673,0.926,674,0.825,675,0.926,676,0.801,677,0.926,678,1.531,679,1.848,680,2.04,681,0.801,682,0.9,683,0.672,684,0.801,685,0.926,686,0.801,687,0.926,688,0.801,689,0.926,690,0.801,691,0.926,692,0.801,693,0.926,694,0.801,695,0.926,696,0.801,697,0.926,698,0.801,699,0.874,700,0.926,703,1.696,704,1.696,751,0.849,757,2.263,779,1.988,851,1.377,861,2.268,957,4.437,976,2.036,1001,2.804,1003,2.468,1019,2.804,1042,4.075,1113,2.405,1171,2.334,1284,3.268,1326,1.424,1327,2.056,1328,1.424,1329,2.056,1330,2.056,1331,2.056,1332,1.424,1333,1.424,1334,2.056,1335,2.056,1336,1.424,1337,1.424,1338,1.424,1339,1.424,1340,1.424,1341,2.056,1342,1.988,1343,1.424,1344,2.056,1345,2.056,1346,1.424,1347,2.056,1348,1.424,1349,1.424,1350,1.424,1351,1.424,1352,2.643,1353,1.424,1354,1.424,1355,1.424,1356,1.424,1357,1.424,1358,1.424,1359,1.424,1360,1.424,1361,1.424,1362,1.424,1363,1.424,1364,1.424,1365,1.424,1366,1.424,1367,1.424,1368,1.424,1369,2.056,1370,1.424,1371,1.424,1372,1.424,1373,1.424,1374,1.424,1375,1.424,1376,1.424,1377,1.424,1378,1.424,1379,1.424,1380,1.424,1381,1.424,1382,1.424,1383,2.056,1384,1.424,1385,1.424,1386,1.424,1387,1.424,1388,1.424,1389,1.174,1390,1.424,1391,1.424,1392,1.424,1393,1.424,1394,1.424,1395,1.424,1396,1.424,1397,1.424,1522,2.142,1564,2.94,1565,2.036,1574,2.263,1586,2.787,1588,2.787,1661,3.093,1665,4.724,1668,3.835,2328,3.446,2388,3.268,2561,3.072,2572,4.463,2583,2.405,2584,2.405,2655,4.363,2674,3.072,2699,6.048,2714,2.405,2836,3.718,3100,2.574,3101,4.025,3102,4.025,3112,3.072,3143,4.025,3407,5.207,3408,3.072,3409,3.072,3410,3.072,3522,4.025,3877,2.405,3928,4.025,4161,6.389,4240,4.437,4355,7.042,4356,5.941,4357,5.941,4358,5.061,4359,5.941,4360,5.941,4361,5.941,4362,6.506,4363,5.061,4364,6.506,4365,6.506,4366,5.061,4367,3.505,4368,5.061,4369,3.505,4370,3.505,4371,3.505,4372,3.505,4373,5.061,4374,5.061,4375,5.207,4376,4.437,4377,5.061,4378,5.061,4379,3.718,4380,3.505,4381,5.941,4382,5.061,4383,3.505,4384,5.941,4385,5.061,4386,3.505,4387,3.505,4388,3.505,4389,3.505,4390,3.505,4391,3.505,4392,3.505,4393,3.505,4394,3.505,4395,3.505,4396,3.505,4397,3.505,4398,5.941,4399,3.505,4400,3.505,4401,3.505,4402,3.505,4403,2.574,4404,3.505,4405,3.505,4406,3.505,4407,6.899,4408,3.505,4409,5.061,4410,3.505,4411,3.505,4412,3.505,4413,3.505,4414,3.505,4415,5.061,4416,3.505,4417,3.505,4418,3.505,4419,3.505,4420,3.505,4421,3.505,4422,3.505,4423,3.505,4424,3.505,4425,3.505,4426,3.505,4427,3.505,4428,3.505,4429,3.505,4430,3.505,4431,5.061]],["title/interfaces/WizardProgressItem.html",[11,0.56,1668,2.745]],["body/interfaces/WizardProgressItem.html",[0,0.024,3,0.269,4,0.246,5,0.122,11,0.96,19,0.246,20,0.835,26,2.034,35,0.012,37,0.295,67,2.098,73,0.912,79,0.57,84,4.205,90,0.227,94,3.082,95,0.251,100,0.896,110,0.008,111,0.009,112,0.008,116,1.388,174,1.973,205,2.644,269,2.553,354,4.828,422,4.828,479,3.526,591,5.135,679,1.514,680,1.429,702,2.098,796,2.466,870,4.164,1170,4.451,1661,4.451,1662,4.828,1663,5.321,1664,5.321,1665,4.828,1667,5.321,1668,5.038,1670,5.321,1671,5.321,1673,5.321,1674,5.321,1675,5.35,1679,5.321,1680,5.321,1681,5.321,1682,5.321,1683,5.321,1684,5.321,1685,5.321,1686,6.385,1687,5.321]],["title/components/XiconButtonComponent.html",[178,0.147,681,0.972]],["body/components/XiconButtonComponent.html",[0,0.018,3,0.158,4,0.186,5,0.123,9,1.322,13,1.135,14,1.048,17,2.235,19,0.186,23,0.803,29,0.872,32,0.683,35,0.011,36,0.548,37,0.277,42,1.394,58,1.11,60,1.11,64,1.84,65,0.776,72,1.135,73,0.916,79,0.403,90,0.228,92,0.383,95,0.158,110,0.006,111,0.008,112,0.006,117,0.776,118,1.436,125,1.575,133,2.437,144,1.102,170,0.916,172,0.858,178,0.236,183,2.318,198,0.804,200,3.144,212,0.667,265,4.183,269,1.927,350,2.662,353,1.251,357,1.659,364,1.018,387,1.048,413,1.11,467,2.662,495,1.018,511,4.478,534,1.435,577,1.079,578,1.143,579,1.177,582,0.933,583,1.297,585,1.135,587,1.135,596,5.01,601,1.11,602,1.52,603,1.93,604,1.211,605,1.211,606,0.989,607,1.211,608,1.048,609,1.211,610,1.048,611,1.211,612,1.079,613,1.211,614,1.079,615,1.211,616,1.079,617,1.211,618,1.079,619,1.143,620,1.211,621,1.079,622,1.611,623,1.079,624,1.143,625,1.211,626,1.079,627,1.211,628,1.079,629,1.211,630,1.048,631,1.211,632,1.211,633,1.048,634,1.211,635,1.079,636,1.211,637,1.048,638,1.211,639,1.079,640,1.81,641,1.079,642,1.018,643,1.018,644,1.611,645,1.079,646,1.11,647,1.211,648,1.048,649,1.211,650,1.079,651,1.211,652,1.079,653,1.211,654,1.018,655,1.211,656,1.048,657,1.211,658,1.079,659,1.177,660,1.211,661,1.048,662,0.989,663,1.211,664,1.048,665,1.211,666,1.018,667,1.211,668,1.048,669,1.143,670,1.079,671,1.211,672,1.11,673,1.211,674,1.079,675,1.211,676,1.048,677,1.211,678,1.079,679,1.143,680,1.079,681,1.67,682,2.106,683,0.879,684,1.048,685,1.211,686,1.048,687,1.211,688,1.048,689,1.211,690,1.048,691,1.211,692,1.048,693,1.211,694,1.048,695,1.211,696,1.048,697,1.211,698,1.048,699,1.143,700,1.211,711,1.612,712,1.99,756,1.096,764,2.662,810,1.927,845,1.687,976,2.662,1025,5.345,1026,5.345,1029,2.107,1049,3.144,1558,3.645,3355,4.849,3552,4.849,3596,3.367,4207,6.345,4432,6.994,4433,3.645,4434,7.303,4435,5.448,4436,6.097,4437,4.584,4438,6.401,4439,4.584,4440,4.584,4441,4.584,4442,4.584,4443,4.584,4444,4.584,4445,4.584,4446,4.584,4447,6.097,4448,4.584,4449,4.584,4450,4.584,4451,4.584,4452,4.584,4453,4.584,4454,4.584]],["title/changelog.html",[4455,2.064,4456,2.064,4457,3.115]],["body/changelog.html",[0,0.019,2,0.736,3,0.06,5,0.12,9,1.28,10,0.624,12,2.028,13,1.194,14,0.671,17,3.467,18,2.317,23,0.387,28,1.285,32,0.153,34,0.289,35,0.006,36,0.478,37,0.071,42,0.4,43,1.534,50,2.873,51,0.873,52,0.387,55,1.49,56,1.2,58,1.297,59,1.13,61,1.705,64,0.691,67,0.605,72,0.706,79,0.327,84,0.853,87,1.016,90,0.11,95,0.153,99,0.888,100,0.215,110,0.002,111,0.005,112,0.004,119,1.047,121,0.569,123,0.455,133,2.043,142,1.232,144,1.028,152,0.687,156,1.744,157,1.626,158,1.652,170,0.896,172,0.927,173,1.534,174,1.607,176,1.377,177,0.821,178,0.276,179,2.601,181,1.2,183,2.269,188,2.866,190,2.014,191,1.899,193,1.895,194,0.969,196,1.2,202,1.652,205,0.762,208,1.794,212,0.427,214,0.969,215,4.439,227,1.849,230,0.79,233,1.285,254,1.441,255,1.016,262,1.285,287,0.969,290,1.069,295,1.713,301,2.014,304,3.281,305,3.015,306,1.392,308,1.047,310,1.069,312,1.392,314,1.534,321,1.069,329,1.555,332,0.736,333,1.069,334,0.898,348,1.285,350,1.016,353,1.229,355,2.573,356,3.271,357,1.456,358,4.831,359,4.824,362,1.285,392,0.969,394,1.016,396,1.069,398,1.285,403,1.534,405,4.094,413,0.919,414,3.673,418,1.778,426,3.162,428,1.794,434,2.785,435,2.156,441,0.872,442,3.53,448,1.069,450,1.925,451,2.937,453,1.392,454,1.2,460,1.285,463,1.392,465,1.534,475,0.687,477,1.016,481,1.534,485,1.13,488,0.762,493,1.49,494,1.431,495,0.389,497,2.165,498,2.32,500,1.705,502,5.295,503,1.534,504,2.156,505,1.392,510,1.555,511,1.285,515,1.705,519,1.279,522,2.352,523,1.13,531,1.392,596,2.014,602,0.436,606,1.287,608,0.671,610,1.015,612,0.412,619,0.436,628,0.691,633,0.4,637,0.4,642,0.389,643,0.652,648,0.4,654,0.652,656,0.4,659,1.532,661,0.4,662,1.287,666,1.189,669,0.732,676,0.867,681,0.4,702,0.605,703,0.983,704,0.983,706,1.285,709,2.009,710,1.13,716,1.778,720,3.785,723,0.853,731,1.13,738,1.431,741,2.009,743,2.009,749,1.285,750,1.13,751,1.075,753,0.665,756,0.954,758,1.285,759,1.285,760,2.873,762,1.285,764,2.578,767,1.285,773,1.13,779,1.49,780,0.821,782,2.997,786,3.393,796,1.541,802,1.13,810,0.736,814,2.713,815,0.927,825,1.069,833,2.866,837,1.27,838,2.156,839,2.448,845,2.284,851,0.687,856,0.969,869,1.285,882,3.022,884,0.969,894,1.326,924,2.573,936,3.324,969,1.069,976,3.109,982,1.895,1001,3.151,1002,1.016,1007,1.2,1010,1.285,1011,1.895,1018,1.392,1019,3.437,1022,1.534,1023,1.392,1041,1.27,1049,1.2,1053,2.573,1054,3.015,1055,0.79,1106,1.555,1111,3.673,1120,1.794,1121,1.895,1136,1.2,1138,2.573,1142,2.601,1171,1.153,1172,1.13,1175,2.785,1201,1.285,1214,1.392,1221,1.285,1242,1.285,1276,2.836,1277,2.317,1310,1.279,1311,1.392,1313,0.762,1407,1.794,1448,1.377,1449,1.13,1490,1.285,1494,1.13,1497,2.866,1498,1.392,1514,1.2,1515,2.459,1519,3.015,1523,1.392,1527,4.345,1536,2.1,1548,1.392,1564,2.202,1587,1.392,1657,1.392,1661,1.069,1668,1.13,1691,4.178,1700,2.014,2270,1.016,2286,3.045,2287,2.785,2297,3.933,2302,2.202,2311,2.334,2316,1.069,2319,2.156,2328,0.927,2331,2.601,2342,2.601,2344,1.285,2346,1.285,2376,1.392,2391,2.334,2397,1.285,2402,1.392,2435,1.285,2477,2.573,2498,1.016,2505,1.13,2510,2.156,2513,2.156,2516,2.573,2535,3.022,2540,0.888,2580,1.285,2582,1.534,2584,1.2,2619,4.025,2620,1.392,2622,1.794,2623,3.015,2642,2.785,2643,3.015,2664,1.392,2688,1.534,2713,2.573,2714,2.014,2715,1.016,2729,0.927,2732,3.261,2733,1.534,2734,4,2738,4.257,2743,2.156,2754,2.785,2759,1.392,2763,3.933,2767,4.524,2770,4.524,2778,2.334,2786,3.933,2787,1.392,2810,1.285,2821,4.178,2833,2.334,2835,3.324,2878,1.534,2879,1.392,2889,1.534,2903,6.255,2907,1.285,2919,1.534,2929,1.534,2941,2.334,2974,1.13,2980,1.534,3007,3.015,3010,1.534,3095,1.534,3118,3.933,3122,1.534,3132,1.392,3214,1.794,3311,1.534,3353,1.534,3359,2.334,3377,3.891,3379,2.334,3380,1.2,3428,5.804,3430,1.392,3433,2.334,3484,1.285,3487,1.534,3514,5.774,3516,5.231,3522,1.392,3533,1.534,3538,2.573,3552,1.392,3571,2.156,3640,1.534,3645,1.534,3668,1.534,3676,2.334,3704,2.156,3729,2.334,3741,4.803,3746,1.392,3779,2.573,3792,2.573,3818,1.13,3820,1.534,3827,1.392,3846,3.891,3850,1.534,3877,2.601,3881,1.392,3885,1.392,3888,2.334,3920,4.693,3923,1.534,3928,2.334,3939,1.534,4100,1.534,4103,1.2,4235,2.156,4243,5.231,4379,2.156,4403,1.285,4435,1.392,4438,4.336,4455,1.016,4456,2.202,4457,4.986,4458,1.75,4459,7.631,4460,6.32,4461,1.75,4462,5.688,4463,1.75,4464,1.75,4465,1.75,4466,1.75,4467,8.488,4468,1.75,4469,2.935,4470,1.75,4471,1.75,4472,1.75,4473,1.75,4474,1.75,4475,1.75,4476,3.792,4477,1.75,4478,1.75,4479,1.75,4480,1.75,4481,1.75,4482,8.341,4483,1.75,4484,1.75,4485,2.935,4486,1.75,4487,1.75,4488,6.594,4489,1.75,4490,1.75,4491,1.75,4492,5.688,4493,3.792,4494,2.935,4495,2.935,4496,1.75,4497,1.75,4498,3.891,4499,3.792,4500,1.75,4501,1.75,4502,1.75,4503,1.75,4504,1.75,4505,1.75,4506,1.75,4507,1.75,4508,1.75,4509,1.75,4510,3.792,4511,1.75,4512,1.75,4513,1.75,4514,1.75,4515,1.75,4516,1.75,4517,1.75,4518,1.75,4519,3.792,4520,1.75,4521,1.75,4522,1.75,4523,1.75,4524,2.935,4525,1.75,4526,1.75,4527,2.935,4528,3.792,4529,1.75,4530,1.75,4531,1.75,4532,4.946,4533,1.75,4534,1.75,4535,1.75,4536,1.75,4537,1.75,4538,1.75,4539,1.75,4540,5.968,4541,2.935,4542,1.75,4543,1.75,4544,4.336,4545,1.75,4546,1.75,4547,3.792,4548,1.75,4549,1.75,4550,2.334,4551,2.935,4552,1.75,4553,1.75,4554,1.75,4555,1.75,4556,1.75,4557,1.75,4558,1.75,4559,1.75,4560,1.75,4561,1.75,4562,1.75,4563,1.75,4564,1.75,4565,1.75,4566,1.75,4567,1.75,4568,1.75,4569,1.75,4570,1.75,4571,1.75,4572,1.75,4573,1.75,4574,1.75,4575,1.75,4576,4.946,4577,3.015,4578,1.75,4579,1.534,4580,1.75,4581,1.75,4582,1.75,4583,1.75,4584,1.534,4585,1.75,4586,2.935,4587,1.75,4588,1.75,4589,1.75,4590,1.75,4591,1.75,4592,1.75,4593,1.75,4594,7.299,4595,1.75,4596,1.75,4597,1.75,4598,1.75,4599,1.75,4600,1.75,4601,1.75,4602,1.75,4603,1.534,4604,1.75,4605,1.75,4606,1.75,4607,6.206,4608,2.935,4609,1.75,4610,1.75,4611,1.75,4612,1.75,4613,1.75,4614,1.75,4615,1.534,4616,1.75,4617,1.75,4618,1.534,4619,1.75,4620,1.75,4621,1.75,4622,1.75,4623,1.75,4624,2.935,4625,1.75,4626,2.935,4627,1.75,4628,1.75,4629,1.75,4630,1.75,4631,2.935,4632,3.792,4633,1.534,4634,1.75,4635,1.75,4636,2.935,4637,1.75,4638,2.935,4639,1.75,4640,1.75,4641,1.75,4642,1.75,4643,1.75,4644,1.75,4645,1.75,4646,1.75,4647,1.75,4648,3.324,4649,1.75,4650,1.75,4651,1.75,4652,1.75,4653,1.75,4654,1.75,4655,2.935,4656,1.75,4657,1.75,4658,1.75,4659,1.75,4660,1.75,4661,1.75,4662,1.75,4663,1.75,4664,1.75,4665,1.392,4666,1.75,4667,1.75,4668,1.75,4669,1.75,4670,1.75,4671,1.75,4672,1.75,4673,1.75,4674,1.75,4675,1.75,4676,1.75,4677,1.75,4678,1.75,4679,1.75,4680,1.75,4681,1.75,4682,1.75,4683,1.75,4684,1.75,4685,1.75,4686,1.75,4687,1.75,4688,1.75,4689,1.75,4690,2.935,4691,1.75,4692,1.75,4693,1.75,4694,1.75,4695,1.75,4696,2.935,4697,1.75,4698,1.75,4699,1.75,4700,2.935,4701,1.534,4702,7.111,4703,4.439,4704,1.75,4705,1.75,4706,1.75,4707,4.946,4708,1.75,4709,1.75,4710,1.75,4711,1.75,4712,1.75,4713,1.75,4714,1.75,4715,1.2,4716,1.75,4717,1.75,4718,4.439,4719,1.75,4720,1.75,4721,1.75,4722,1.75,4723,2.935,4724,1.75,4725,1.75,4726,1.75,4727,1.75,4728,1.75,4729,1.75,4730,1.75,4731,1.75,4732,1.75,4733,1.75,4734,1.75,4735,1.75,4736,1.75,4737,1.75,4738,1.75,4739,1.75,4740,1.75,4741,1.75,4742,1.75,4743,2.935,4744,1.75,4745,1.75,4746,1.75,4747,2.935,4748,1.75,4749,1.75,4750,1.75,4751,1.75,4752,1.75,4753,1.75,4754,1.75,4755,4.439,4756,1.75,4757,1.75,4758,1.75,4759,1.75,4760,1.75,4761,1.75,4762,1.75,4763,1.75,4764,6.879,4765,1.75,4766,1.75,4767,1.75,4768,1.75,4769,1.75,4770,1.75,4771,3.792,4772,1.75,4773,1.75,4774,1.75,4775,1.534,4776,1.75,4777,4.439,4778,1.75,4779,1.75,4780,1.75,4781,1.75,4782,1.75,4783,1.75,4784,1.75,4785,1.75,4786,1.75,4787,1.75,4788,1.75,4789,1.75,4790,1.75,4791,1.75,4792,1.75,4793,1.75,4794,1.392,4795,1.75,4796,4.946,4797,1.534,4798,1.75,4799,1.75,4800,1.75,4801,1.75,4802,1.75,4803,1.75,4804,1.75,4805,1.75,4806,1.75,4807,1.75,4808,1.75,4809,1.75,4810,3.792,4811,1.75,4812,1.75,4813,1.75,4814,1.75,4815,1.75,4816,1.75,4817,1.75,4818,1.75,4819,1.75,4820,1.75,4821,1.75,4822,1.75,4823,1.75,4824,1.75,4825,1.75,4826,1.75,4827,1.75,4828,1.392,4829,1.75,4830,1.75,4831,2.935,4832,1.75,4833,1.75,4834,1.75,4835,2.935,4836,1.75,4837,1.534,4838,1.75,4839,1.75,4840,1.75,4841,1.75,4842,1.75,4843,3.53,4844,1.75,4845,1.75,4846,1.75,4847,3.891,4848,1.75,4849,1.75,4850,1.75,4851,1.75,4852,1.75,4853,1.75,4854,1.75,4855,2.573,4856,1.75,4857,1.75,4858,1.75,4859,1.75,4860,1.75,4861,1.534,4862,1.534,4863,1.534,4864,1.534,4865,1.75,4866,1.75,4867,1.75,4868,1.75,4869,3.324,4870,1.75,4871,1.75,4872,1.75,4873,1.75,4874,1.75,4875,3.324,4876,2.334,4877,1.75,4878,1.75,4879,1.75,4880,1.75,4881,1.75,4882,1.75,4883,1.75,4884,1.75,4885,1.75,4886,1.75,4887,1.75,4888,1.75,4889,1.75,4890,1.75,4891,1.75,4892,1.75,4893,1.75,4894,1.75,4895,1.75,4896,1.75,4897,1.75,4898,1.75,4899,1.75,4900,1.75,4901,1.75,4902,1.75,4903,1.75,4904,1.75,4905,1.75,4906,1.75,4907,1.75,4908,1.75,4909,1.75,4910,1.75,4911,1.75,4912,1.75,4913,1.75,4914,1.75,4915,1.534,4916,1.75,4917,1.75,4918,1.75,4919,1.75,4920,1.75,4921,1.75,4922,1.75,4923,1.75,4924,1.75,4925,1.75,4926,1.75,4927,1.75,4928,1.75,4929,1.75,4930,1.534,4931,1.75,4932,1.75,4933,1.534,4934,1.75,4935,1.75,4936,1.534,4937,1.75,4938,1.75,4939,1.534,4940,1.75,4941,1.75,4942,4.439,4943,1.75,4944,2.573,4945,1.75,4946,1.75,4947,1.285,4948,1.75,4949,1.75,4950,1.75,4951,1.75,4952,1.75,4953,1.75,4954,1.75,4955,1.534,4956,1.534,4957,1.75,4958,2.935,4959,1.75,4960,1.75,4961,1.75,4962,1.534,4963,1.75,4964,1.75,4965,1.534,4966,1.285,4967,1.75,4968,1.75,4969,3.324,4970,1.75,4971,1.75,4972,1.75,4973,1.75,4974,1.75,4975,1.75,4976,1.75,4977,1.75,4978,1.75,4979,1.75,4980,1.75,4981,1.75,4982,1.75,4983,1.75,4984,1.2,4985,1.534,4986,1.534,4987,1.75,4988,1.534,4989,1.75,4990,1.75,4991,1.75,4992,2.935,4993,1.75,4994,1.75,4995,1.75,4996,1.75,4997,1.75,4998,2.573,4999,1.75,5000,1.75,5001,1.75,5002,1.75,5003,1.75,5004,1.75,5005,1.75,5006,1.75,5007,1.75,5008,1.75,5009,1.75,5010,1.534,5011,1.75,5012,1.75,5013,1.75,5014,1.75,5015,1.75,5016,1.75,5017,1.75,5018,1.75]],["title/coverage.html",[5019,5.08]],["body/coverage.html",[0,0.03,1,2.414,5,0.061,6,3.62,7,2.66,11,1.085,13,0.565,35,0.012,37,0.123,60,1.103,105,3.169,110,0.004,111,0.006,112,0.004,113,1.48,114,2.66,116,0.694,132,1.233,140,1.017,159,2.685,169,2.229,178,0.298,202,1.322,212,1.059,225,1.681,226,3.62,227,1.48,228,2.66,310,1.855,316,2.682,317,1.96,319,2.082,320,2.66,321,1.855,333,1.855,348,2.229,349,2.66,350,1.763,351,2.66,364,0.674,387,1.041,390,2.782,441,0.902,495,0.674,577,0.714,580,2.66,606,0.655,608,0.694,610,0.694,612,0.714,614,0.714,616,0.714,618,0.714,621,0.714,623,0.714,626,0.714,628,0.714,630,0.694,633,0.694,635,0.714,637,0.694,639,0.714,641,0.714,642,0.674,645,0.714,648,0.694,650,0.714,652,0.714,654,0.674,656,0.694,658,0.714,661,0.694,664,0.694,666,0.674,668,0.694,670,0.714,672,0.735,674,0.714,676,0.694,678,0.714,680,1.071,681,0.694,684,0.694,686,0.694,688,0.694,690,0.694,692,0.694,694,0.694,696,0.694,698,0.694,699,0.757,701,2.082,705,4.458,718,1.681,720,1.541,722,1.96,723,1.48,724,2.082,725,2.082,727,1.855,728,1.855,729,1.96,731,1.96,732,2.082,756,0.485,780,1.423,786,3.747,848,5.961,894,2.056,921,2.66,999,2.66,1004,2.522,1006,2.66,1046,2.66,1047,2.414,1048,2.66,1086,1.96,1087,3.62,1088,3.62,1110,2.229,1150,2.229,1151,3.62,1152,3.62,1191,2.229,1232,2.66,1270,2.66,1284,5.224,1306,1.541,1405,1.681,1406,3.919,1433,4.198,1442,1.855,1461,1.855,1465,1.763,1482,2.229,1483,4.012,1497,1.96,1515,1.681,1639,2.414,1640,2.229,1641,2.414,1661,1.855,1662,3.62,1668,1.96,1688,2.66,1689,2.414,1690,2.66,1710,5.43,2263,2.414,2277,2.229,2278,4.012,2328,1.608,2342,2.082,2408,2.66,2409,2.66,2471,2.66,2493,4.344,2494,4.012,2495,4.344,2497,2.414,2506,2.414,2512,2.66,2551,2.66,2552,2.414,2553,2.66,2558,4.827,2559,4.827,2564,2.66,2568,2.414,2569,5.7,2570,5.171,2579,2.414,2599,1.855,2604,2.66,2607,2.414,2715,2.644,2719,4.458,2722,3.344,2725,1.96,2729,3.215,2734,2.311,2738,2.082,2743,4.012,2754,3.344,2758,3.344,2759,4.344,2767,4.827,2770,2.414,2778,3.62,3098,3.62,3099,3.344,3100,4.012,3137,3.62,3138,3.344,3139,3.62,3170,2.229,3179,2.082,3211,3.62,3214,1.855,3253,2.66,3254,2.414,3255,2.66,3374,2.66,3426,2.229,3427,3.62,3445,2.414,3448,2.414,3449,3.99,3450,3.62,3451,4.458,3596,2.229,3597,2.66,3598,2.66,3608,2.66,3637,3.62,3638,2.414,3639,2.66,3655,2.414,3656,2.66,3673,4.344,3699,2.229,3704,2.229,3739,2.414,3785,2.66,3845,2.66,3915,2.66,3916,2.414,3917,2.66,3976,4.684,3977,2.414,3978,2.66,4023,4.776,4071,2.229,4090,2.66,4091,2.66,4128,2.229,4129,3.62,4130,3.344,4151,2.66,4152,2.66,4161,2.414,4204,4.461,4207,2.414,4218,3.62,4229,2.66,4235,2.229,4236,2.66,4237,2.66,4242,2.66,4275,2.66,4307,2.66,4314,3.99,4315,2.66,4320,3.99,4321,3.99,4322,2.66,4326,3.99,4327,3.99,4328,2.66,4330,4.344,4331,2.414,4345,2.414,4347,3.99,4348,3.99,4349,2.66,4352,3.99,4353,3.99,4355,2.66,4432,2.66,4433,2.414,4544,2.66,4576,2.082,4615,2.66,4618,3.99,4648,2.66,5019,2.66,5020,3.035,5021,5.463,5022,2.66,5023,3.035,5024,3.035,5025,3.035,5026,7.283,5027,5.7,5028,5.7,5029,2.66,5030,8.789,5031,2.66,5032,2.66,5033,2.66,5034,2.66,5035,4.552,5036,3.035,5037,3.035,5038,4.552,5039,3.035,5040,3.035,5041,3.035,5042,4.552,5043,5.463,5044,3.035,5045,5.463,5046,6.503,5047,6.503,5048,3.035,5049,8.033,5050,6.503,5051,6.069,5052,3.035,5053,3.035,5054,3.035,5055,3.035,5056,3.035,5057,3.035,5058,3.035,5059,3.035,5060,3.035,5061,3.035,5062,3.035,5063,3.035,5064,3.035,5065,3.035,5066,6.503,5067,3.035,5068,4.552,5069,4.552,5070,3.035,5071,3.035,5072,3.035,5073,3.035,5074,4.552,5075,4.552,5076,3.035,5077,3.035,5078,3.035,5079,3.035,5080,3.035,5081,3.035,5082,3.035,5083,3.035,5084,3.035,5085,5.463,5086,4.552,5087,3.035,5088,3.035,5089,3.035,5090,3.035,5091,3.035,5092,3.035,5093,3.035,5094,3.035,5095,3.035,5096,3.035,5097,4.788,5098,4.788,5099,2.66,5100,2.229,5101,3.99,5102,2.66,5103,3.99,5104,7.14,5105,3.035,5106,3.035,5107,4.552,5108,3.035,5109,3.035,5110,3.035,5111,3.035,5112,3.035,5113,3.035,5114,3.035,5115,3.035,5116,3.035,5117,3.035,5118,3.035,5119,3.035,5120,5.985,5121,2.66,5122,2.66,5123,2.66,5124,2.66,5125,2.66,5126,2.66,5127,4.788,5128,4.788,5129,2.66,5130,2.66,5131,6.65,5132,6.503,5133,3.035,5134,3.035,5135,3.035,5136,5.7,5137,2.66,5138,2.66,5139,2.66,5140,2.66,5141,2.66,5142,4.552,5143,3.035,5144,3.035,5145,3.035]],["title/dependencies.html",[1002,2.064,1003,2.492]],["body/dependencies.html",[35,0.012,92,0.53,93,1.216,94,3.22,110,0.008,111,0.01,112,0.008,283,2.974,288,3.359,418,2.974,428,3.875,493,3.22,533,4.568,599,3.092,600,3.506,624,1.581,815,3.359,1003,3.092,1004,3.512,1107,4.657,1144,6.552,1149,5.042,1407,3.875,1527,3.875,2579,5.042,2580,5.49,2606,5.042,2607,5.042,2610,5.558,3827,5.042,4178,5.558,4584,5.558,4603,5.558,4701,5.558,4837,5.558,5146,6.341,5147,8.683,5148,6.341,5149,6.341,5150,6.341,5151,6.341,5152,6.341,5153,6.341,5154,6.341,5155,5.558,5156,6.341,5157,6.341,5158,6.341,5159,6.341,5160,6.341,5161,6.341]],["title/miscellaneous/enumerations.html",[5162,2.61,5163,4.481]],["body/miscellaneous/enumerations.html",[3,0.253,19,0.249,35,0.011,51,1,52,1.164,105,2.192,110,0.008,111,0.009,112,0.008,170,1.247,310,3.756,392,3.405,461,4.889,464,4.889,779,2.883,780,2.883,781,3.969,1171,2.883,1406,3.969,1420,4.484,1434,4.217,1435,4.217,1436,4.217,1437,4.217,1438,3.969,1439,4.217,1440,4.217,1441,4.217,1483,4.515,1489,5.836,1490,5.39,1491,5.836,1492,5.836,1499,4.889,1639,4.889,1640,4.515,1641,5.836,1648,6.433,1656,4.889,2030,5.388,2278,4.515,2307,5.836,2324,5.836,2711,4.217,2715,3.57,2719,4.515,2722,4.515,5022,5.388,5162,4.515,5163,5.388,5164,6.147,5165,7.339,5166,6.147,5167,6.147,5168,7.339,5169,6.147,5170,6.147,5171,6.147,5172,6.147,5173,6.147,5174,6.147,5175,6.147,5176,6.147,5177,6.147]],["title/miscellaneous/functions.html",[4379,3.754,5162,2.61]],["body/miscellaneous/functions.html",[5,0.144,10,1.548,14,1.344,19,0.176,34,1.445,35,0.011,36,0.707,37,0.335,38,0.898,39,1.334,52,0.775,58,1.052,65,1.08,79,0.389,87,2.522,89,2.3,90,0.163,110,0.006,111,0.008,112,0.006,169,4.318,191,1.799,253,2.978,255,3.415,269,1.826,279,3.415,281,3.257,299,2.3,353,0.611,357,1.181,358,2.405,359,2.405,393,4.033,396,4.562,412,3.806,451,1.891,461,5.681,579,2.125,683,1.128,750,4.613,757,2.803,779,1.706,800,2.204,837,2.233,851,1.706,855,2.803,899,2.522,922,2.978,1002,3.415,1553,2.803,1710,3.453,1712,3.806,2263,4.675,2302,4.149,2407,4.033,2493,3.453,2494,3.189,2495,5.301,2497,4.675,2499,5.843,2504,3.415,2506,4.675,2535,2.653,2558,3.453,2559,4.675,2566,3.453,2717,5.154,2837,4.675,2904,3.453,3244,3.453,3306,3.806,3484,3.189,3976,2.978,4023,3.189,4046,3.453,4071,4.318,4123,3.806,4204,2.978,4330,5.301,4331,4.675,4332,5.843,4336,3.806,4345,4.675,4379,3.189,4947,4.896,5010,5.154,5027,3.806,5028,6.746,5029,5.154,5031,5.154,5032,5.154,5033,5.154,5034,5.154,5097,3.806,5098,3.806,5099,5.154,5100,4.318,5101,3.806,5102,5.154,5103,6.262,5104,5.154,5120,3.806,5121,5.154,5122,5.843,5123,5.154,5124,5.154,5125,5.154,5126,5.154,5127,3.806,5128,6.262,5129,5.154,5130,5.154,5131,3.806,5136,3.806,5137,5.154,5138,5.154,5139,5.154,5140,5.154,5141,5.154,5162,3.189,5178,8.341,5179,6.666,5180,5.879,5181,5.879,5182,7.466,5183,4.342,5184,4.342,5185,5.879,5186,4.342,5187,4.342,5188,5.879,5189,4.342,5190,8.006,5191,4.342,5192,4.342,5193,4.342,5194,4.342,5195,4.342,5196,4.342,5197,4.342,5198,4.342,5199,4.342,5200,7.466,5201,4.342,5202,5.879,5203,5.879,5204,7.87,5205,4.342,5206,5.879,5207,5.879,5208,5.879,5209,4.342,5210,4.342,5211,4.342,5212,4.342,5213,4.342,5214,3.806,5215,4.342,5216,5.879,5217,4.342,5218,7.144,5219,4.342,5220,4.342,5221,4.342,5222,4.342,5223,4.342,5224,4.342,5225,4.342,5226,3.806,5227,4.342,5228,4.342,5229,5.879,5230,5.879,5231,4.342,5232,4.342,5233,4.342,5234,7.696,5235,7.144,5236,4.342,5237,4.342,5238,4.342,5239,4.342,5240,4.342,5241,4.342,5242,5.879,5243,4.342]],["title/index.html",[19,0.144,4455,2.064,4456,2.064]],["body/index.html",[35,0.011,90,0.237,110,0.008,111,0.01,112,0.008,144,1.347,254,2.4,264,4.076,322,3.667,323,3.497,329,3.344,336,2.115,353,1.154,358,4.395,359,3.497,387,1.443,504,4.637,795,4.076,1001,4.13,1008,4.637,1123,4.331,1136,4.331,1691,5.476,2271,4.076,2303,4.13,2514,3.667,2599,3.858,2716,5.021,2907,4.637,3348,5.021,3476,6.535,3677,5.021,3771,5.021,4147,4.814,4376,5.534,4455,3.667,4456,3.667,4576,5.624,4579,6.535,4775,6.535,4915,5.534,4966,4.637,5244,6.313,5245,6.313,5246,6.313,5247,7.456,5248,6.313,5249,6.313,5250,6.313,5251,6.313,5252,7.456,5253,6.313,5254,6.313,5255,6.313,5256,6.313,5257,6.313,5258,6.313,5259,6.313,5260,6.313,5261,6.313]],["title/license.html",[4455,2.064,4456,2.064,5100,2.61]],["body/license.html",[5,0.132,35,0.01,58,1.59,110,0.008,111,0.01,112,0.008,180,3.635,332,2.759,357,1.785,498,3.077,723,3.199,893,4.82,899,3.811,1549,4.82,1786,4.501,2302,3.811,2974,5.205,3355,5.218,4010,4.82,5100,6.336,5214,5.752,5262,6.562,5263,6.562,5264,6.562,5265,6.562,5266,6.562,5267,6.562,5268,6.562,5269,6.562,5270,6.562,5271,6.562,5272,5.752,5273,6.562,5274,7.626,5275,6.562,5276,6.562,5277,6.562,5278,6.562,5279,6.562,5280,6.562,5281,6.562,5282,6.562,5283,6.562,5284,6.562]],["title/modules.html",[1122,3.542]],["body/modules.html",[35,0.01,110,0.009,111,0.01,112,0.009,533,4.782,1121,4.431,1122,4.193,2700,6.86,4147,4.431,4633,6.86,5285,7.826]],["title/overview.html",[5286,5.08]],["body/overview.html",[2,1.711,35,0.012,110,0.005,111,0.007,112,0.005,144,0.735,318,2.363,321,2.487,336,1.363,364,1.718,495,1.718,577,1.821,600,1.909,601,0.986,606,1.669,608,1.769,610,1.769,612,1.821,614,1.821,616,1.821,618,1.821,621,1.821,623,1.821,626,1.821,628,1.821,630,1.769,633,1.769,635,1.821,637,1.769,639,1.821,641,1.821,642,1.718,645,1.821,648,1.769,650,1.821,652,1.821,654,1.718,656,1.769,658,1.821,661,1.769,664,1.769,666,1.718,668,1.769,670,1.821,672,1.874,674,1.821,676,1.769,678,1.821,681,1.769,683,0.781,684,1.769,686,1.769,688,1.769,690,1.769,692,1.769,694,1.769,696,1.769,698,1.769,702,1.406,779,1.599,851,1.599,1003,1.984,1086,4.161,1120,2.487,1121,4.995,1122,2.487,1123,2.792,1124,3.236,1125,3.567,1126,3.567,1127,3.567,1128,3.567,1129,4.473,1130,2.989,1171,1.599,2719,2.989,2725,2.627,2743,2.989,2786,3.236,4147,5.825,4148,3.567,4149,3.567,4150,3.567,5286,3.567,5287,4.069]],["title/todo.html",[9,1.025,4455,2.064,4456,2.064]],["body/todo.html",[9,2.39,10,2.605,13,1.136,16,2.236,35,0.011,39,1.296,51,0.831,53,1.07,58,1.478,76,3.729,110,0.008,111,0.009,112,0.008,123,1.132,144,1.103,152,2.397,172,1.101,183,3.233,191,1.867,208,3.729,329,3.233,353,0.859,357,1.988,358,3.38,359,3.38,450,3.098,504,4.482,522,3.233,596,4.186,682,1.566,711,1.436,845,3.156,881,3.729,926,5.349,927,5.349,976,4.94,1019,3.38,1023,5.81,1062,5.05,1263,4.482,1275,4.244,1551,4.482,1568,4.186,1657,4.853,2270,3.544,2296,4.482,2302,3.544,2606,4.853,2619,3.729,3075,4.482,3118,4.853,4241,5.349,4433,4.853,4435,4.853,4460,5.349,4855,5.349,5288,6.102,5289,6.102,5290,6.102,5291,6.102,5292,6.102,5293,6.102,5294,6.102,5295,6.102,5296,6.102,5297,6.102,5298,6.102,5299,6.102,5300,6.102,5301,6.102,5302,6.102,5303,6.102,5304,6.102,5305,6.102,5306,6.102]],["title/additional-documentation/getting-started.html",[72,0.568,4455,1.773,4456,1.773,4715,2.094]],["body/additional-documentation/getting-started.html",[0,0.02,2,3.495,5,0.104,10,1.841,12,2.349,16,1.58,17,3.213,23,0.68,35,0.012,48,4.84,76,3.155,85,2.999,90,0.321,95,0.25,110,0.007,111,0.008,112,0.007,115,1.114,144,1.427,155,2.332,172,0.727,177,3.09,180,3.65,198,0.905,225,4.02,227,3.213,230,3.453,231,3.155,234,3.542,252,3.155,254,1.963,269,2.171,316,2.028,318,3.827,322,3.827,323,3.65,324,2.016,331,5.776,334,1.58,336,2.208,353,1.226,357,1.405,358,4.813,359,4.235,392,2.86,415,3.334,426,2.422,467,2.999,469,1.9,475,2.028,480,4.526,488,2.249,494,2.518,496,4.526,499,3.334,510,2.735,624,1.287,702,2.277,718,2.86,720,3.685,741,2.735,756,0.826,768,3.542,782,2.249,795,3.334,800,2.622,962,3.792,1021,2.999,1033,4.106,1051,4.526,1111,4.979,1120,4.026,1121,4.254,1123,4.52,1135,4.526,1136,5.244,1155,3.334,1310,2.249,1342,2.028,1405,2.86,1420,3.155,1465,2.999,1522,3.155,1553,3.334,1568,3.542,1700,3.542,2303,2.86,2335,4.84,2387,3.792,2514,2.999,2535,3.155,2623,4.106,2664,4.106,2974,4.254,3214,4.026,3380,4.52,3466,4.526,3641,4.526,3646,3.792,3651,4.106,3818,3.334,4147,4.936,4375,4.526,4455,2.999,4456,2.999,4498,6.361,4576,3.542,4797,4.526,4828,4.106,4861,5.776,4862,6.701,4863,4.526,4864,4.526,4876,4.106,4936,6.701,4956,5.776,5307,5.163,5308,4.526,5309,4.526,5310,7.898,5311,5.163,5312,5.163,5313,5.163,5314,5.163,5315,5.163,5316,5.163,5317,5.163,5318,5.163,5319,5.163,5320,5.163,5321,5.163,5322,5.163,5323,5.163,5324,5.163,5325,5.163,5326,5.163,5327,5.163,5328,5.163,5329,4.106,5330,5.163,5331,5.163,5332,4.526,5333,5.163,5334,6.589,5335,5.163,5336,5.163]],["title/additional-documentation/local-development.html",[72,0.568,2505,1.971,3818,1.971,4715,2.094]],["body/additional-documentation/local-development.html",[35,0.01,110,0.009,111,0.01,112,0.009,144,1.249,2505,4.462,3818,4.462,4984,5.39]],["title/additional-documentation/local-development/schematics.html",[72,0.662,4715,2.438,4984,2.438]],["body/additional-documentation/local-development/schematics.html",[5,0.101,10,2.699,16,1.983,17,2.453,35,0.011,36,0.574,44,1.851,58,1.218,72,0.937,75,4,76,3.959,81,3.451,87,2.921,98,0.994,110,0.006,111,0.008,112,0.006,144,1.171,177,2.359,178,0.173,183,1.912,269,3.014,304,2.912,312,4,322,3.763,334,1.539,353,1.149,357,1.95,358,4.697,359,2.786,362,3.694,392,2.786,394,2.921,428,3.959,434,5.561,450,3.29,451,3.298,452,3.29,499,3.247,501,4,519,2.191,523,3.247,591,3.074,715,1.976,738,3.159,742,2.191,756,1.253,782,2.823,800,3.64,810,2.115,849,3.451,922,4.917,1001,4.665,1003,2.453,1017,4.409,1018,4,1019,4.193,1122,3.959,1140,4.409,1201,3.694,1310,2.191,1494,3.247,1536,2.786,1564,2.921,1592,4,1691,3.694,1700,3.451,2302,3.763,2303,2.786,2312,3.959,2316,3.074,2379,3.694,2388,3.247,2513,3.694,2514,2.921,2565,5.153,2619,3.074,2655,4.759,2760,4.409,2766,4.409,2776,4.409,2810,5.265,2879,4,2907,3.694,2941,4,3006,4.409,3127,4.409,3490,4.409,3535,4.409,3646,4.759,3741,5.193,4103,3.451,4403,6.072,4459,4.409,4488,4.409,4550,5.7,4577,5.153,4665,4,4794,4,4843,4,4869,4.409,4875,5.68,4944,4.409,4947,5.561,4955,4.409,4965,6.283,4966,4.759,4969,4.409,4984,5.961,4985,6.867,4986,6.636,4988,4.409,5155,5.68,5272,4.409,5309,4.409,5329,6.697,5332,4.409,5337,4.409,5338,4.409,5339,5.03,5340,6.48,5341,4.409,5342,5.03,5343,5.03,5344,5.03,5345,7.571,5346,6.48,5347,5.03,5348,5.03,5349,5.03,5350,5.03,5351,5.03,5352,5.03,5353,5.03,5354,5.03,5355,5.03,5356,4.409,5357,5.68,5358,5.03,5359,5.03,5360,5.03,5361,6.48,5362,5.03,5363,5.03,5364,5.03,5365,5.03,5366,5.03,5367,5.03,5368,5.03,5369,5.03,5370,5.03,5371,5.03,5372,5.03,5373,5.03,5374,5.03,5375,5.03,5376,5.03,5377,5.03,5378,5.03,5379,5.03,5380,5.03,5381,5.03,5382,5.03,5383,5.03,5384,5.03,5385,5.03,5386,5.03,5387,5.03,5388,5.03,5389,5.03,5390,5.03,5391,5.03,5392,5.03,5393,5.03,5394,5.03,5395,5.03,5396,5.03,5397,5.03,5398,5.03,5399,5.03,5400,4.409,5401,4.409]],["title/additional-documentation/local-development/components.html",[72,0.662,144,0.642,4715,2.438]],["body/additional-documentation/local-development/components.html",[5,0.102,10,2.8,17,2.472,28,4.783,32,0.443,35,0.011,36,0.521,55,2.574,58,1.228,75,4.031,76,4.799,87,2.944,90,0.244,98,1.002,110,0.007,111,0.008,112,0.007,144,1.177,174,2.116,177,3.054,178,0.175,254,1.927,269,2.738,322,4.179,325,4.443,329,2.685,330,4.031,332,2.738,334,1.551,353,1.221,357,1.379,358,4.729,359,4.633,392,2.808,394,2.944,408,4.031,428,3.979,429,4.443,434,5.577,450,2.574,453,5.179,454,4.467,460,3.723,472,4.443,475,3.085,479,2.944,488,2.837,494,2.472,502,4.783,513,4.443,519,2.208,711,1.533,738,2.472,751,1.228,756,0.811,764,2.944,779,2.558,782,2.208,800,3.987,839,3.273,922,5.68,965,4.443,982,3.273,1001,4.633,1002,2.944,1003,2.472,1008,3.723,1011,3.273,1122,3.098,1172,3.273,1310,2.208,1550,3.723,1553,3.273,2280,4.467,2303,4.788,2319,4.783,2505,4.902,2580,3.723,2658,4.443,2810,3.723,2836,3.723,2974,3.273,3338,5.708,3379,5.179,3484,3.723,3646,3.723,3741,5.607,3818,4.645,3828,4.443,3894,4.443,3941,5.708,4403,5.285,4550,5.179,4576,3.477,4577,4.031,4665,5.179,4794,4.031,4828,4.031,4843,4.031,4847,4.443,4876,4.031,4930,4.443,4933,5.708,4939,4.443,4947,5.577,4962,4.443,4966,4.783,4984,5.784,4998,4.443,5226,4.443,5308,4.443,5329,6.706,5337,4.443,5338,5.708,5341,4.443,5356,5.708,5357,5.708,5400,4.443,5401,4.443,5402,5.069,5403,5.069,5404,5.069,5405,5.069,5406,6.512,5407,6.512,5408,5.069,5409,5.069,5410,5.069,5411,5.069,5412,6.512,5413,5.069,5414,5.069,5415,5.069,5416,5.069,5417,6.512,5418,7.195,5419,6.512,5420,5.069,5421,7.195,5422,5.069,5423,5.069,5424,5.069,5425,5.069,5426,5.069,5427,5.069,5428,5.069,5429,5.069,5430,5.069,5431,5.069,5432,5.069,5433,5.069,5434,5.069,5435,5.069,5436,5.069]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":105,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.17",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["0.0.31",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["0.0.32",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["0.0.33",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["0.0.34",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":5152,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":2990,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.8.26",{"_index":5161,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":2870,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":5030,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5073,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5026,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5050,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5066,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5021,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5038,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5084,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5037,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":5060,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["000000000",{"_index":4273,"title":{},"body":{"components/SinComponent.html":{}}}],["009d779",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["015602c",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["02cb2c5",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":4969,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["03c1243",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4488,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["0699178",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["09ae712",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["09ce95a",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["0ba1d1e",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["0ed3875",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["0s",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1171,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":4837,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":5049,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5064,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5083,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":5039,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5057,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":5095,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":5048,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5047,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5043,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5090,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5035,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5074,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5045,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5040,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2734,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["10.256s",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["10/31",{"_index":5056,"title":{},"body":{"coverage.html":{}}}],["10/38",{"_index":5059,"title":{},"body":{"coverage.html":{}}}],["10/54",{"_index":5052,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1284,"title":{},"body":{"components/CityComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["1024",{"_index":2959,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":2977,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["108e46b",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["10^10",{"_index":3721,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["10th",{"_index":3909,"title":{},"body":{"components/PhnComponent.html":{}}}],["11",{"_index":2738,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["111",{"_index":3857,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["1111",{"_index":3856,"title":{},"body":{"components/PhnComponent.html":{}}}],["12",{"_index":2743,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1251212",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["126d876",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2754,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["1303722",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2759,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["14bce6e",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":2763,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["151f173",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2767,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["1650a23",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["16be24b",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["16da113",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2770,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["18",{"_index":2778,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["180",{"_index":4299,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185148b",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["185px",{"_index":2367,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["18d69c6",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2786,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"overview.html":{}}}],["19/23",{"_index":5025,"title":{},"body":{"coverage.html":{}}}],["1].iscomplete",{"_index":1223,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["1a1",{"_index":3991,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["1c51f01",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["1c8242e",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["1f1a0f9",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":779,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":5265,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":3645,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["2.0.1",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["2.0.550",{"_index":5158,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":5269,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["2.1.3",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["2.1.4",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["2.10.0",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["2.11.0",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["2.12.0",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["2.13.0",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["2.14.0",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["2.15.0",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["2.16.0",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["2.16.2",{"_index":5150,"title":{},"body":{"dependencies.html":{}}}],["2.17.0",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["2.17.1",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["2.18.0",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["2.18.1",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["2.19.0",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["2.20.0",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["2.20.1",{"_index":4603,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.21.0",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["2.22.0",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["2.23.0",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["2.24.0",{"_index":4584,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.26.0",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["2.27.0",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["2.27.1",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["2.27.2",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["2.28.0",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["2.5.1",{"_index":4701,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5.2",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":5156,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["2.7.0",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["2.7.1",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["2.8.0",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["2.9.0",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["2/12",{"_index":5075,"title":{},"body":{"coverage.html":{}}}],["2/20",{"_index":5065,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":5062,"title":{},"body":{"coverage.html":{}}}],["2/28",{"_index":5070,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5080,"title":{},"body":{"coverage.html":{}}}],["2/30",{"_index":5042,"title":{},"body":{"coverage.html":{}}}],["2/33",{"_index":5068,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5096,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":5061,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4648,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2017",{"_index":5263,"title":{},"body":{"license.html":{}}}],["2019",{"_index":4459,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":2369,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["21afb82",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":4544,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2235059",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["224e362",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["22710b7",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["238c01d",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":786,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["250",{"_index":787,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{}}}],["255",{"_index":2524,"title":{},"body":{"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{}}}],["26",{"_index":4618,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26(a",{"_index":3495,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["2600",{"_index":2992,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":4615,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["27b488b",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["28d9585",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["29c5160",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["29e521c",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["2a511e7",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["2c0b127",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["2c2f322",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["2ddfc23",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["2ebd235",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":780,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":4460,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["3.2.0",{"_index":5157,"title":{},"body":{"dependencies.html":{}}}],["3/21",{"_index":5041,"title":{},"body":{"coverage.html":{}}}],["3/31",{"_index":5058,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":5069,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5082,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2835,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["300",{"_index":4295,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":3704,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["33",{"_index":5046,"title":{},"body":{"coverage.html":{}}}],["3300",{"_index":2995,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["34f0a40",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":5077,"title":{},"body":{"coverage.html":{}}}],["355945207",{"_index":3745,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":5093,"title":{},"body":{"coverage.html":{}}}],["36476f8",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["36eeddb",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":5287,"title":{},"body":{"overview.html":{}}}],["3868c50",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["38c822b",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["3a06f99",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["3a5677b",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["3a98fb0",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["3ac6d4d",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["3f1149e",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["3f42b31",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["3f6a466",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2711,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["4.3.1",{"_index":5154,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":5087,"title":{},"body":{"coverage.html":{}}}],["4/15",{"_index":5092,"title":{},"body":{"coverage.html":{}}}],["4/29",{"_index":5067,"title":{},"body":{"coverage.html":{}}}],["4/40",{"_index":5023,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2365,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["4/9",{"_index":5089,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":5086,"title":{},"body":{"coverage.html":{}}}],["400/500",{"_index":267,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["41f5609",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["4295b03",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":5088,"title":{},"body":{"coverage.html":{}}}],["4766a2b",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["47d614a",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["483b735",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["48e2120",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["492934b",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["496c252",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["4bb54c0",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["4d39002",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["4d5992a",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["4f3e59f",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["4f8f2e7",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2715,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5/14",{"_index":5078,"title":{},"body":{"coverage.html":{}}}],["5/38",{"_index":5072,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2758,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["5069fe8",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["510ad9e",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["51bfe3b",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["51f2ea4",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["532a3ec",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["5362c67",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["53a109b",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["5441be2",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":3959,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5555",{"_index":3960,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5910979",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["5965aec",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["5a7c37b",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["5b18c5f",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["5b88093",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["5bb54fc",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["5d8f61d",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":2719,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.4.0",{"_index":5159,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":5248,"title":{},"body":{"index.html":{}}}],["60befc2",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["61b54fd",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["61c0cdc",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["6242bea",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["6254d29",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["6427f10",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["655a0fd",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["65b8144",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":5079,"title":{},"body":{"coverage.html":{}}}],["6650ef8",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["66e58e7",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["66f9608",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["6775a4d",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["679ac15",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["67b6f78",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["67c4797",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["6b8cedd",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["6c09982",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["6caf36c",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["6f093d2",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2722,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":5147,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":5091,"title":{},"body":{"coverage.html":{}}}],["7/39",{"_index":5044,"title":{},"body":{"coverage.html":{}}}],["71eb531",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["7226b37",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["730f9c7",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["7355610",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["7398e93",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["7400a64",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":5081,"title":{},"body":{"coverage.html":{}}}],["7c99c1e",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["7d274e8",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["7d2e7cd",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["7febf6d",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["7ff8510",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2725,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"coverage.html":{},"overview.html":{}}}],["8.9.4",{"_index":5246,"title":{},"body":{"index.html":{}}}],["8/22",{"_index":5094,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":5063,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["82",{"_index":5024,"title":{},"body":{"coverage.html":{}}}],["8248e61",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["8361a0e",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["8380850",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["83d31d",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["85eab15",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["867f969",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["88bc3f3",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["8a22405",{"_index":4995,"title":{},"body":{"changelog.html":{}}}],["8aa41ec",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["8e823c5",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["8f24e2e",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["8f6886f",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["8fc79af",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2729,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["9.0.0",{"_index":5153,"title":{},"body":{"dependencies.html":{}}}],["9/49",{"_index":5036,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":5076,"title":{},"body":{"coverage.html":{}}}],["901885e",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["96a58b1",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["978250b",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["9855d9c",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["996cad7",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["9])[a",{"_index":4342,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["9][a",{"_index":4339,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["9]{1}\\\\d{2",{"_index":3946,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["9a38474",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["9dc5375",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["9f5a04e",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":185,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["_applicationheadermap",{"_index":3543,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["_bypassguards",{"_index":1156,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_context",{"_index":5190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_continue",{"_index":4107,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_continue(pageurl",{"_index":4109,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["_defaulterrmsg",{"_index":120,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.duplicate",{"_index":3914,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.incompletevalue",{"_index":3975,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["_defaulterrmsg.invalid",{"_index":3913,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.invalidchar",{"_index":1404,"title":{},"body":{"components/CityComponent.html":{},"components/ProvinceComponent.html":{}}}],["_defaulterrmsg.invalidemail",{"_index":2550,"title":{},"body":{"components/EmailComponent.html":{}}}],["_defaulterrmsg.required",{"_index":1403,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_headers",{"_index":231,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["_label",{"_index":199,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["_log",{"_index":1602,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_log(message",{"_index":1530,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_logerror",{"_index":1603,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_logerror(errormessage",{"_index":1533,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_name",{"_index":3834,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":3835,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":536,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":121,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["_only_",{"_index":4390,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":122,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["_options",{"_index":5216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_sendlog",{"_index":1604,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["_sendlog(message",{"_index":1555,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["_starturl",{"_index":1157,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_value",{"_index":3443,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["a11y",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["a1a",{"_index":3990,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a1b8211",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["a1bd381",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["a27faa9",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["a512eb0",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["a702d6d",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["a73785f",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["a7efeee",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["a9aaf59",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["a9cafca",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["aa",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["aa2b7f9",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["aad93b5",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":1364,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ability",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["abiltiy",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["abilty",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["abort",{"_index":2741,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":3646,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["abstact",{"_index":3956,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["abstract",{"_index":12,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["abstractapi",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["abstractcontrol",{"_index":2502,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["abstractform",{"_index":1,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstractformcontrol",{"_index":113,"title":{"classes/AbstractFormControl.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["abstractformcontrol:10",{"_index":1320,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:13",{"_index":1290,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:15",{"_index":1288,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:18",{"_index":1289,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:22",{"_index":1321,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:23",{"_index":1322,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:26",{"_index":1299,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:31",{"_index":1305,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:34",{"_index":1300,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:39",{"_index":1301,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:44",{"_index":1303,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:48",{"_index":1304,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:65",{"_index":1302,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstracthttpservice",{"_index":225,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:12",{"_index":1629,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:17",{"_index":1628,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:23",{"_index":1623,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:31",{"_index":1625,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:39",{"_index":1626,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:60",{"_index":1624,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstracthttpservice:63",{"_index":1622,"title":{},"body":{"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["abstractpgcheckservice",{"_index":317,"title":{"injectables/AbstractPgCheckService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["abstractpgservice",{"_index":4095,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["abstracttestpage",{"_index":348,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["abw",{"_index":1740,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ac7406b",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["ac9d61c",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["acbbdc1",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":3005,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":2705,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["access",{"_index":48,"title":{},"body":{"classes/AbstractForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessed",{"_index":858,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["accessibility",{"_index":4438,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["accessible",{"_index":2336,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["accessors",{"_index":237,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["accidentally",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["accordion",{"_index":584,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion'},{'name",{"_index":605,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["accordion.component.html",{"_index":588,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion.component.scss",{"_index":586,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordioncommoncomponent",{"_index":577,"title":{"components/AccordionCommonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordioncomponent",{"_index":581,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordionmodule",{"_index":4194,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accordionmodule.forroot",{"_index":4234,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accusamus",{"_index":1365,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aceb028",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["acl",{"_index":3591,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["act",{"_index":3501,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["action",{"_index":60,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":4113,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["activeindex",{"_index":4359,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":2387,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":700,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["adam",{"_index":5260,"title":{},"body":{"index.html":{}}}],["add",{"_index":304,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"components/PhnComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":215,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["adding",{"_index":1700,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["addition",{"_index":3315,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["additional",{"_index":4715,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"changelog.html":{}}}],["additionaldocumentation",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["addline(line",{"_index":836,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addpackagejsonscript",{"_index":5137,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagejsonscript(tree",{"_index":5187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addpackagetopackagejson",{"_index":5129,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addpackagetopackagejson(host",{"_index":5201,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addr",{"_index":768,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/getting-started.html":{}}}],["addr.city",{"_index":3343,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.country",{"_index":3344,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.province",{"_index":3346,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.street",{"_index":3347,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["address",{"_index":720,"title":{"classes/Address.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":607,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["address();the",{"_index":5330,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address(val",{"_index":752,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.addressline2",{"_index":766,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.html",{"_index":736,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.scss",{"_index":737,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.model.ts",{"_index":5297,"title":{},"body":{"todo.html":{}}}],["address1",{"_index":706,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["address2",{"_index":707,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address3",{"_index":708,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address_url",{"_index":3217,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresschange",{"_index":755,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addresscomponent",{"_index":606,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addresses",{"_index":897,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline${line",{"_index":853,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline1",{"_index":924,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["addressline2",{"_index":801,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline3",{"_index":925,"title":{},"body":{"classes/Address.html":{}}}],["addressmodel",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["addresss",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["addrlabellist",{"_index":701,"title":{"interfaces/AddrLabelList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["addrlabels",{"_index":774,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addrlookup",{"_index":852,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["adds",{"_index":757,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["addtag",{"_index":2474,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":2475,"title":{},"body":{"components/DropdownComponent.html":{}}}],["adipisicing",{"_index":1332,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["administer",{"_index":3505,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["advantages",{"_index":1012,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ae493e7",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["aee4761",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["af516d0",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["af91989",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["afg",{"_index":1714,"title":{},"body":{"interfaces/CountryList.html":{}}}],["afghanistan",{"_index":1715,"title":{},"body":{"interfaces/CountryList.html":{}}}],["africa",{"_index":2169,"title":{},"body":{"interfaces/CountryList.html":{}}}],["african",{"_index":1811,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aftercontentinit",{"_index":2571,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["afterviewinit",{"_index":2575,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["again",{"_index":2766,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["against",{"_index":3899,"title":{},"body":{"components/PhnComponent.html":{}}}],["age",{"_index":3804,"title":{},"body":{"classes/Person.html":{}}}],["ago",{"_index":1727,"title":{},"body":{"interfaces/CountryList.html":{}}}],["agreecheck",{"_index":3549,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agreeconsentmodal",{"_index":367,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["agreed",{"_index":5271,"title":{},"body":{"license.html":{}}}],["agreelabel",{"_index":3526,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agrees",{"_index":407,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["aia",{"_index":1729,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aka",{"_index":3467,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ala",{"_index":1716,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alb",{"_index":1719,"title":{},"body":{"interfaces/CountryList.html":{}}}],["albania",{"_index":1720,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alberta",{"_index":4047,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["algeria",{"_index":1722,"title":{},"body":{"interfaces/CountryList.html":{}}}],["algorithm",{"_index":2769,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["alias",{"_index":1390,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["allow",{"_index":181,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["allowed",{"_index":2980,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["allowextralines",{"_index":767,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["allowing",{"_index":1184,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["allowinternational",{"_index":3923,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["allvalidators",{"_index":219,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PhoneNumberComponent.html":{}}}],["allvalidators.push",{"_index":222,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["allvalidators.push(this.controldir.control.validator",{"_index":3966,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["alone",{"_index":3525,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["along",{"_index":246,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":1522,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":1437,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":290,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["american",{"_index":1724,"title":{},"body":{"interfaces/CountryList.html":{}}}],["amet",{"_index":1330,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["amultiples",{"_index":2949,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":2961,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["and/or",{"_index":4008,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["andorra",{"_index":1726,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angola",{"_index":1728,"title":{},"body":{"interfaces/CountryList.html":{}}}],["anguilla",{"_index":1730,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angular",{"_index":76,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/WizardProgressBarComponent.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":1586,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["angular.json",{"_index":5400,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular/animations",{"_index":5146,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1149,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":282,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":5148,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1107,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1144,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":288,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":2686,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["animi",{"_index":1377,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["another",{"_index":71,"title":{},"body":{"classes/AbstractForm.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["answer",{"_index":1102,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["answer.label",{"_index":1085,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["antarctica",{"_index":1732,"title":{},"body":{"interfaces/CountryList.html":{}}}],["antigua",{"_index":1734,"title":{},"body":{"interfaces/CountryList.html":{}}}],["any)).then((pdfdoc",{"_index":3058,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":2673,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":1430,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["anywhere",{"_index":5350,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":5214,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["aperiam",{"_index":1353,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["api",{"_index":227,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":1097,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apidobformat",{"_index":3786,"title":{},"body":{"classes/Person.html":{}}}],["apiservice",{"_index":5326,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["apistatuscodes",{"_index":1648,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"miscellaneous/enumerations.html":{}}}],["apistatuscodes.error",{"_index":1659,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.success",{"_index":1649,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.warning",{"_index":1660,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apostrophe",{"_index":3183,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["apostrophes",{"_index":1316,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["app",{"_index":3454,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["app.component.ts",{"_index":5192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appcomponentcss",{"_index":5108,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":5109,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":2629,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":3941,"title":{},"body":{"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["appears",{"_index":401,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["appendselectortobody",{"_index":2361,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["applicable",{"_index":893,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["applicant",{"_index":1185,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["applicants",{"_index":1188,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["application",{"_index":475,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":325,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/local-development/components.html":{}}}],["application.information",{"_index":3491,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["applicationbase",{"_index":2601,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":1501,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["applications",{"_index":979,"title":{},"body":{"classes/Address.html":{}}}],["appropriate",{"_index":849,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":2948,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["apps",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["arab",{"_index":2194,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arabia",{"_index":2144,"title":{},"body":{"interfaces/CountryList.html":{}}}],["architecto",{"_index":1339,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aren't",{"_index":1598,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["arg",{"_index":1736,"title":{},"body":{"interfaces/CountryList.html":{}}}],["argentina",{"_index":1737,"title":{},"body":{"interfaces/CountryList.html":{}}}],["args",{"_index":3032,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":2774,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":2414,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":3779,"title":{},"body":{"components/PasswordComponent.html":{},"changelog.html":{}}}],["arm",{"_index":1738,"title":{},"body":{"interfaces/CountryList.html":{}}}],["armenia",{"_index":1739,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aroud",{"_index":3385,"title":{},"body":{"components/HeaderComponent.html":{}}}],["around",{"_index":3143,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["array",{"_index":2643,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["array(0",{"_index":2644,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["artifacts",{"_index":5421,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aruba",{"_index":1741,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ascension",{"_index":2116,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ask",{"_index":5259,"title":{},"body":{"index.html":{}}}],["asm",{"_index":1723,"title":{},"body":{"interfaces/CountryList.html":{}}}],["assets",{"_index":5395,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["assets/gov3_bc_logo.png",{"_index":3397,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assistance",{"_index":3507,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["associate",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":447,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["association",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["assuming",{"_index":5429,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":5307,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":377,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ata",{"_index":1731,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atf",{"_index":1889,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atg",{"_index":1733,"title":{},"body":{"interfaces/CountryList.html":{}}}],["attachmentorder",{"_index":1409,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attempted",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["attr",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":3777,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":511,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["attributes",{"_index":3227,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["audit",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["aus",{"_index":1742,"title":{},"body":{"interfaces/CountryList.html":{}}}],["australia",{"_index":1743,"title":{},"body":{"interfaces/CountryList.html":{}}}],["austria",{"_index":1745,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aut",{"_index":1744,"title":{},"body":{"interfaces/CountryList.html":{}}}],["autem",{"_index":1359,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["auto",{"_index":741,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocomplete",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["autocomplete=\"false",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["autocorrect",{"_index":2476,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":85,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":2737,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":478,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":547,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["awkward",{"_index":3740,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["aze",{"_index":1746,"title":{},"body":{"interfaces/CountryList.html":{}}}],["azerbaijan",{"_index":1747,"title":{},"body":{"interfaces/CountryList.html":{}}}],["b",{"_index":4240,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["b555787",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["b80520f",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["b901868",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":3489,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["backdrop",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1580,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["backticks",{"_index":3511,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["backward",{"_index":977,"title":{},"body":{"classes/Address.html":{}}}],["bad",{"_index":5320,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["baee5ad",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["bahamas",{"_index":1749,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bahrain",{"_index":1751,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bangladesh",{"_index":1753,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bar",{"_index":61,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":640,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["bar.component",{"_index":4156,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":3102,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":3101,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":3100,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":3110,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:12",{"_index":3107,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:13",{"_index":3109,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":3108,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":3106,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":3134,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":3125,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":3111,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":3126,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3135,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":3112,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":4383,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":4386,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:26",{"_index":4380,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":4366,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":3124,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":4371,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":3136,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":4370,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":4367,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":4369,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":4372,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":3099,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":4161,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["barbados",{"_index":1755,"title":{},"body":{"interfaces/CountryList.html":{}}}],["barbuda",{"_index":1735,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bars",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["barthélemy",{"_index":2113,"title":{},"body":{"interfaces/CountryList.html":{}}}],["base",{"_index":116,"title":{"classes/Base.html":{}},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["base.component",{"_index":2595,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":2603,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.service.ts",{"_index":1152,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["base.service.ts:104",{"_index":1169,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:108",{"_index":1180,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:13",{"_index":3654,"title":{},"body":{"interfaces/PageListInterface.html":{}}}],["base.service.ts:29",{"_index":1192,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:31",{"_index":1190,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:32",{"_index":1165,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:36",{"_index":1194,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:40",{"_index":1196,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:44",{"_index":1166,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:48",{"_index":1167,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:53",{"_index":1181,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:60",{"_index":1187,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:75",{"_index":1183,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:85",{"_index":1176,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:96",{"_index":1173,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base64",{"_index":5397,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":139,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":3215,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":2594,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":194,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["basic",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["basis",{"_index":5275,"title":{},"body":{"license.html":{}}}],["bc",{"_index":894,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["bcformat",{"_index":4343,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bcformat.test",{"_index":4344,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bclogobase64",{"_index":5113,"title":{},"body":{"coverage.html":{}}}],["bconly",{"_index":750,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["bdi",{"_index":1798,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beatae",{"_index":1383,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["become",{"_index":5306,"title":{},"body":{"todo.html":{}}}],["befc319",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2312,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["begin",{"_index":3178,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["beginning",{"_index":3470,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["behavior",{"_index":106,"title":{},"body":{"classes/AbstractForm.html":{}}}],["behaviour",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":195,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["bel",{"_index":1758,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belarus",{"_index":1757,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belgium",{"_index":1759,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belize",{"_index":1761,"title":{},"body":{"interfaces/CountryList.html":{}}}],["below",{"_index":3466,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["ben",{"_index":1762,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beneficial",{"_index":3669,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["benefits",{"_index":3504,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["benin",{"_index":1763,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bermuda",{"_index":1765,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bes",{"_index":1770,"title":{},"body":{"interfaces/CountryList.html":{}}}],["best",{"_index":3381,"title":{},"body":{"components/HeaderComponent.html":{}}}],["better",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4449,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["bf3cf23",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["bfa",{"_index":1795,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bg",{"_index":3774,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bgd",{"_index":1752,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bgr",{"_index":1793,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhr",{"_index":1750,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhs",{"_index":1748,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhutan",{"_index":1766,"title":{},"body":{"interfaces/CountryList.html":{}}}],["big",{"_index":3017,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bih",{"_index":1775,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bind",{"_index":1241,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["bindings",{"_index":2662,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":765,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["birth",{"_index":3805,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":3797,"title":{},"body":{"classes/Person.html":{}}}],["bissau",{"_index":1920,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blanditiis",{"_index":1368,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blank",{"_index":810,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blm",{"_index":2111,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blob",{"_index":2761,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":2940,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":3437,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["blr",{"_index":1756,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blue",{"_index":3376,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blueimp",{"_index":2610,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":1277,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["blurevent",{"_index":2272,"title":{},"body":{"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["blz",{"_index":1760,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bmu",{"_index":1764,"title":{},"body":{"interfaces/CountryList.html":{}}}],["body",{"_index":273,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["body).subscribe",{"_index":1571,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["boilerplate",{"_index":3471,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bol",{"_index":1767,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivarian",{"_index":2244,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivia",{"_index":1768,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bonaire",{"_index":1771,"title":{},"body":{"interfaces/CountryList.html":{}}}],["boolean",{"_index":39,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["bootstrap",{"_index":600,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":4195,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bosnia",{"_index":1776,"title":{},"body":{"interfaces/CountryList.html":{}}}],["both",{"_index":362,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CheckboxComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["botswana",{"_index":1779,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bottom",{"_index":486,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["bound",{"_index":5255,"title":{},"body":{"index.html":{}}}],["bouvet",{"_index":1781,"title":{},"body":{"interfaces/CountryList.html":{}}}],["box",{"_index":427,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["bps",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["bra",{"_index":1783,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brackets",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["brazil",{"_index":1784,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brb",{"_index":1754,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bread",{"_index":1663,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":1692,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":625,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["breadcrumb.component",{"_index":4154,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":1707,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":1706,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts",{"_index":1690,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":1708,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":1709,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":1689,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":3487,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["breaking",{"_index":976,"title":{},"body":{"classes/Address.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["breaks",{"_index":3602,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["british",{"_index":1786,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["british_columbia",{"_index":728,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["brn",{"_index":1790,"title":{},"body":{"interfaces/CountryList.html":{}}}],["broken",{"_index":5405,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":3078,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":2700,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":2633,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":2801,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":533,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":2721,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":557,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":540,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0,0",{"_index":571,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":483,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":537,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.need",{"_index":3485,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["browsermodule",{"_index":1143,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["brunei",{"_index":1791,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brunswick",{"_index":4050,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["btn",{"_index":1044,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CountryList.html":{}}}],["btnclick",{"_index":1030,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":2903,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["buiding",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3741,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":5349,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["building",{"_index":5338,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":4665,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":5133,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3379,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["bulgaria",{"_index":1794,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bullet",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["burkina",{"_index":1796,"title":{},"body":{"interfaces/CountryList.html":{}}}],["burundi",{"_index":1799,"title":{},"body":{"interfaces/CountryList.html":{}}}],["button",{"_index":64,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":609,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component",{"_index":4208,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["button.component.html",{"_index":1026,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.scss",{"_index":1025,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.ts",{"_index":4433,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{},"todo.html":{}}}],["button.component.ts:15",{"_index":4437,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4439,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4436,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:24",{"_index":4440,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":4441,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button/xicon",{"_index":4207,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":608,"title":{"components/ButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttongroup",{"_index":1059,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["buttongroupcomponent",{"_index":610,"title":{"components/ButtonGroupComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":1010,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["buttontype",{"_index":1028,"title":{},"body":{"components/ButtonComponent.html":{}}}],["bvt",{"_index":1780,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bwa",{"_index":1778,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bypass",{"_index":1197,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bypassguards",{"_index":1164,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["bytes",{"_index":1458,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c",{"_index":3496,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["c04b81d",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["c054ca5",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["c122a2a",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["c2fd959",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["c347c39",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["c580225",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["c6067fd",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["c64c066",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["c78856a",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["c8fb31b",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["c91fef0",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["caf",{"_index":1809,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["caicos",{"_index":2224,"title":{},"body":{"interfaces/CountryList.html":{}}}],["calculateprogresspercentage",{"_index":4362,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":3803,"title":{},"body":{"classes/Person.html":{}}}],["caledonia",{"_index":2056,"title":{},"body":{"interfaces/CountryList.html":{}}}],["call",{"_index":1564,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":3045,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":3033,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":2904,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"miscellaneous/functions.html":{}}}],["calling",{"_index":466,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callout",{"_index":3562,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["calls",{"_index":5392,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cambodia",{"_index":1801,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cameroon",{"_index":1803,"title":{},"body":{"interfaces/CountryList.html":{}}}],["can't",{"_index":2661,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canactivate",{"_index":4097,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivate(route",{"_index":4112,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild",{"_index":4098,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canactivatechild(next",{"_index":4117,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["canada",{"_index":723,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["canbypassguards",{"_index":339,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cancel",{"_index":2791,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":24,"title":{},"body":{"classes/AbstractForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["canda",{"_index":3345,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["candidates",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["cannotopen",{"_index":1439,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":1441,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":2650,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":3054,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":2938,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cape",{"_index":1805,"title":{},"body":{"interfaces/CountryList.html":{}}}],["capitalize",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["captcha",{"_index":1111,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":613,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["captcha.component",{"_index":1146,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":1118,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":5165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":612,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":1086,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":1121,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":3080,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":2635,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":2803,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":1566,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["careful",{"_index":4377,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":479,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":1155,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":2561,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":284,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["catcherror(err",{"_index":3322,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["categories",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":3008,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cayman",{"_index":1808,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cb65dc6",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["cbbfaa8",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["cc9910b",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["cck",{"_index":1821,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cd",{"_index":2655,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["cdnformat",{"_index":4337,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["cdnformat.test",{"_index":4341,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["center",{"_index":1697,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["central",{"_index":1810,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cf962bc",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["chaange",{"_index":4391,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["chad",{"_index":1814,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chain",{"_index":3604,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["chance",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["chanfges",{"_index":5435,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["change",{"_index":183,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":2286,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":4357,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":4388,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4358,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":2572,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":4457,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":1019,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changes.address",{"_index":3324,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue",{"_index":3332,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue._geocoderfulladdress",{"_index":3325,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.password",{"_index":3762,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['countrylist",{"_index":831,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['countrylist'].currentvalue",{"_index":832,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['images",{"_index":2691,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue",{"_index":2692,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":2693,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":2694,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":2695,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['provincelist",{"_index":834,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['provincelist'].currentvalue",{"_index":835,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changing",{"_index":2402,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["character",{"_index":3184,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["characters",{"_index":1313,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["che",{"_index":2190,"title":{},"body":{"interfaces/CountryList.html":{}}}],["check",{"_index":426,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["check.directive",{"_index":4210,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["check.directive.ts",{"_index":2495,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["check.directive.ts:32",{"_index":2500,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.directive.ts:34",{"_index":2503,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.service",{"_index":1198,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["check.service.ts",{"_index":320,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["check.service.ts:24",{"_index":343,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:25",{"_index":346,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:26",{"_index":347,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:27",{"_index":344,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check/duplicate",{"_index":2494,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkbox",{"_index":405,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["checkbox'},{'name",{"_index":615,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["checkbox.component.html",{"_index":1234,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1233,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":5299,"title":{},"body":{"todo.html":{}}}],["checkboxcomponent",{"_index":614,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcompletebaseservice",{"_index":1150,"title":{"injectables/CheckCompleteBaseService.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["checkconsentmodal",{"_index":368,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checkdigit",{"_index":3907,"title":{},"body":{"components/PhnComponent.html":{}}}],["checkforduplicates",{"_index":2506,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkforduplicates(control",{"_index":5209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkimagedimensions(file",{"_index":3096,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":2675,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checking",{"_index":1203,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["checks",{"_index":412,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/functions.html":{}}}],["checksum",{"_index":1460,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["child",{"_index":3472,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{}}}],["chile",{"_index":1816,"title":{},"body":{"interfaces/CountryList.html":{}}}],["china",{"_index":1818,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chl",{"_index":1815,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chn",{"_index":1817,"title":{},"body":{"interfaces/CountryList.html":{}}}],["choice",{"_index":525,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["christmas",{"_index":1820,"title":{},"body":{"interfaces/CountryList.html":{}}}],["circle",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["city",{"_index":709,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateCityDirective.html":{},"changelog.html":{}}}],["city'},{'name",{"_index":617,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["city.component.html",{"_index":1272,"title":{},"body":{"components/CityComponent.html":{}}}],["city.component.scss",{"_index":1271,"title":{},"body":{"components/CityComponent.html":{}}}],["city.directive",{"_index":4216,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["city.directive.ts",{"_index":4321,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["city.directive.ts:26",{"_index":4323,"title":{},"body":{"directives/ValidateCityDirective.html":{}}}],["city/country/province",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["city_",{"_index":1281,"title":{},"body":{"components/CityComponent.html":{}}}],["citycomponent",{"_index":616,"title":{"components/CityComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cityindex",{"_index":3246,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["civ",{"_index":1837,"title":{},"body":{"interfaces/CountryList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["classval",{"_index":420,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clean",{"_index":3885,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["clear",{"_index":814,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["clearable",{"_index":2477,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["clearbutton",{"_index":2330,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cleardate",{"_index":2400,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cleared",{"_index":2349,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["clears",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":5368,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":596,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["click)=\"showfullsizeview",{"_index":4305,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":369,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(classval",{"_index":417,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":370,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(refnameval",{"_index":424,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickconsentmodalcontinue",{"_index":371,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickevent",{"_index":4435,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["clicking",{"_index":389,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink",{"_index":372,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink(label",{"_index":432,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":68,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":373,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":268,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["clito",{"_index":5371,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["close",{"_index":3483,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SampleModalComponent.html":{}}}],["closemodal",{"_index":4135,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["closes",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["cluster_captchamodule",{"_index":1125,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":1126,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":1127,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":1128,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":4148,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":4149,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":4150,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cmp",{"_index":5231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cmr",{"_index":1802,"title":{},"body":{"interfaces/CountryList.html":{}}}],["coard",{"_index":5261,"title":{},"body":{"index.html":{}}}],["cocos",{"_index":1822,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cod",{"_index":1830,"title":{},"body":{"interfaces/CountryList.html":{}}}],["code",{"_index":782,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":663,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["code.component",{"_index":4174,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":3980,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":3979,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":3978,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:102",{"_index":4004,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:106",{"_index":4002,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:15",{"_index":3986,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:16",{"_index":3984,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":3989,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":3992,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":3988,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:20",{"_index":3983,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:21",{"_index":3985,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:24",{"_index":3993,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:30",{"_index":4014,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:35",{"_index":3995,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:36",{"_index":3994,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:38",{"_index":4013,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:39",{"_index":4012,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:41",{"_index":4011,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:48",{"_index":4006,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:49",{"_index":3982,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:51",{"_index":4007,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:60",{"_index":3996,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:64",{"_index":3998,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:74",{"_index":3997,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:79",{"_index":4005,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:86",{"_index":3999,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:91",{"_index":4000,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:95",{"_index":4001,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":3977,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["code/validate",{"_index":4204,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["codes",{"_index":1658,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["cog",{"_index":1828,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cok",{"_index":1832,"title":{},"body":{"interfaces/CountryList.html":{}}}],["col",{"_index":1824,"title":{},"body":{"interfaces/CountryList.html":{}}}],["collected",{"_index":3492,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["collection",{"_index":408,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["colombia",{"_index":1825,"title":{},"body":{"interfaces/CountryList.html":{}}}],["color",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["colour",{"_index":1023,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["colours",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["columbia",{"_index":4010,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["column",{"_index":3647,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["com",{"_index":1826,"title":{},"body":{"interfaces/CountryList.html":{}}}],["come",{"_index":3488,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["comes",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":4550,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":3245,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["committed",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":4933,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":353,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commondatefieldformat",{"_index":2410,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":685,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatecheck",{"_index":2497,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonduplicatecheck(duplist",{"_index":5210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonduplicatecheck]'},{'name",{"_index":687,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonformactionbar",{"_index":3643,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["commongeocoderinput",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["commonimage",{"_index":1405,"title":{"classes/CommonImage.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":1420,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":2843,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":2848,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":3069,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":2840,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":1442,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":3039,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":2892,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":2982,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":1461,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":1465,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":2814,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogevents",{"_index":1490,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["commonlogevents.error",{"_index":1542,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["commonlogger",{"_index":1497,"title":{"injectables/CommonLogger.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":1482,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{}}}],["commonmodule",{"_index":1148,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonphnvalidation",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["commonvalidatebcpostal",{"_index":4315,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["commonvalidatebcpostal]'},{'name",{"_index":689,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatecity",{"_index":4322,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["commonvalidatecity]'},{'name",{"_index":691,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatename",{"_index":4328,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["commonvalidatename]'},{'name",{"_index":693,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephone",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["commonvalidatepostalcode",{"_index":4331,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["commonvalidatepostalcode(hasmask",{"_index":5211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commonvalidatepostalcode]'},{'name",{"_index":695,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidateregion",{"_index":4349,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["commonvalidateregion]'},{'name",{"_index":697,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatesin",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["commonvalidatestreet",{"_index":699,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["comoros",{"_index":1827,"title":{},"body":{"interfaces/CountryList.html":{}}}],["compare",{"_index":3908,"title":{},"body":{"components/PhnComponent.html":{}}}],["compat",{"_index":3011,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compatibilty",{"_index":978,"title":{},"body":{"classes/Address.html":{}}}],["compatible",{"_index":4775,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compilation",{"_index":5376,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":4875,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":5346,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":2671,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":5340,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":390,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["completed",{"_index":1179,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["completeness",{"_index":1204,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["complex",{"_index":1694,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":5266,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":3417,"title":{},"body":{"components/HeaderComponent.html":{}}}],["compodoccrc.json",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":178,"title":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component's",{"_index":3550,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["component_template",{"_index":604,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["componentfixture",{"_index":5232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["componenthtml",{"_index":5234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["componentlist",{"_index":4229,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["components",{"_index":144,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/accordion/accordion.component",{"_index":4196,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address/address.component",{"_index":4180,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button",{"_index":4184,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button/button.component",{"_index":4186,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":4187,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/city.component",{"_index":4182,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/validate",{"_index":4215,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/confirm",{"_index":4223,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/consent",{"_index":4188,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":4153,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/country/country.component",{"_index":3213,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":4227,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":4166,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":4167,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":4176,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/duplicate",{"_index":4209,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/email/email.component",{"_index":4222,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/error",{"_index":4211,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":4169,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":4155,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/full",{"_index":4201,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/geocoder",{"_index":4225,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/header/header.component",{"_index":4203,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":4238,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/name/name.component",{"_index":4190,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/name/validate",{"_index":4197,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/page",{"_index":4157,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":4159,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/phn.component",{"_index":4200,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phone",{"_index":4191,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":4173,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/province/province.component",{"_index":4181,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/radio/radio.component",{"_index":4193,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sample",{"_index":4221,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/sin.component",{"_index":4199,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/street.component",{"_index":4183,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/validate",{"_index":4213,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":4171,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":4179,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/validate",{"_index":4217,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":4160,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/xicon",{"_index":4206,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":5391,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["computer",{"_index":3478,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["computers",{"_index":5294,"title":{},"body":{"todo.html":{}}}],["concatenate",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["concatenated",{"_index":3824,"title":{},"body":{"classes/Person.html":{}}}],["concatenates",{"_index":3814,"title":{},"body":{"classes/Person.html":{}}}],["conditions",{"_index":5277,"title":{},"body":{"license.html":{}}}],["config",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":5128,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["configurable",{"_index":5389,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":1698,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":1563,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"guards/RouteGuardService.html":{}}}],["configured",{"_index":1138,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configures",{"_index":5223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configuring",{"_index":5428,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["confirm",{"_index":619,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["confirmation",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["confirmtemplatecomponent",{"_index":618,"title":{"components/ConfirmTemplateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["congo",{"_index":1829,"title":{},"body":{"interfaces/CountryList.html":{}}}],["connected",{"_index":3340,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["connectivity",{"_index":1539,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["consectetur",{"_index":1331,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["consent",{"_index":413,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["consentmodal",{"_index":3516,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["consentmodalcomponent",{"_index":621,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["considered",{"_index":955,"title":{},"body":{"classes/Address.html":{}}}],["consistency",{"_index":1013,"title":{},"body":{"components/ButtonComponent.html":{}}}],["consistent",{"_index":1551,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/PageFrameworkComponent.html":{},"todo.html":{}}}],["console",{"_index":305,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["console.error('an",{"_index":1578,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error('geocoder",{"_index":3251,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error('mspmaintenanceservice",{"_index":3568,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(`backend",{"_index":1582,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.error(`mspmaintenanceservice",{"_index":3569,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(msg",{"_index":1561,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log",{"_index":299,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"miscellaneous/functions.html":{}}}],["console.log(\"error",{"_index":3073,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":2794,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":2851,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":2830,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["console.log('file",{"_index":2978,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":2809,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('handleerror",{"_index":3567,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log('http",{"_index":309,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":2914,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":3024,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":3091,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":1572,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["console.log('opening",{"_index":2867,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('scaled",{"_index":4302,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('start",{"_index":2930,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('this",{"_index":3035,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":2678,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":2964,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":2926,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":3064,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":2681,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":3094,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(response",{"_index":3093,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(this.spaenvres",{"_index":3582,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log(var1",{"_index":2853,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["const",{"_index":198,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":474,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["constructor(@optional",{"_index":3316,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PhoneNumberComponent.html":{}}}],["constructor(controldir",{"_index":1238,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["constructor(errorcode",{"_index":1472,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(http",{"_index":239,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":1092,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(message",{"_index":3599,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["constructor(private",{"_index":1113,"title":{},"body":{"injectables/CaptchaDataService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["constructor(public",{"_index":1454,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":30,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/HeaderComponent.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":4284,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":1466,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":5434,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contact",{"_index":3509,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["contain",{"_index":1308,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["container",{"_index":1661,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/ErrorContainerComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["container'},{'name",{"_index":636,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["container.component",{"_index":4212,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["container.component.html",{"_index":2555,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.scss",{"_index":2554,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.ts",{"_index":2553,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:10",{"_index":2557,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.length",{"_index":4422,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container/error",{"_index":2552,"title":{},"body":{"components/ErrorContainerComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["container[0].scrollleft",{"_index":4428,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["contains",{"_index":3730,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["content",{"_index":396,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["contentchild",{"_index":2573,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":2640,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contents",{"_index":3421,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contenttype",{"_index":1410,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["context",{"_index":5143,"title":{},"body":{"coverage.html":{}}}],["continue",{"_index":25,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{}}}],["continuebutton",{"_index":365,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["contrast",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["contributing",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["contributing.md",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":191,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["control.ts",{"_index":114,"title":{},"body":{"classes/AbstractFormControl.html":{},"coverage.html":{}}}],["control.ts:10",{"_index":134,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:13",{"_index":168,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:15",{"_index":166,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:18",{"_index":167,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:22",{"_index":135,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:23",{"_index":136,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:26",{"_index":145,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:31",{"_index":165,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:34",{"_index":147,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:39",{"_index":150,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:44",{"_index":161,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:48",{"_index":163,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:65",{"_index":154,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.value",{"_index":2509,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["controlcontainer",{"_index":715,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controldir",{"_index":1235,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controldir.valueaccessor",{"_index":1264,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controls",{"_index":3533,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["controlvalueaccessor",{"_index":119,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["conventional",{"_index":5301,"title":{},"body":{"todo.html":{}}}],["convert",{"_index":2316,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":2432,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":2341,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["converted",{"_index":826,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["convertroutetotitle",{"_index":1666,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":1671,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":1673,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":2433,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":2348,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cook",{"_index":1833,"title":{},"body":{"interfaces/CountryList.html":{}}}],["copied",{"_index":503,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copies",{"_index":5213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copy",{"_index":899,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["copy(object",{"_index":951,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copying",{"_index":3512,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["copylicense",{"_index":5099,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copylicense(_options",{"_index":5212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["copyright",{"_index":5262,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":5138,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copyversionfile(options",{"_index":5189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":624,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":4152,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["corebreadcrumb",{"_index":1695,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":623,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["corporis",{"_index":1379,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["correct",{"_index":1201,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correctly",{"_index":4100,"title":{},"body":{"guards/RouteGuardService.html":{},"changelog.html":{}}}],["correspond",{"_index":363,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":468,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":513,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["costa",{"_index":1835,"title":{},"body":{"interfaces/CountryList.html":{}}}],["could've",{"_index":2775,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["counter",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["countlength",{"_index":374,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countlength(refnameval",{"_index":438,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countries",{"_index":1711,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country",{"_index":497,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["country'},{'name",{"_index":627,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["country.component.html",{"_index":2266,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country.component.scss",{"_index":2267,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country/country.component",{"_index":726,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["country/prov",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["country/province",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["country/province/region",{"_index":4351,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["country_",{"_index":2268,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country_list",{"_index":725,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["country_list.find",{"_index":2264,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycode",{"_index":1712,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/functions.html":{}}}],["countrycomponent",{"_index":626,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrylist",{"_index":722,"title":{"interfaces/CountryList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["countryobj",{"_index":888,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.countrycode",{"_index":892,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.description",{"_index":2265,"title":{},"body":{"interfaces/CountryList.html":{}}}],["counts",{"_index":440,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["coverage",{"_index":5019,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpv",{"_index":1804,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cr18890",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":17,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["created",{"_index":2658,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":5121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createifmissing(host",{"_index":5217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":5361,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["createtestingmodule",{"_index":5029,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtestingmodule(cmp",{"_index":5228,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creating",{"_index":1153,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cri",{"_index":1834,"title":{},"body":{"interfaces/CountryList.html":{}}}],["criteria",{"_index":2519,"title":{},"body":{"components/EmailComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteria.test",{"_index":4319,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteriamsg",{"_index":3685,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["croatia",{"_index":1841,"title":{},"body":{"interfaces/CountryList.html":{}}}],["crumbs",{"_index":1664,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":3053,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cub",{"_index":1842,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cuba",{"_index":1843,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cunha",{"_index":2119,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cupiditate",{"_index":1387,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["curaçao",{"_index":1845,"title":{},"body":{"interfaces/CountryList.html":{}}}],["curr",{"_index":3004,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currently",{"_index":415,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":3050,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["custom",{"_index":522,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"todo.html":{}}}],["customize",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["cutoffdate",{"_index":3532,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["cuw",{"_index":1844,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cxr",{"_index":1819,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cycles",{"_index":2390,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cym",{"_index":1807,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyp",{"_index":1846,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyprus",{"_index":1847,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cze",{"_index":1848,"title":{},"body":{"interfaces/CountryList.html":{}}}],["czech",{"_index":1849,"title":{},"body":{"interfaces/CountryList.html":{}}}],["côte",{"_index":1838,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d",{"_index":2979,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["d.ts",{"_index":5352,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d4f0e3b",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["d5bf00b",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["d5dd02f",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["d[abceghj",{"_index":947,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["d\\'ivoire",{"_index":1839,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d]+/.test",{"_index":2427,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["da",{"_index":2118,"title":{},"body":{"interfaces/CountryList.html":{}}}],["danger",{"_index":550,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/PasswordComponent.html":{}}}],["danging",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["darken",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["darussalam",{"_index":1792,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dashboard",{"_index":1702,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["data",{"_index":308,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["data.city",{"_index":902,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.country",{"_index":904,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.province",{"_index":903,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.service",{"_index":1147,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":1088,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":4143,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":4146,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":4144,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":1093,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":1100,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":1104,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":1096,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":4145,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.street",{"_index":901,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["datachange",{"_index":1063,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/ToggleComponent.html":{}}}],["dataservice",{"_index":2652,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":2724,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":1527,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["date'},{'name",{"_index":629,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["date(date.year",{"_index":2351,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.component.ts",{"_index":4241,"title":{},"body":{"interfaces/SimpleDate.html":{},"todo.html":{}}}],["date.day",{"_index":2353,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getdate",{"_index":2347,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":2343,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":2345,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.interface.ts",{"_index":4237,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":2352,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.year",{"_index":2350,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datechange",{"_index":2309,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":628,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":2277,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":684,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":2332,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":1526,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["dateofbirth",{"_index":3787,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":3790,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":2297,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":631,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["datepicker.component.html",{"_index":2304,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":2305,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":630,"title":{"components/DatepickerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":2340,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":2307,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":2308,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":2363,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dates",{"_index":2311,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datetime",{"_index":2334,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["day",{"_index":2346,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["dayoutofrange",{"_index":2281,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dbb94e1",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["dd29a60",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":5390,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":3188,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["debouncetime(500",{"_index":3319,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["debug",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":1123,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decorators",{"_index":45,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":5317,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":51,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["defaultcolor",{"_index":3103,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["defaultcountry",{"_index":747,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulted",{"_index":772,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulterrmsg",{"_index":2273,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidbcpostal",{"_index":4021,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidchar",{"_index":4022,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.pattern",{"_index":4020,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.required",{"_index":4019,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrormessage",{"_index":1236,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["defaultprovince",{"_index":748,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaults",{"_index":833,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["defined",{"_index":32,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":2382,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["delay",{"_index":2587,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":3075,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{},"todo.html":{}}}],["delete(evt",{"_index":4289,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleted",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["deleteimage",{"_index":4283,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":3084,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delivery",{"_index":778,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["democratic",{"_index":1831,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denmark",{"_index":1851,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denominator",{"_index":4407,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":1003,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":1592,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/local-development/schematics.html":{}}}],["depending",{"_index":846,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["deployed",{"_index":1139,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deployurl",{"_index":3418,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deprecate",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1049,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["deprecriated",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":4131,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["descriptions",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["deserunt",{"_index":1395,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":703,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["designed",{"_index":3468,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["designs",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["detailed",{"_index":5313,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["detect",{"_index":2688,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["detection",{"_index":2389,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["detector",{"_index":2687,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["determine",{"_index":959,"title":{},"body":{"classes/Address.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["determines",{"_index":63,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["deu",{"_index":1898,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dev",{"_index":1215,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{}}}],["developers",{"_index":182,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["development",{"_index":3818,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["device",{"_index":3477,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["devkit/schematics",{"_index":5370,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df26aa1",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["df678e6",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":2865,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["differ",{"_index":5431,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["differenceinyears",{"_index":3826,"title":{},"body":{"classes/Person.html":{}}}],["different",{"_index":5412,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["digitfinaldigit",{"_index":3910,"title":{},"body":{"components/PhnComponent.html":{}}}],["directive",{"_index":212,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive's",{"_index":3551,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["directives",{"_index":683,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["directly",{"_index":965,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disable",{"_index":190,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disablebefore",{"_index":2320,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disablecontinue",{"_index":3538,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["disabled",{"_index":21,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["disablegeocoder",{"_index":749,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disables",{"_index":41,"title":{},"body":{"classes/AbstractForm.html":{}}}],["disablesince",{"_index":2317,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":2313,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disabling",{"_index":3465,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["disiplay",{"_index":3356,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["dislayed",{"_index":3953,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["display",{"_index":796,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["display=\"table",{"_index":3431,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["display='inline",{"_index":3436,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["displayed",{"_index":416,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["displayerror",{"_index":2556,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["displayicon",{"_index":1644,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["displaying",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["displaymask",{"_index":3924,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["dist",{"_index":2580,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/build/pdf",{"_index":2615,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/build/pdf.worker.entry",{"_index":2617,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/common",{"_index":5427,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distantfuture",{"_index":5053,"title":{},"body":{"coverage.html":{}}}],["distantpast",{"_index":5054,"title":{},"body":{"coverage.html":{}}}],["distinctio",{"_index":1358,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["distinctuntilchanged",{"_index":3312,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["distributed",{"_index":5274,"title":{},"body":{"license.html":{}}}],["divide",{"_index":3903,"title":{},"body":{"components/PhnComponent.html":{}}}],["divisible",{"_index":4274,"title":{},"body":{"components/SinComponent.html":{}}}],["divs",{"_index":3666,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["dji",{"_index":1852,"title":{},"body":{"interfaces/CountryList.html":{}}}],["djibouti",{"_index":1853,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dma",{"_index":1854,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dnk",{"_index":1850,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dob",{"_index":3808,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":3788,"title":{},"body":{"classes/Person.html":{}}}],["doc",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["docinitparams",{"_index":3055,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":3514,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["document",{"_index":2513,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":541,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":3051,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":3026,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":4420,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":3697,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":3714,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":4576,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":2648,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["doing",{"_index":1052,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dolor",{"_index":1328,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dom",{"_index":578,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dominica",{"_index":1855,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dominican",{"_index":1856,"title":{},"body":{"interfaces/CountryList.html":{}}}],["don't",{"_index":1243,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{}}}],["don'ts",{"_index":5315,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":2776,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["don’t",{"_index":3481,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["dos",{"_index":5314,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":3651,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":485,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["drag",{"_index":2701,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":2790,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":2788,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":2792,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":2709,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["dropdown",{"_index":442,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":632,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dropdown.component.html",{"_index":2473,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2472,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":495,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":2703,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":2796,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":2798,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":2631,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ducimus",{"_index":1382,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["due",{"_index":1589,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dummy",{"_index":3819,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":448,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["duplicatecheckdirective",{"_index":686,"title":{"directives/DuplicateCheckDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duplist",{"_index":2499,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"miscellaneous/functions.html":{}}}],["duplist.find",{"_index":2508,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.length",{"_index":2507,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["dutch",{"_index":2158,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dynamic",{"_index":5149,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":847,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["dza",{"_index":1721,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d{3",{"_index":3947,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["d{4",{"_index":3948,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["e",{"_index":3497,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["e.g",{"_index":269,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e0bd207",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["e2271b7",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":355,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e35f16b",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["e458627",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["e485f67",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["e6db87e",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["e762fc1",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["e81927b",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["e89e6f3",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":2783,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":177,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":2777,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":1020,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["easily",{"_index":2764,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":3133,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ebb6998",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["ecu",{"_index":1857,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ecuador",{"_index":1858,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ed615a6",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["edf0b2e",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["edge",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["edittable",{"_index":3954,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["edward",{"_index":4060,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["egy",{"_index":1859,"title":{},"body":{"interfaces/CountryList.html":{}}}],["egypt",{"_index":1860,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eib",{"_index":2954,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["el",{"_index":1862,"title":{},"body":{"interfaces/CountryList.html":{}}}],["element",{"_index":534,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["element's",{"_index":2730,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":386,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":395,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('common",{"_index":568,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('div[class=\"modal",{"_index":566,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click",{"_index":565,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":560,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":556,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":551,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":554,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class*=\"${classval",{"_index":562,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(label",{"_index":574,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":545,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.css(`input[ng",{"_index":572,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":543,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":1042,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":49,"title":{},"body":{"classes/AbstractForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageSectionComponent.html":{}}}],["elementsgit",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["eligibility",{"_index":3502,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["elit",{"_index":1333,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["email",{"_index":2516,"title":{},"body":{"components/EmailComponent.html":{},"changelog.html":{}}}],["email'},{'name",{"_index":634,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["email.component.html",{"_index":2518,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.component.scss",{"_index":2517,"title":{},"body":{"components/EmailComponent.html":{}}}],["email_",{"_index":2522,"title":{},"body":{"components/EmailComponent.html":{}}}],["emailcomponent",{"_index":633,"title":{"components/EmailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["embedded",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["emirates",{"_index":2231,"title":{},"body":{"interfaces/CountryList.html":{}}}],["emit",{"_index":2397,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["emits",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":982,"title":{},"body":{"classes/Address.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["enabled",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["enables",{"_index":761,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["encapsulation",{"_index":2626,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["enclose",{"_index":3121,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":5398,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":3016,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":470,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":1103,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":5417,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["ensure",{"_index":1567,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":528,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["entered",{"_index":3480,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":3354,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["entries",{"_index":2672,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":4863,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":2598,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":1431,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":5163,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":5335,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["env",{"_index":3453,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["environment",{"_index":1216,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["equation",{"_index":2869,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equatorial",{"_index":1865,"title":{},"body":{"interfaces/CountryList.html":{}}}],["equivalent",{"_index":2318,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["eri",{"_index":1867,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eritrea",{"_index":1868,"title":{},"body":{"interfaces/CountryList.html":{}}}],["erorr",{"_index":3573,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["err",{"_index":3282,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["errmsg",{"_index":3146,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":3783,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":3782,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.pattern",{"_index":3210,"title":{},"body":{"components/FullNameComponent.html":{}}}],["errmsg.required",{"_index":3209,"title":{},"body":{"components/FullNameComponent.html":{},"components/PasswordComponent.html":{}}}],["error",{"_index":170,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('common",{"_index":4446,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["error('this",{"_index":3038,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":1573,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.error.message",{"_index":1579,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.errorcode",{"_index":2839,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":2850,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":2842,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":2845,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":1543,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.name",{"_index":1545,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error.rawimagefile",{"_index":2844,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":2846,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":1583,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.statustext",{"_index":1547,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["error_fetch_img",{"_index":5174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":5177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":1455,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{}}}],["errorcontainercomponent",{"_index":635,"title":{"components/ErrorContainerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errordescription",{"_index":1456,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":1445,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":2651,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":1575,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["errormessage",{"_index":132,"title":{"interfaces/ErrorMessage.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["errormessagerequired",{"_index":1061,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["errormessages",{"_index":2288,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{}}}],["errormessages.dayoutofrange",{"_index":2465,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":2470,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":2469,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":2468,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":2464,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":2467,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":2466,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errorname",{"_index":1544,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["errorr",{"_index":4443,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["errorr.ts",{"_index":3598,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["errorr.ts:1",{"_index":3600,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["errorreason",{"_index":3047,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":1536,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":3002,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":3015,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":3014,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["esh",{"_index":2254,"title":{},"body":{"interfaces/CountryList.html":{}}}],["esp",{"_index":2174,"title":{},"body":{"interfaces/CountryList.html":{}}}],["especially",{"_index":3475,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["esse",{"_index":1351,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["est",{"_index":1869,"title":{},"body":{"interfaces/CountryList.html":{}}}],["estonia",{"_index":1870,"title":{},"body":{"interfaces/CountryList.html":{}}}],["et",{"_index":1370,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["etc",{"_index":499,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["eth",{"_index":1871,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ethiopia",{"_index":1872,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eum",{"_index":1362,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["eustatius",{"_index":1773,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ev",{"_index":3410,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":4396,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":2379,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":4412,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":1041,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["event.datatransfer.files",{"_index":2800,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":3342,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.jsdate",{"_index":2396,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":3358,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.preventdefault",{"_index":2799,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":3115,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":2422,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target.value",{"_index":2548,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["event.target['files",{"_index":2806,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":712,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["eventemitter(false",{"_index":2419,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":3353,"title":{},"body":{"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["everything",{"_index":1524,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":2969,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":2861,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":2795,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":2971,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ex",{"_index":2289,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["exactly",{"_index":2822,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":334,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example.component.ts",{"_index":4104,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":5432,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["examples",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["exampletodo",{"_index":5373,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":2746,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":1549,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/NameComponent.html":{},"license.html":{}}}],["exception",{"_index":3642,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["exclusive",{"_index":5171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":4427,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exendable",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["exercitationem",{"_index":1375,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":1172,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["existing",{"_index":5215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exists",{"_index":2325,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["expand",{"_index":597,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expandtext",{"_index":589,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expect",{"_index":5333,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":1112,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["export",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":173,"title":{},"body":{"classes/AbstractFormControl.html":{},"changelog.html":{}}}],["exports",{"_index":1124,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":5279,"title":{},"body":{"license.html":{}}}],["extend",{"_index":923,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["extends",{"_index":115,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/getting-started.html":{}}}],["extra",{"_index":936,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["extract",{"_index":2748,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":3752,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f103e7c",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["f18457b",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["f21d329",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["f2ccfe6",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["f334faf",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["f541d81",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["f603e99",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":3751,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["facere",{"_index":1346,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["facets",{"_index":5413,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["facing",{"_index":3572,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["failed",{"_index":263,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":2670,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["falkland",{"_index":1874,"title":{},"body":{"interfaces/CountryList.html":{}}}],["false",{"_index":53,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"todo.html":{}}}],["family",{"_index":3868,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["faroe",{"_index":1877,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faso",{"_index":1797,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faster",{"_index":5293,"title":{},"body":{"todo.html":{}}}],["favicon_base64",{"_index":5111,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":4392,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["fbc012d",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["fc7fe65",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["feature.properties",{"_index":3241,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["federated",{"_index":2029,"title":{},"body":{"interfaces/CountryList.html":{}}}],["federation",{"_index":2108,"title":{},"body":{"interfaces/CountryList.html":{}}}],["feedback",{"_index":3771,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":1089,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":1094,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":1090,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":1098,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":5172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["field",{"_index":202,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["fieldmaxlenghts",{"_index":785,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fields",{"_index":743,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["fieldset",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["fiji",{"_index":1879,"title":{},"body":{"interfaces/CountryList.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":2723,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":2682,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":3097,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":2882,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":1411,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["filecontrol",{"_index":2665,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":2876,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":2812,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":2717,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"miscellaneous/functions.html":{}}}],["fileobservable",{"_index":2909,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":2913,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":2810,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":2811,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":2797,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":2807,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":2944,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":2945,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileupload",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["fileuploadbrowse",{"_index":2667,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":4498,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":637,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":2817,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":2568,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["filled",{"_index":954,"title":{},"body":{"classes/Address.html":{}}}],["filter",{"_index":2584,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["filter((mspimage",{"_index":2825,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":3409,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":2808,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":870,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{}}}],["fin",{"_index":1880,"title":{},"body":{"interfaces/CountryList.html":{}}}],["final",{"_index":2771,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finaldigit",{"_index":3911,"title":{},"body":{"components/PhnComponent.html":{}}}],["finally",{"_index":2779,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":795,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["findcountrycode",{"_index":887,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["findprovincedescription(prov",{"_index":879,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fine",{"_index":1529,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["finish",{"_index":3482,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["finishes",{"_index":2728,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finland",{"_index":1881,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fire",{"_index":3337,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["firefox",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":450,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["first/middle/last",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":3147,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["firstnamelabel",{"_index":3153,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["fix",{"_index":2619,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":3013,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fixture",{"_index":5235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fji",{"_index":1878,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flag",{"_index":3571,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["flags",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":5291,"title":{},"body":{"todo.html":{}}}],["flatmap",{"_index":2585,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flex",{"_index":3663,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["flk",{"_index":1873,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flow",{"_index":4093,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["fluid",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":148,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["fn.bind(this",{"_index":220,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["fns",{"_index":3827,"title":{},"body":{"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["focus",{"_index":969,"title":{},"body":{"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["focusable",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":5329,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":4962,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["followed",{"_index":3180,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["following",{"_index":2280,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["follows",{"_index":5300,"title":{},"body":{"todo.html":{}}}],["fonts",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["footer\"]')).element(by.css('button[type=\"submit\"]')).click",{"_index":567,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["force",{"_index":2683,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["forceoverwrite",{"_index":5203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forcerender",{"_index":2689,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":1569,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["form",{"_index":13,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{}}}],["form.ts",{"_index":7,"title":{},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["form.ts:11",{"_index":47,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:14",{"_index":40,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:16",{"_index":54,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:18",{"_index":33,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:31",{"_index":62,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:37",{"_index":82,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:46",{"_index":74,"title":{},"body":{"classes/AbstractForm.html":{}}}],["formactionbar",{"_index":3118,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["formactionbarcomponent",{"_index":639,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":2331,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["format.directive",{"_index":4228,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":2409,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":2417,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":2413,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatdateofbirth",{"_index":3791,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":3234,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formatted",{"_index":2536,"title":{},"body":{"components/EmailComponent.html":{}}}],["formcontrol",{"_index":2296,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"todo.html":{}}}],["former",{"_index":2001,"title":{},"body":{"interfaces/CountryList.html":{}}}],["formerrors",{"_index":375,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["forms",{"_index":2510,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["formsmodule",{"_index":1145,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmibar",{"_index":5289,"title":{},"body":{"todo.html":{}}}],["formsubmitbar",{"_index":3116,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":641,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":1132,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":714,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["found",{"_index":331,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":5325,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":4869,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":3640,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["fra",{"_index":1882,"title":{},"body":{"interfaces/CountryList.html":{}}}],["framework",{"_index":3132,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["framework'},{'name",{"_index":651,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["framework.component",{"_index":4158,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":3650,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":3649,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":3639,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:29",{"_index":3652,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:31",{"_index":3653,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":3638,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["france",{"_index":1883,"title":{},"body":{"interfaces/CountryList.html":{}}}],["free",{"_index":1009,"title":{},"body":{"components/ButtonComponent.html":{}}}],["freedom",{"_index":3498,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["french",{"_index":1885,"title":{},"body":{"interfaces/CountryList.html":{}}}],["friendly",{"_index":2762,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fro",{"_index":1876,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fromevent",{"_index":2581,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":2802,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":2804,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":2789,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":2856,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":2858,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":2859,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fsm",{"_index":2027,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fugiat",{"_index":1354,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["full",{"_index":643,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["fulladdress",{"_index":3212,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":3792,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["fullname.split",{"_index":3836,"title":{},"body":{"classes/Person.html":{}}}],["fullnamecomponent",{"_index":642,"title":{"components/FullNameComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fullnameerrormsg",{"_index":3170,"title":{"interfaces/FullNameErrorMsg.html":{}},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["fullsizeviewmodal",{"_index":3531,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["function",{"_index":159,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["functionality",{"_index":354,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functiong",{"_index":4017,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["functions",{"_index":4379,"title":{"miscellaneous/functions.html":{}},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["futuna",{"_index":2253,"title":{},"body":{"interfaces/CountryList.html":{}}}],["future",{"_index":1018,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":2565,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["gab",{"_index":1892,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gabon",{"_index":1893,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gambia",{"_index":1895,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gbr",{"_index":2232,"title":{},"body":{"interfaces/CountryList.html":{}}}],["general",{"_index":777,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["generally",{"_index":69,"title":{},"body":{"classes/AbstractForm.html":{}}}],["generate",{"_index":4998,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generated",{"_index":5193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generateskiptocontentlink",{"_index":3390,"title":{},"body":{"components/HeaderComponent.html":{}}}],["generateuuid",{"_index":233,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["generating",{"_index":313,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["generation",{"_index":4944,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["geo",{"_index":1896,"title":{},"body":{"interfaces/CountryList.html":{}}}],["geoaddressresult",{"_index":718,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":646,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["geocoderinput",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["geocoderinputcomponent",{"_index":645,"title":{"components/GeocoderInputComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geocoderservice",{"_index":3214,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["georgia",{"_index":1897,"title":{},"body":{"interfaces/CountryList.html":{}}}],["germany",{"_index":1899,"title":{},"body":{"interfaces/CountryList.html":{}}}],["get(url",{"_index":248,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":4363,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":4368,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":3789,"title":{},"body":{"classes/Person.html":{}}}],["getapplicationid",{"_index":1630,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getcontinuebutton",{"_index":376,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getcountrydescription",{"_index":2263,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcountrydescription(countrycode",{"_index":5239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getdateofbirthshort",{"_index":3806,"title":{},"body":{"classes/Person.html":{}}}],["geterrorcode",{"_index":1652,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getformatdateofbirth",{"_index":3809,"title":{},"body":{"classes/Person.html":{}}}],["getfullname",{"_index":3821,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":277,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{}}}],["getinputelement",{"_index":5031,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getinputelement(fixture",{"_index":5233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getisbconly",{"_index":974,"title":{},"body":{"classes/Address.html":{}}}],["getlabel",{"_index":5032,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlabel(fixture",{"_index":5236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getlegendcontext",{"_index":5033,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlegendcontext(fixture",{"_index":5237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmaxlenasnumber",{"_index":3631,"title":{},"body":{"components/NameComponent.html":{}}}],["getname",{"_index":3812,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":360,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":445,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":361,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":458,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getpackageversionfrompackagejson",{"_index":5130,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpackageversionfrompackagejson(tree",{"_index":5205,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpasswordstrength",{"_index":3691,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":3716,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getprogramname",{"_index":1634,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["getprovincedescription",{"_index":4071,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getprovincedescription(provincecode",{"_index":5240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":3306,"title":{},"body":{"components/GeocoderInputComponent.html":{},"miscellaneous/functions.html":{}}}],["getstarturl",{"_index":340,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["getstreet",{"_index":970,"title":{},"body":{"classes/Address.html":{}}}],["getsuccesscode",{"_index":1650,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getting",{"_index":4455,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["geturlindex",{"_index":1159,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["geturlindex(url",{"_index":1168,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["getvalue",{"_index":1323,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["getwarningcode",{"_index":1654,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["ggy",{"_index":1916,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gha",{"_index":1900,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ghana",{"_index":1901,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gib",{"_index":1902,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["gibraltar",{"_index":1903,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gif",{"_index":2708,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":2832,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gin",{"_index":1918,"title":{},"body":{"interfaces/CountryList.html":{}}}],["git",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["gitcommit",{"_index":5134,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":504,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["give",{"_index":2916,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["given",{"_index":461,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["gives",{"_index":1446,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["glp",{"_index":1910,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gmb",{"_index":1894,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnb",{"_index":1919,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnq",{"_index":1864,"title":{},"body":{"interfaces/CountryList.html":{}}}],["go",{"_index":467,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":5430,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":3020,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":3641,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["gov",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["governing",{"_index":5282,"title":{},"body":{"license.html":{}}}],["grab",{"_index":449,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["grc",{"_index":1904,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grd",{"_index":1908,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greece",{"_index":1905,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greenland",{"_index":1907,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenada",{"_index":1909,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenadines",{"_index":2133,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grl",{"_index":1906,"title":{},"body":{"interfaces/CountryList.html":{}}}],["group",{"_index":1056,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["group'},{'name",{"_index":611,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["group.component",{"_index":4185,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["group.component.html",{"_index":1058,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.scss",{"_index":1057,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":1048,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:38",{"_index":1065,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:39",{"_index":1069,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:40",{"_index":1070,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:41",{"_index":1066,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:42",{"_index":1067,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:43",{"_index":1068,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:44",{"_index":1071,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:45",{"_index":1080,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:47",{"_index":1078,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:48",{"_index":1064,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:55",{"_index":1076,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:61",{"_index":1072,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:66",{"_index":1073,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:70",{"_index":1074,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:74",{"_index":1077,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group/button",{"_index":1047,"title":{},"body":{"components/ButtonGroupComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["growing",{"_index":5256,"title":{},"body":{"index.html":{}}}],["gtm",{"_index":1914,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guadeloupe",{"_index":1911,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guam",{"_index":1913,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guard",{"_index":321,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service.ts",{"_index":4091,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:52",{"_index":4108,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:58",{"_index":4115,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:66",{"_index":4118,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:73",{"_index":4110,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guards",{"_index":1213,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["guatemala",{"_index":1915,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guernsey",{"_index":1917,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guessable",{"_index":3718,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":3720,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guf",{"_index":1884,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guiana",{"_index":1886,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guide",{"_index":5251,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":704,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["guinea",{"_index":1866,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gum",{"_index":1912,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guy",{"_index":1921,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guyana",{"_index":1922,"title":{},"body":{"interfaces/CountryList.html":{}}}],["haiti",{"_index":1924,"title":{},"body":{"interfaces/CountryList.html":{}}}],["half",{"_index":4413,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":4415,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":4426,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":2714,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["handleerror",{"_index":234,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":259,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["handlers",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":262,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["handling",{"_index":291,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happens",{"_index":66,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":471,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["harum",{"_index":1393,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["haserror",{"_index":3260,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hash",{"_index":2768,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasmask",{"_index":4332,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"miscellaneous/functions.html":{}}}],["hasn't",{"_index":864,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["hasnoresults",{"_index":3261,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hasvalue",{"_index":926,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["having",{"_index":3668,"title":{},"body":{"components/PageSectionComponent.html":{},"changelog.html":{}}}],["header",{"_index":3377,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["header'},{'name",{"_index":649,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["header.component.html",{"_index":3387,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":3386,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":648,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":3577,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["headers",{"_index":244,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["health",{"_index":3494,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{}}}],["heard",{"_index":1926,"title":{},"body":{"interfaces/CountryList.html":{}}}],["height",{"_index":2733,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["heightfactor",{"_index":1463,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["helena",{"_index":2115,"title":{},"body":{"interfaces/CountryList.html":{}}}],["help",{"_index":5337,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":312,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["helpers.ts",{"_index":5028,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["helpers/library",{"_index":4442,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["here",{"_index":1565,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/WizardProgressBarComponent.html":{}}}],["herzegovina",{"_index":1777,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hfactor",{"_index":1467,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":2720,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":56,"title":{},"body":{"classes/AbstractForm.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["hidefullsizeview",{"_index":4280,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":3686,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":5374,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":558,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["hkg",{"_index":1933,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hmd",{"_index":1925,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hnd",{"_index":1931,"title":{},"body":{"interfaces/CountryList.html":{}}}],["holy",{"_index":1929,"title":{},"body":{"interfaces/CountryList.html":{}}}],["homepage",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["honduras",{"_index":1932,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hong",{"_index":1934,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hood",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["hooks",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":3434,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["horizontally",{"_index":4374,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["host",{"_index":5204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hostlistener",{"_index":2418,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":2420,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":2412,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hrv",{"_index":1840,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hti",{"_index":1923,"title":{},"body":{"interfaces/CountryList.html":{}}}],["html",{"_index":602,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["html5",{"_index":2712,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":2935,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":2896,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":2423,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":229,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["http://full",{"_index":3419,"title":{},"body":{"components/HeaderComponent.html":{}}}],["http://www.apache.org/licenses/license",{"_index":5268,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":1506,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpclient",{"_index":240,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":734,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["httperrorresponse",{"_index":260,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpheaders",{"_index":242,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpoptions",{"_index":238,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["httpopts",{"_index":292,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":294,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":249,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":1105,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":5244,"title":{},"body":{"index.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":3216,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://geocoder.api.gov.bc.ca/addresses.json?minscore=50&maxresults=5&echo=false&brief=true&autocomplete=true&addressstring=784+hock",{"_index":3219,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/angular/angular/issues/24818",{"_index":3200,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":3722,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":3743,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":2300,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["human",{"_index":421,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hun",{"_index":1936,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hungary",{"_index":1937,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hyphen",{"_index":3181,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["hyphens",{"_index":1314,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["iceland",{"_index":1939,"title":{},"body":{"interfaces/CountryList.html":{}}}],["icon",{"_index":759,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["id",{"_index":1389,"title":{},"body":{"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["id='content",{"_index":3383,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":507,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":2823,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":140,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["idn",{"_index":1942,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ids",{"_index":1000,"title":{},"body":{"classes/Base.html":{}}}],["idx",{"_index":1210,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ie",{"_index":3877,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ie10",{"_index":4445,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["ignored",{"_index":2902,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":1407,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{}}}],["image.id",{"_index":2899,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":2884,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":2925,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":2923,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":2932,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.title",{"_index":4142,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["image/jpeg",{"_index":2928,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":2816,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":2897,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":2900,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":2676,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":2677,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":2679,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":4281,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":4306,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":2855,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":2637,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":2891,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":3040,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":2642,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["images.length",{"_index":2880,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":2883,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":2645,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":2826,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":2981,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":2984,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":2983,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":2894,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":3025,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":3034,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":3031,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":3027,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":3052,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":3076,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imn",{"_index":1951,"title":{},"body":{"interfaces/CountryList.html":{}}}],["implement",{"_index":3007,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["implementation",{"_index":15,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["implemented",{"_index":43,"title":{},"body":{"classes/AbstractForm.html":{},"changelog.html":{}}}],["implementing",{"_index":184,"title":{},"body":{"classes/AbstractFormControl.html":{},"guards/RouteGuardService.html":{}}}],["implements",{"_index":117,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["implied",{"_index":5280,"title":{},"body":{"license.html":{}}}],["import",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["import('pdfjs",{"_index":2614,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["importable",{"_index":5402,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":5354,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["importantly",{"_index":3664,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["importdirectives",{"_index":5230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["imported",{"_index":453,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":5310,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":1136,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":2710,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":2919,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["improvement",{"_index":3662,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imydate",{"_index":2293,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["incidunt",{"_index":1392,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["include",{"_index":1310,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":494,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":2784,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incomplete",{"_index":1174,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages",{"_index":1224,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages.length",{"_index":1227,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletevalue",{"_index":3939,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["incorrect",{"_index":480,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":3123,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["ind",{"_index":1940,"title":{},"body":{"interfaces/CountryList.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":5343,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":1484,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/PageListInterface.html":{}}}],["india",{"_index":1941,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indian",{"_index":1787,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indicate",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["indicates",{"_index":1177,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["individual",{"_index":3142,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["indonesia",{"_index":1943,"title":{},"body":{"interfaces/CountryList.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["infocolectionnoticecomponent",{"_index":410,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["information",{"_index":330,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":2292,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["inheiritance",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":138,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["init",{"_index":3881,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["initialization",{"_index":216,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["initialize",{"_index":3829,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":3552,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["initinvalid",{"_index":3636,"title":{},"body":{"components/NameComponent.html":{}}}],["injectable",{"_index":316,"title":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":318,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["injectiontoken",{"_index":4119,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["injector",{"_index":4120,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["inline",{"_index":3435,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["inmaintenance",{"_index":3576,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["input",{"_index":172,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["input'},{'name",{"_index":647,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["input(event",{"_index":2415,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.component",{"_index":4226,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["input.component.html",{"_index":3259,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.scss",{"_index":3258,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts",{"_index":3255,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:100",{"_index":3286,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:105",{"_index":3288,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:122",{"_index":3291,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:140",{"_index":3284,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:153",{"_index":3279,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:159",{"_index":3296,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:166",{"_index":3292,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:171",{"_index":3293,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:175",{"_index":3295,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:39",{"_index":3274,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:40",{"_index":3273,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:41",{"_index":3276,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:42",{"_index":3275,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:45",{"_index":3302,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:47",{"_index":3301,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:49",{"_index":3300,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:50",{"_index":3299,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:53",{"_index":3307,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:55",{"_index":3310,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:57",{"_index":3305,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:59",{"_index":3297,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:60",{"_index":3272,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:62",{"_index":3298,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:69",{"_index":3278,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:80",{"_index":3277,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:94",{"_index":3281,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.getattribute",{"_index":2424,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":2428,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":2426,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input/geocoder",{"_index":3254,"title":{},"body":{"components/GeocoderInputComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["input[type='file",{"_index":2660,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input_name",{"_index":2666,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":42,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["inside",{"_index":423,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["install",{"_index":4966,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":5249,"title":{},"body":{"index.html":{}}}],["installed",{"_index":5309,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":5122,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1574,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["instances",{"_index":5296,"title":{},"body":{"todo.html":{}}}],["instead",{"_index":523,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":2744,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instruction",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":2646,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["insurance",{"_index":3510,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["integration",{"_index":5332,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["intentional",{"_index":4448,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["interface",{"_index":11,"title":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":702,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":1548,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["internally",{"_index":175,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["internationalprefix",{"_index":3957,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["internationalprefix.split",{"_index":3963,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["internet",{"_index":271,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["introduced",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":1448,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["invalidbcpostal",{"_index":4009,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["invalidchar",{"_index":1307,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["invalidemail",{"_index":2534,"title":{},"body":{"components/EmailComponent.html":{}}}],["invalidimagehanlder",{"_index":3021,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":3041,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":2285,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invisible",{"_index":2327,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invocation",{"_index":859,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iot",{"_index":1785,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ipsam",{"_index":1336,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ipsum",{"_index":1327,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["iradioitems",{"_index":3426,"title":{"interfaces/IRadioItems.html":{}},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["iran",{"_index":1945,"title":{},"body":{"interfaces/CountryList.html":{}}}],["iraq",{"_index":1948,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ireland",{"_index":1950,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irl",{"_index":1949,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irn",{"_index":1944,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irq",{"_index":1947,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irrelevant",{"_index":3236,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":1704,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["isbconly",{"_index":932,"title":{},"body":{"classes/Address.html":{}}}],["isbcphn",{"_index":3850,"title":{},"body":{"components/PhnComponent.html":{},"changelog.html":{}}}],["iscanada",{"_index":829,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iscomplete",{"_index":930,"title":{},"body":{"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["iscontinuedisabled",{"_index":3593,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isdate",{"_index":2434,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":2354,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":162,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["isl",{"_index":1938,"title":{},"body":{"interfaces/CountryList.html":{}}}],["islamic",{"_index":1946,"title":{},"body":{"interfaces/CountryList.html":{}}}],["island",{"_index":1782,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["islands",{"_index":1718,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isle",{"_index":1952,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isloading",{"_index":3104,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["isn't",{"_index":2663,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isopen",{"_index":590,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["ispaenvresponse",{"_index":3448,"title":{"interfaces/ISpaEnvResponse.html":{}},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["ispagecomplete",{"_index":341,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispagecomplete(url",{"_index":345,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{}}}],["ispagelistempty",{"_index":1160,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispdf",{"_index":2911,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isprerequisitecomplete",{"_index":342,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isr",{"_index":1954,"title":{},"body":{"interfaces/CountryList.html":{}}}],["israel",{"_index":1955,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isrequired",{"_index":746,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["issue",{"_index":2907,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":1142,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{}}}],["iste",{"_index":1347,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["istypeaheadloading",{"_index":3262,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["isundermaintenance",{"_index":3521,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isvalid",{"_index":927,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["it'll",{"_index":2384,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["it's",{"_index":452,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ita",{"_index":1956,"title":{},"body":{"interfaces/CountryList.html":{}}}],["italy",{"_index":1957,"title":{},"body":{"interfaces/CountryList.html":{}}}],["item",{"_index":883,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{}}}],["item.iscomplete",{"_index":1219,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["items",{"_index":1170,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["iterate",{"_index":3336,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["itself",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["jam",{"_index":1958,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jamaica",{"_index":1959,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jan",{"_index":2184,"title":{},"body":{"interfaces/CountryList.html":{}}}],["japan",{"_index":1961,"title":{},"body":{"interfaces/CountryList.html":{}}}],["javascript",{"_index":958,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["jersey",{"_index":1963,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jey",{"_index":1962,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jor",{"_index":1964,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jordan",{"_index":1965,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jpeg",{"_index":2756,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":2707,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpn",{"_index":1960,"title":{},"body":{"interfaces/CountryList.html":{}}}],["js",{"_index":5155,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":5132,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":5136,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["jsdate",{"_index":2380,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1591,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["json.stringify(error",{"_index":2890,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["kaz",{"_index":1966,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kazakhstan",{"_index":1967,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keeling",{"_index":1823,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keep",{"_index":142,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["ken",{"_index":1968,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kenya",{"_index":1969,"title":{},"body":{"interfaces/CountryList.html":{}}}],["key",{"_index":559,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["keyboard",{"_index":3352,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["keyboardevent",{"_index":2416,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["keys",{"_index":5208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyup",{"_index":2857,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kgz",{"_index":1978,"title":{},"body":{"interfaces/CountryList.html":{}}}],["khm",{"_index":1800,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kib",{"_index":2950,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":5278,"title":{},"body":{"license.html":{}}}],["kingdom",{"_index":2233,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kir",{"_index":1970,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kiribati",{"_index":1971,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kitts",{"_index":2121,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kna",{"_index":2120,"title":{},"body":{"interfaces/CountryList.html":{}}}],["know",{"_index":1051,"title":{},"body":{"components/ButtonGroupComponent.html":{},"additional-documentation/getting-started.html":{}}}],["known",{"_index":1141,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["kong",{"_index":1935,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kor",{"_index":1975,"title":{},"body":{"interfaces/CountryList.html":{}}}],["korea",{"_index":1973,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kuwait",{"_index":1977,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kwt",{"_index":1976,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kyrgyzstan",{"_index":1979,"title":{},"body":{"interfaces/CountryList.html":{}}}],["label",{"_index":133,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["label.getattribute('for",{"_index":546,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelforid",{"_index":514,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["labelid",{"_index":512,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelledby=\"mylargemodallabel\"]')).isdisplayed",{"_index":570,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":455,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":544,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelreplacementtag",{"_index":1306,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["labels",{"_index":179,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["labeltext",{"_index":2310,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["labrador",{"_index":4053,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["land",{"_index":1717,"title":{},"body":{"interfaces/CountryList.html":{}}}],["landing",{"_index":1202,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["language",{"_index":5281,"title":{},"body":{"license.html":{}}}],["lanka",{"_index":2178,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lao",{"_index":1980,"title":{},"body":{"interfaces/CountryList.html":{}}}],["largely",{"_index":2298,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["last",{"_index":3141,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastname",{"_index":3148,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastnamelabel",{"_index":3154,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["later",{"_index":2718,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["latvia",{"_index":1982,"title":{},"body":{"interfaces/CountryList.html":{}}}],["law",{"_index":5270,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3128,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["lbn",{"_index":1983,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lbr",{"_index":1987,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lby",{"_index":1989,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lca",{"_index":2123,"title":{},"body":{"interfaces/CountryList.html":{}}}],["leading",{"_index":3887,"title":{},"body":{"components/PhnComponent.html":{}}}],["leads",{"_index":476,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["leave",{"_index":3524,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lebanon",{"_index":1984,"title":{},"body":{"interfaces/CountryList.html":{}}}],["left",{"_index":1696,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["left/right",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":601,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":2622,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["lengths",{"_index":784,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["leone",{"_index":2153,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lesotho",{"_index":1986,"title":{},"body":{"interfaces/CountryList.html":{}}}],["less",{"_index":1015,"title":{},"body":{"components/ButtonComponent.html":{}}}],["leste",{"_index":2206,"title":{},"body":{"interfaces/CountryList.html":{}}}],["letter",{"_index":3179,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":1309,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["level",{"_index":1553,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":5351,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["lib",{"_index":359,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":1135,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":5334,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":5336,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":4956,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":4936,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":5324,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":5321,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["liberia",{"_index":1988,"title":{},"body":{"interfaces/CountryList.html":{}}}],["libif",{"_index":5416,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":2303,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":3744,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libsetup",{"_index":5250,"title":{},"body":{"index.html":{}}}],["libya",{"_index":1990,"title":{},"body":{"interfaces/CountryList.html":{}}}],["license",{"_index":5100,"title":{"license.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["license/index.ts",{"_index":5098,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["licensed",{"_index":5264,"title":{},"body":{"license.html":{}}}],["lie",{"_index":1991,"title":{},"body":{"interfaces/CountryList.html":{}}}],["liechtenstein",{"_index":1992,"title":{},"body":{"interfaces/CountryList.html":{}}}],["likes",{"_index":5319,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitations",{"_index":5284,"title":{},"body":{"license.html":{}}}],["line",{"_index":764,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["line:max",{"_index":3542,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lines",{"_index":838,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["link",{"_index":434,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":5357,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":5426,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":472,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":884,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["listed",{"_index":5316,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":281,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"miscellaneous/functions.html":{}}}],["literals",{"_index":1495,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lithuania",{"_index":1994,"title":{},"body":{"interfaces/CountryList.html":{}}}],["live",{"_index":5409,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lka",{"_index":2176,"title":{},"body":{"interfaces/CountryList.html":{}}}],["load",{"_index":2606,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{},"todo.html":{}}}],["loaded",{"_index":865,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["loadimage",{"_index":2604,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":2609,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":22,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["local",{"_index":2505,"title":{"additional-documentation/local-development.html":{}},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality,street",{"_index":3230,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["locally",{"_index":3490,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":2785,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":5377,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":1514,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["log(message",{"_index":1613,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logentry",{"_index":2596,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":1517,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logerror(errormessage",{"_index":1615,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["logged",{"_index":1486,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["logger",{"_index":1498,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logging",{"_index":306,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["logging/log",{"_index":2597,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror",{"_index":1605,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["loghttperror(error",{"_index":1541,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["loghttprequeststoconsole",{"_index":232,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["logic",{"_index":193,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["logo",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["logosrc",{"_index":3393,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":1519,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["logservice",{"_index":2653,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["logsource",{"_index":1504,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["long",{"_index":328,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["longer",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":3894,"title":{},"body":{"components/PhnComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":3244,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["lookup",{"_index":509,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["lookup(address",{"_index":3220,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lorem",{"_index":1326,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["losing",{"_index":1537,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["lost",{"_index":270,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["lower",{"_index":1674,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["lso",{"_index":1985,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ltu",{"_index":1993,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lucia",{"_index":2124,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lux",{"_index":1995,"title":{},"body":{"interfaces/CountryList.html":{}}}],["luxembourg",{"_index":1996,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lva",{"_index":1981,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maarten",{"_index":2157,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mac",{"_index":1997,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macao",{"_index":1998,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macbooks",{"_index":5292,"title":{},"body":{"todo.html":{}}}],["macedonia",{"_index":2000,"title":{},"body":{"interfaces/CountryList.html":{}}}],["machine",{"_index":5369,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["madagascar",{"_index":2004,"title":{},"body":{"interfaces/CountryList.html":{}}}],["made",{"_index":4939,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maf",{"_index":2125,"title":{},"body":{"interfaces/CountryList.html":{}}}],["magnam",{"_index":1335,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["main",{"_index":1011,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maintenance",{"_index":3455,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenanceflag",{"_index":3528,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenancemessage",{"_index":3540,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["majorly",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":10,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":217,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["making",{"_index":1017,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["malawi",{"_index":2006,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malaysia",{"_index":2008,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maldives",{"_index":2010,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malformed",{"_index":3001,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mali",{"_index":2012,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malta",{"_index":2014,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malvinas",{"_index":1875,"title":{},"body":{"interfaces/CountryList.html":{}}}],["man",{"_index":1953,"title":{},"body":{"interfaces/CountryList.html":{}}}],["manage",{"_index":2765,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manitoba",{"_index":4048,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["manually",{"_index":2388,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["many",{"_index":3438,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["map",{"_index":2583,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":4395,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":2863,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map([['acl",{"_index":3544,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["map(prov",{"_index":867,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["map(x",{"_index":1681,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":5353,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":2315,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["mar",{"_index":2041,"title":{},"body":{"interfaces/CountryList.html":{}}}],["margins",{"_index":3130,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["mariana",{"_index":2071,"title":{},"body":{"interfaces/CountryList.html":{}}}],["marino",{"_index":2137,"title":{},"body":{"interfaces/CountryList.html":{}}}],["markallinputstouched",{"_index":27,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markastouched",{"_index":77,"title":{},"body":{"classes/AbstractForm.html":{}}}],["markdown",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["markdownlint",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["markup",{"_index":1016,"title":{},"body":{"components/ButtonComponent.html":{}}}],["marshall",{"_index":2016,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martin",{"_index":2126,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martinique",{"_index":2018,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mask",{"_index":815,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["match",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":111,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":3237,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":4429,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil(math.random()*100",{"_index":2920,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":4416,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["mauritania",{"_index":2020,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mauritius",{"_index":2022,"title":{},"body":{"interfaces/CountryList.html":{}}}],["max",{"_index":2975,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["max_year_range",{"_index":5055,"title":{},"body":{"coverage.html":{}}}],["maxheight",{"_index":2994,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":2747,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":2270,"title":{},"body":{"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{},"todo.html":{}}}],["maxlenasnumber",{"_index":3610,"title":{},"body":{"components/NameComponent.html":{}}}],["maxlength",{"_index":1275,"title":{},"body":{"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"todo.html":{}}}],["maxlengths",{"_index":731,"title":{"interfaces/Maxlengths.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["maxretry",{"_index":2999,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":1444,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":2976,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":2991,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maybe",{"_index":4317,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["mayen",{"_index":2185,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mayotte",{"_index":2024,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mb",{"_index":2838,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["mcdonald",{"_index":1927,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mco",{"_index":2033,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mda",{"_index":2031,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdash",{"_index":3365,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["mdg",{"_index":2003,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdv",{"_index":2009,"title":{},"body":{"interfaces/CountryList.html":{}}}],["means",{"_index":406,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["meant",{"_index":3119,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["meet",{"_index":3750,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["member",{"_index":3869,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["menu",{"_index":5323,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":2582,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":2805,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["message",{"_index":1515,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["message.interface",{"_index":171,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["message.interface.ts",{"_index":2559,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["message.interface.ts:13",{"_index":2560,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["messages",{"_index":176,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["meta",{"_index":1520,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":582,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["method",{"_index":158,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["methods",{"_index":23,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["mex",{"_index":2025,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mexico",{"_index":2026,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mhl",{"_index":2015,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mib",{"_index":2951,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["micronesia",{"_index":2028,"title":{},"body":{"interfaces/CountryList.html":{}}}],["middle",{"_index":3140,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":3149,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["middlenamelabel",{"_index":3155,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["mime",{"_index":2706,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mini",{"_index":2324,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":2392,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["minimum",{"_index":3675,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ministry",{"_index":3493,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["minlen",{"_index":3694,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":3748,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":3687,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":3688,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":505,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"changelog.html":{}}}],["miquelon",{"_index":2130,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mirror",{"_index":508,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":5162,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missing",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["mistakes",{"_index":5252,"title":{},"body":{"index.html":{}}}],["mkd",{"_index":1999,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mli",{"_index":2011,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mlt",{"_index":2013,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mmr",{"_index":2045,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mne",{"_index":2037,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mng",{"_index":2035,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mnp",{"_index":2069,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mobile",{"_index":3928,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["mockups",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["mod",{"_index":3906,"title":{},"body":{"components/PhnComponent.html":{}}}],["modal",{"_index":414,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["modal')).element(by.css('div[aria",{"_index":569,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["modal'},{'name",{"_index":622,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["modal.component",{"_index":4189,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modal.component.html",{"_index":1432,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.scss",{"_index":3519,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.ts",{"_index":3451,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:18",{"_index":4139,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:19",{"_index":4138,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:21",{"_index":4137,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:27",{"_index":4141,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:31",{"_index":4140,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal/consent",{"_index":3450,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modal/sample",{"_index":4130,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modaldirective",{"_index":2577,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":4163,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":4232,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":2335,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":2602,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":2600,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":4862,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["models/abstract",{"_index":1398,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/address.model",{"_index":721,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["models/base",{"_index":717,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ToggleComponent.html":{}}}],["models/container",{"_index":4389,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/error",{"_index":1399,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/images.model",{"_index":2589,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["models/mask.constants",{"_index":3874,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["models/person.model",{"_index":3187,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["modified",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["modifyjson",{"_index":5102,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyjson(host",{"_index":5241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":1120,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":1122,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":1134,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":358,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohcommmonlibraryerror",{"_index":4444,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror",{"_index":3596,"title":{"classes/MoHCommonLibraryError.html":{}},"body":{"classes/MoHCommonLibraryError.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["mohcommonlibraryerror(msg",{"_index":4452,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohstart",{"_index":5123,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mohstart(_options",{"_index":5219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["moldova",{"_index":2032,"title":{},"body":{"interfaces/CountryList.html":{}}}],["molestiae",{"_index":1391,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["molestias",{"_index":1350,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mollitia",{"_index":1348,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["moment",{"_index":1004,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().toisostring",{"_index":1595,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["moment_",{"_index":1488,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["momentjs",{"_index":5399,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["monaco",{"_index":2034,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mongolia",{"_index":2036,"title":{},"body":{"interfaces/CountryList.html":{}}}],["montenegro",{"_index":2038,"title":{},"body":{"interfaces/CountryList.html":{}}}],["month",{"_index":2344,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["montserrat",{"_index":2040,"title":{},"body":{"interfaces/CountryList.html":{}}}],["more",{"_index":329,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["morocco",{"_index":2042,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mouse",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":4955,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moz",{"_index":2043,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mozambique",{"_index":2044,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mrt",{"_index":2019,"title":{},"body":{"interfaces/CountryList.html":{}}}],["msg",{"_index":1558,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/XiconButtonComponent.html":{}}}],["msp",{"_index":773,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["msp/api/env",{"_index":3529,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["mspdataservice",{"_index":2592,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":3072,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":3071,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":2815,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":2921,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":2927,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":3068,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":2970,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":2972,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":2915,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":2924,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":2922,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":2939,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":2966,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":2963,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":3087,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":3070,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":2873,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":2590,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msr",{"_index":2039,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mtq",{"_index":2017,"title":{},"body":{"interfaces/CountryList.html":{}}}],["multi",{"_index":1055,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["multiple",{"_index":1494,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":2947,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["multiply",{"_index":3898,"title":{},"body":{"components/PhnComponent.html":{}}}],["mus",{"_index":2021,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mutually",{"_index":5170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwi",{"_index":2005,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myanmar",{"_index":2046,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mydatepicker",{"_index":2295,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":5106,"title":{},"body":{"coverage.html":{}}}],["mys",{"_index":2007,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myt",{"_index":2023,"title":{},"body":{"interfaces/CountryList.html":{}}}],["n",{"_index":2702,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nam",{"_index":2047,"title":{},"body":{"interfaces/CountryList.html":{}}}],["name",{"_index":36,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name'},{'name",{"_index":644,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["name.component",{"_index":4202,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.component.html",{"_index":3145,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.scss",{"_index":3144,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.ts",{"_index":3139,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["name.component.ts:113",{"_index":3166,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:117",{"_index":3167,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:121",{"_index":3168,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:36",{"_index":3162,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:37",{"_index":3164,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:38",{"_index":3163,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:39",{"_index":3159,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:40",{"_index":3161,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:41",{"_index":3160,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:42",{"_index":3158,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:45",{"_index":3172,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:46",{"_index":3174,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:47",{"_index":3173,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:49",{"_index":3177,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:51",{"_index":3171,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:53",{"_index":3186,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:54",{"_index":3185,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:56",{"_index":3169,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:57",{"_index":3157,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:63",{"_index":3165,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.directive",{"_index":4198,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.directive.ts",{"_index":4327,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:26",{"_index":4329,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["name/full",{"_index":3138,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["name=\"${refnameval}\"]`)).click",{"_index":564,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":5372,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name@domain.com",{"_index":2537,"title":{},"body":{"components/EmailComponent.html":{}}}],["name^=\"${refnameval",{"_index":576,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).first().sendkeys(text",{"_index":573,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).sendkeys(text",{"_index":561,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name_",{"_index":3614,"title":{},"body":{"components/NameComponent.html":{}}}],["namecomponent",{"_index":364,"title":{"components/NameComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameregex",{"_index":3150,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["names",{"_index":2918,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["names.length",{"_index":3838,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":3837,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":3839,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":3840,"title":{},"body":{"classes/Person.html":{}}}],["namestr",{"_index":3609,"title":{},"body":{"components/NameComponent.html":{}}}],["namibia",{"_index":2048,"title":{},"body":{"interfaces/CountryList.html":{}}}],["naming",{"_index":5302,"title":{},"body":{"todo.html":{}}}],["napprox",{"_index":2958,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":2962,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":2960,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":957,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":2731,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":1412,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":1413,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["natus",{"_index":1338,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nauru",{"_index":2050,"title":{},"body":{"interfaces/CountryList.html":{}}}],["navigate",{"_index":28,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":78,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigates",{"_index":83,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigateto",{"_index":378,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":70,"title":{},"body":{"classes/AbstractForm.html":{}}}],["navigation",{"_index":1491,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["navigationend",{"_index":3407,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nb",{"_index":4049,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nbytes",{"_index":2943,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ncl",{"_index":2055,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nec",{"_index":2515,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["necessary",{"_index":394,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":16,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["negative",{"_index":3129,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nemo",{"_index":1360,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nepal",{"_index":2052,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ner",{"_index":2061,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nesciunt",{"_index":1397,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nested",{"_index":3127,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":1528,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["netherlands",{"_index":2054,"title":{},"body":{"interfaces/CountryList.html":{}}}],["network",{"_index":1538,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["never",{"_index":1568,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["nevis",{"_index":2122,"title":{},"body":{"interfaces/CountryList.html":{}}}],["new",{"_index":756,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["new.target.prototype",{"_index":3606,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["newfoundland",{"_index":4052,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["newurl",{"_index":1513,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["next",{"_index":391,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{}}}],["nextpagenumber",{"_index":2898,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nfk",{"_index":2067,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ng",{"_index":428,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":2496,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["ng_value_accessor",{"_index":716,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["nga",{"_index":2063,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ngaftercontentinit",{"_index":2854,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngafterviewinit",{"_index":3199,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["ngchanges",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["ngcontent",{"_index":3534,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ngcontrol",{"_index":152,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{}}}],["ngcontrol.control.setvalidators(allvalidators",{"_index":223,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.updatevalueandvalidity",{"_index":224,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.validator",{"_index":221,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngform",{"_index":44,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":5385,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":1242,"title":{},"body":{"components/CheckboxComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["ngmodelchange",{"_index":2411,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":323,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngmodules",{"_index":4099,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["ngonchanges",{"_index":2435,"title":{},"body":{"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"changelog.html":{}}}],["ngonchanges(changes",{"_index":830,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ngondestroy",{"_index":4364,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ngoninit",{"_index":125,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["ngselect",{"_index":520,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":4177,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":3120,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":599,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":2338,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":2294,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":4168,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":4231,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":2574,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nic",{"_index":2059,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nicaragua",{"_index":2060,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niger",{"_index":2062,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nigeria",{"_index":2064,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nisi",{"_index":1345,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["niu",{"_index":2065,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niue",{"_index":2066,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nl",{"_index":4051,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nld",{"_index":2053,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nmultiple",{"_index":2957,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nobis",{"_index":1374,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["node",{"_index":5245,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":5407,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":5380,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":2284,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["noidimage",{"_index":2628,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1342,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":1099,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":2326,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["nonvdi",{"_index":5295,"title":{},"body":{"todo.html":{}}}],["nopastdatesallowed",{"_index":2290,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["norfolk",{"_index":2068,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northern",{"_index":2070,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northwest",{"_index":4066,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["norway",{"_index":2072,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nostrum",{"_index":1384,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["note",{"_index":469,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["notes",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":3335,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["notice",{"_index":409,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["notify",{"_index":2742,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":3660,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["nova",{"_index":4055,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["now",{"_index":502,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["npl",{"_index":2051,"title":{},"body":{"interfaces/CountryList.html":{}}}],["npm",{"_index":1001,"title":{},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["nprstv",{"_index":944,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["nru",{"_index":2049,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ns",{"_index":4054,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nt",{"_index":4065,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nu",{"_index":4067,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["null",{"_index":837,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["null/undefined",{"_index":850,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["nulls",{"_index":3830,"title":{},"body":{"classes/Person.html":{}}}],["num",{"_index":3901,"title":{},"body":{"components/PhnComponent.html":{}}}],["number",{"_index":441,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["number'},{'name",{"_index":660,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["number(this.phn.substring(9",{"_index":3912,"title":{},"body":{"components/PhnComponent.html":{}}}],["number.component",{"_index":4192,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.component.html",{"_index":3919,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.scss",{"_index":3918,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts",{"_index":3917,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["number.component.ts:105",{"_index":3937,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:112",{"_index":3935,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:117",{"_index":3940,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:125",{"_index":3938,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:36",{"_index":3949,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:37",{"_index":3927,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:38",{"_index":3930,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:39",{"_index":3929,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:41",{"_index":3926,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:45",{"_index":3931,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:50",{"_index":3951,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:54",{"_index":3932,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:56",{"_index":3945,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:58",{"_index":3944,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:59",{"_index":3950,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:62",{"_index":3942,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:65",{"_index":3925,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:67",{"_index":3943,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:74",{"_index":3933,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.parseint",{"_index":3634,"title":{},"body":{"components/NameComponent.html":{}}}],["number/phone",{"_index":3916,"title":{},"body":{"components/PhoneNumberComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["numbers",{"_index":1311,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["numerator",{"_index":4409,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numpages",{"_index":3059,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["numquam",{"_index":1385,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nunavut",{"_index":4068,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nzl",{"_index":2057,"title":{},"body":{"interfaces/CountryList.html":{}}}],["o",{"_index":2831,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obcaecati",{"_index":1380,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["obj",{"_index":2407,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["obj.features.map(feature",{"_index":3239,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["object",{"_index":279,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{}}}],["object.addressline1",{"_index":990,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline2",{"_index":992,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline3",{"_index":994,"title":{},"body":{"classes/Address.html":{}}}],["object.city",{"_index":995,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":996,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth",{"_index":3844,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":3841,"title":{},"body":{"classes/Person.html":{}}}],["object.keys(this._defaulterrmsg).map",{"_index":210,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["object.keys(this.disabled).map",{"_index":919,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.errormessage).map",{"_index":204,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["object.keys(this.fieldmaxlenghts).map",{"_index":912,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":108,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.keys(this.labels).map",{"_index":907,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.readonlyfields).map",{"_index":917,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.lastname",{"_index":3843,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":3842,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":997,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":998,"title":{},"body":{"classes/Address.html":{}}}],["object.setprototypeof(this",{"_index":3605,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["objectid",{"_index":124,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":5403,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":258,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":302,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":307,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observe",{"_index":1115,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":289,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":2905,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":2893,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":2985,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":2988,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":5267,"title":{},"body":{"license.html":{}}}],["occupied",{"_index":2081,"title":{},"body":{"interfaces/CountryList.html":{}}}],["occurances",{"_index":2562,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["occured",{"_index":1577,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["ocean",{"_index":1788,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ocurrence",{"_index":532,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["odit",{"_index":1388,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["of(error",{"_index":3575,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["of30",{"_index":2872,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":5424,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["older",{"_index":5247,"title":{},"body":{"index.html":{}}}],["oman",{"_index":2074,"title":{},"body":{"interfaces/CountryList.html":{}}}],["omit",{"_index":966,"title":{},"body":{"classes/Address.html":{}}}],["omn",{"_index":2073,"title":{},"body":{"interfaces/CountryList.html":{}}}],["onblur",{"_index":1273,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onblur($event",{"_index":3934,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["onblur(event",{"_index":1294,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["onblurevent",{"_index":2274,"title":{},"body":{"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{}}}],["onblurevent(event",{"_index":3620,"title":{},"body":{"components/NameComponent.html":{},"components/PostalCodeComponent.html":{}}}],["onbtnclick",{"_index":4434,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["once",{"_index":2760,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchange",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["onchanges",{"_index":713,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["onclick",{"_index":1027,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":1039,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":2404,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":2395,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":4356,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["one",{"_index":392,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror",{"_index":3266,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onerror(err",{"_index":3280,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ongoing",{"_index":2782,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":118,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["oninput",{"_index":2421,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":3692,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":3725,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup",{"_index":3267,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onkeyup(event",{"_index":3283,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onload",{"_index":3029,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onloading",{"_index":3268,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onloading(val",{"_index":3285,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onlyfuturedates",{"_index":2322,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["onnoresults",{"_index":3269,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onnoresults(val",{"_index":3287,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onpaste",{"_index":3770,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect",{"_index":3270,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onselect(event",{"_index":3289,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onstatuschange",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["ontario",{"_index":4057,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["onvaluechange",{"_index":1274,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onvaluechange(value",{"_index":1296,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["open",{"_index":2713,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["opened/read",{"_index":3036,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openfiledialog",{"_index":2866,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openmodal",{"_index":3517,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["opens",{"_index":553,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["openshift",{"_index":1140,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":5410,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":2750,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opt",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":4393,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["optio",{"_index":1352,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":515,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["optional",{"_index":38,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"miscellaneous/functions.html":{}}}],["optional()@self",{"_index":1260,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["optionally",{"_index":303,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":255,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optiontext",{"_index":490,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":555,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":839,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["organize",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["orient",{"_index":2749,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":2997,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":496,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":2674,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":851,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["outlying",{"_index":2235,"title":{},"body":{"interfaces/CountryList.html":{}}}],["output",{"_index":711,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":1029,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["outside",{"_index":4378,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":2837,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"miscellaneous/functions.html":{}}}],["override",{"_index":463,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["overridesscss",{"_index":5115,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":5286,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":393,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/functions.html":{}}}],["overwritefile",{"_index":5124,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["overwritefile(host",{"_index":5220,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overwritten",{"_index":403,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["pa",{"_index":3547,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["package",{"_index":1002,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":4947,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":5362,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":72,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":1686,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":351,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":518,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":527,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:122",{"_index":419,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":388,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:130",{"_index":425,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:138",{"_index":404,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:146",{"_index":431,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:153",{"_index":411,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:160",{"_index":487,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:169",{"_index":530,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:178",{"_index":433,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":397,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:186",{"_index":439,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":462,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":437,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":444,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":484,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":436,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":446,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":459,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":443,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":491,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pagechecklist",{"_index":1158,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["pageframework",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":650,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagelistinterface",{"_index":1191,"title":{"interfaces/PageListInterface.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["pagenumber",{"_index":2887,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":1679,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":1685,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":1175,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["pagesection",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["pagesectioncomponent",{"_index":652,"title":{"components/PageSectionComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pageurl",{"_index":4111,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["pains",{"_index":5257,"title":{},"body":{"index.html":{}}}],["pak",{"_index":2075,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pakistan",{"_index":2076,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palau",{"_index":2078,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palestinian",{"_index":2080,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pan",{"_index":2082,"title":{},"body":{"interfaces/CountryList.html":{}}}],["panama",{"_index":2083,"title":{},"body":{"interfaces/CountryList.html":{}}}],["papua",{"_index":2085,"title":{},"body":{"interfaces/CountryList.html":{}}}],["paraguay",{"_index":2087,"title":{},"body":{"interfaces/CountryList.html":{}}}],["param",{"_index":211,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":81,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":3233,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":739,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["parents",{"_index":141,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["pariatur",{"_index":1376,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["parseint(scaledwidthstring",{"_index":4304,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parseint(this.maxlength",{"_index":3363,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["parsing",{"_index":1587,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["part",{"_index":2127,"title":{},"body":{"interfaces/CountryList.html":{}}}],["parts",{"_index":3828,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":482,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["passed",{"_index":59,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["passes",{"_index":3729,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["passing",{"_index":3746,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["password",{"_index":1450,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password'},{'name",{"_index":655,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["password.component.html",{"_index":3684,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":3683,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":3707,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":3682,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":654,"title":{"components/PasswordComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":3699,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":4469,"title":{},"body":{"changelog.html":{}}}],["pasting",{"_index":3769,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["patch",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":4103,"title":{},"body":{"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["paths",{"_index":4876,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["pattern",{"_index":3151,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["payload",{"_index":1108,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":1117,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcn",{"_index":2091,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pdf",{"_index":1449,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pdf.good",{"_index":1451,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":3060,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":3046,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":2885,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":2579,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":3049,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":3048,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":3057,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.workersrc=pdfjsworker",{"_index":2618,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":2613,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":2578,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsworker",{"_index":2616,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":1440,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":3044,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pe",{"_index":4058,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["people\\'s",{"_index":1974,"title":{},"body":{"interfaces/CountryList.html":{}}}],["per",{"_index":315,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CountryList.html":{}}}],["performance",{"_index":860,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["period",{"_index":3182,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["periods",{"_index":1315,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["permissions",{"_index":5283,"title":{},"body":{"license.html":{}}}],["persisted",{"_index":803,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["person",{"_index":2599,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":3823,"title":{},"body":{"classes/Person.html":{}}}],["person.model",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["person.model.ts",{"_index":4239,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":1675,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["personchange",{"_index":3156,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["peru",{"_index":2088,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pg",{"_index":319,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["pharmacare's",{"_index":968,"title":{},"body":{"classes/Address.html":{}}}],["philippines",{"_index":2090,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phl",{"_index":2089,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phn",{"_index":3846,"title":{},"body":{"components/PhnComponent.html":{},"changelog.html":{}}}],["phn'},{'name",{"_index":657,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["phn.component.html",{"_index":3848,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.component.scss",{"_index":3847,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn_",{"_index":3854,"title":{},"body":{"components/PhnComponent.html":{}}}],["phncomponent",{"_index":656,"title":{"components/PhnComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":659,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["phone/radio",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["phonelength",{"_index":3972,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumber",{"_index":3920,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["phonenumbercomponent",{"_index":658,"title":{"components/PhoneNumberComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumberregex",{"_index":3921,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["pib",{"_index":2953,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pierre",{"_index":2129,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pipe",{"_index":2862,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(filter((evt",{"_index":2860,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":2908,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pitcairn",{"_index":2092,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pixel",{"_index":2752,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pkg",{"_index":5202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["place",{"_index":326,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["placeholder",{"_index":1276,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["placeholders",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":5305,"title":{},"body":{"todo.html":{}}}],["please",{"_index":2271,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"index.html":{}}}],["plurinational",{"_index":1769,"title":{},"body":{"interfaces/CountryList.html":{}}}],["plus",{"_index":758,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["plw",{"_index":2077,"title":{},"body":{"interfaces/CountryList.html":{}}}],["png",{"_index":2084,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["po",{"_index":776,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["point",{"_index":464,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["points",{"_index":4864,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["pol",{"_index":2093,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poland",{"_index":2094,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pollyfills.ts",{"_index":5387,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["polynesia",{"_index":1888,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poor",{"_index":2301,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["populated",{"_index":3030,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":3056,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["portugal",{"_index":2096,"title":{},"body":{"interfaces/CountryList.html":{}}}],["possible",{"_index":1263,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"todo.html":{}}}],["post",{"_index":235,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":272,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":662,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["postal.directive",{"_index":4205,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postal.directive.ts",{"_index":4314,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["postal.directive.ts:27",{"_index":4316,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["postalcode",{"_index":710,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["postalcode.directive",{"_index":4220,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postalcode.directive.ts",{"_index":4330,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["postalcode.directive.ts:48",{"_index":4334,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:49",{"_index":4333,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:51",{"_index":4335,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode_",{"_index":3987,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["postalcodebcregex",{"_index":929,"title":{},"body":{"classes/Address.html":{}}}],["postalcodecomponent",{"_index":661,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["potential",{"_index":2906,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":5355,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":2871,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["pr#13",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":3382,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pre",{"_index":4123,"title":{},"body":{"guards/RouteGuardService.html":{},"miscellaneous/functions.html":{}}}],["preceding",{"_index":2824,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["prefixarrayofchar",{"_index":3962,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["premium",{"_index":3506,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prerequisites",{"_index":1182,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["present",{"_index":3680,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preservesymlinks",{"_index":4794,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["prevent",{"_index":3768,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":5388,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previous",{"_index":1221,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["previously",{"_index":2929,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pri",{"_index":2097,"title":{},"body":{"interfaces/CountryList.html":{}}}],["primarily",{"_index":4373,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":1032,"title":{},"body":{"components/ButtonComponent.html":{}}}],["prime",{"_index":454,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["prince",{"_index":4059,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["principe",{"_index":2141,"title":{},"body":{"interfaces/CountryList.html":{}}}],["print",{"_index":963,"title":{},"body":{"classes/Address.html":{}}}],["printed",{"_index":960,"title":{},"body":{"classes/Address.html":{}}}],["prior",{"_index":5356,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":5375,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["privacy",{"_index":3500,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["private",{"_index":861,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["prk",{"_index":1972,"title":{},"body":{"interfaces/CountryList.html":{}}}],["probably",{"_index":3037,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["problem",{"_index":3671,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["proceed",{"_index":1186,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["processing",{"_index":2698,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processname",{"_index":3520,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["processresponse",{"_index":3367,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":3238,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":1499,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":1510,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["progress",{"_index":680,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["progressbarmodule",{"_index":4162,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":4230,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":3023,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":3022,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":1665,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":922,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["project>architect>build>options",{"_index":5433,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":5401,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":5166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../confirm",{"_index":5164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../country.component.ts",{"_index":5183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../datepicker.component.ts",{"_index":5169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../duplicate",{"_index":5180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../error",{"_index":5186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../images.model.ts",{"_index":5167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../index.ts",{"_index":5178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../json.ts",{"_index":5185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../logger.service.ts",{"_index":5168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../package",{"_index":5179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../province.component.ts",{"_index":5184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../test",{"_index":5182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../validate",{"_index":5181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/common/captcha/src/captcha",{"_index":1087,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":5022,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":1131,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":1133,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":349,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/helpers/library",{"_index":3597,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["projects/common/helpers/test",{"_index":5027,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts",{"_index":580,"title":{},"body":{"components/AccordionCommonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:21",{"_index":594,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:22",{"_index":593,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:24",{"_index":598,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:25",{"_index":595,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:26",{"_index":592,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":705,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["projects/common/lib/components/button",{"_index":1046,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts",{"_index":1006,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts:36",{"_index":1034,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:37",{"_index":1035,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:38",{"_index":1036,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:39",{"_index":1037,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:40",{"_index":1031,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:44",{"_index":1038,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:47",{"_index":1040,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts",{"_index":1232,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:31",{"_index":1262,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:36",{"_index":1240,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:37",{"_index":1247,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:38",{"_index":1244,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:39",{"_index":1246,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:40",{"_index":1245,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:41",{"_index":1248,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:42",{"_index":1249,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:43",{"_index":1259,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:46",{"_index":1257,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:47",{"_index":1239,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:49",{"_index":1261,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:56",{"_index":1251,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:64",{"_index":1255,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:71",{"_index":1250,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:75",{"_index":1252,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:79",{"_index":1253,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:83",{"_index":1256,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts",{"_index":1270,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/city/city.component.ts:14",{"_index":1280,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:15",{"_index":1285,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:16",{"_index":1283,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:17",{"_index":1286,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:20",{"_index":1287,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:25",{"_index":1324,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:29",{"_index":1292,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:30",{"_index":1291,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:32",{"_index":1318,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:34",{"_index":1317,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:38",{"_index":1279,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:40",{"_index":1319,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:47",{"_index":1293,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:51",{"_index":1297,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:57",{"_index":1295,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:62",{"_index":1298,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/validate",{"_index":4320,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/confirm",{"_index":1639,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/consent",{"_index":3449,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":1688,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts",{"_index":1710,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/date/date",{"_index":2408,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":5051,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":2278,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":2462,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:106",{"_index":2461,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:108",{"_index":2463,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":2460,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:113",{"_index":2459,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:114",{"_index":2436,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:120",{"_index":2450,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:128",{"_index":2451,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:136",{"_index":2452,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:141",{"_index":2454,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:192",{"_index":2453,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":2455,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:211",{"_index":2449,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:219",{"_index":2456,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:223",{"_index":2457,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:227",{"_index":2458,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:61",{"_index":2447,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:62",{"_index":2438,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:63",{"_index":2448,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:64",{"_index":2440,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:65",{"_index":2444,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":2446,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:71",{"_index":2442,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":2441,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:77",{"_index":2445,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:92",{"_index":2437,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:97",{"_index":2439,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:99",{"_index":2443,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":2471,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:11",{"_index":2492,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:13",{"_index":2483,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:14",{"_index":2484,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:15",{"_index":2485,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:16",{"_index":2481,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:17",{"_index":2479,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:18",{"_index":2480,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:19",{"_index":2486,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":2482,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":2490,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":2478,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":2491,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:32",{"_index":2489,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:36",{"_index":2487,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:40",{"_index":2488,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/duplicate",{"_index":2493,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/email/email.component.ts",{"_index":2512,"title":{},"body":{"components/EmailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts:23",{"_index":2521,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:24",{"_index":2525,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:25",{"_index":2523,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:28",{"_index":2526,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:33",{"_index":2543,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:37",{"_index":2528,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:38",{"_index":2527,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:40",{"_index":2542,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:42",{"_index":2538,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:47",{"_index":2520,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:49",{"_index":2539,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:56",{"_index":2529,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:62",{"_index":2531,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:68",{"_index":2530,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:73",{"_index":2533,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:79",{"_index":2532,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/error",{"_index":2551,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/file",{"_index":2569,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":3098,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/full",{"_index":3137,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/geocoder",{"_index":3253,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts",{"_index":3374,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts:20",{"_index":3399,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:21",{"_index":3400,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:22",{"_index":3398,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:24",{"_index":3406,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:25",{"_index":3396,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:30",{"_index":3402,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:39",{"_index":3404,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:43",{"_index":3405,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:51",{"_index":3401,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts",{"_index":3608,"title":{},"body":{"components/NameComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/name/name.component.ts:21",{"_index":3612,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:22",{"_index":3613,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:23",{"_index":3616,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:24",{"_index":3615,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:27",{"_index":3617,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:32",{"_index":3630,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:36",{"_index":3619,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:37",{"_index":3618,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:39",{"_index":3629,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:41",{"_index":3627,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:42",{"_index":3611,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:44",{"_index":3628,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:51",{"_index":3622,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:56",{"_index":3621,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:61",{"_index":3626,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:68",{"_index":3623,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:73",{"_index":3624,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:77",{"_index":3625,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:81",{"_index":3632,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/validate",{"_index":4326,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":3637,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":3673,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:118",{"_index":3723,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":3728,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:135",{"_index":3726,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:142",{"_index":3715,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:157",{"_index":3717,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":3703,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":3702,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":3701,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":3709,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":3710,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":3706,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:64",{"_index":3705,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:65",{"_index":3700,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:66",{"_index":3711,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":3708,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":3713,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":3712,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":3732,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:76",{"_index":3735,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:77",{"_index":3737,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":3731,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:82",{"_index":3736,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:83",{"_index":3733,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:84",{"_index":3734,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:85",{"_index":3698,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:92",{"_index":3724,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts",{"_index":3845,"title":{},"body":{"components/PhnComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:14",{"_index":3853,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:15",{"_index":3858,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:16",{"_index":3855,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:19",{"_index":3852,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:21",{"_index":3870,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:28",{"_index":3859,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:33",{"_index":3873,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:37",{"_index":3861,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:38",{"_index":3860,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:40",{"_index":3872,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:41",{"_index":3851,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:43",{"_index":3871,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:53",{"_index":3862,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:59",{"_index":3864,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:68",{"_index":3863,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:73",{"_index":3867,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:79",{"_index":3866,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:88",{"_index":3865,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phone",{"_index":3915,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/postal",{"_index":3976,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/province/province.component.ts",{"_index":4023,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/components/province/province.component.ts:43",{"_index":4027,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:44",{"_index":4032,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:45",{"_index":4029,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:46",{"_index":4033,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:47",{"_index":4031,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:48",{"_index":4030,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:49",{"_index":4034,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:52",{"_index":4035,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:57",{"_index":4045,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:61",{"_index":4037,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:62",{"_index":4036,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:64",{"_index":4044,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:66",{"_index":4042,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:70",{"_index":4026,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:73",{"_index":4043,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:80",{"_index":4038,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:84",{"_index":4040,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:92",{"_index":4039,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:97",{"_index":4041,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts",{"_index":3427,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:100",{"_index":4082,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:104",{"_index":4084,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:53",{"_index":4086,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:54",{"_index":4085,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:58",{"_index":4078,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:63",{"_index":4077,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:65",{"_index":4079,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:68",{"_index":4088,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:72",{"_index":4075,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:73",{"_index":4076,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:75",{"_index":4074,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:77",{"_index":4087,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:84",{"_index":4080,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:88",{"_index":4083,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:96",{"_index":4081,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/sample",{"_index":4129,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts",{"_index":4242,"title":{},"body":{"components/SinComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:24",{"_index":4262,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:30",{"_index":4265,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:31",{"_index":4264,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:33",{"_index":4249,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:34",{"_index":4252,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:35",{"_index":4253,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:36",{"_index":4251,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:39",{"_index":4254,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:45",{"_index":4266,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:49",{"_index":4255,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:50",{"_index":4247,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:52",{"_index":4263,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:62",{"_index":4256,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:68",{"_index":4258,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:77",{"_index":4257,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:82",{"_index":4261,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:88",{"_index":4259,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:97",{"_index":4260,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts",{"_index":5071,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/street/validate",{"_index":4352,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":4275,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":4286,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":4287,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":4288,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:16",{"_index":4294,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:18",{"_index":4285,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":4296,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:24",{"_index":4292,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:42",{"_index":4290,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:48",{"_index":4293,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:53",{"_index":4291,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":4307,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":4311,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":4312,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":4310,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":4313,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/validate",{"_index":4347,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/wizard",{"_index":4355,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/xicon",{"_index":4432,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts",{"_index":921,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts:11",{"_index":934,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:13",{"_index":937,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:14",{"_index":942,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:15",{"_index":939,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:16",{"_index":950,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:17",{"_index":938,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:18",{"_index":940,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:19",{"_index":941,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:23",{"_index":971,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:27",{"_index":973,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:36",{"_index":956,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:44",{"_index":953,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:50",{"_index":975,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:61",{"_index":952,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:7",{"_index":949,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:9",{"_index":933,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/base.ts",{"_index":999,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/lib/models/base.ts:11",{"_index":1005,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/lib/models/container.ts",{"_index":1662,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/lib/models/container.ts:12",{"_index":1669,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:18",{"_index":1672,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:22",{"_index":1678,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/error",{"_index":2558,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/lib/models/images.model.ts",{"_index":1406,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/models/images.model.ts:16",{"_index":1474,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:17",{"_index":1476,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:18",{"_index":1473,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:20",{"_index":1475,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:29",{"_index":1417,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:35",{"_index":1422,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:36",{"_index":1419,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:38",{"_index":1427,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:39",{"_index":1429,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:40",{"_index":1428,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:41",{"_index":1425,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:42",{"_index":1426,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:43",{"_index":1424,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:46",{"_index":1423,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:48",{"_index":1421,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:49",{"_index":1418,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:56",{"_index":1478,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/lib/models/images.model.ts:60",{"_index":1480,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:61",{"_index":1479,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:68",{"_index":1481,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/mask.constants.ts",{"_index":5085,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/models/person.model.ts",{"_index":3785,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/lib/models/person.model.ts:13",{"_index":3798,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:14",{"_index":3800,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:15",{"_index":3799,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:18",{"_index":3796,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:19",{"_index":3794,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:22",{"_index":3795,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:25",{"_index":3807,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:30",{"_index":3810,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:35",{"_index":3813,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:53",{"_index":3817,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:67",{"_index":3822,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:86",{"_index":3802,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:91",{"_index":3801,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/simple",{"_index":4236,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/lib/services/abstract",{"_index":226,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["projects/common/lib/services/check",{"_index":1151,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts",{"_index":3211,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts:23",{"_index":3372,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:24",{"_index":3373,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:25",{"_index":3368,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:32",{"_index":3370,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:53",{"_index":3371,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:74",{"_index":3369,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/logger.service.ts",{"_index":1483,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/services/logger.service.ts:102",{"_index":1610,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:111",{"_index":1617,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:128",{"_index":1611,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:147",{"_index":1612,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:165",{"_index":1638,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:173",{"_index":1620,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:177",{"_index":1618,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:185",{"_index":1619,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:21",{"_index":1485,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/lib/services/logger.service.ts:41",{"_index":1627,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:47",{"_index":1608,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:53",{"_index":1633,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:57",{"_index":1631,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:61",{"_index":1637,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:65",{"_index":1635,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:69",{"_index":1621,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:73",{"_index":1614,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:77",{"_index":1616,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/logger.service.ts:97",{"_index":1609,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["projects/common/lib/services/route",{"_index":4090,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":4151,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":5414,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":5345,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":5415,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":5097,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":5101,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/moh",{"_index":5104,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/schematics/src/version",{"_index":5131,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/common/src/public_api.ts",{"_index":5436,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":5142,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":5135,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":457,"title":{},"body":{"classes/AbstractTestPage.html":{},"guards/RouteGuardService.html":{}}}],["promise.resolve().then",{"_index":218,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PhoneNumberComponent.html":{}}}],["proper",{"_index":1447,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":2535,"title":{},"body":{"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":20,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":1496,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["property",{"_index":1523,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"changelog.html":{}}}],["props",{"_index":3240,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress",{"_index":3250,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.indexof",{"_index":3247,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":3248,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.localityname",{"_index":3242,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.provincecode",{"_index":3249,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":26,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["protection",{"_index":3499,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prototype",{"_index":3603,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["protractor",{"_index":535,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["prov",{"_index":869,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["prov.country",{"_index":868,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provide",{"_index":324,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":435,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":1205,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["provident",{"_index":1343,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["providers",{"_index":336,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":352,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":498,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"license.html":{}}}],["province'},{'name",{"_index":665,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["province.component.html",{"_index":4025,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province.component.scss",{"_index":4024,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province/country",{"_index":967,"title":{},"body":{"classes/Address.html":{}}}],["province/province.component",{"_index":730,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["province_",{"_index":4028,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province_list",{"_index":729,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["province_list.find",{"_index":4072,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecode",{"_index":4046,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"miscellaneous/functions.html":{}}}],["provincecomponent",{"_index":664,"title":{"components/ProvinceComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["provincelist",{"_index":727,"title":{"interfaces/ProvinceList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["provincial",{"_index":3503,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["provision",{"_index":1703,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["provlist",{"_index":769,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj",{"_index":872,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.description",{"_index":880,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.provincecode",{"_index":878,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["prt",{"_index":2095,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pry",{"_index":2086,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pse",{"_index":2079,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pswdfeedback",{"_index":3772,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":3773,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":3689,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":123,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["public_api",{"_index":4015,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["publish",{"_index":5422,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":4577,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["puerto",{"_index":2098,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pull",{"_index":5253,"title":{},"body":{"index.html":{}}}],["pure",{"_index":5331,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":3811,"title":{},"body":{"classes/Person.html":{}}}],["pushes",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3384,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pwdcriteria",{"_index":3695,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pyf",{"_index":1887,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qat",{"_index":2100,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qatar",{"_index":2101,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qc",{"_index":4061,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["quality",{"_index":2757,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["quam",{"_index":1369,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quasi",{"_index":1337,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quebec",{"_index":4062,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["query",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":4384,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":80,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":3122,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{}}}],["questions",{"_index":3508,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["quia",{"_index":1344,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quidem",{"_index":1386,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quis",{"_index":1366,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quisquam",{"_index":1357,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quite",{"_index":1200,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["radio",{"_index":3428,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["radio's",{"_index":3439,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio'},{'name",{"_index":667,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["radio.component.html",{"_index":3441,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.scss",{"_index":3442,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.ts",{"_index":5298,"title":{},"body":{"todo.html":{}}}],["radio/checkbox",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["radiocomponent",{"_index":666,"title":{"components/RadioComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["radiolabels",{"_index":3440,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radios",{"_index":3429,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["ran",{"_index":5404,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":3095,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rapid",{"_index":3563,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rapidresponsecode",{"_index":3566,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ratio",{"_index":2753,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratione",{"_index":1381,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["rawimagefile",{"_index":1443,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["rc.0",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["rc.15",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":738,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":3018,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reactform",{"_index":5229,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"classes/AbstractForm.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["reactiveforms",{"_index":3314,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["read",{"_index":2716,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["readable",{"_index":422,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":2912,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":2968,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":2989,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":3042,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":3028,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":400,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["readme",{"_index":4847,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readonlyfields",{"_index":732,"title":{"interfaces/ReadOnlyFields.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["readpdf(pdffile",{"_index":3043,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reason",{"_index":2685,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["receiving",{"_index":1540,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["recieve",{"_index":3257,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["recommend",{"_index":3681,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":456,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["reduced",{"_index":2306,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ref",{"_index":2933,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":2391,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["refactored",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":4930,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":429,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["refnameval",{"_index":430,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["regex",{"_index":987,"title":{},"body":{"classes/Address.html":{}}}],["regex.test(this.postal",{"_index":989,"title":{},"body":{"classes/Address.html":{}}}],["regexp",{"_index":2540,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["regexp('^[vv]\\\\d[abceghj",{"_index":4318,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["regexp(address.postalcodebcregex",{"_index":988,"title":{},"body":{"classes/Address.html":{}}}],["regexplabel",{"_index":2564,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["region.directive",{"_index":4219,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["region.directive.ts",{"_index":4348,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["region.directive.ts:26",{"_index":4350,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["region/validate",{"_index":4218,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["register",{"_index":155,"title":{},"body":{"classes/AbstractFormControl.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"additional-documentation/getting-started.html":{}}}],["registered",{"_index":735,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["registeronchange",{"_index":126,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registeronchange(fn",{"_index":146,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registerontouched",{"_index":127,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registerontouched(fn",{"_index":149,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registervalidation",{"_index":128,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registervalidation(ngcontrol",{"_index":151,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registration",{"_index":4101,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["registration.module.ts",{"_index":335,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["registrationservice",{"_index":338,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["related",{"_index":4797,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["relates",{"_index":5406,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["release",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":5339,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remainder",{"_index":3904,"title":{},"body":{"components/PhnComponent.html":{}}}],["remove",{"_index":845,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["removed",{"_index":2821,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["removeline(line",{"_index":844,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["removing",{"_index":3010,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rename",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":3513,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rendering",{"_index":2684,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reorder",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["reorganize",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["repellat",{"_index":1356,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["replace",{"_index":208,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"todo.html":{}}}],["replace(/\\s/g",{"_index":3891,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["replace(/_/g",{"_index":3889,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["replacelabeltag",{"_index":169,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/ErrorMessage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["replacelabeltag(str",{"_index":5243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo",{"_index":5198,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo=https://github.com/bcgov/prime",{"_index":5199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reports",{"_index":2279,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{}}}],["reprehenderit",{"_index":1372,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["republic",{"_index":1812,"title":{},"body":{"interfaces/CountryList.html":{}}}],["repudiandae",{"_index":1378,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["repurpose",{"_index":1599,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["request",{"_index":252,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":1503,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["requests",{"_index":264,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":5144,"title":{},"body":{"coverage.html":{}}}],["require('blueimp",{"_index":2605,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":2612,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":2608,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":58,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":3152,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requirements",{"_index":3677,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["requires",{"_index":733,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["requisite",{"_index":4124,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["rerum",{"_index":1340,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["reset",{"_index":1130,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":3077,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":2910,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":2745,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":2773,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":5384,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["resolved",{"_index":3339,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["respective",{"_index":256,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":1590,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["response",{"_index":1106,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["responsetype",{"_index":1585,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["rest",{"_index":3092,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restore",{"_index":3607,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["restrictdate",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":110,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":112,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":2751,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrieve",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["retry",{"_index":2998,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":3000,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":2588,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["returned",{"_index":1109,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["returns",{"_index":65,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["reu",{"_index":2102,"title":{},"body":{"interfaces/CountryList.html":{}}}],["reverts",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["reviewmode",{"_index":4282,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["revise",{"_index":1199,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["rica",{"_index":1836,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rico",{"_index":2099,"title":{},"body":{"interfaces/CountryList.html":{}}}],["right",{"_index":501,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":3719,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role=\"progressbar",{"_index":3775,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":549,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["romania",{"_index":2105,"title":{},"body":{"interfaces/CountryList.html":{}}}],["root",{"_index":1206,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["rotate",{"_index":2736,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rou",{"_index":2104,"title":{},"body":{"interfaces/CountryList.html":{}}}],["route",{"_index":84,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["routeguard",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["routeguardservice",{"_index":333,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{}}}],["routeisactive",{"_index":3391,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeisactive(url",{"_index":3403,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routepath",{"_index":1676,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":1680,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":31,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":4360,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":4165,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routerstatesnapshot",{"_index":4114,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routes",{"_index":4096,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing.modle.ts",{"_index":4102,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["routing=true",{"_index":5364,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":3432,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["rule",{"_index":5200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rules",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":4403,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":4965,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":75,"title":{},"body":{"classes/AbstractForm.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["rural",{"_index":775,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["rus",{"_index":2106,"title":{},"body":{"interfaces/CountryList.html":{}}}],["russian",{"_index":2107,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwa",{"_index":2109,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwanda",{"_index":2110,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rxjs",{"_index":283,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":286,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["réunion",{"_index":2103,"title":{},"body":{"interfaces/CountryList.html":{}}}],["s",{"_index":2942,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["s+)@(\\s+)\\.(\\s",{"_index":2541,"title":{},"body":{"components/EmailComponent.html":{}}}],["saba",{"_index":1774,"title":{},"body":{"interfaces/CountryList.html":{}}}],["safe",{"_index":4424,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["sahara",{"_index":2256,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saint",{"_index":2112,"title":{},"body":{"interfaces/CountryList.html":{}}}],["salvador",{"_index":1863,"title":{},"body":{"interfaces/CountryList.html":{}}}],["same",{"_index":519,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["samoa",{"_index":1725,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sample",{"_index":669,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["sampleimageinterface",{"_index":4128,"title":{"interfaces/SampleImageInterface.html":{}},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["samplemodal",{"_index":4133,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["samplemodalcomponent",{"_index":668,"title":{"components/SampleModalComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["san",{"_index":2136,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sandwich",{"_index":2171,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sao",{"_index":2139,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sapiente",{"_index":1334,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["saskatchewan",{"_index":4064,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["satisfy",{"_index":2385,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["satisifed",{"_index":3536,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sau",{"_index":2142,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saudi",{"_index":2143,"title":{},"body":{"interfaces/CountryList.html":{}}}],["save",{"_index":3348,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"index.html":{}}}],["saved",{"_index":2780,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["saving",{"_index":3012,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scale",{"_index":1471,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":2965,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":2931,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":1477,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":1464,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":4278,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":4298,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":2874,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":2996,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":2875,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":2993,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":2834,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":2586,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":3003,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":4402,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schematic",{"_index":4986,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":5367,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":4984,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":5366,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":5344,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["school",{"_index":3479,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["scotia",{"_index":4056,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["screen",{"_index":399,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["screenreader",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":5010,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["scriptname",{"_index":5188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scripts",{"_index":4843,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":4421,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrolldown",{"_index":379,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolls",{"_index":86,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":4365,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrollup",{"_index":380,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scss",{"_index":5394,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["sdn",{"_index":2179,"title":{},"body":{"interfaces/CountryList.html":{}}}],["search",{"_index":881,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{}}}],["searching",{"_index":3309,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["searchtext",{"_index":3263,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["second",{"_index":763,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["secondary",{"_index":1033,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":3380,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":653,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["section.component",{"_index":4175,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":3658,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":3657,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":3656,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:17",{"_index":3659,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:21",{"_index":3661,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":3655,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":3474,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["security",{"_index":4855,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["see",{"_index":332,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["select",{"_index":493,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["select/ng",{"_index":4178,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":552,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["select[ng",{"_index":575,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selected",{"_index":3366,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectedaddress",{"_index":3264,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectfilelabelref",{"_index":2639,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":524,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{}}}],["selection",{"_index":3360,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selections",{"_index":2314,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":381,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":489,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":583,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["selects",{"_index":492,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["self",{"_index":156,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["self.dataservice.getmspuuid",{"_index":2881,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":2936,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":2986,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":2937,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["semantic",{"_index":5304,"title":{},"body":{"todo.html":{}}}],["sen",{"_index":2145,"title":{},"body":{"interfaces/CountryList.html":{}}}],["send",{"_index":245,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["sending",{"_index":744,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sends",{"_index":521,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["sendspaenvserver(rapidresponsecode",{"_index":3564,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["senegal",{"_index":2146,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sequence",{"_index":1189,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["sequentially",{"_index":4094,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["sequi",{"_index":1396,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["serbia",{"_index":2148,"title":{},"body":{"interfaces/CountryList.html":{}}}],["server",{"_index":266,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":1110,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["service",{"_index":230,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":228,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:12",{"_index":241,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:17",{"_index":243,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:23",{"_index":250,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:31",{"_index":274,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:39",{"_index":276,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:53",{"_index":278,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:60",{"_index":261,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:63",{"_index":247,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":2591,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":2593,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["servicename",{"_index":3394,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services",{"_index":4861,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["services/abstract",{"_index":3464,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["services/geocoder.service",{"_index":719,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["services/logger.service",{"_index":3463,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sessionid",{"_index":1502,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["set",{"_index":751,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["set('addressstring",{"_index":3231,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('autocomplete",{"_index":3228,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('brief",{"_index":3224,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":3223,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('matchprecisionnot",{"_index":3229,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":3222,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":3221,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setaddress(data",{"_index":900,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setapplicationid(id",{"_index":1632,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setbuttongrpval",{"_index":1060,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbuttongrpval(val",{"_index":1075,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbypassguards(bypass",{"_index":1195,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setcheckboxval",{"_index":1237,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcheckboxval(event",{"_index":1254,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcity(value",{"_index":823,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setcountry(value",{"_index":811,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultcountryasoption",{"_index":885,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultprovinceasoption(country",{"_index":871,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdisabledstate",{"_index":129,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":160,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["seterrormsg",{"_index":130,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setfirstname(value",{"_index":3204,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setlabels",{"_index":905,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setlastname(value",{"_index":3208,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmaxlengths",{"_index":910,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setmiddlename(value",{"_index":3207,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setname(fullname",{"_index":3816,"title":{},"body":{"classes/Person.html":{}}}],["setpagecomplete",{"_index":1161,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpageincomplete",{"_index":1162,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["setpassword",{"_index":3693,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":3727,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setphonenumber",{"_index":3922,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setphonenumber(value",{"_index":3936,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setpostalcode(value",{"_index":828,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setprogramname(name",{"_index":1636,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setprogresssteps",{"_index":1667,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":1677,"title":{},"body":{"classes/Container.html":{}}}],["setprovince(value",{"_index":820,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setreadonlyfields",{"_index":915,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sets",{"_index":825,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["setseverity",{"_index":1606,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["setseverity(severity",{"_index":1596,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setstarturl(url",{"_index":1193,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setstatus",{"_index":4073,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstatus(val",{"_index":3446,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["setstreet(val",{"_index":972,"title":{},"body":{"classes/Address.html":{}}}],["setstreetaddress(value",{"_index":821,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["settags",{"_index":1607,"title":{},"body":{"injectables/CommonLogger.html":{}}}],["settags(message",{"_index":1600,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setter/getter",{"_index":3952,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["settimestamp",{"_index":1593,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setting",{"_index":2319,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["settings",{"_index":5224,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setup",{"_index":322,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["setuprequest",{"_index":236,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":275,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":1560,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["seturl(newurl",{"_index":1511,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["setvalue(val",{"_index":1325,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["severity",{"_index":1552,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["severitylevels",{"_index":1489,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["seychelles",{"_index":2150,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgp",{"_index":2154,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgs",{"_index":2170,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sha1",{"_index":2607,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":2973,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":2611,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":2680,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shared",{"_index":3476,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["sharedcoremodule",{"_index":4147,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":473,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["shn",{"_index":2114,"title":{},"body":{"interfaces/CountryList.html":{}}}],["shouldn't",{"_index":3574,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["show",{"_index":55,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":1062,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"todo.html":{}}}],["showfullsizeview",{"_index":3555,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["showline${line",{"_index":842,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline2",{"_index":770,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline3",{"_index":771,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["shown",{"_index":3469,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["showpasswordstrength",{"_index":3696,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["shows",{"_index":3433,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["side",{"_index":1576,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["sierra",{"_index":2152,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sign",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":3117,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/GeocoderInputComponent.html":{}}}],["simple",{"_index":1154,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{}}}],["simplechanges",{"_index":2291,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["simpledate",{"_index":4235,"title":{"interfaces/SimpleDate.html":{}},"body":{"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":5393,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simplicity",{"_index":1014,"title":{},"body":{"components/ButtonComponent.html":{}}}],["simply",{"_index":3009,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageSectionComponent.html":{}}}],["simulates",{"_index":3334,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["sin",{"_index":4243,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["sin'},{'name",{"_index":671,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["sin.component.html",{"_index":4245,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.component.scss",{"_index":4244,"title":{},"body":{"components/SinComponent.html":{}}}],["sin_",{"_index":4250,"title":{},"body":{"components/SinComponent.html":{}}}],["sincomponent",{"_index":670,"title":{"components/SinComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singapore",{"_index":2155,"title":{},"body":{"interfaces/CountryList.html":{}}}],["single",{"_index":3378,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageFrameworkComponent.html":{},"components/RadioComponent.html":{}}}],["sint",{"_index":1772,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sit",{"_index":1329,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["site",{"_index":1705,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["sitereg",{"_index":3667,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["size",{"_index":1414,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["sizetxt",{"_index":1415,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":1416,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sjm",{"_index":2182,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sk",{"_index":4063,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["skiblibcheck",{"_index":5227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":398,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["skip_content_hash",{"_index":3388,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiplibcheck",{"_index":5381,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["skiplinkpath",{"_index":3389,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiptocontentbutton",{"_index":366,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slb",{"_index":2163,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sle",{"_index":2151,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slightly",{"_index":3416,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slot",{"_index":1699,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":1693,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slovakia",{"_index":2160,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slovenia",{"_index":2162,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slv",{"_index":1861,"title":{},"body":{"interfaces/CountryList.html":{}}}],["small",{"_index":2772,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["smooth",{"_index":107,"title":{},"body":{"classes/AbstractForm.html":{}}}],["smr",{"_index":2135,"title":{},"body":{"interfaces/CountryList.html":{}}}],["social",{"_index":4248,"title":{},"body":{"components/SinComponent.html":{}}}],["software",{"_index":5273,"title":{},"body":{"license.html":{}}}],["solomon",{"_index":2164,"title":{},"body":{"interfaces/CountryList.html":{}}}],["solve",{"_index":2868,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["som",{"_index":2165,"title":{},"body":{"interfaces/CountryList.html":{}}}],["somalia",{"_index":2166,"title":{},"body":{"interfaces/CountryList.html":{}}}],["something",{"_index":964,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":5103,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortobjectbykeys(obj",{"_index":5206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sorts",{"_index":5207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["south",{"_index":2168,"title":{},"body":{"interfaces/CountryList.html":{}}}],["southern",{"_index":1890,"title":{},"body":{"interfaces/CountryList.html":{}}}],["soutput",{"_index":2946,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["spa",{"_index":3452,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag",{"_index":3456,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_message",{"_index":3457,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_acl_maintenance_flag\":\"\",\"spa_env_msp_acl_maintenance_message",{"_index":3545,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag",{"_index":3458,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag\":\"\",\"spa_env_msp_maintenance_message",{"_index":3546,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_message",{"_index":3459,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_name",{"_index":3565,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_now",{"_index":3460,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_end",{"_index":3461,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start",{"_index":3462,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end\":\"\",\"spa_env_now",{"_index":3548,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["space",{"_index":2328,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":5418,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["spaces",{"_index":3892,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["spaenvres",{"_index":3539,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spain",{"_index":2175,"title":{},"body":{"interfaces/CountryList.html":{}}}],["specfic",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":1312,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["specific",{"_index":180,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":5226,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["specified",{"_index":253,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"miscellaneous/functions.html":{}}}],["spinner",{"_index":57,"title":{},"body":{"classes/AbstractForm.html":{}}}],["split",{"_index":2879,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splits",{"_index":3225,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["splunk",{"_index":1452,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["spm",{"_index":2128,"title":{},"body":{"interfaces/CountryList.html":{}}}],["srb",{"_index":2147,"title":{},"body":{"interfaces/CountryList.html":{}}}],["src/version.js",{"_index":5197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sri",{"_index":2177,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ssd",{"_index":2172,"title":{},"body":{"interfaces/CountryList.html":{}}}],["stable",{"_index":3243,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["stack",{"_index":4450,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["standard",{"_index":961,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":4985,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":4414,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":5107,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":5110,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":5112,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":5105,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":5114,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":5116,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":5118,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":5120,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start/package",{"_index":5127,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":4456,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":5311,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["startoftoday",{"_index":3825,"title":{},"body":{"classes/Person.html":{}}}],["starts",{"_index":2888,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{}}}],["starturl",{"_index":1163,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["state",{"_index":781,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":5020,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2030,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":928,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["status",{"_index":1657,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"changelog.html":{},"todo.html":{}}}],["statuschange",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["statustext",{"_index":1546,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["step",{"_index":2836,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":4431,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":4361,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":1670,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["stepper/wizard",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["stepper/wizardprogress",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["steps",{"_index":2699,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["still",{"_index":2514,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PageSectionComponent.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["store",{"_index":935,"title":{},"body":{"classes/Address.html":{}}}],["stored",{"_index":857,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stp",{"_index":2138,"title":{},"body":{"interfaces/CountryList.html":{}}}],["str",{"_index":2566,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{},"miscellaneous/functions.html":{}}}],["str.replace",{"_index":2567,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["str.slice(0",{"_index":3364,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["street",{"_index":760,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["street'},{'name",{"_index":673,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["street.component.ts",{"_index":5303,"title":{},"body":{"todo.html":{}}}],["street.directive",{"_index":4214,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["street.directive.ts",{"_index":4353,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["street.directive.ts:25",{"_index":4354,"title":{},"body":{"directives/ValidateStreetDirective.html":{}}}],["streetcomponent",{"_index":672,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["strength",{"_index":3674,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":3690,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":79,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":197,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["stripped",{"_index":3326,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PhoneNumberComponent.html":{}}}],["stripped.length",{"_index":3974,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["stripstringtomaxlength",{"_index":3271,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["stripstringtomaxlength(str",{"_index":3294,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["structure",{"_index":745,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stuff",{"_index":3883,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["style",{"_index":1007,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageSectionComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["style.width]='strengthpercentage",{"_index":3776,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":3784,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":5363,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styled",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1691,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":5425,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":5420,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common",{"_index":5419,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":5360,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["stylesscss",{"_index":5117,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":585,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["styling",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["stylings",{"_index":1024,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stylized",{"_index":3375,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sub",{"_index":3226,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["subclasses",{"_index":1493,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["subfolder",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3304,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["submission",{"_index":1492,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"miscellaneous/enumerations.html":{}}}],["submit",{"_index":387,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitbar",{"_index":3644,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["submitlabel",{"_index":3105,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["submitted",{"_index":196,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["subscribe",{"_index":1521,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{}}}],["subscribe(evt",{"_index":2793,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(response",{"_index":3580,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["subscribe(this.updateskipcontentlink.bind(this",{"_index":3411,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(url",{"_index":4397,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscription",{"_index":4381,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["success",{"_index":310,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["success_fetch_img",{"_index":5173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":5176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successcode",{"_index":1645,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["successfully",{"_index":2878,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":1021,"title":{},"body":{"components/ButtonComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{}}}],["sudan",{"_index":2173,"title":{},"body":{"interfaces/CountryList.html":{}}}],["suggestion",{"_index":3670,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["sum",{"_index":3905,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["sumofremainders",{"_index":3884,"title":{},"body":{"components/PhnComponent.html":{}}}],["sunhighlight",{"_index":2360,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["super",{"_index":788,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":1507,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["super(message",{"_index":3601,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["super.ngoninit",{"_index":1400,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["supply",{"_index":4447,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["support",{"_index":4633,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sur",{"_index":2180,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sure",{"_index":800,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"miscellaneous/functions.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["suriname",{"_index":2181,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svalbard",{"_index":2183,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svg",{"_index":5285,"title":{},"body":{"modules.html":{}}}],["svk",{"_index":2159,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svn",{"_index":2161,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swaziland",{"_index":2187,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swe",{"_index":2188,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sweden",{"_index":2189,"title":{},"body":{"interfaces/CountryList.html":{}}}],["switch",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":4411,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":3313,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switchmap(searchphrase",{"_index":3320,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switzerland",{"_index":2191,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swz",{"_index":2186,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sxm",{"_index":2156,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syc",{"_index":2149,"title":{},"body":{"interfaces/CountryList.html":{}}}],["symbol",{"_index":3973,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["symlink",{"_index":5365,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["syr",{"_index":2192,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syrian",{"_index":2193,"title":{},"body":{"interfaces/CountryList.html":{}}}],["system",{"_index":2697,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["t",{"_index":251,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":3359,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["tabbed",{"_index":402,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["table",{"_index":3445,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5145,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":2563,"title":{},"body":{"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":4993,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":209,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["taiwan",{"_index":2196,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tajikistan",{"_index":2198,"title":{},"body":{"interfaces/CountryList.html":{}}}],["take",{"_index":3486,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["takes",{"_index":280,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["taking",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["tanzania",{"_index":2200,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tap",{"_index":285,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["target",{"_index":257,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["targetpath",{"_index":5218,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tca",{"_index":2222,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tcd",{"_index":1813,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tell",{"_index":5359,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":14,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["template'},{'name",{"_index":620,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["template.component",{"_index":4224,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["template.component.html",{"_index":1643,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.scss",{"_index":1642,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts",{"_index":1641,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["template.component.ts:18",{"_index":1647,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:25",{"_index":1651,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:29",{"_index":1653,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:33",{"_index":1655,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template/confirm",{"_index":1640,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["templateforms",{"_index":3256,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["templates",{"_index":5396,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":587,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["temporary",{"_index":2917,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["temporibus",{"_index":1355,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["tenetur",{"_index":1361,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["territories",{"_index":1891,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["territory",{"_index":1789,"title":{},"body":{"interfaces/CountryList.html":{}}}],["test",{"_index":350,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["test(var1",{"_index":2852,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":465,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tests",{"_index":356,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Person.html":{},"changelog.html":{}}}],["text",{"_index":418,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["text)).click",{"_index":563,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["text.touppercase",{"_index":4018,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["textmaskmodule",{"_index":4172,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["tgo",{"_index":2207,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tha",{"_index":2202,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thailand",{"_index":2203,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thanks",{"_index":4915,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that's",{"_index":1550,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/HeaderComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["then((data",{"_index":103,"title":{},"body":{"classes/AbstractForm.html":{}}}],["there's",{"_index":2386,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["therefore",{"_index":898,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["theyt",{"_index":3019,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":3678,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this._applicationheadermap.get(this.processname",{"_index":3578,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._bypassguards",{"_index":1208,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._continue(state.url",{"_index":4121,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this._defaulterrmsg[x",{"_index":206,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this._headers",{"_index":311,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this._headers.get",{"_index":1509,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set",{"_index":1508,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('severity",{"_index":1597,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('tags",{"_index":1601,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._headers.set('timestamp",{"_index":1594,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._log",{"_index":1516,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._logerror",{"_index":1518,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._onchange",{"_index":187,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._onchange(event",{"_index":1268,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":2399,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this._onchange(null",{"_index":2394,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{}}}],["this._onchange(stripped",{"_index":3351,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(this.addr",{"_index":817,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._onchange(this.person",{"_index":3206,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._onchange(this.search",{"_index":3362,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(true",{"_index":3561,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._onchange(val",{"_index":1082,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this._onchange(value",{"_index":3970,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._onchange(values",{"_index":3203,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._ontouched",{"_index":189,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._ontouched($event",{"_index":3971,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._ontouched(this.addr",{"_index":819,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._sendlog(errormessage",{"_index":1535,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._sendlog(message",{"_index":1532,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this._starturl",{"_index":1207,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._value",{"_index":3444,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.accept.emit(fn",{"_index":3592,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.accept.emit(true",{"_index":3558,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.activeindex",{"_index":4398,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.addline(2",{"_index":806,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addline(3",{"_index":808,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr",{"_index":754,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline1",{"_index":822,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline2",{"_index":805,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline3",{"_index":807,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.city",{"_index":824,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.country",{"_index":793,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.postal",{"_index":816,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.province",{"_index":798,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.address",{"_index":3308,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.address[addrlookup",{"_index":854,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.addr",{"_index":818,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.selectedaddress",{"_index":3349,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.addressline1",{"_index":980,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline2",{"_index":991,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline3",{"_index":993,"title":{},"body":{"classes/Address.html":{}}}],["this.addrlabels[x",{"_index":908,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.agreecheck",{"_index":3594,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.allowextralines",{"_index":804,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.allowinternational",{"_index":3961,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.apidobformat",{"_index":3832,"title":{},"body":{"classes/Person.html":{}}}],["this.application",{"_index":2656,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.base_url}/addresses.json",{"_index":3218,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.bconly",{"_index":789,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["this.blur.emit",{"_index":1402,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.blurevent.emit",{"_index":2275,"title":{},"body":{"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["this.browsefileref.nativeelement",{"_index":3079,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":2864,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":3082,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":1045,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["this.buttongroup.nativeelement.focus",{"_index":1083,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.cancontinue",{"_index":3114,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":3081,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":3083,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":4405,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":4400,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.checkbox.nativeelement.focus",{"_index":1269,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":2827,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":981,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{}}}],["this.cleardate",{"_index":2393,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.click.emit",{"_index":4454,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.clickevent.emit",{"_index":4453,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.close.emit",{"_index":3560,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.componentlabel",{"_index":3747,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.consentmodal.showfullsizeview",{"_index":3518,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.continuebutton",{"_index":539,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":538,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":2669,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.controldir",{"_index":2546,"title":{},"body":{"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["this.controldir.control.setvalidators(allvalidators",{"_index":3967,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.controldir.control.updatevalueandvalidity",{"_index":3968,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.controldir.control.validator",{"_index":3965,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":2372,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":2377,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":1687,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":983,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{}}}],["this.countrylist",{"_index":889,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.countrylist.find",{"_index":890,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.criteria.test",{"_index":2549,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.criteriamsg",{"_index":3755,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.cutoffdate.emit(this.spaenvres",{"_index":3590,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.data",{"_index":1084,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["this.datachange.emit(this.data",{"_index":1267,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.datachange.emit(val",{"_index":1081,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.dataservice.getmspuuid",{"_index":3063,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":2378,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":2398,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":2359,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":3831,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":2358,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":2371,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":2374,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":2366,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":2368,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.defaultcountry",{"_index":886,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.defaulterrmsg[x",{"_index":2276,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.defaulterrormessage",{"_index":1266,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.defaultprovince",{"_index":875,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablecontinue",{"_index":3595,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.disabled",{"_index":192,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disabled[x",{"_index":920,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablegeocoder",{"_index":896,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.dobformat",{"_index":3833,"title":{},"body":{"classes/Person.html":{}}}],["this.duplist",{"_index":2511,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["this.email",{"_index":2544,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.errmsg",{"_index":3196,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":3761,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":3759,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":3757,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":3074,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessage",{"_index":203,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessage[x",{"_index":207,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessagerequired",{"_index":1265,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.errormessages",{"_index":2356,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":3760,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":3758,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":3756,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.fieldmaxlenghts[x",{"_index":914,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.findcountrycode",{"_index":797,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.firstname",{"_index":3190,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.form",{"_index":740,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.form.get(x).markastouched",{"_index":109,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.valuechanges.pipe(debouncetime(0)).subscribe((values",{"_index":3201,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.fullsizeviewmodal.config.keyboard",{"_index":3556,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.hide",{"_index":3559,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.show",{"_index":3557,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.generateskiptocontentlink",{"_index":3415,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":3321,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.get",{"_index":5327,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":3232,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":4404,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":4399,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":2657,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":548,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getpasswordstrength",{"_index":3765,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.geturlindex",{"_index":1211,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":2819,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":2847,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":2849,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":2841,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":2828,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":2829,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.haserror",{"_index":3333,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.hasmask",{"_index":4346,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["this.hasnoresults",{"_index":3330,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.heightfactor",{"_index":1470,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(url",{"_index":296,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":1119,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":300,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":1114,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":293,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":2668,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":4301,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":4300,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":2818,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":3085,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":3090,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":3065,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":3066,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.inmaintenance",{"_index":3554,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.isbcphn",{"_index":3895,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.iscanada",{"_index":813,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.isdate(this.disablesince",{"_index":2370,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":2373,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isloading",{"_index":3113,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.ispagelistempty",{"_index":1209,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.istypeaheadloading",{"_index":3329,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.isundermaintenance",{"_index":3553,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.label",{"_index":200,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/XiconButtonComponent.html":{}}}],["this.label.replace",{"_index":201,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this.labels",{"_index":906,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labels[x",{"_index":909,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labeltext",{"_index":2357,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":3192,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":298,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":3061,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":1525,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({event",{"_index":3570,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({name",{"_index":2877,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.maintenanceflag",{"_index":3584,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.maintenancemessage",{"_index":3585,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.mask",{"_index":3876,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.maxlen",{"_index":3635,"title":{},"body":{"components/NameComponent.html":{}}}],["this.maxlengths",{"_index":911,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.maxlengths[x",{"_index":913,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.middlename",{"_index":3194,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.minlen",{"_index":3749,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":3753,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":3754,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":2383,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.namestr",{"_index":3633,"title":{},"body":{"components/NameComponent.html":{}}}],["this.ngmodelchange.emit",{"_index":2431,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":2401,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":2405,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":2696,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":1282,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.observablefromfiles(filelist",{"_index":2813,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onchange.emit(this.person",{"_index":3205,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onchange.emit(values",{"_index":3202,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onerror(err",{"_index":3323,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.onlyfuturedates",{"_index":2375,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.pagechecklist",{"_index":1217,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.filter",{"_index":1225,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.findindex",{"_index":1228,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.length",{"_index":1231,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.map((item",{"_index":1218,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx",{"_index":1222,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx].iscomplete",{"_index":1220,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.password",{"_index":3763,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":3767,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.pattern",{"_index":3198,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person",{"_index":3189,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.firstname",{"_index":3191,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.lastname",{"_index":3193,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.middlename",{"_index":3195,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.phn",{"_index":3875,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn.length",{"_index":3893,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn.trim",{"_index":3886,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn.trim().length",{"_index":3880,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn[0",{"_index":3896,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phonenumber",{"_index":3955,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.placeholder",{"_index":3958,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.post()these",{"_index":5328,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":1570,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.postal",{"_index":985,"title":{},"body":{"classes/Address.html":{}}}],["this.postal.length",{"_index":986,"title":{},"body":{"classes/Address.html":{}}}],["this.postalcode",{"_index":4016,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.progresssteps",{"_index":1684,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":4417,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":4408,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":984,"title":{},"body":{"classes/Address.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.provincelist",{"_index":863,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provincelist.find",{"_index":873,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provlist",{"_index":866,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.pswdstrength",{"_index":3764,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":2895,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.readonlyfields[x",{"_index":918,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.registervalidation",{"_index":2545,"title":{},"body":{"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["this.required",{"_index":3089,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":3197,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":2820,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":2886,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":2901,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.events.pipe",{"_index":3408,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([this.service.getstarturl",{"_index":4126,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.router.navigate([url",{"_index":102,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.router.url",{"_index":1212,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.router.url.includes(url",{"_index":3413,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url}#content",{"_index":3425,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.routerevents",{"_index":4394,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":4406,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.samplemodal.hide",{"_index":4136,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.samplemodal.show",{"_index":4134,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.scaledwidth",{"_index":4303,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":4401,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.search",{"_index":3328,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.search.length",{"_index":3341,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.next(this.search",{"_index":3361,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.pipe",{"_index":3318,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.selectedaddress",{"_index":3331,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.sendspaenvserver(headername",{"_index":3579,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.service.canbypassguards",{"_index":4122,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.ispagecomplete(pageurl",{"_index":4127,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.isprerequisitecomplete",{"_index":4125,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setdefaultcountryasoption",{"_index":794,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption",{"_index":812,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption(this.addr.country",{"_index":799,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.seterrormsg",{"_index":186,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.setlabels",{"_index":790,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setmaxlengths",{"_index":791,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setpagecomplete",{"_index":4106,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpageincomplete",{"_index":4105,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setreadonlyfields",{"_index":792,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setseverity(severitylevels.error",{"_index":1534,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setseverity(severitylevels.info",{"_index":1531,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settags(message.event",{"_index":1557,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.settimestamp",{"_index":1556,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.setuprequest(observable",{"_index":297,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":3067,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.showline2",{"_index":840,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.showline3",{"_index":841,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.sin",{"_index":4267,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.length",{"_index":4272,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim",{"_index":4271,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim().length",{"_index":4270,"title":{},"body":{"components/SinComponent.html":{}}}],["this.size",{"_index":2362,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.skiplinkpath",{"_index":3414,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":542,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.spaenvres",{"_index":3581,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_flag",{"_index":3583,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_message",{"_index":3586,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_flag",{"_index":3587,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_message",{"_index":3588,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_start",{"_index":3589,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":4419,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.strengthpercentage",{"_index":3766,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.stripstringtomaxlength(changes.address.currentvalue._geocoderfulladdress",{"_index":3327,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.stripstringtomaxlength(data.fulladdress",{"_index":3350,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.typeaheadlist",{"_index":3317,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.updateprovlist",{"_index":809,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.updateskipcontentlink",{"_index":3412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.url",{"_index":1512,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["this.uuid",{"_index":1457,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.validatephn",{"_index":3879,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.validateself",{"_index":2547,"title":{},"body":{"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["this.validateself.bind(this",{"_index":3964,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.validatesin",{"_index":4269,"title":{},"body":{"components/SinComponent.html":{}}}],["this.valuechange.emit",{"_index":1401,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.valuechange.emit(this.phonenumber",{"_index":3969,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.valuechange.emit(val",{"_index":3447,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.viewcontainerref",{"_index":4297,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":1468,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.zone.run",{"_index":2690,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this[lookup",{"_index":843,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["those",{"_index":5312,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":2934,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["through",{"_index":3537,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["throw",{"_index":265,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/XiconButtonComponent.html":{}}}],["throwerror",{"_index":1487,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["throwerror('geocoder",{"_index":3252,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":1584,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["throwerror(msg",{"_index":1562,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["thumbnail",{"_index":2787,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["thumbnail'},{'name",{"_index":675,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["thumbnail.html",{"_index":4277,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":4276,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":674,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":2952,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tick",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["tickanddetectchanges",{"_index":5034,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tickanddetectchanges(fixture",{"_index":5238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tiff",{"_index":2740,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tihs",{"_index":3131,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":2941,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["times",{"_index":2833,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["timor",{"_index":2205,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tip",{"_index":1137,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":3648,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":591,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tjk",{"_index":2197,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkl",{"_index":2209,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkm",{"_index":2220,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tls",{"_index":2204,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tobago",{"_index":2215,"title":{},"body":{"interfaces/CountryList.html":{}}}],["today",{"_index":2376,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["todo",{"_index":9,"title":{"todo.html":{}},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["together",{"_index":3815,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":1054,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":677,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["toggle.component.html",{"_index":4309,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":4308,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":676,"title":{"components/ToggleComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["togo",{"_index":2208,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tohse",{"_index":5423,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["tokelau",{"_index":2210,"title":{},"body":{"interfaces/CountryList.html":{}}}],["told",{"_index":2704,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tome",{"_index":2140,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tomorrow",{"_index":2321,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ton",{"_index":2211,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tonga",{"_index":2212,"title":{},"body":{"interfaces/CountryList.html":{}}}],["toobig",{"_index":1436,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":3742,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":1435,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["tostring",{"_index":931,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":1554,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["touched",{"_index":188,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["trace",{"_index":4451,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["track",{"_index":143,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":1453,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transclusion",{"_index":3473,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["transformed",{"_index":2967,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["transformfn",{"_index":5242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translation",{"_index":1095,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["tree",{"_index":579,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["trigger",{"_index":301,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["triggers",{"_index":3088,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["trimmed",{"_index":2425,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":2429,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":2430,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":3235,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["trinidad",{"_index":2214,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tristan",{"_index":2117,"title":{},"body":{"interfaces/CountryList.html":{}}}],["true",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["truncate",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":3522,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["try/catch",{"_index":4425,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ts",{"_index":5342,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":4988,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsconfig.json",{"_index":5225,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tsdoc",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["tslint",{"_index":2620,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["tslint:disable",{"_index":3541,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["tslint:disable:max",{"_index":2621,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["tto",{"_index":2213,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tun",{"_index":2216,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tunisia",{"_index":2217,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tur",{"_index":2218,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkey",{"_index":2219,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkmenistan",{"_index":2221,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turks",{"_index":2223,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turn",{"_index":2755,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turned",{"_index":1214,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["tuv",{"_index":2225,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tuvalu",{"_index":2226,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tweak",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["tweaks",{"_index":506,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["twn",{"_index":2195,"title":{},"body":{"interfaces/CountryList.html":{}}}],["two",{"_index":5411,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":37,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeahead",{"_index":3311,"title":{},"body":{"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":3265,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmatch",{"_index":3290,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmodule",{"_index":4164,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":4233,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typed",{"_index":3303,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeof",{"_index":916,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["typeoption",{"_index":382,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":517,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":5379,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":531,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["types/pdfjs",{"_index":5151,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4828,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["typetext",{"_index":383,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(refnameval",{"_index":526,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence",{"_index":384,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence(refnameval",{"_index":529,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typical",{"_index":4092,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["typo",{"_index":481,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tza",{"_index":2199,"title":{},"body":{"interfaces/CountryList.html":{}}}],["u.s",{"_index":2250,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uga",{"_index":2227,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uganda",{"_index":2228,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ui",{"_index":3357,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ukr",{"_index":2229,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ukraine",{"_index":2230,"title":{},"body":{"interfaces/CountryList.html":{}}}],["umi",{"_index":2234,"title":{},"body":{"interfaces/CountryList.html":{}}}],["unable",{"_index":1559,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["unchecked",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["uncomment",{"_index":5386,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["unde",{"_index":1341,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["undefined",{"_index":295,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["under",{"_index":2974,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["underlines",{"_index":3890,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["underlying",{"_index":5258,"title":{},"body":{"index.html":{}}}],["understand",{"_index":3527,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["uniqness",{"_index":1459,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":314,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{}}}],["unit",{"_index":3820,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["united",{"_index":2201,"title":{},"body":{"interfaces/CountryList.html":{}}}],["united_states",{"_index":724,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["units",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":1438,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":1050,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["unnecessary",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["unreleased",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["unsuccessful",{"_index":1581,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unsure",{"_index":3006,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":2727,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["up",{"_index":488,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["upcoming",{"_index":5383,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":451,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":5125,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateangularjson(host",{"_index":5221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateappcomponentts",{"_index":5139,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateappcomponentts(tree",{"_index":5191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updated",{"_index":2287,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["updatepackagejson",{"_index":5140,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatepackagejson(tree",{"_index":5194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateprovlist",{"_index":862,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updates",{"_index":855,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"miscellaneous/functions.html":{}}}],["updateskipcontentlink",{"_index":3392,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatetsconfig",{"_index":5126,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatetsconfig(host",{"_index":5222,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updating",{"_index":1022,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["upload",{"_index":2647,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploaded",{"_index":1408,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":2623,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":638,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["uploader.component",{"_index":4170,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":2624,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":2625,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":1433,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":2570,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":2987,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":3062,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":2641,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["upper",{"_index":827,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["uppercasepipe",{"_index":3981,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":4003,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["url",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/WizardProgressBarComponent.html":{}}}],["url.com/fpcare/example#content",{"_index":3420,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.includes",{"_index":1229,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["url.includes(x.route",{"_index":4418,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["urlbasename",{"_index":3395,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urltree",{"_index":4116,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["uruguay",{"_index":2237,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ury",{"_index":2236,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usa",{"_index":1713,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usable",{"_index":5322,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":1701,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["use",{"_index":357,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["used",{"_index":174,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["usedropdownlist",{"_index":2269,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["useexisting",{"_index":337,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["useful",{"_index":2329,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["usegeocoder",{"_index":895,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["user",{"_index":67,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["user's",{"_index":2781,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":3679,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["users",{"_index":762,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["uses",{"_index":882,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["using",{"_index":254,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["ut",{"_index":1371,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uuid",{"_index":287,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"modules/CaptchaModule.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":137,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["uzb",{"_index":2238,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uzbekistan",{"_index":2239,"title":{},"body":{"interfaces/CountryList.html":{}}}],["v3",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":753,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["val.country",{"_index":877,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.countrycode",{"_index":891,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.description",{"_index":876,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.label",{"_index":4089,"title":{},"body":{"components/RadioComponent.html":{}}}],["val.provincecode",{"_index":874,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["valid",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate",{"_index":2498,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate(control",{"_index":2501,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validatebcpostaldirective",{"_index":688,"title":{"directives/ValidateBcPostalDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatecitydirective",{"_index":690,"title":{"directives/ValidateCityDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateCityDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatenamedirective",{"_index":692,"title":{"directives/ValidateNameDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatepc",{"_index":4345,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validatepc(control",{"_index":4336,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"miscellaneous/functions.html":{}}}],["validatephn",{"_index":3849,"title":{},"body":{"components/PhnComponent.html":{}}}],["validatephnresult",{"_index":3878,"title":{},"body":{"components/PhnComponent.html":{}}}],["validatepostalcodedirective",{"_index":694,"title":{"directives/ValidatePostalcodeDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateregiondirective",{"_index":696,"title":{"directives/ValidateRegionDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateRegionDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateresult",{"_index":4268,"title":{},"body":{"components/SinComponent.html":{}}}],["validates",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["validateself",{"_index":213,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["validatesin",{"_index":4246,"title":{},"body":{"components/SinComponent.html":{}}}],["validatestreetdirective",{"_index":698,"title":{"directives/ValidateStreetDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validating",{"_index":157,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["validation",{"_index":50,"title":{},"body":{"classes/AbstractForm.html":{},"injectables/CaptchaDataService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validationerrors",{"_index":153,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validations",{"_index":3676,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["validator",{"_index":214,"title":{},"body":{"classes/AbstractFormControl.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validatorfn",{"_index":2504,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["validing",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":52,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"injectables/CommonLogger.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["valuechange",{"_index":1278,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["valuemax=\"100",{"_index":3781,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":3780,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":3778,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":856,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vanuatu",{"_index":2241,"title":{},"body":{"interfaces/CountryList.html":{}}}],["var",{"_index":603,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["variable",{"_index":848,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["variablescss",{"_index":5119,"title":{},"body":{"coverage.html":{}}}],["vat",{"_index":1928,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vatican",{"_index":1930,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vct",{"_index":2131,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ven",{"_index":2242,"title":{},"body":{"interfaces/CountryList.html":{}}}],["venezuela",{"_index":2243,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verde",{"_index":1806,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verify/captcha",{"_index":1116,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":1091,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":1101,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":5175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":2302,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["version.js",{"_index":5196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versionjs",{"_index":5141,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["versionjs(options",{"_index":5195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["versions",{"_index":4579,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":3430,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["very",{"_index":4376,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["vgb",{"_index":2247,"title":{},"body":{"interfaces/CountryList.html":{}}}],["via",{"_index":510,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["viet",{"_index":2246,"title":{},"body":{"interfaces/CountryList.html":{}}}],["view",{"_index":4375,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewchild",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":2632,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('button",{"_index":1043,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('buttongroup",{"_index":1079,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["viewchild('canvas",{"_index":2649,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":2634,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('checkbox",{"_index":1258,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["viewchild('consentmodal",{"_index":3515,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["viewchild('dp",{"_index":2337,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":2630,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":46,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":3530,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":2636,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('samplesmodal",{"_index":4132,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["viewchild('selectfilelabel",{"_index":2638,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":4382,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren",{"_index":4387,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":4385,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":4279,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":2576,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewencapsulation.none",{"_index":2627,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewproviders",{"_index":742,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["vincent",{"_index":2132,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vir",{"_index":2249,"title":{},"body":{"interfaces/CountryList.html":{}}}],["virgin",{"_index":2248,"title":{},"body":{"interfaces/CountryList.html":{}}}],["visibility",{"_index":2323,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["visible",{"_index":802,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vitae",{"_index":1373,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vnm",{"_index":2245,"title":{},"body":{"interfaces/CountryList.html":{}}}],["void",{"_index":73,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"injectables/CommonLogger.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["voluptatem",{"_index":1349,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptates",{"_index":1394,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatibus",{"_index":1363,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatum",{"_index":1367,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vs",{"_index":5318,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["vut",{"_index":2240,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vv]\\\\d[abceghj",{"_index":943,"title":{},"body":{"classes/Address.html":{}}}],["w",{"_index":5347,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":2726,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["walk",{"_index":3897,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["wallis",{"_index":2252,"title":{},"body":{"interfaces/CountryList.html":{}}}],["want",{"_index":516,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":1656,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"components/PasswordComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warningcode",{"_index":1646,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["warnings",{"_index":5288,"title":{},"body":{"todo.html":{}}}],["warranties",{"_index":5276,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5382,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":5348,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":962,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"additional-documentation/getting-started.html":{}}}],["waze",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["we'll",{"_index":2403,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["we're",{"_index":4423,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":4410,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":3484,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":385,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["weight",{"_index":3900,"title":{},"body":{"components/PhnComponent.html":{}}}],["weights",{"_index":3882,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["weights[i",{"_index":3902,"title":{},"body":{"components/PhnComponent.html":{}}}],["well",{"_index":3338,"title":{},"body":{"components/GeocoderInputComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["western",{"_index":2255,"title":{},"body":{"interfaces/CountryList.html":{}}}],["wfactor",{"_index":1469,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whatever",{"_index":327,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["whether",{"_index":1178,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["whole",{"_index":5408,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":1500,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["width",{"_index":2732,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["width/height",{"_index":2364,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":1462,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["widthoption",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["widthoptions",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3523,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["window.location.hostname",{"_index":1505,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{}}}],["window.location.href",{"_index":3423,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.href.indexof(this.skip_content_hash",{"_index":3422,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.origin}/${this.urlbasename",{"_index":3424,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.outerwidth",{"_index":4430,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["window.scrollto",{"_index":104,"title":{},"body":{"classes/AbstractForm.html":{}}}],["winds",{"_index":2381,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wip",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":3535,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":460,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":3355,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/XiconButtonComponent.html":{},"license.html":{}}}],["wizard",{"_index":679,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["wizardprogressbar",{"_index":5378,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":678,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":1668,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["wlf",{"_index":2251,"title":{},"body":{"interfaces/CountryList.html":{}}}],["won't",{"_index":1588,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/CommonLogger.html":{},"components/WizardProgressBarComponent.html":{}}}],["work",{"_index":477,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["workaround",{"_index":2659,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["worker",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2664,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":500,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["wrap",{"_index":3672,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wrapped",{"_index":2339,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":2299,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper/row",{"_index":3665,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wraps",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":5341,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":131,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["writevalue(obj",{"_index":2406,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":164,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["writing",{"_index":5272,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":2739,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":1434,"title":{},"body":{"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["wsm",{"_index":2134,"title":{},"body":{"interfaces/CountryList.html":{}}}],["x",{"_index":205,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["x.getdate",{"_index":2355,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["x.iscomplete",{"_index":1226,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.route",{"_index":1230,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.slice(1)).join",{"_index":1683,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":3086,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":1682,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xicon",{"_index":682,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{}}}],["xiconbutton",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["xiconbuttoncomponent",{"_index":681,"title":{"components/XiconButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["xiff",{"_index":2735,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["year",{"_index":2342,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["yeardistantfuture",{"_index":2283,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["yeardistantpast",{"_index":2282,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["yellow",{"_index":5290,"title":{},"body":{"todo.html":{}}}],["yem",{"_index":2257,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yemen",{"_index":2258,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yes",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImageProcessingError.html":{},"injectables/CommonLogger.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"classes/MoHCommonLibraryError.html":{},"components/RadioComponent.html":{},"miscellaneous/functions.html":{}}}],["yes/no",{"_index":1053,"title":{},"body":{"components/ButtonGroupComponent.html":{},"changelog.html":{}}}],["yib",{"_index":2956,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":5358,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":1008,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":5308,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":5254,"title":{},"body":{"index.html":{}}}],["yt",{"_index":4069,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yugoslav",{"_index":2002,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yukon",{"_index":4070,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yyyy/mm/dd",{"_index":2333,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":3793,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":946,"title":{},"body":{"classes/Address.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z0",{"_index":4325,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["z])[a",{"_index":4324,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z][0",{"_index":4338,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["z][a",{"_index":3176,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateNameDirective.html":{}}}],["z]\\\\d",{"_index":948,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["z]\\s?[0",{"_index":4340,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["za",{"_index":3175,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["zabceghj",{"_index":945,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["zaf",{"_index":2167,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zambia",{"_index":2260,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zealand",{"_index":2058,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zero",{"_index":2889,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["zeros",{"_index":3888,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["zib",{"_index":2955,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zimbabwe",{"_index":2262,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zip",{"_index":783,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["zmb",{"_index":2259,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zone",{"_index":2654,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":5160,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1129,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["zwe",{"_index":2261,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zxcvbn",{"_index":3739,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":3738,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form.ts\n        \n\n            \n                Description\n            \n            \n                TODO: Make interface for abstract form - this form is the template form implementation\nNeed to create a reactive form implementation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-form.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:14\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:11\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:16\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:31\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:18\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:46\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:37\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, Params } from '@angular/router';\n\n/**\n * TODO: Make interface for abstract form - this form is the template form implementation\n * Need to create a reactive form implementation\n */\nexport abstract class AbstractForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string, queryParams?: Params ) {\n\n    this.router.navigate([url], { queryParams: queryParams })\n      .then((data) => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractFormControl.html":{"url":"classes/AbstractFormControl.html","title":"class - AbstractFormControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractFormControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form-control.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            ControlValueAccessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:65\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ErrorMessage, replaceLabelTag } from './error-message.interface';\nimport { Input, OnInit } from '@angular/core';\nimport { Base } from './base';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\n\n// Class does not get exported - used internally\nexport abstract class AbstractFormControl extends Base implements OnInit, ControlValueAccessor {\n\n  // Default messages - must be defined in each component\n  abstract _defaultErrMsg: ErrorMessage = {};\n\n  // Must be defined in component as default labels are specific to component\n  @Input() abstract label: string;\n\n  @Input() disabled: boolean = false;\n\n  // Input to allow developers to change default messages\n  @Input() errorMessage: ErrorMessage;\n\n\n  // Required for implementing ControlValueAccessor\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  // Required for implementing ControlValueAccessor\n  abstract writeValue( value: any ): void;\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  // Disable control\n  setDisabledState( isDisabled: boolean ): void {\n    this.disabled = isDisabled;\n  }\n\n  protected setErrorMsg() {\n    // Some components have logic based off no label being submitted - strip off '(optional)'\n    const _label = this.label ? this.label.replace( '(optional)' , '' ) : 'Field';\n\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this._defaultErrMsg[x] = this.errorMessage[x] );\n    }\n\n    // Replace label tags with label\n    Object.keys(this._defaultErrMsg).map( x => this._defaultErrMsg[x] = replaceLabelTag( this._defaultErrMsg[x] , _label ) );\n  }\n\n  /**\n   * Register self validating method\n   * @param control control directive\n   * @param fn function for validating self\n   */\n  protected registerValidation( ngControl: NgControl, fn: ValidationErrors ) {\n\n    // Register validateSelf validator so that it will be added on component initialization.\n    // Makes the component a self validating component.\n    Promise.resolve().then(() => {\n\n      if ( ngControl ) {\n\n        const allValidators = [fn.bind(this)];\n        if ( ngControl.control.validator ) {\n          allValidators.push( ngControl.control.validator );\n        }\n        ngControl.control.setValidators(allValidators);\n        ngControl.control.updateValueAndValidity();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/abstract-api-service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:17\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:60\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:31\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:39\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:53\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { UUID } from 'angular2-uuid';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n\n  /* Helper function for generating a unique UUID per request for logging. */\n  protected generateUUID() {\n    return UUID.UUID();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPgCheckService.html":{"url":"injectables/AbstractPgCheckService.html","title":"injectable - AbstractPgCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPgCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-pg-check.service.ts\n        \n\n            \n                Description\n            \n            \n                The abstract class for our route guard service.  You MUST setup the NgModule\nto provide your application's service in place of AbstractPgCheckService.\nYour application's route guard service can do whatever it wants as long as it\nimplements these methods.\nMore information on setup can be found in @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            //registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                getStartUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPageComplete\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPrerequisiteComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractPgCheckService.\n *\n * Your application's route guard service can do whatever it wants as long as it\n * implements these methods.\n * \n * More information on setup can be found in @see RouteGuardService.\n *\n *  @example\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPgCheckService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract isPageComplete( url: string ): boolean;\n  public abstract isPrerequisiteComplete(): boolean;\n  public abstract getStartUrl(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreeConsentModal\n                            \n                            \n                                checkConsentModal\n                            \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickConsentModalContinue\n                            \n                            \n                                clickLink\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                countLength\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                scrollUp\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                            \n                                typeTextFirstOccurrence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreeConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \nagreeConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:138\n                \n            \n\n\n            \n                \n                    Clicks the checkbox which means the user agrees with the info collection notice.\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \ncheckConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:153\n                \n            \n\n\n            \n                \n                    Checks if the consent modal is currently displayed or not\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(classVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:122\n                \n            \n\n\n            \n                \n                    Clicks the button based on the text specified\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    classVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable class value for a button\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text inside the button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:130\n                \n            \n\n\n            \n                \n                    Clicks the check box based on the ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickConsentModalContinue\n                        \n                        \n                    \n                \n            \n            \n                \nclickConsentModalContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:146\n                \n            \n\n\n            \n                \n                    Clicks continue inside the modal\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLink\n                        \n                        \n                    \n                \n            \n            \n                \nclickLink(label: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:178\n                \n            \n\n\n            \n                \n                    Clicks the link based from the label and text provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countLength\n                        \n                        \n                    \n                \n            \n            \n                \ncountLength(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:186\n                \n            \n\n\n            \n                \n                    Counts the number of options inside a dropdown box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollUp\n                        \n                        \n                    \n                \n            \n            \n                \nscrollUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:160\n                \n            \n\n\n            \n                \n                    Scrolls up to the top of the page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeTextFirstOccurrence\n                        \n                        \n                    \n                \n            \n            \n                \ntypeTextFirstOccurrence(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:169\n                \n            \n\n\n            \n                \n                    Types the text inside the first ocurrence of input field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeText(refNameVal: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).sendKeys(text);\n  }\n\n  /**\n   * Clicks the button based on the text specified\n   * @param classVal Human readable class value for a button\n   * @param text Text inside the button\n   */\n  clickButton(classVal: string, text: string) {\n    element(by.cssContainingText(`button[class*=\"${classVal}\"]`, text)).click();\n  }\n\n  /**\n   * Clicks the check box based on the ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   */\n  clickCheckBox(refNameVal: string) {\n    element(by.css(`input[ng-reflect-name=\"${refNameVal}\"]`)).click();\n  }\n\n  /**\n   * Clicks the checkbox which means the user agrees with the info collection notice.\n   * InfoColectionNoticeComponent \n   */\n  agreeConsentModal() {\n    element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click();\n  }\n\n  /**\n   * Clicks continue inside the modal\n   * InfoColectionNoticeComponent \n   */\n  clickConsentModalContinue() {\n    element(by.css('div[class=\"modal-footer\"]')).element(by.css('button[type=\"submit\"]')).click();\n  }\n\n  /**\n   * Checks if the consent modal is currently displayed or not\n   */\n  checkConsentModal() {\n    return element(by.css('common-consent-modal')).element(by.css('div[aria-labelledby=\"myLargeModalLabel\"]')).isDisplayed();\n  }\n\n  /**\n   * Scrolls up to the top of the page\n   */\n  scrollUp() {\n      browser.executeScript('window.scrollTo(0,0)');\n  }\n\n  /**\n   * Types the text inside the first ocurrence of input field\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeTextFirstOccurrence(refNameVal: string, text: string) {\n      element.all(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).first().sendKeys(text);\n  }\n\n  /**\n   * Clicks the link based from the label and text provided\n   * @param label\n   * @param text\n   */\n  clickLink(label: string, text: string) {\n      element(by.cssContainingText(label, text)).click();\n  }\n\n  /**\n   * Counts the number of options inside a dropdown box\n   * @param refNameVal\n   */\n  countLength(refNameVal: string){\n      return $$(`select[ng-reflect-name^=\"${refNameVal}\"] option`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionCommonComponent.html":{"url":"components/AccordionCommonComponent.html","title":"component - AccordionCommonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionCommonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        AccordionComponent is a\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-accordion\n            \n\n            \n                styleUrls\n                ./accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/accordion/accordion.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/accordion/accordion.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(click to expand)'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AccordionComponent } from 'ngx-bootstrap';\n/**\n * AccordionComponent is a\n *\n * @example\n *       \t\n  *       \n * @export\n */\n\n@Component({\n  selector: 'common-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionCommonComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() isOpen: boolean = false;\n\n  public expandText: string =  '(click to expand)';\n  ngOnInit() {\n  }\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n    \n        \n          {{title}} \n          \n          {{expandText}}\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{title}}                     {{expandText}}                    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionCommonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddrLabelList.html":{"url":"interfaces/AddrLabelList.html","title":"interface - AddrLabelList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddrLabelList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address1\n                                \n                                \n                                            Optional\n                                        address2\n                                \n                                \n                                            Optional\n                                        address3\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address3\n                                    \n                                \n                                \n                                    \n                                        address3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressLine1\n                            \n                            \n                                    Public\n                                addressLine2\n                            \n                            \n                                    Public\n                                addressLine3\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                isValid\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Static\n                                PostalCodeBCRegEx\n                            \n                            \n                                    Public\n                                province\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    street\n                                \n                                \n                                    isBCOnly\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:11\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:13\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PostalCodeBCRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:44\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:36\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:23\n                                \n                            \n\n                \n                    \n                        setstreet(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCOnly\n                    \n                \n\n                \n                    \n                        getisBCOnly()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Address {\n\n  static PostalCodeBCRegEx = '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$';\n\n  public addressLine1: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine2: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine3: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n  public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n  public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n  // For backward compatibilty with applications that use street.\n  get street() {\n    return this.addressLine1;\n  }\n\n  set street( val: string ) {\n    this.addressLine1 = val;\n  }\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.addressLine1}, ${this.city}`;\n  }\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.addressLine1 && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  get isBCOnly(): boolean {\n    let isValid = false;\n    if (this.postal &&\n      this.postal.length > 0) {\n      const regEx = new RegExp(Address.PostalCodeBCRegEx);\n      isValid = regEx.test(this.postal);\n    }\n    return isValid;\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.addressLine1 = object.addressLine1;\n    this.addressLine2 = object.addressLine2;\n    this.addressLine3 = object.addressLine3;\n\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Button Component is a button which can be used across the application to have\nsame button style.\nYou're free to create custom (bootstrap) buttons as your application\nrequires. The main advantages to this component are:\n\nconsistency\nsimplicity (less markup)\nmaking future changes easier, such as automatically updating any changes\nto button colour stylings.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"secondary\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, ViewChild, EventEmitter, Input, Output, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Button Component is a button which can be used across the application to have\n * same button style.\n *\n * You're free to create custom (bootstrap) buttons as your application\n * requires. The main advantages to this component are:\n *\n *  - consistency\n *  - simplicity (less markup)\n *  - making future changes easier, such as automatically updating any changes\n * to button colour stylings.\n *\n *\n * @example\n *        \n *        \n * @export\n */\n@Component({\n  selector: 'common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class ButtonComponent implements OnInit {\n\n  // Can pass the Style class of a button e.g. For primary, btn btn-primary. Default, btn btn-default. Error, btn btn-danger\n  @Input() buttonType: 'default' | 'primary' | 'secondary' = 'default';\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Button';\n  @Output() btnClick: EventEmitter = new EventEmitter();\n  @ViewChild('button') button: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    this.btnClick.emit($event);\n  }\n}\n\n    \n\n    \n        \n\t\t\t{{label}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonGroupComponent.html":{"url":"components/ButtonGroupComponent.html","title":"component - ButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button-group/button-group.component.ts\n\n\n    \n        Description\n    \n    \n        BUTTONGROUPCOMPONENT IS DEPRECATED!  DO NOT USE UNLESS YOU KNOW WHAT YOU'RE\nDOING.\nIf you need a Yes/No toggle, @see RadioComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent) }\n                \n            \n\n\n            \n                selector\n                common-button-group\n            \n\n            \n                styleUrls\n                ./button-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-group.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                buttonGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setButtonGrpVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setButtonGrpVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetButtonGrpVal(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('buttonGroup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * BUTTONGROUPCOMPONENT IS **DEPRECATED**!  **DO NOT USE** UNLESS YOU KNOW WHAT YOU'RE\n * DOING.\n *\n * If you need a Yes/No toggle, @see RadioComponent\n * @deprecated\n *\n *\n *\n *\n * @example\n *       \n *         \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent )}\n  ]\n})\nexport class ButtonGroupComponent implements ControlValueAccessor {\n\n  @Input() data: boolean;\n  @Input() required: boolean = true;\n  @Input() showError: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() errorMessageRequired: string = 'Field is required.';\n  @Input() label: string = 'Default Checkbox';\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('buttonGroup') buttonGroup: ElementRef;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n\n  }\n\n\n  setButtonGrpVal(val: any) {\n    this.dataChange.emit(val);\n    this._onChange(val);\n    this._onTouched();\n  }\n\n  focus() {\n    this.buttonGroup.nativeElement.focus();\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n     {{answer.label}} \n    \n  \n  \n    {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}       {{answer.label}}             {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Design Guidelines\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckCompleteBaseService.html":{"url":"injectables/CheckCompleteBaseService.html","title":"injectable - CheckCompleteBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckCompleteBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Extend this class when creating a service to create your custom Route Guard\nlogic.  This class should work as-is for simple use-cases.  For Route Guard\nsetup @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                            \n                                    Private\n                                _startUrl\n                            \n                            \n                                    Public\n                                pageCheckList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                getStartUrl\n                            \n                            \n                                    Protected\n                                getUrlIndex\n                            \n                            \n                                    Public\n                                isComplete\n                            \n                            \n                                    Public\n                                isPageComplete\n                            \n                            \n                                    Protected\n                                isPageListEmpty\n                            \n                            \n                                    Public\n                                isPrerequisiteComplete\n                            \n                            \n                                    Public\n                                setPageComplete\n                            \n                            \n                                    Public\n                                setPageIncomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    startUrl\n                                \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUrlIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:104\n                \n            \n\n\n            \n                \n                    Index of URL in the items list, -1 if not exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:96\n                \n            \n\n\n            \n                \n                    Check for incomplete pages\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:85\n                \n            \n\n\n            \n                \n                    Indicates whether page has been completed or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isPageListEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageListEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:53\n                \n            \n\n\n            \n                \n                    Any prerequisites that need list of pages \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:75\n                \n            \n\n\n            \n                \n                    Sets the page to completed, allowing applicant to proceed to next page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageIncomplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:60\n                \n            \n\n\n            \n                \n                    Sets page to not be completed, so applicants cannot complete application out of sequence\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCheckList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageListInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        startUrl\n                    \n                \n\n\n                \n                    \n                        setstartUrl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n// TODO: Revise - does not work quite correct when there is no landing page.\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox component is a input checkbox\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrorMessage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setCheckboxVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:36\n                            \n                        \n                \n                    \n                        You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:41\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:42\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCheckboxVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetCheckboxVal(event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('checkbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\n/**\n * Checkbox component is a input checkbox\n *\n * @example\n *       \n *       \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n\n  // TODO: Remove to make custom form control -- possible breaking change\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\nexport class CheckboxComponent extends Base implements  OnInit, ControlValueAccessor {\n  defaultErrorMessage: string = '';\n\n  /**\n   * You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n   */\n  @Input() data: boolean = false;\n  @Input() required: boolean = false;  // TODO: Remove - breaking change\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Default Checkbox';\n  @Input() errorMessageRequired: string;\n  @Input() showError: boolean;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('checkbox') checkbox: ElementRef;\n\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    if ( this.errorMessageRequired ) {\n      this.defaultErrorMessage = this.errorMessageRequired;\n    } else {\n      this.defaultErrorMessage = this.label + ' is required.';\n    }\n  }\n\n  setCheckboxVal(event: boolean) {\n    this.data = event;\n    this.dataChange.emit(this.data);\n    this._onChange(event);\n    this._onTouched();\n  }\n\n  focus() {\n    this.checkbox.nativeElement.focus();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n\n{{label}}\n\n\n\n    {{defaultErrorMessage}}\n\n\n\n  {{defaultErrorMessage}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}    {{defaultErrorMessage}}  {{defaultErrorMessage}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/city/city.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-city\n            \n\n            \n                styleUrls\n                ./city.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                city\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/city/city.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'city_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:25\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n@Component({\n  selector: 'common-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.scss']\n})\nexport class CityComponent extends AbstractFormControl implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'City';\n  @Input() maxlength: string = '100';\n  @Input() labelforId: string = 'city_' + this.objectId;\n  @Input() placeholder: string = 'City name';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.city = val;\n    }\n  }\n  get value() {\n    return this.city;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  city: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  };\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: string ) {\n    this.city = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: string ): void {\n    if ( value !== undefined ) {\n      this.city = value;\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n \n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidChar}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n    WrongType,\n    TooSmall,\n    TooBig,\n    AlreadyExists,\n    Unknown,\n    CannotOpen,\n    PDFnotSupported,\n    CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n    commonImage?: CommonImage;\n    rawImageFile?: File;\n    maxSizeAllowed?: number;\n    // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n    constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n    }\n}\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n    uuid: string;\n\n    constructor() {\n        this.uuid = UUID.UUID();\n    }\n\n    fileContent: string;\n    contentType: string;\n    // number of bytes.\n    size: number;\n    sizeUnit: string;\n    sizeTxt: string;\n    naturalHeight: number;\n    naturalWidth: number;\n    name: string;\n\n    // file uniqness checksum\n    id: string;\n\n    error?: CommonImageError;\n    attachmentOrder: number = 0;\n}\n\nexport interface CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n    widthFactor: number;\n    heightFactor: number;\n\n    constructor(wFactor: number, hFactor: number) {\n        this.widthFactor = wFactor;\n        this.heightFactor = hFactor;\n    }\n\n    scaleDown(scale: number): CommonImageScaleFactors {\n        return new CommonImageScaleFactorsImpl(\n            this.widthFactor * scale,\n            this.heightFactor * scale);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:21\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport enum CommonLogEvents {\n  navigation = 'navigation',\n  error = 'error',\n  submission = 'submission'\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: CommonLogEvents.error,\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  // TODO: Remove moment dependency\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonLogger.html":{"url":"injectables/CommonLogger.html","title":"injectable - CommonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Private\n                                url\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _log\n                            \n                            \n                                    Protected\n                                _logError\n                            \n                            \n                                    Private\n                                _sendLog\n                            \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                logError\n                            \n                            \n                                    Public\n                                logHttpError\n                            \n                            \n                                    Private\n                                setSeverity\n                            \n                            \n                                    Private\n                                setTags\n                            \n                            \n                                    Private\n                                setTimestamp\n                            \n                            \n                                setURL\n                            \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    applicationId\n                                \n                                \n                                    programName\n                                \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _log(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:97\n                \n            \n\n\n            \n                \n                    Log a message to Splunk. This is the main way to send logs and\nautomatically includes meta-data. You do not need to subscribe to the\nresponse, as the service already does that. The input object must have an\n'event' property set, everything else is optional.\nExample:\nthis.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object, nesting is fine, with event property\nset.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _logError(errorMessage: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _sendLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _sendLog(message: CommonLogMessage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:128\n                \n            \n\n\n            \n                \n                    Internal method to send logs to Splunk, includes meta-data except that's\nconsistent across all requests, but not specific values like severity\nlevel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                CommonLogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A JavaScript object or anything that can be toString()'d,\nlike Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(errorMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logHttpError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logHttpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:111\n                \n            \n\n\n            \n                \n                    Log HTTP errors, e.g. when losing network connectivity or receiving an\nerror response code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSeverity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSeverity(severity: SeverityLevels)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    severity\n                                    \n                                                SeverityLevels\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTags(message: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:185\n                \n            \n\n\n            \n                \n                    The headers are easier to search in splunk, and we aren't using tags, so\nrepurpose it to event type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setURL\n                        \n                        \n                    \n                \n            \n            \n                \nsetURL(newURL: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/logger.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:23\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:60\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:31\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  })\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:41\n                            \n                        \n\n                \n                    \n                        The HTTP Headers which go with each request.  These MUST be set if you are\nusing the logger.  Fields include:\n\nprogram (REQUIRED, the application wide code)\napplicationId (REQUIRED, like sessionId)\nrequest_method (REQUIRED, 'POST')\nlogsource: (REQUIRED, window.location.hostname)\nhttp_x_forwarded_host (REQUIRED, window.location.hostname)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/logger.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:17\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        applicationId\n                    \n                \n\n                \n                    \n                        getapplicationId()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:57\n                                \n                            \n\n                \n                    \n                        setapplicationId(id: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:53\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        programName\n                    \n                \n\n                \n                    \n                        getprogramName()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:65\n                                \n                            \n\n                \n                    \n                        setprogramName(name: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:61\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/logger.service.ts:165\n                                \n                            \n                    \n                        \n                                Overwrite the inherited httpOptions so we can set responseType to text.\nThis updates Angular's parsing, and it won't error out due to the server\nnot responding with JSON.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport enum CommonLogEvents {\n  navigation = 'navigation',\n  error = 'error',\n  submission = 'submission'\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: CommonLogEvents.error,\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  // TODO: Remove moment dependency\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmTemplateComponent.html":{"url":"components/ConfirmTemplateComponent.html","title":"component - ConfirmTemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmTemplateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-confirm-template\n            \n\n            \n                styleUrls\n                ./confirm-template.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-template.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayIcon\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    successCode\n                                \n                                \n                                    errorCode\n                                \n                                \n                                    warningCode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayIcon\n                    \n                \n                \n                    \n                        Type :         ApiStatusCodes\n\n                    \n                \n                \n                    \n                        Default value : ApiStatusCodes.SUCCESS\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        successCode\n                    \n                \n\n                \n                    \n                        getsuccessCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorCode\n                    \n                \n\n                \n                    \n                        geterrorCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        warningCode\n                    \n                \n\n                \n                    \n                        getwarningCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Base } from '../../models/base';\n\n\nexport enum ApiStatusCodes {\n  SUCCESS = '0',\n  ERROR = '1',\n  WARNING = '2'\n}\n\n@Component({\n  selector: 'common-confirm-template',\n  templateUrl: './confirm-template.component.html',\n  styleUrls: ['./confirm-template.component.scss']\n})\nexport class ConfirmTemplateComponent extends Base {\n\n  @Input() displayIcon: ApiStatusCodes = ApiStatusCodes.SUCCESS;\n\n  constructor() {\n    super();\n  }\n\n  // Status codes\n  get successCode() {\n    return ApiStatusCodes.SUCCESS;\n  }\n\n  get errorCode() {\n    return ApiStatusCodes.ERROR;\n  }\n\n  get warningCode() {\n    return ApiStatusCodes.WARNING;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n  \n\n\n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmTemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n            \n                Description\n            \n            \n                Base functionality for container that is used to display bread crumbs \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:12\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:18\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/country/country.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ErrorMessage } from '../../models/error-message.interface';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\nexport function getCountryDescription( countryCode: string ) {\n  const countryObj = COUNTRY_LIST.find( val => countryCode === val.countryCode );\n  return countryObj ? countryObj.description : countryCode;\n}\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() errorMessage: ErrorMessage;\n  @Input() placeholder: string = 'Please select a country';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, periods, apostrophes and blank characters.',\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/datepicker/datepicker.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\nThis component reports the following errors.\n    required\n    dayOutOfRange\n    yearDistantPast\n    yearDistantFuture\n    noFutureDatesAllowed\n    invalidValue\n  These messages can be changed by updated messages using the errorMessages interface/\n  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                            Optional\n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:92\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:97\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:71\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:77\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:61\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:63\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n\n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n\n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                         {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                clearable\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clearable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent extends Base implements ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n  @Input() clearable: boolean = true;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n\n  {{label}} is required.\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}  {{label}} is required.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DuplicateCheckDirective.html":{"url":"directives/DuplicateCheckDirective.html","title":"directive - DuplicateCheckDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DuplicateCheckDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDuplicateCheck]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dupList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dupList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:32\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// Local function\nfunction checkForDuplicates( control: AbstractControl,\n                             dupList: string[] ): { [key: string]: boolean } | null {\n  // Duplicate check\n  if ( dupList && dupList.length ) {\n\n  const duplicate = dupList.find( x => x === control.value );\n  return (duplicate ? { 'duplicate': true } : null);\n  }\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonDuplicateCheck( dupList: string[] ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return checkForDuplicates( control, dupList );\n  };\n}\n\n@Directive({\n  selector: '[commonDuplicateCheck]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true}\n    ]\n})\nexport class DuplicateCheckDirective implements Validator {\n\n  @Input() dupList: string[];\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n  return checkForDuplicates( control, this.dupList );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailComponent.html":{"url":"components/EmailComponent.html","title":"component - EmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/email/email.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-email\n            \n\n            \n                styleUrls\n                ./email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Private\n                                criteria\n                            \n                            \n                                email\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/email/email.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Email'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteria\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /^(\\S+)@(\\S+)\\.(\\S+)$/\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:33\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter,\n  OnInit} from '@angular/core';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Email';\n  @Input() maxlength: string = '255';\n  @Input() labelforId: string = 'email_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.email = val;\n    }\n  }\n  get value() {\n    return this.email;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  email: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`\n  };\n\n  private criteria: RegExp = /^(\\S+)@(\\S+)\\.(\\S+)$/;\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n    this.email = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.email = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    if ( this.email ) {\n      const result = this.criteria.test( this.email );\n      return result ? null : { invalidEmail: true };\n    }\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidEmail}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidEmail}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorContainerComponent.html":{"url":"components/ErrorContainerComponent.html","title":"component - ErrorContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/error-container/error-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-error-container\n            \n\n            \n                styleUrls\n                ./error-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'common-error-container',\n  templateUrl: './error-container.component.html',\n  styleUrls: ['./error-container.component.scss']\n})\nexport class ErrorContainerComponent {\n\n  @Input() displayError: boolean = false;\n\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/error-message.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/error-message.interface.ts:13\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const LabelReplacementTag = '{label}';\nexport interface ErrorMessage {\n  required?: string;\n  [key: string]: string;\n}\n\n// To catch all occurances of the label tag in the message\nconst regExpLabel = new RegExp( LabelReplacementTag, 'g' );\n\n// Function only used with library\nexport function replaceLabelTag( str: string, value: string ) {\n  return str.replace( regExpLabel, value );\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ModalDirective} from 'ngx-bootstrap';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../models/images.model';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../models/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\n// const pdfjs = import('pdfjs-dist/build/pdf');\n// const pdfjsWorker = import('pdfjs-dist/build/pdf.worker.entry');\nimport { pdfJsWorker } from 'pdfjs-dist/build/pdf.worker.entry';\nPDFJS.workerSrc=pdfJsWorker;\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['images'] && (\n            (changes['images'].currentValue && changes['images'].currentValue.length === 0)\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    // console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n\n    /** Opens the file upload dialog from the browser. */\n    openFileDialog() {\n        console.log('opening file dialog');\n        this.browseFileRef.nativeElement.click();\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullNameComponent.html":{"url":"components/FullNameComponent.html","title":"component - FullNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/full-name/full-name.component.ts\n\n\n    \n        Description\n    \n    \n        FullNameComponent includes a first, middle, and last name field.  If you only\nneed an individual field, @see NameComponent.\nNote This component is in dev, there are issues around \"required\"\nTODO - Properly handle \"required\"\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent) }\n                \n            \n\n\n            \n                selector\n                common-full-name\n            \n\n            \n                styleUrls\n                ./full-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Public\n                                NameRegEx\n                            \n                            \n                                    Private\n                                pattern\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                firstNamelabel\n                            \n                            \n                                lastNamelabel\n                            \n                            \n                                middleNamelabel\n                            \n                            \n                                person\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                personChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'First Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Last Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        middleNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Middle Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        person\n                    \n                \n                \n                    \n                        Type :         Person\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        personChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FullNameErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            NameRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'is required'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n    \n        \n    \n                 \n\n\n\n    \n\n\n\n    \n\n\n\n\n    \n        \n            {{firstNamelabel}}\n            \n            \n                {{firstNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{middleNamelabel}}\n            \n            \n                {{middleNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{lastNamelabel}}\n            \n            \n                {{lastNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n\n        \n    \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     {{firstNamelabel}}                                        {{firstNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{middleNamelabel}}                                        {{middleNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{lastNamelabel}}                                        {{lastNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                         -->'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FullNameErrorMsg.html":{"url":"interfaces/FullNameErrorMsg.html","title":"interface - FullNameErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FullNameErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/full-name/full-name.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeocoderInputComponent.html":{"url":"components/GeocoderInputComponent.html","title":"component - GeocoderInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeocoderInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n\n\n    \n        Description\n    \n    \n        For TemplateForms, pass in an Address and recieve an Address\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-geocoder-input\n            \n\n            \n                styleUrls\n                ./geocoder-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geocoder-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                hasNoResults\n                            \n                            \n                                    Public\n                                isTypeaheadLoading\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                    Public\n                                selectedAddress\n                            \n                            \n                                    Public\n                                typeaheadList$\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onError\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                onLoading\n                            \n                            \n                                onNoResults\n                            \n                            \n                                onSelect\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                stripStringToMaxLength\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                label\n                            \n                            \n                                maxlength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl, geocoderService: GeocoderService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geocoderService\n                                                  \n                                                        \n                                                                        GeocoderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Default value : new Address()\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Address Lookup'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(err)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoading\n                        \n                        \n                    \n                \n            \n            \n                \nonLoading(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoResults\n                        \n                        \n                    \n                \n            \n            \n                \nonNoResults(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: TypeaheadMatch)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TypeaheadMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            stripStringToMaxLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stripStringToMaxLength(str: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasNoResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:49\n                            \n                        \n\n                \n                    \n                        Geocoder API has returned and has no results, an empty array. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTypeaheadLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:47\n                            \n                        \n\n                \n                    \n                        Is the Geocoder API request still in progress? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:45\n                            \n                        \n\n                \n                    \n                        The string in the box the user has typed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:57\n                            \n                        \n\n                \n                    \n                        The subject that triggers on user text input and gets typeaheadList$ to update.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:53\n                            \n                        \n\n                \n                    \n                        Similar to this.address, but we can null it when user is searching for new addresses \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeaheadList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:55\n                            \n                        \n\n                \n                    \n                        The list of results, from API, that is passed to the typeahead list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ChangeDetectorRef, Output, EventEmitter, SimpleChanges, OnChanges, Optional, Self } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, tap, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\nimport { GeocoderService, GeoAddressResult } from '../../services/geocoder.service';\nimport { CANADA } from '../country/country.component';\nimport { BRITISH_COLUMBIA } from '../province/province.component';\nimport { Address } from '../../models/address.model';\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\n\n\n/**\n * For TemplateForms, pass in an Address and recieve an Address\n * @example\n *           \n *           \n *\n * @note\n * For ReactiveForms, pass in a string and recieve a string.  If you need the\n * Address object you can use (addressChange) in addition.\n *\n * @example\n *           \n *          \n */\n@Component({\n  selector: 'common-geocoder-input',\n  templateUrl: './geocoder-input.component.html',\n  styleUrls: ['./geocoder-input.component.scss']\n})\nexport class GeocoderInputComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n\n  @Input() label: string = 'Address Lookup';\n  @Input() address: Address = new Address();\n  @Output() addressChange = new EventEmitter();\n  @Input() maxlength: string = '255';\n\n  /** The string in the box the user has typed */\n  public search: string;\n  /** Is the Geocoder API request still in progress? */\n  public isTypeaheadLoading: boolean = false;\n  /** Geocoder API has returned and has no results, an empty array. */\n  public hasNoResults: boolean = false;\n  public hasError: boolean = false;\n\n  /** Similar to this.address, but we can null it when user is searching for new addresses */\n  public selectedAddress: Address;\n  /** The list of results, from API, that is passed to the typeahead list */\n  public typeaheadList$: Observable; // Result from GeoCoderService address lookup\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n  constructor(@Optional() @Self() public controlDir: NgControl, private geocoderService: GeocoderService, private cd: ChangeDetectorRef) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => this.geocoderService.lookup(searchPhrase)),\n      catchError(err => this.onError(err))\n    );\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes &&\n      changes.address &&\n      changes.address.currentValue._geocoderFullAddress) {\n        const stripped = this.stripStringToMaxLength(changes.address.currentValue._geocoderFullAddress);\n\n        this.search = stripped;\n        this.isTypeaheadLoading = false;\n        this.hasNoResults = false;\n        this.selectedAddress = changes.address.currentValue;\n      }\n\n  }\n\n  onError(err): Observable {\n    this.hasError = true;\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onLoading(val: boolean): void {\n    this.isTypeaheadLoading = val;\n  }\n\n  // Note - this will fire after an onError as well\n  onNoResults(val: boolean): void {\n    this._onChange(null);\n    \n    // If we have results, the error has resolved (e.g. network has re-connected)\n    if (val === false) {\n      this.hasError = false;\n    }\n\n    // If we have no search text, hide the no results errors\n    if (this.search.length === 0) {\n      this.hasNoResults = false;\n      return;\n    }\n\n    this.hasNoResults = val;\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n    const data: GeoAddressResult = event.item;\n\n    const addr = new Address();\n    addr.city = data.city;\n    // GeoCoder is only for BC, Canada, values can be set.\n    addr.country = CANADA; // Default country is Canda\n    addr.province = BRITISH_COLUMBIA;  // Default province is BC\n    addr.street = data.street;\n    // Save and emit Address for (addressChange)\n    this.selectedAddress = addr;\n    this.addressChange.emit(this.selectedAddress);\n\n    // Output string to FormControl.\n    const stripped = this.stripStringToMaxLength(data.fullAddress);\n    this._onChange(stripped);\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    // Filter out 'enter' and other similar keyboard events that can trigger\n    // when user is selecting a typeahead option instead of entering new text.\n    // Without this filter, we do another HTTP request + force disiplay the UI\n    // for now reason\n    if (event.keyCode === 13 || event.keyCode === 9) {  // enter & tab\n      return;\n    }\n    // Clear out selection\n    this.selectedAddress = null;\n    this.searchText$.next(this.search);\n  }\n\n  onBlur(event): void {\n    this._onTouched();\n    this._onChange(this.search);\n  }\n\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.search = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  private stripStringToMaxLength(str: string){\n    const maxlength = parseInt(this.maxlength, 10);\n    return str.slice(0, maxlength);\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n  \n     &mdash; Loading\n      \n    \n  \n\n  \n    \n  \n\n\n        \n\n\n\n     &mdash; Selected\n        \n    \n\n\n\n     &mdash; No Results\n        \n    \n\n\n\n\n     &mdash; Error\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       — Loading                                 — Selected                 — No Results                 — Error            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'GeocoderInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Protected\n                                ADDRESS_URL\n                            \n                            \n                                    Protected\n                                BASE_URL\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Protected\n                                processResponse\n                            \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:53\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:23\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:60\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:31\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:39\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:17\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:12\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        HeaderComponent is the stylized blue header at the top of every single\napplication.  It has a built-in \"Skip to Content\" tab-accessible section\nthat's best practice for screen readers.  You must create an element with\nid='content' for this to work!  Best practice is to put this \"content\"\nelement as a wrapper aroud your \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SKIP_CONTENT_HASH\n                            \n                            \n                                    Public\n                                skipLinkPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateSkipToContentLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                routeIsActive\n                            \n                            \n                                updateSkipContentLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                logoSrc\n                            \n                            \n                                serviceName\n                            \n                            \n                                urlBaseName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        logoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/gov3_bc_logo.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        urlBaseName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateSkipToContentLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSkipToContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeIsActive\n                        \n                        \n                    \n                \n            \n            \n                \nrouteIsActive(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSkipContentLink\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSkipContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKIP_CONTENT_HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipLinkPath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n/**\n * HeaderComponent is the stylized blue header at the top of every single\n * application.  It has a built-in \"Skip to Content\" tab-accessible section\n * that's best practice for screen readers.  **You must create an element with\n * `id='content'` for this to work!**  Best practice is to put this \"content\"\n * element as a wrapper aroud your ``\n *\n */\n@Component({\n  selector: 'common-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() serviceName: string = '';\n  @Input() urlBaseName: string = '';\n  @Input() logoSrc: string = 'assets/gov3_bc_logo.png';\n\n  public skipLinkPath;\n  private SKIP_CONTENT_HASH = '#content';\n\n  constructor(private router: Router ) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n    ).subscribe(this.updateSkipContentLink.bind(this));\n\n    this.updateSkipContentLink();\n  }\n\n  routeIsActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  updateSkipContentLink() {\n    this.skipLinkPath = this.generateSkipToContentLink();\n  }\n\n  // Slightly complicated because we have to include the deployUrl in manually.\n  // If deployUrl changes this code must too.\n  //\n  // \"http://full-url.com/fpcare/example#content\"\n  private generateSkipToContentLink(): string {\n    // don't add duplicate #contents\n    if (window.location.href.indexOf(this.SKIP_CONTENT_HASH) !== -1) {\n      return window.location.href;\n    }\n\n    return `${window.location.origin}/${this.urlBaseName + this.router.url}#content`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{serviceName}}\n      Skip to main content\n    \n\n      \n        \n      \n      \n        \n      \n      \n        \n      \n  \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{serviceName}}      Skip to main content                                                                  -->  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioItems.html":{"url":"interfaces/IRadioItems.html","title":"interface - IRadioItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRadioItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/radio/radio.component.ts\n        \n\n            \n                Description\n            \n            \n                RadioComponent is a single radio which can be used to have multiple radios\nbased on the radio label values.\nTo display radio in a vertical style use display=\"table-row-group\" by default\nit shows in horizontal or inline display, display='inline-block' You can\nhave many radio's and the number is based on the Radio label Value. For 3\nradio buttons, radioLabels value is of type IRadioItems[].\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *        \n *        \n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpaEnvResponse.html":{"url":"interfaces/ISpaEnvResponse.html","title":"interface - ISpaEnvResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISpaEnvResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/consent-modal/consent-modal.component.ts\n        \n\n            \n                Description\n            \n            \n                Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\nthen proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\nmaintenance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_NOW\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_NOW\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_NOW:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { forwardRef, Component, EventEmitter, Input, Output, ViewChild, OnInit} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { CommonLogger } from '../../services/logger.service';\nimport { AbstractHttpService } from '../../services/abstract-api-service';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n/**\n * Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\n * then proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\n * maintenance.\n *\n *\n * @example\n*       \t\n*           \n * @export\n */\n\nexport interface ISpaEnvResponse {\n  SPA_ENV_MSP_MAINTENANCE_FLAG: string;\n  SPA_ENV_MSP_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_ACL_MAINTENANCE_FLAG: string;\n  SPA_ENV_ACL_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_START: string;\n  SPA_ENV_NOW: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_END: string;\n}\n\n// Disabling tslint for @example below.\n// tslint:disable:max-line-length\n\n/**\n * ConsentModalComponent, aka the \"Information Collection Notice\", is a modal\n * designed to be shown at the beginning of an application. It is a boilerplate\n * checkbox to consent to information collection.\n *\n * Currently this component requires the body to be manually set as a child\n * element (via transclusion)\n *\n * TODO - Set default body if none is passed in.\n *\n * @example\n *       \n *                      Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .\n *       \n *\n *\n *        // Component code - Remove backticks when copying (necessary to render docs)\n *        `@ViewChild('consentModal') consentModal: ConsentModalComponent`\n *        ...\n *        openModal(){\n *          this.consentModal.showFullSizeView();\n *        }\n */\n@Component({\n  selector: 'common-consent-modal',\n  templateUrl: './consent-modal.component.html',\n  styleUrls: ['./consent-modal.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ConsentModalComponent )}\n  ]\n})\n\nexport class ConsentModalComponent extends AbstractHttpService implements ControlValueAccessor, OnInit  {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    @Input() processName: string;\n\n    /**\n     * If `isUnderMaintenance` is true, then this will automatically try and\n     * make a request to the SPA ENV server to determine if it's in a\n     * maintenance window.  If your application determines this manually, leave\n     * this alone.\n     */\n    @Input() isUnderMaintenance: boolean = false;\n    @Input() title: string;\n    @Input() body: string; // = 'Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .';\n    @Input() agreeLabel: string = 'I have read and understand this info';\n    @Input() continueButton: string = 'Continue';\n    @Input() maintenanceFlag: string = 'false';\n    @Input() url: string = '/msp/api/env';\n    @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n    @Output() close = new EventEmitter();\n    @Output() cutOffDate: EventEmitter = new EventEmitter();\n    @Output() accept = new EventEmitter();\n\n    /**\n     * Used in cases where we have custom form controls inside NgContent that we\n     * wish to be satisifed before user can continue through modal.\n     */\n    @Input() disableContinue: boolean = false;\n\n    public spaEnvRes: ISpaEnvResponse = {} as any;\n    public maintenanceMessage: string;\n\n    // public maintenanceFlag: string ;\n\n\n    // tslint:disable-next-line:max-line-length\n    private _applicationHeaderMap: Map = new Map([['ACL', '{\"SPA_ENV_MSP_ACL_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_ACL_MAINTENANCE_MESSAGE\":\"\"}'], ['MSP', '{\"SPA_ENV_MSP_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_MAINTENANCE_MESSAGE\":\"\"}'], ['PA', '{\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\"}']]);\n    agreeCheck: boolean = false;\n\n    public _onChange = (_: any) => {};\n    public _onTouched = () => {};\n\n\n    constructor(protected http: HttpClient,  private logService: CommonLogger) {\n        super(http);\n    }\n\n\n\n    ngOnInit(): void {\n      // Called after ngOnInit when the component's or directive's content has been initialized.\n      // Add 'implements AfterContentInit' to the class.\n      if (this.isUnderMaintenance) {\n        this.inMaintenance();\n      }\n\n    }\n\n    /**\n     * Call this method to display the modal.\n     */\n    showFullSizeView() {\n        this.fullSizeViewModal.config.keyboard = false;\n        this.fullSizeViewModal.show();\n    }\n\n    continue() {\n        this.accept.emit(true);\n        this.fullSizeViewModal.hide();\n        this.close.emit();\n        this._onChange(true);\n        this._onTouched();\n    }\n\n    // Api callout to get the message from the Rapid code\n    sendSpaEnvServer(rapidResponseCode: string): Observable {\n        this._headers = new HttpHeaders({\n            'SPA_ENV_NAME': rapidResponseCode\n        });\n        return this.post(this.url, null);\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n      console.log('handleError', JSON.stringify(error));\n      if (error.error instanceof ErrorEvent) {\n          // Client-side / network error occured\n          console.error('MspMaintenanceService error: ', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code\n          console.error(`MspMaintenanceService Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n      }\n      // this.logService.log({event: 'error', key: 'Cannot get maintenance flag from spa-env-server'});\n\n      // A user facing erorr message /could/ go here; we shouldn't log dev info through the throwError observable\n      return of(error);\n  }\n\n\n  inMaintenance() {\n        const headerName = this._applicationHeaderMap.get(this.processName);\n\n        this.sendSpaEnvServer(headerName)\n                .subscribe(response => {\n                    this.spaEnvRes =  response;\n                    console.log(this.spaEnvRes);\n                    if (this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage =  this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_MESSAGE;\n                    }\n                    if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_START) {\n                        this.cutOffDate.emit(this.spaEnvRes);\n                    }\n\n            }, (error: Response | any) => {\n                console.log('Error when calling the MSP Maintenance: ' + error);\n                this.logService.log({\n                  event: 'ACL - SPA Env System Error',\n                  success: false,\n                  errMsg: 'ACL - SPA Env Rapid Response Error' + error\n                });\n        }\n\n      );\n  }\n\n  registerOnChange(fn: any): void {\n    this.accept.emit(fn) ;\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n\n    //\n  }\n\n  isContinueDisabled(): boolean {\n    return !this.agreeCheck || this.disableContinue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Maxlengths.html":{"url":"interfaces/Maxlengths.html","title":"interface - Maxlengths","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Maxlengths\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoHCommonLibraryError.html":{"url":"classes/MoHCommonLibraryError.html","title":"class - MoHCommonLibraryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoHCommonLibraryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/helpers/library-errorr.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/helpers/library-errorr.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MoHCommonLibraryError extends Error {\n    constructor(message?: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameComponent.html":{"url":"components/NameComponent.html","title":"component - NameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/name/name.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-name\n            \n\n            \n                styleUrls\n                ./name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                nameStr\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:32\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.scss']\n})\nexport class NameComponent extends Base implements ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Name';\n  @Input() maxlen: string = '255';\n  @Input() labelforId: string = 'name_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.nameStr = val;\n    }\n  }\n  get value() {\n    return this.nameStr;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  public nameStr: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.nameStr = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlen, 10 );\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{label}} is required.\n  \n  \n     1; else initInvalid;\">\n        {{label}} must begin with a letter and cannot include special characters except hyphens,\n        periods, apostrophes and blank characters.\n    \n  \n\n\n\n  {{label}} must be with a letter.\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{label}} is required.         1; else initInvalid;\">        {{label}} must begin with a letter and cannot include special characters except hyphens,        periods, apostrophes and blank characters.        {{label}} must be with a letter.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It should be used on every page unless there is a good\nexception.\nNote: CommonFormActionBar (and SubmitBar) must come AFTER this element, not\ninside in version 2.0.0 and above.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It should be used on every page unless there is a good\n * exception.\n *\n * Note: CommonFormActionBar (and SubmitBar) must come *AFTER* this element, not\n * inside in version 2.0.0 and above.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageListInterface.html":{"url":"interfaces/PageListInterface.html","title":"interface - PageListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for used when checking completeness of item\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isComplete\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:13\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n// TODO: Revise - does not work quite correct when there is no landing page.\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n// IMPROVEMENT: Add a 'flex' @Input(), that adds display flex.  Importantly, it\n// must set flex on the wrapper/row divs in the html.  There are some cases\n// (like SiteReg) where having flex layout is beneficial.  My first suggestion\n// was to simply style the , but the problem is that we\n// need flex on the child elements of page-section (that still wrap ng-content).\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:142\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:157\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                TODO:  Convert to custom form control - remove ngForm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiDobFormat\n                            \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                                \n                                    fullname\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiDobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyyMMdd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyy/MM/dd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:18\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:86\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:30\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        fullname\n                    \n                \n\n                \n                    \n                        getfullname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:67\n                                \n                            \n                    \n                        \n                                Returns the person's full name - first middle last name concatenated together \n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Base } from './base';\nimport { format, startOfToday, differenceInYears } from 'date-fns';\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'yyyy/MM/dd';\n  public apiDobFormat = 'yyyyMMdd';\n\n  // Initialize dob to nulls - To be removed\n  public dateOfBirth: Date;\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.apiDobFormat ) : null;\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.dobFormat ) : null;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Returns the person's full name - first middle last name concatenated together */\n  get fullname() {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.middleName ) {\n      _name = _name ? _name.concat( ' ' + this.middleName ) : this.middleName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): Number {\n    return differenceInYears( this.dateOfBirth, startOfToday() );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth = object.dateOfBirth;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhnComponent.html":{"url":"components/PhnComponent.html","title":"component - PhnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phn/phn.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phn\n            \n\n            \n                styleUrls\n                ./phn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                phn\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validatePhn\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isBCPhn\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phn/phn.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isBCPhn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Personal Health Number (PHN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phn_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validatePhn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePhn()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:33\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\n\n@Component({\n  selector: 'common-phn',\n  templateUrl: './phn.component.html',\n  styleUrls: ['./phn.component.scss']\n})\nexport class PhnComponent extends AbstractFormControl implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Personal Health Number (PHN)';\n  @Input() placeholder: string = '1111 111 111';\n  @Input() labelforId: string = 'phn_' + this.objectId;\n\n  // Self-Validation inputs\n  @Input() isBCPhn: boolean = true;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`,\n  };\n\n  @Input()\n  set value( val: string ) {\n    if ( val) {\n      this.phn = val;\n    }\n  }\n  get value() {\n    return this.phn;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  phn: string = '';\n  mask: any;\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n      [NUMBER, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.phn ) { // IE fix when focus does not display required error\n      this.phn = value;\n      this._onChange( value );\n      this.valueChange.emit( value );\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.phn = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const validatePhnResult = this.validatePhn();\n    if ( validatePhnResult ) {\n      return validatePhnResult;\n    }\n    return null;\n   }\n\n  private validatePhn(): ValidationErrors | null {\n\n    if ( this.phn && this.phn.trim().length > 0 ) {\n\n      // Init weights and other stuff\n      const weights: number[] = [-1, 2, 4, 8, 5, 10, 9, 7, 3, -1];\n      let sumOfRemainders = 0;\n\n      // Clean up string\n      const value = this.phn.trim();\n      this.phn = value\n                  .replace( /^0+/, '' ) // remove leading zeros\n                  .replace(/_/g, '') // remove underlines\n                  .replace(/\\s/g, ''); // spaces\n\n      // Test for length\n      if (this.phn.length !== 10) {\n        return { 'invalid': true };\n      }\n      // Look for a number that starts with 9 if BC only\n      if (this.isBCPhn && this.phn[0] !== '9') {\n        return { 'invalid': true };\n      } else if (!this.isBCPhn && this.phn[0] === '9') { // Number cannot have 9\n        return { 'invalid': true };\n      }\n\n      // Walk through each character\n      for (let i = 0; i  0) {\n          // multiply the value against the weight\n          result = num * weights[i];\n\n          // divide by 11 and save the remainder\n          result = result % 11;\n\n          // add it to our sum\n          sumOfRemainders += result;\n        }\n      }\n\n      // mod by 11\n      const checkDigit = 11 - (sumOfRemainders % 11);\n\n      // if the result is 10 or 11, it is an invalid PHN\n      if (checkDigit === 10 || checkDigit === 11) {\n        return { 'invalid': true };\n      }\n\n      // Compare against 10th digitfinalDigit\n      const finalDigit = Number(this.phn.substring(9, 10));\n      if (checkDigit !== finalDigit) {\n        return { 'invalid': true };\n      }\n    }\n    return null;\n  }\n\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{_defaultErrMsg.required}}\n    \n    \n      {{_defaultErrMsg.invalid}}\n    \n    \n      {{_defaultErrMsg.duplicate}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{_defaultErrMsg.required}}              {{_defaultErrMsg.invalid}}              {{_defaultErrMsg.duplicate}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneNumberComponent.html":{"url":"components/PhoneNumberComponent.html","title":"component - PhoneNumberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhoneNumberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phone-number/phone-number.component.ts\n\n\n    \n        Description\n    \n    \n        PhoneNumberComponent is a used to show the Phone number.\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phone-number\n            \n\n            \n                styleUrls\n                ./phone-number.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-number.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                            \n                                    Static\n                                PhoneNumberRegEx\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                setPhoneNumber\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowInternational\n                            \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phone-number/phone-number.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowInternational\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mobile'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetPhoneNumber(value)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { incompleteValue: boolean; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    incompleteValue: `${LabelReplacementTag} does not appear to be valid.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PhoneNumberRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:50\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  Optional,\n  Self,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, NgForm, NgControl } from '@angular/forms';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\n\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\n/**\n * PhoneNumberComponent is a used to show the Phone number.\n *\n *\n * @example\n *         \n * @export\n */\n\n\n@Component({\n  selector: 'common-phone-number',\n  templateUrl: './phone-number.component.html',\n  styleUrls: ['./phone-number.component.scss'],\n})\n\nexport class PhoneNumberComponent extends AbstractFormControl implements OnInit {\n\n  static PhoneNumberRegEx = '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$';\n  @Input() displayMask: boolean = true;\n  @Input() required: boolean = false;\n  @Input() label: string = 'Mobile';\n\n  @Input() allowInternational: boolean = true;\n\n  // Setter/getter for when not used in form (ex. data dislayed but not edittable)\n  @Input()\n  set value( val: string ) {\n    if ( val !== undefined ) {\n      this.phoneNumber = val;\n    }\n  }\n  get value() {\n    return this.phoneNumber;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  public phoneNumber: string = '';\n\n  public mask: any;\n  public placeholder: string;\n\n  // Abstact variable defined\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    incompleteValue: `${LabelReplacementTag} does not appear to be valid.`\n  };\n\n  constructor(@Optional() @Self() public controlDir: NgControl) {\n    super();\n    if (controlDir) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const internationalPrefix = '+1';\n    this.placeholder = '(555) 555-5555';\n    this.mask = ['(', /[2-9]/, NUMBER, NUMBER, ')', SPACE, NUMBER, NUMBER, NUMBER, '-', NUMBER, NUMBER, NUMBER, NUMBER];\n\n    if (this.allowInternational) {\n      this.placeholder = `${internationalPrefix} ${this.placeholder}`;\n      const prefixArrayOfChar = internationalPrefix.split(''); // ['+', '1']\n      this.mask = [...prefixArrayOfChar, SPACE, ...this.mask];\n    }\n\n\n\n    // Register self validation\n    Promise.resolve().then(() => {\n\n      if (this.controlDir) {\n\n        const allValidators = [this.validateSelf.bind(this)];\n        if (this.controlDir.control.validator) {\n          allValidators.push(this.controlDir.control.validator);\n        }\n        this.controlDir.control.setValidators(allValidators);\n        this.controlDir.control.updateValueAndValidity();\n      }\n    });\n\n  }\n\n  setPhoneNumber(value) {\n    // console.log( 'setPhoneNumber: ', value );\n    this.phoneNumber = value;\n    this.valueChange.emit(this.phoneNumber);\n    this._onChange(value);\n  }\n\n  onBlur( $event ) {\n    this._onTouched($event);\n  }\n\n\n  writeValue(value: any): void {\n    if  (value !== undefined ) {\n      // phoneNumber is where the actual data is displayed to user for this\n      // component\n      this.phoneNumber = value;\n    }\n  }\n\n  private validateSelf() {\n    const value = this.phoneNumber;\n    const phoneLength = this.allowInternational ? 11 : 10;\n\n    if (value) {\n      const stripped = value\n        .replace(/_/g, '') // remove underlines\n        .replace(/\\s/g, '') // spaces\n        .replace(/\\+|-/g, '') // + or - symbol\n        .replace('(', '')\n        .replace(')', '');\n\n      const valid = stripped.length === phoneLength;\n      return valid ? null : { incompleteValue: true };\n\n    }\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n  \n\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.incompleteValue}}\n  \n\n\n\n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{_defaultErrMsg.required}}        {{_defaultErrMsg.incompleteValue}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhoneNumberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                mask\n                            \n                            \n                                postalCode\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                upperCasePipe\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                displayMask\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postalCode_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'A1A 1A1'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:102\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:30\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { LETTER, NUMBER, SPACE } from '../../models/mask.constants';\nimport { Base } from '../../models/base';\nimport { ErrorMessage } from '../../../public_api';\n\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss']\n})\nexport class PostalCodeComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() placeholder: string = 'A1A 1A1';\n  @Input() labelforId: string = 'postalCode_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    // console.log( 'set value: ', val );\n    if (val) {\n      this.postalCode = val;\n    }\n  }\n  get value() {\n    // console.log( 'get value: ', this.postalCode );\n    return this.postalCode;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  postalCode: string = '';\n  mask: any;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n     //console.log( 'onValueChange: ', value, this.postalCode );\n\n    if ( value !== this.postalCode ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.postalCode = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.postalCode = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n  \n  \n    \n      {{label}} {{defaultErrMsg.required}}\n    \n    \n      {{defaultErrMsg.pattern}} {{placeholder}}.\n    \n    \n      {{defaultErrMsg.invalidBCPostal}}\n    \n    \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} {{defaultErrMsg.required}}              {{defaultErrMsg.pattern}} {{placeholder}}.              {{defaultErrMsg.invalidBCPostal}}            {{label}} {{defaultErrMsg.invalidChar}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProvinceComponent.html":{"url":"components/ProvinceComponent.html","title":"component - ProvinceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProvinceComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/province/province.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-province\n            \n\n            \n                styleUrls\n                ./province.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./province.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                province\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                provinceList\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/province/province.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'province_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please select a province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        provinceList\n                    \n                \n                \n                    \n                        Type :         ProvinceList[]\n\n                    \n                \n                \n                    \n                        Default value : PROVINCE_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:61\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:57\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlength: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidChar}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProvinceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/province/province.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlength: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioComponent.html":{"url":"components/RadioComponent.html","title":"component - RadioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/radio/radio.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-radio\n            \n\n            \n                styleUrls\n                ./radio.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                _value\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setStatus\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                instructionText\n                            \n                            \n                                label\n                            \n                            \n                                radioLabels\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/radio/radio.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :     \"table-row-group\" | \"inline-block\"\n\n                    \n                \n                \n                    \n                        Default value : 'inline-block'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instructionText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioLabels\n                    \n                \n                \n                    \n                        Type :         IRadioItems[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ]\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:75\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:68\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *        \n *        \n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  {{instructionText}}\n  \n    \n      \n      \n      {{val.label}}\n      \n    \n  \n\n  \n    {{_defaultErrMsg.required}}\n  \n\n\n\n\n  \n    \n  \n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}  {{instructionText}}                        {{val.label}}                  {{_defaultErrMsg.required}}              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyFields.html":{"url":"interfaces/ReadOnlyFields.html","title":"interface - ReadOnlyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyFields\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardService.html":{"url":"guards/RouteGuardService.html","title":"guard - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/route-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Use this service to implement Route Guards in your application. This is for a\ntypical form flow, where the user must proceed sequentially from one page to\nthe next.\nTo setup, you must:\n\nCreate a service implementing the abstract methods in AbstractPgService (\"RegistrationService\")\nSetup AbstractPgCheckService in NgModule providers, to useExisting the service from previous step.\nAdd this RouteGuardService to same providers from previous step.\nConfigure routes to use RouteGuardService - canActivate or canActivateChild\nHave each \"page\" in the form call setPageIncomplete() or setPageComplete() (from the \"RegistrationService\")\n\nYou must make sure to setup AbstractPgCheckService in NgModules correctly.\n\n                \n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [RouteGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.setPageIncomplete(); }\ncontinue() { this.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPgCheckService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/route-guard.service.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPgCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:73\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\n\n/**\n * Use this service to implement Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPgService` (\"RegistrationService\")\n * 2. Setup AbstractPgCheckService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this RouteGuardService to same providers from previous step.\n * 4. Configure routes to use RouteGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"RegistrationService\")\n *\n *\n * You must make sure to setup AbstractPgCheckService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [RouteGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.setPageIncomplete(); }\n *                continue() { this.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router,\n    private service: AbstractPgCheckService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Pre-requisite has not be completed\n     */\n    if (false === this.service.isPrerequisiteComplete()) {\n      this.router.navigate([this.service.getStartUrl()]);\n      return false;\n    }\n\n    if (false === this.service.isPageComplete(pageUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SampleImageInterface.html":{"url":"interfaces/SampleImageInterface.html","title":"interface - SampleImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SampleImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sample-modal/sample-modal.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        desc\n                                \n                                \n                                        path\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleModalComponent.html":{"url":"components/SampleModalComponent.html","title":"component - SampleModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SampleModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sample-modal/sample-modal.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sample-modal\n            \n\n            \n                styleUrls\n                ./sample-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sample-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sampleModal\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                    Public\n                                openModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :         SampleImageInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sampleModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('samplesModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{title}}\n        \n          \n        \n      \n\n      \n        \n          {{image.title}}\n          \n        \n      \n\n      \n        Close\n      \n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{title}}                                                        {{image.title}}                                      Close            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SampleModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { ProgressbarModule, ModalModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { CountryComponent } from './components/country/country.component';\nimport { ProvinceComponent } from './components/province/province.component';\nimport { CityComponent } from './components/city/city.component';\nimport { StreetComponent } from './components/street/street.component';\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ConsentModalComponent } from './components/consent-modal/consent-modal.component';\nimport { NameComponent } from './components/name/name.component';\nimport { PhoneNumberComponent } from './components/phone-number/phone-number.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AccordionCommonComponent } from './components/accordion/accordion.component';\nimport { ValidateNameDirective } from './components/name/validate-name.directive';\nimport { SinComponent } from './components/sin/sin.component';\nimport { PhnComponent } from './components/phn/phn.component';\nimport { FullNameComponent } from './components/full-name/full-name.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ValidateBcPostalDirective } from './components/postal-code/validate-bc-postal.directive';\nimport { XiconButtonComponent } from './components/xicon-button/xicon-button.component';\nimport { DuplicateCheckDirective } from './components/duplicate-check/duplicate-check.directive';\nimport { ErrorContainerComponent } from './components/error-container/error-container.component';\nimport { ValidateStreetDirective } from './components/street/validate-street.directive';\nimport { ValidateCityDirective } from './components/city/validate-city.directive';\nimport { ValidateRegionDirective } from './components/validate-region/validate-region.directive';\nimport { ValidatePostalcodeDirective } from './components/postal-code/validate-postalcode.directive';\nimport { SampleModalComponent } from './components/sample-modal/sample-modal.component';\nimport { EmailComponent } from './components/email/email.component';\nimport { ConfirmTemplateComponent } from './components/confirm-template/confirm-template.component';\nimport { GeocoderInputComponent } from './components/geocoder-input/geocoder-input.component';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\n\n\nconst componentList = [\n  CoreBreadcrumbComponent,\n  FormActionBarComponent,\n  PageFrameworkComponent,\n  PasswordComponent,\n  WizardProgressBarComponent,\n  DateComponent,\n  DatepickerComponent,\n  FileUploaderComponent,\n  ThumbnailComponent,\n  FormSubmitBarComponent,\n  PostalCodeComponent,\n  PageSectionComponent,\n  DropdownComponent,\n  ToggleComponent,\n  AddressComponent,\n  CountryComponent,\n  ProvinceComponent,\n  CityComponent,\n  StreetComponent,\n  ButtonGroupComponent,\n  ButtonComponent,\n  CheckboxComponent,\n  ConsentModalComponent,\n  NameComponent,\n  FullNameComponent,\n  PhoneNumberComponent,\n  RadioComponent,\n  AccordionCommonComponent,\n  SinComponent,\n  PhnComponent,\n  HeaderComponent,\n  XiconButtonComponent,\n  ErrorContainerComponent,\n  SampleModalComponent,\n  EmailComponent,\n  ConfirmTemplateComponent,\n  GeocoderInputComponent,\n\n\n  // Directives\n  ValidateNameDirective,\n  DuplicateCheckDirective,\n  ValidateBcPostalDirective,\n  ValidateStreetDirective,\n  ValidateCityDirective,\n  ValidateRegionDirective,\n  ValidatePostalcodeDirective,\n  DateFieldFormatDirective\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  declarations: [\n    componentList,\n  ],\n  exports: [\n    componentList\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SinComponent.html":{"url":"components/SinComponent.html","title":"component - SinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sin/sin.component.ts\n\n\n    \n        Description\n    \n    \n        This component reports the following errors.\n    required\n    invalid\n    duplicate\n  These messages can be changed by updated messages using the errorMessages interface\n  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sin\n            \n\n            \n                styleUrls\n                ./sin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                sin\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                    Private\n                                validateSin\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Social Insurance Number (SIN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sin_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSin()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:45\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\n\n/**\n * This component reports the following errors.\n *    required\n *    invalid\n *    duplicate\n *\n *  These messages can be changed by updated messages using the errorMessages interface\n *  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n */\n\n@Component({\n  selector: 'common-sin',\n  templateUrl: './sin.component.html',\n  styleUrls: ['./sin.component.scss']\n})\nexport class SinComponent extends AbstractFormControl implements OnInit {\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  };\n\n  sin: string = '';\n  mask: any;\n\n  @Input() label: string = 'Social Insurance Number (SIN)';\n  @Input() maxlength: string = '15';\n  @Input() placeholder: string = '111 111 111';\n  @Input() labelforId: string = 'sin_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    console.log( 'set value: ', val );\n    if ( val ) {\n      this.sin = val;\n    }\n  }\n  get value() {\n    return this.sin;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.sin ) { // IE fix when focus does not display required error\n      this.sin = value;\n      this._onChange( value );\n      this.valueChange.emit( value );\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.sin = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const validateResult = this.validateSin();\n    if ( validateResult ) {\n      return validateResult;\n    }\n    return null;\n   }\n\n   private validateSin(): ValidationErrors | null {\n\n    if ( this.sin && this.sin.trim().length > 0 ) {\n\n      // Init weights and other stuff\n      const weights: number[] = [1, 2, 1, 2, 1, 2, 1, 2, 1];\n      let sum = 0;\n\n      // Clean up string\n      const value = this.sin.trim();\n      this.sin = value\n                  .replace(/_/g, '') // remove underlines\n                  .replace(/\\s/g, ''); // spaces\n\n      // Test for length\n      if (this.sin.length !== 9) {\n        return { 'invalid': true };\n      }\n\n      // Test for string of zeros\n      if ( this.sin === '000000000') {\n        return { 'invalid': true };\n      }\n\n      // Walk through each character\n      for (let i = 0; i  9) {\n          result = result - 9;\n        }\n\n        // add it to our sum\n        sum += result;\n      }\n\n      // The sum must be divisible by 10\n      if (sum % 10 !== 0) {\n        return { 'invalid': true };\n      }\n\n    }\n\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{_defaultErrMsg.required}}\n    \n    \n      {{_defaultErrMsg.invalid}}\n    \n    \n      {{_defaultErrMsg.duplicate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{_defaultErrMsg.required}}              {{_defaultErrMsg.invalid}}              {{_defaultErrMsg.duplicate}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { CommonImage } from '../../models/images.model';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateBcPostalDirective.html":{"url":"directives/ValidateBcPostalDirective.html","title":"directive - ValidateBcPostalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateBcPostalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateBcPostal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-bc-postal.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\n// TODO: determine whether this is used or not.  If not use, maybe it can be removed\n//  @deprecated - logic added to validate-postalcode directive\nexport const commonValidateBcPostal: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for BC postal code\n  */\n const criteria: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$');\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidBCPostal': true };\n  }\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateBcPostal]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true}\n  ]\n})\nexport class ValidateBcPostalDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateBcPostal( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateCityDirective.html":{"url":"directives/ValidateCityDirective.html","title":"directive - ValidateCityDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateCityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/city/validate-city.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateCity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/validate-city.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateCity: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for  city names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z0-9\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateCity]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true}\n  ]\n})\nexport class ValidateCityDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateCity( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateNameDirective.html":{"url":"directives/ValidateNameDirective.html","title":"directive - ValidateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/name/validate-name.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/validate-name.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateName: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n   /**\n   * Valid characters for name\n   */\n  const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n};\n\n\n@Directive({\n  selector: '[commonValidateName]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true}\n  ]\n})\nexport class ValidateNameDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateName( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePostalcodeDirective.html":{"url":"directives/ValidatePostalcodeDirective.html","title":"directive - ValidatePostalcodeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePostalcodeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePostalcode]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bcOnly\n                            \n                            \n                                hasMask\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bcOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hasMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:48\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// local function\nfunction validatePC(control: AbstractControl, hasMask: boolean, bcOnly: boolean): { [key: string]: boolean } | null {\n\n  if ( control.value ) {\n\n    if ( hasMask ) {\n      const cdnFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n\n      if ( !cdnFormat.test( control.value ) ) {\n        return { 'pattern': true };\n      }\n    } else {\n      const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9 ]*$' );\n\n      if ( !criteria.test( control.value ) ) {\n        return  { 'invalidChar': true };\n      }\n    }\n\n    if ( bcOnly ) {\n      // Valid characters for BC postal code\n      const bcFormat: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Z][ ]?\\\\d[ABCEGHJ-NPRSTV-Z]\\\\d$');\n      if ( !bcFormat.test( control.value ) ) {\n        return { 'invalidBCPostal': true };\n      }\n    }\n  }\n  return null;\n}\n\nexport function commonValidatePostalcode( hasMask: boolean, bcOnly: boolean ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return validatePC( control, hasMask , bcOnly);\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePostalcode]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true}\n  ]\n})\nexport class ValidatePostalcodeDirective implements Validator {\n  @Input() hasMask: boolean = true;\n  @Input() bcOnly: boolean = false;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePC( control, this.hasMask , this.bcOnly );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateRegionDirective.html":{"url":"directives/ValidateRegionDirective.html","title":"directive - ValidateRegionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateRegionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/validate-region/validate-region.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateRegion]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/validate-region/validate-region.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateRegion: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for country/province/region names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateRegion]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true}\n  ]\n})\nexport class ValidateRegionDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateRegion( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateStreetDirective.html":{"url":"directives/ValidateStreetDirective.html","title":"directive - ValidateStreetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateStreetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/street/validate-street.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateStreet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/validate-street.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateStreet: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for street\n  */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9#/&\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateStreet]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true}\n  ]\n})\nexport class ValidateStreetDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateStreet( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../models/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): Number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.includes(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XiconButtonComponent.html":{"url":"components/XiconButtonComponent.html","title":"component - XiconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  XiconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/xicon-button/xicon-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-xicon-button\n            \n\n            \n                styleUrls\n                ./xicon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xicon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n                \n                    \n                        Label to use for accessibility.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBtnClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBtnClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MoHCommonLibraryError } from '../../../helpers/library-errorr';\n\n@Component({\n  selector: 'common-xicon-button',\n  templateUrl: './xicon-button.component.html',\n  styleUrls: ['./xicon-button.component.scss']\n})\nexport class XiconButtonComponent implements OnInit {\n\n  /**\n   * Label to use for accessibility.\n   * @required\n   */\n  @Input() label: string;\n  /**\n   * @deprecated - Remove at breaking change and go to (click)\n   */\n  @Output() clickEvent: EventEmitter = new EventEmitter();\n  @Output() click: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.label) {\n      // todo - change to MohCommmonLibraryError -> test in IE10\n      // throw Error('common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.');\n      const msg = `common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.\n      e.g. \n`; // Intentional to create a blank line between our error and stack trace.\n      throw new MoHCommonLibraryError(msg);\n    }\n  }\n\n  onBtnClick() {\n    this.clickEvent.emit();\n    this.click.emit();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'XiconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nUnreleased \"moh-common-lib\" (2019-11-15)\n3.0.0-rc.15 \"moh-common-lib\" (2019-11-15)\nCode Refactoring\n\nemail component uses abstract control class and is self-validing, units tests started (f21d329)\n\n3.0.0-rc.14 \"moh-common-lib\" (2019-11-14)\nBug Fixes\n\nrange dates indicate no future or past dates allowed (see notes at top of file) (a73785f)\n\nCode Refactoring\n\nprovince component uses abstract control class, added ng-select to styles for testing (48e2120)\ncity component uses abstract control class (492934b)\ncommonPhnValidation deprecriated, phnComponent modified to be self-validating (cc9910b)\ncommonValidateSin removed, sin component self validates, reactive tests started for sin (e0bd207)\nstreet component uses abstract control class (36eeddb)\n\nFeatures\n\nAdded CommonLogEvents to commonLogger - common events that apps have when logging (a1b8211)\n\nTests\n\nrefactored tests so that call helper functions (21afb82)\n\n3.0.0-rc.13 \"moh-common-lib\" (2019-11-06)\nBug Fixes\n\nadded logic to abstract-form-control to check for no label submitted. (ed615a6)\ncheck for label not passed in set default value as 'Field' (655a0fd)\n\n3.0.0-rc.12 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nGeocoderInput: Now emits an onChange with null if it has no results. (009d779)\n\n3.0.0-rc.11 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nFileUploader: Fix a11y for danging aria label (3f6a466)\nCR18890 - added check for year (679ac15)\n\nTests\n\nRemove extra unnecessary tick() call. (8248e61)\nUnit tests for phone/radio passing.  Also internal refactoring. (14bce6e)\n\n3.0.0-rc.10 \"moh-common-lib\" (2019-11-01)\nFeatures\n\nPhone: Phone now has an 'incompleteValue' error and text. (a1bd381)\n\n3.0.0-rc.9 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Remove debug label (a7efeee)\n\n3.0.0-rc.8 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Replace (chance) event with (blur) for IE (61b54fd)\n\n3.0.0-rc.7 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nPhoneNumber: IE fix by changing event (71eb531)\n\nFeatures\n\nPhoneNumber: Add allowInternational flag to disable the \"+1\" (108e46b)\nPhoneNumber: Now a self-validating component. (6650ef8)\n\nBREAKING CHANGES\n\nPhoneNumber: Deleted commonValidatePhone directive\n\n3.0.0-rc.6 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nDate: Remove ngOnChanges (015602c)\nadded ngChanges to date to detect label changes, no longer can add question by default (38c822b)\nadded placeholder country & regexp for label (61c0cdc)\n\n3.0.0-rc.5 \"moh-common-lib\" (2019-10-28)\nFeatures\n\nadded fullname to person.model (28d9585)\nAbstractAPI: Has a generateUUID method. (5362c67)\n\n3.0.0-rc.4 \"moh-common-lib\" (2019-10-23)\nBug Fixes\n\nDate format string modified to use format from date-fns module (4bb54c0)\nFixed date component to handle no validators on the control. (5441be2)\n\n3.0.0-rc.3 \"moh-common-lib\" (2019-10-22)\n3.0.0-rc.2 \"moh-common-lib\" (2019-10-22)\nBug Fixes\n\nDate:  Setting restrictDate to \"past\" no longer includes today, matching previous behaviour (8fc79af)\n\n3.0.0-rc.1 \"moh-common-lib\" (2019-10-22)\nBuild\n\nAdd new command to build release candidates for v3 (e89e6f3)\n\nFeatures\n\nDate: DateComponent is NgControl (51f2ea4)\n\n3.0.0-rc.0 \"moh-common-lib\" (2019-10-22)\n2.28.0 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\ncall _onChange to trigger form validations (c91fef0)\n\n2.27.2 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\nFileUploader: Attempted fix at PDF parsing for Edge using worker. (2ebd235)\n\n2.27.1 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nConsentModal: disableContinue works correctly (f18457b)\n\n2.27.0 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nGeocoderService: Change default API filter (34f0a40)\nGeocoderService: Exendable methods via inheiritance (7355610)\n\nFeatures\n\nGeocoderInput: New Component CommonGeocoderInput (224e362)\nGeocoderInput: Now a ControlValueAccessor (730f9c7)\n\n2.26.0 \"moh-common-lib\" (2019-10-15)\nBug Fixes\n\nlogic in validate postal-code directive to handle bcOnly flag (88bc3f3)\n\nDocumentation\n\nPublishing: Make it more clear when to use \"patch\" or \"minor\" versions. (02cb2c5)\n\nFeatures\n\nCAPTCHA: Shows required error on touched (16be24b)\nadded bc only postal code check for address component (e6db87e)\nConsentModal: Add disableContinue @Input(), used with custom controls (8aa41ec)\n\n2.24.0 \"moh-common-lib\" (2019-10-11)\nFeatures\n\nFileUploader: Add a blank \"Add\" thumbnail user can click (1251212)\nAdded confirmation template for response pages (1f1a0f9)\nAdded confirmation template for response pages (aa2b7f9)\n\n2.23.0 \"moh-common-lib\" (2019-10-10)\nFeatures\n\nadded abilty to modify messages in date rather than replace. (2235059)\n\n2.22.0 \"moh-common-lib\" (2019-10-09)\nFeatures\n\ncommonValidatePhone: Phone format validation (510ad9e)\n\n2.21.0 \"moh-common-lib\" (2019-10-09)\nBug Fixes\n\nPhone: Can now use [ngModel] by itself (5910979)\n\nFeatures\n\nemail: Create EmailComponent (based on Name) (27b488b)\n\nStyles\n\nPageSection: Change bullet styles (f541d81)\n\n2.20.1 \"moh-common-lib\" (2019-10-09)\nStyles\n\nHeader: Header text wraps on mobile, no longer breaking mobile (1303722)\n\n2.20.0 \"moh-common-lib\" (2019-10-08)\nFeatures\n\nadded ability to set query parameters on navigate method in abstract form (4f3e59f)\n\n2.19.0 \"moh-common-lib\" (2019-10-01)\nBug Fixes\n\ndate component to check for null, undefined and zero, trigger year validation on month change (0ed3875)\nfile uploader - check to confirm have array to check length in onChange method (c6067fd)\n\n2.18.1 \"moh-common-lib\" (2019-09-27)\nBug Fixes\n\nfixed off by 1 date in year validator (9a38474)\n\n2.18.0 \"moh-common-lib\" (2019-09-26)\nBug Fixes\n\nbug in file uploader - check for null array (cf962bc)\n\nFeatures\n\nadded sample-modal component to display sample doc images (4f8f2e7)\n\n2.17.1 \"moh-common-lib\" (2019-09-25)\nBug Fixes\n\nadded check for errors when component not used as form control (7d274e8)\ncolor-success changed to 83D31D to match color on mockups (c64c066)\nerror in checkbox html check errors exist (29c5160)\n\nDocumentation\n\nTODO: Create TODO file with list of breaking changes for version 3 (9dc5375)\nTODO: Rename todo to a markdown file for GitHub support (496c252)\n\n2.17.0 \"moh-common-lib\" (2019-09-24)\nBug Fixes\n\nadded space in error message (radio) (6427f10)\nbug introduced when try to display errors when field touched (radio/checkbox) (aceb028)\ncheckbox fixed to be custom form control (1c51f01)\nset radio touched on blur, display required message when touched (c78856a)\n\nDocumentation\n\nTweak publishing so it passes markdownlint (901885e)\n\nFeatures\n\nAdded required error message to component (d5dd02f)\n\n2.16.0 \"moh-common-lib\" (2019-09-20)\nBug Fixes\n\nupdate address1 when street updated (29e521c)\n\n2.15.0 \"moh-common-lib\" (2019-09-19)\nBug Fixes\n\nremoved check for US from address component (996cad7)\n\n2.14.0 \"moh-common-lib\" (2019-09-17)\nFeatures\n\nSet label defaults to yes/no in radio component (66e58e7)\n\n2.13.0 \"moh-common-lib\" (2019-09-17)\nBug Fixes\n\nclear province when country changes, placeholders updated (8380850)\n\n2.12.0 \"moh-common-lib\" (2019-09-16)\nBug Fixes\n\nradio buttons working for more than 2 options as custom form control (f2ccfe6)\nRemoved check for undefined (7398e93)\n\nFeatures\n\nAdded ability to disable specfic fields in address component (5965aec)\n\n2.11.0 \"moh-common-lib\" (2019-09-12)\nBug Fixes\n\nPostal code clears when country changes to Canada (2c0b127)\n\nDocumentation\n\nAdd info on publishing new builds (9855d9c)\n\n2.10.0 \"moh-common-lib\" (2019-09-05)\nBug Fixes\n\nPhoneNumber: The first numbers within the brackets must be 2-9 now (5069fe8)\n\n2.9.0 \"moh-common-lib\" (2019-08-30)\nBug Fixes\n\nexport common image elementsgit (483b735)\n\n2.8.1 \"moh-common-lib\" (2019-08-22)\nBug Fixes\n\nDate: Capitalize placeholders (4d39002)\n\n2.8.0 \"moh-common-lib\" (2019-08-20)\nBug Fixes\n\nReorder address fields (cbbfaa8)\n\nFeatures\n\nadded validation for street component (0699178)\nadded validations for postal code, country/province, added abiltiy to update error messages (60befc2)\nvalidation for valid characters in city component (16da113)\n\n2.7.1 \"moh-common-lib\" (2019-08-15)\nBug Fixes\n\nDateComponent: Handles having 00 as day (67b6f78)\nFileUpload: Remove console log on ngchanges (7c99c1e)\n\n2.7.0 \"moh-common-lib\" (2019-08-13)\nBug Fixes\n\nFixed displaying of the error message in name component (1650a23)\nAddress:  Clear out address line data when removing the line (3f1149e)\n\n2.6.0 \"moh-common-lib\" (2019-08-09)\nCode Refactoring\n\nModified address to used MSP label and length defaults (5bb54fc)\n\nFeatures\n\nfunctions to retrieve country, prov descriptions,  maxlengths input for addresss (978250b)\n\n2.5.2 \"moh-common-lib\" (2019-08-02)\n2.5.1 \"moh-common-lib\" (2019-07-31)\nBug Fixes\n\nremoved plus sign used to concatenate string for aria-label (#32) (3a5677b), closes #32\n\n2.5.0 \"moh-common-lib\" (2019-07-31)\nFeatures\n\nAddress: added input to address component to allow users to change default labels on fields. (#31) (ebb6998), closes #31\n\n2.4.0 \"moh-common-lib\" (2019-07-29)\n2.3.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Now has default country/prov behaviour built in (8361a0e)\n\n2.2.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Additional lines must be removed in order (ac9d61c)\nAddress: Now can show 2 extra address lines (previously only one) (af91989)\n\nStyles\n\nXIconButton: Change icon from 'times' to 'times-circle' (aad93b5)\n\n2.1.5 \"moh-common-lib\" (2019-07-18)\nAccessibility\n\nRadio: Hide radio for FireFox but keep tab-focusable. (8f6886f)\nXIconButton: Add label (867f969)\n\n2.1.4 \"moh-common-lib\" (2019-07-16)\nAccessibility\n\nPhone: Fix association of labels for phone component (c122a2a)\n\n2.1.3 \"moh-common-lib\" (2019-07-11)\nAccessibility\n\nRadio: Convert radio to use fieldset. (2c2f322)\nRadio: New focus style for RadioComponent, styled better for mouse (c2fd959)\n\n2.1.2 \"moh-common-lib\" (2019-07-10)\nAccessibility\n\nRadio: Radio is now focusable via tab / screenreader (126d876)\n\nStyles\n\nConsentModal: Backdrop enabled when modal is open. (b901868)\n\n2.1.1 \"moh-common-lib\" (2019-07-09)\nBug Fixes\n\nAddress: Implement allowExtralines to opt-in to new multi-line (5a7c37b)\n\nBREAKING CHANGES\n\nAddress: This reverts an accidentally introduced breaking change in 2.1.0 where all address components would use the new line behaviour.  Now, it is opt-in.\n\n2.1.0 \"moh-common-lib\" (2019-07-09)\nAccessibility\n\nStepper/Wizard: Darken link text by 5% to get AA colour contrast (a27faa9)\n\nBug Fixes\n\nRadio: Fix empty label for RadioComponent for a11y (Waze) (7400a64)\n\nBuild\n\nAdd \"a11y\" type to changelog and commit types (edf0b2e)\n\nCode Refactoring\n\nAddressComponent: Reorganize order of inputs, add AddressLine1 (5d8f61d)\n\nDocumentation\n\nAddressModel: Add TSDOC descriptions on street and addressLine1 (6f093d2)\n\nFeatures\n\nAddressComponent: Add 'disableGeocoder' @Input (a512eb0)\n\n2.0.1 \"moh-common-lib\" (2019-07-04)\nBug Fixes\n\nPhoneNumber: Required @Input works properly (5b18c5f)\n\nCode Refactoring\n\nXIconButton: Add (click) event, @deprecate (clickEvent) (baee5ad)\n\n2.0.0 \"moh-common-lib\" (2019-06-28)\nBug Fixes\n\nDate: Remove console logs. (a9aaf59)\nPHN: Remove console logs when setting values. (d4f0e3b)\nStepper/WizardProgress: Add vertical padding (b555787)\n\nFeatures\n\nFormActionBar: Change to full-width,  remove widthOptions (6254d29)\nName, Postal: Update validators to be compatible with reactive forms (e35f16b)\n\nStyles\n\nPageFramework:  Full height page framework, pushes form bar down (6b8cedd)\n\nBREAKING CHANGES\n\nPageFramework: Shows an error when a FormActionBar is embedded\nFormActionBar: Width changes may break designs, @Input removed\n\n1.8.0 \"moh-common-lib\" (2019-06-25)\nBug Fixes\n\nDropdown: Add visible form label to input (2a511e7)\nProvince: Add placeholder when not using dropdown (8e823c5)\nProvince: Init val = undefined (was empty string); fix placeholder. (09ae712)\n\nFeatures\n\nCity: Add placeholder @Input with default (f103e7c)\nDropdown: Add 'clearable' property from ng-select (8f24e2e)\nProvince: Field is clearable when not required (47d614a)\nStreet: Add placeholder @Input with default (ae493e7)\n\n1.7.0 \"moh-common-lib\" (2019-06-24)\nBug Fixes\n\nCheckbox: Checkbox component now defaults to unchecked. (6775a4d)\n\nDocumentation\n\nAdditionalDocumentation:  preserveSymlinks in for npm link (e458627)\nRouteGuard: Document RouteGuardService and related classes. (fc7fe65)\nRouteGuard: Fix instruction examples for RouteGuard. (3a06f99)\n\nFeatures\n\nXIconButton: Add XIconButtonComponent. Include fixes to RadioComponent. (0ba1d1e)\n\n1.6.2 \"moh-common-lib\" (2019-06-20)\nBug Fixes\n\nCheckbox: Fix labels for checkbox to properly associate (af516d0)\n\n1.6.1 \"moh-common-lib\" (2019-06-19)\nBug Fixes\n\naddress and component - defaults now displaying (6c09982)\n\nFeatures\n\nroute guard implemented (befc319)\n\n1.6.0 \"moh-common-lib\" (2019-06-19)\nDocumentation\n\nContributing: Update contributing to show WIP option (3f42b31)\n\nFeatures\n\nPageFramework: Add 15px left/right padding, to counter taking padding from .container-fluid (7febf6d)\n\n1.5.0 \"moh-common-lib\" (2019-06-18)\nBug Fixes\n\nSIN, Address, RouteGuard: SIN all 0s fix, add RouteGuard service, and default address data. (4295b03)\nToggle: Switch order of Yes/No, so that 'No' comes first. (e485f67)\n\n1.4.0 \"moh-common-lib\" (2019-06-13)\nFeatures\n\ne2e: Add new methods in abstract-test-page (#19) (a702d6d), closes #19\n\n1.3.0 \"moh-common-lib\" (2019-06-13)\nDocumentation\n\nConsentModal: Add example typescript code to open modal. (7ff8510)\nConsentModal: Document consent modal with example (fbc012d)\n\nFeatures\n\nFormActionBar: Add 'extra-width' option to widthOption for all bps (5b88093)\n\n1.2.0 \"moh-common-lib\" (2019-06-10)\nFeatures\n\nFormActionBar: Add \"widthOption\" to for custom CSS width override (36476f8)\n\n1.1.1 \"moh-common-lib\" (2019-06-07)\nFeatures\n\nHeader: Logo image path can be overwritten (03c1243)\n\n1.1.0 \"moh-common-lib\" (2019-06-07)\nBug Fixes\n\nSIN string all zeros - invalid (96a58b1)\nSIN, PHN: SIN string all zeros is invalid, added isBCPHn to PHN. (51bfe3b)\n\nBuild\n\nnpm-scripts: Update what is committed after auto-buiding (c8fb31b)\n\nDocumentation\n\nReadme: Update to readme and docs homepage (f334faf)\n\nFeatures\n\nHeader: Create HeaderComponent with built-in \"Skip To Content\" (3868c50)\n\n1.0.2 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nToggle: Properly emit value changes. Had a typo. (e2271b7)\n\n1.0.1 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nRadio: Removed the default status label and changed the name of radio (#17) (acbbdc1), closes #17\n\nCode Refactoring\n\nSecurity: up to date in 10.256s (ac7406b)\nToggle: ToggleComponent now uses RadioComponent under the hood (e81927b)\n\n1.0.0 \"moh-common-lib\" (2019-06-05)\nBug Fixes\n\nImports: Merge /services, /models, /images entry points into main (151f173)\n\nFeatures\n\nFullName: Create FullNameComponent for first/middle/last (41f5609)\n\n0.0.34 \"moh-common-lib\" (2019-06-05)\nFeatures\n\nPHN, SIN components from FPC. Name majorly refactored. (c04b81d)\n\n0.0.33 \"moh-common-lib\" (2019-06-04)\nBug Fixes\n\nConsentModal:  ConsentModal passes TSLint rules (66f9608)\nConsentModal: Fixed multiple compile time issues with import paths (09ce95a)\nRadioComponent: Changed onStatusChange to statusChange (185148b)\n\nDocumentation\n\nButtonComponent: Updated documentation for ButtonComponent. (4d5992a)\nButtonGroupComponent: ButtonGroupComponent is DEPRECATED (c580225)\nRadioComponent: Re-organize docs for radio component (b80520f)\n\nFeatures\n\nCreate Button, Checkbox, Consent Modal, Radio, Name, Phone Number components (dd29a60)\nCreate Button, Checkbox, Consent Modal, radio, Name, Phone Number Components  (53a109b), closes PR#13\n\n0.0.32 \"moh-common-lib\" (2019-05-15)\nBug Fixes\n\nautocomplete turned off, fixed bug in postal to work with fpcare (1c8242e)\nDatepicker: Remove the IE provided 'X' to clear input (2ddfc23)\n\nDocumentation\n\nBasic styling to use BC Gov colours and fonts (7226b37)\nCreate design guidelines markdown file for each component (9f5a04e)\n\nFeatures\n\nButtonGroupComponent: Create ButtonGroupComponent with ControlValueAccessor (22710b7)\nDocumentation: Customize tabs in docs, adding \"Design Guidelines\" (df678e6)\n\n0.0.31 \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\nCaptchaComponent: Add autocomplete=\"false\" to CAPTCHA (18d69c6)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nAddressComponent: Split AddressComponent into City/Country/Province Components (3a98fb0)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (c347c39)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input) (67c4797)\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                10 %\n                (4/40)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                projects/common/helpers/library-errorr.ts\n            \n            class\n            MoHCommonLibraryError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            createTestingModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getInputElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getLegendContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            tickAndDetectChanges\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/accordion/accordion.component.ts\n            \n            component\n            AccordionCommonComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                18 %\n                (9/49)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            AddrLabelList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            Maxlengths\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            ReadOnlyFields\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button-group/button-group.component.ts\n            \n            component\n            ButtonGroupComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/city.component.ts\n            \n            component\n            CityComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            directive\n            ValidateCityDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            variable\n            commonValidateCity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/confirm-template/confirm-template.component.ts\n            \n            component\n            ConfirmTemplateComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            component\n            ConsentModalComponent\n            \n                17 %\n                (7/39)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            interface\n            ISpaEnvResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            component\n            CountryComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            function\n            getCountryDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            CANADA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            COUNTRY_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            UNITED_STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                18 %\n                (10/54)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantFuture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantPast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            MAX_YEAR_RANGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            directive\n            DuplicateCheckDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            checkForDuplicates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            commonDuplicateCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/email.component.ts\n            \n            component\n            EmailComponent\n            \n                9 %\n                (3/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/error-container/error-container.component.ts\n            \n            component\n            ErrorContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                26 %\n                (10/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            component\n            FullNameComponent\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            interface\n            FullNameErrorMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n            \n            component\n            GeocoderInputComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/name.component.ts\n            \n            component\n            NameComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            directive\n            ValidateNameDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            variable\n            commonValidateName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/phn.component.ts\n            \n            component\n            PhnComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/phone-number.component.ts\n            \n            component\n            PhoneNumberComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                7 %\n                (2/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            directive\n            ValidateBcPostalDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            variable\n            commonValidateBcPostal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            directive\n            ValidatePostalcodeDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            commonValidatePostalcode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            validatePC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            component\n            ProvinceComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            function\n            getProvinceDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            BRITISH_COLUMBIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            PROVINCE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            component\n            RadioComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            interface\n            IRadioItems\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            component\n            SampleModalComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            interface\n            SampleImageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/sin.component.ts\n            \n            component\n            SinComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/street.component.ts\n            \n            component\n            StreetComponent\n            \n                13 %\n                (5/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            directive\n            ValidateStreetDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            variable\n            commonValidateStreet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            directive\n            ValidateRegionDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            variable\n            commonValidateRegion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/xicon-button/xicon-button.component.ts\n            \n            component\n            XiconButtonComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form-control.ts\n            \n            class\n            AbstractFormControl\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/common/lib/models/address.model.ts\n            \n            class\n            Address\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            class\n            Container\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            interface\n            ErrorMessage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            function\n            replaceLabelTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            LabelReplacementTag\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            regExpLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImage\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            class\n            Person\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-pg-check.service.ts\n            \n            injectable\n            AbstractPgCheckService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            injectable\n            CheckCompleteBaseService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            interface\n            PageListInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                26 %\n                (4/15)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                36 %\n                (8/22)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/route-guard.service.ts\n            \n            guard\n            RouteGuardService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/common/lib/shared-core.module.ts\n            \n            variable\n            componentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            date-fns : ^2.5.1\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^3.2.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiStatusCodes   (projects/.../confirm-template.component.ts)\n                        \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.model.ts)\n                        \n                        \n                            CommonLogEvents   (projects/.../logger.service.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiStatusCodes\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/lib/models/images.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/services/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonLogEvents\n                    \n                \n                        \n                            \n                                 navigation\n                            \n                        \n                        \n                            \n                                Value : navigation\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 submission\n                            \n                        \n                        \n                            \n                                Value : submission\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addPackageJsonScript   (projects/.../index.ts)\n                        \n                        \n                            addPackageToPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            checkForDuplicates   (projects/.../duplicate-check.directive.ts)\n                        \n                        \n                            commonDuplicateCheck   (projects/.../duplicate-check.directive.ts)\n                        \n                        \n                            commonValidatePostalcode   (projects/.../validate-postalcode.directive.ts)\n                        \n                        \n                            copyLicense   (projects/.../index.ts)\n                        \n                        \n                            copyVersionFile   (projects/.../index.ts)\n                        \n                        \n                            createIfMissing   (projects/.../index.ts)\n                        \n                        \n                            createTestingModule   (projects/.../test-helpers.ts)\n                        \n                        \n                            getCountryDescription   (projects/.../country.component.ts)\n                        \n                        \n                            getInputElement   (projects/.../test-helpers.ts)\n                        \n                        \n                            getLabel   (projects/.../test-helpers.ts)\n                        \n                        \n                            getLegendContext   (projects/.../test-helpers.ts)\n                        \n                        \n                            getPackageVersionFromPackageJson   (projects/.../package-config.ts)\n                        \n                        \n                            getProvinceDescription   (projects/.../province.component.ts)\n                        \n                        \n                            installPackageJsonDependencies   (projects/.../index.ts)\n                        \n                        \n                            modifyJSON   (projects/.../json.ts)\n                        \n                        \n                            mohStart   (projects/.../index.ts)\n                        \n                        \n                            overwriteFile   (projects/.../index.ts)\n                        \n                        \n                            replaceLabelTag   (projects/.../error-message.interface.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../json.ts)\n                        \n                        \n                            sortObjectByKeys   (projects/.../package-config.ts)\n                        \n                        \n                            tickAndDetectChanges   (projects/.../test-helpers.ts)\n                        \n                        \n                            updateAngularJson   (projects/.../index.ts)\n                        \n                        \n                            updateAppComponentTs   (projects/.../index.ts)\n                        \n                        \n                            updatePackageJson   (projects/.../index.ts)\n                        \n                        \n                            updateTsConfig   (projects/.../index.ts)\n                        \n                        \n                            validatePC   (projects/.../validate-postalcode.directive.ts)\n                        \n                        \n                            versionJS   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/schematics/src/version-js/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageJsonScript\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageJsonScript(tree, scriptName, script)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scriptName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    script\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyVersionFile\n                        \n                        \n                    \n                \n            \n            \n                \ncopyVersionFile(options: any, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAppComponentTs\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAppComponentTs(tree, _context)\n                \n            \n\n\n\n\n            \n                \n                    Updates app.component.ts to console.log out the generated version file \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePackageJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePackageJson(tree, _context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            versionJS\n                        \n                        \n                    \n                \n            \n            \n                \nversionJS(options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copy over version.js to src/version.js, and update the package.json.\nMust be called with repo, e.g. --repo=https://github.com/bcgov/prime-web/\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/package-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addPackageToPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \naddPackageToPackageJson(host, pkg, version, forceOverwrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Adds a package to the package.json in the given host tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pkg\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forceOverwrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPackageVersionFromPackageJson\n                        \n                        \n                    \n                \n            \n            \n                \ngetPackageVersionFromPackageJson(tree, name)\n                \n            \n\n\n\n\n            \n                \n                    Gets the version of the specified package by looking at the package.json in the given tree. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            checkForDuplicates\n                        \n                        \n                    \n                \n            \n            \n                \ncheckForDuplicates(control, dupList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dupList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            commonDuplicateCheck\n                        \n                        \n                    \n                \n            \n            \n                \ncommonDuplicateCheck(dupList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dupList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            commonValidatePostalcode\n                        \n                        \n                    \n                \n            \n            \n                \ncommonValidatePostalcode(hasMask: boolean, bcOnly: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hasMask\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bcOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validatePC\n                        \n                        \n                    \n                \n            \n            \n                \nvalidatePC(control, hasMask: boolean, bcOnly: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hasMask\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bcOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/copy-license/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            copyLicense\n                        \n                        \n                    \n                \n            \n            \n                \ncopyLicense(_options: any)\n                \n            \n\n\n\n\n            \n                \n                    Copies over an APACHE-2 License to the top level of a project.  This rule\nwill overwrite any pre-existing LICENSE file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/moh-start/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createIfMissing\n                        \n                        \n                    \n                \n            \n            \n                \ncreateIfMissing(host, targetPath, content: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installPackageJsonDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ninstallPackageJsonDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mohStart\n                        \n                        \n                    \n                \n            \n            \n                \nmohStart(_options: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            overwriteFile\n                        \n                        \n                    \n                \n            \n            \n                \noverwriteFile(host, targetPath, content)\n                \n            \n\n\n\n\n            \n                \n                    Use a string to overwrite a file. Checks to make sure file does not have content. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAngularJson\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAngularJson(host)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTsConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTsConfig(host, _context)\n                \n            \n\n\n\n\n            \n                \n                    Configures settings in tsconfig.json that are required to properly import\nfrom moh-common-lib\nSpecifically, skibLibCheck\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/common/helpers/test-helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTestingModule\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTestingModule(cmp, template, directives, reactForm: boolean, importDirectives)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cmp\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    template\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    directives\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reactForm\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    importDirectives\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ComponentFixture\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInputElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInputElement(fixture, componentHtml, name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentHtml\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(fixture, componentHtml, name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentHtml\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLegendContext\n                        \n                        \n                    \n                \n            \n            \n                \ngetLegendContext(fixture, componentHtml, name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentHtml\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tickAndDetectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ntickAndDetectChanges(fixture)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fixture\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/components/country/country.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getCountryDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetCountryDescription(countryCode)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    countryCode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/components/province/province.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getProvinceDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetProvinceDescription(provinceCode)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provinceCode\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/schematics/src/helpers/json.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            modifyJSON\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyJSON(host, fileName, transformFn)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    host\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transformFn\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Tree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortObjectByKeys\n                        \n                        \n                    \n                \n            \n            \n                \nsortObjectByKeys(obj)\n                \n            \n\n\n\n\n            \n                \n                    Sorts the keys of the given object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/common/lib/models/error-message.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            replaceLabelTag\n                        \n                        \n                    \n                \n            \n            \n                \nreplaceLabelTag(str, value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation - https://bcgov.github.io/moh-common-styles/\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains.\nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. Or if you're able you can ask me in person.  Thanks\n- Adam Coard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nMoh-Common-Lib:\n- [ ] Security warnings (GitHub)\nBreaking Changes for version 3.0.0:\n\n FormActionBar / FormSubmiBar - make the on load default colour yellow\nThis can fix a \"flash\" of the first colour on macbooks and faster computers (nonVDI)\n\n\n Delete all instances of showError. We never use it as an @Input.\n address.model.ts\n public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n radio.component.ts\n @Input() showError: boolean; // TODO: Remove - breaking change\n // TODO: remove status change - breaking change\n\n\n checkbox.component.ts\n Remove to make custom form control -- possible breaking change\n @Input() required: boolean = false;  // TODO: Remove - breaking change\n Remove the showError\n\n\n xicon-button.component.ts\n Remove clickEvent output. Should be able to just use \"click\", which follows conventional Angular naming.\n\n\n street.component.ts\n Replace \"maxlen\" with \"maxlength\" across this and other components. Maxlength is more semantic / consistent.  Search for this in other places too.\n\n\n date.component.ts - Should become a FormControl (NgControl)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocal Development\n\ncomponents\nschematics\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n ~~*High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:*~~ [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/common\nIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nYou must make sure to set \"preserveSymlinks\": true in angular.json under the project>architect>build>options.\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nTypeScript\nimport { example } from 'moh-common-lib'\nIf you've made any chanfges to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
